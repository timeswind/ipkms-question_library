{"version":3,"sources":["webpack:///5.7fab92f2f7caedf98429.js","webpack:///./src/components/reuseable/Card.vue?a35f***","webpack:///./src/components/reuseable/Card.vue?7f21***","webpack:///./src/components/reuseable/Card.vue?c250***","webpack:///./src/components/reuseable/Card.vue?8fda***","webpack:///./~/babel-runtime/core-js/json/stringify.js?4574","webpack:///./~/core-js/library/fn/json/stringify.js?6708","webpack:///./src/modules/Languages.js?43de","webpack:///./~/quill/dist/quill.snow.css?7c6b","webpack:///./~/quill/dist/quill.snow.css?5c41*","webpack:///./~/http-browserify/index.js","webpack:///./~/url/url.js","webpack:///./~/Base64/base64.js","webpack:///Create-mc-question.vue","webpack:///./src/views/create-question/Create-mc-question.vue?b92f","webpack:///./src/views/create-question/Create-mc-question.vue?6361","webpack:///./~/fabric/dist/fabric.js","webpack:///./~/http-browserify/lib/request.js","webpack:///./~/http-browserify/lib/response.js","webpack:///./~/https-browserify/index.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///./src/views/create-question/Create-mc-question.vue?de03","webpack:///./src/views/create-question/Create-mc-question.vue"],"names":["webpackJsonp","12","module","exports","Object","defineProperty","value","props","16","__webpack_require__","push","id","version","sources","names","mappings","file","sourcesContent","sourceRoot","17","content","locals","19","20","__vue_script__","__vue_template__","__esModule","options","template","60","default","67","core","$JSON","JSON","stringify","it","apply","arguments","96","languages","name","175","205","213","222","http","Request","EventEmitter","url","request","params","cb","parse","host","port","parseInt","window","location","hostname","protocol","scheme","test","split","req","xhrHttp","on","get","method","end","Agent","defaultMaxSockets","Error","XMLHttpRequest","ActiveXObject","axs","i","length","ax","ax_","e","STATUS_CODES","100","101","102","200","201","202","203","204","206","207","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511","333","Url","this","slashes","auth","hash","search","query","pathname","path","href","urlParse","parseQueryString","slashesDenoteHost","isObject","u","urlFormat","obj","isString","format","prototype","call","urlResolve","source","relative","resolve","urlResolveObject","resolveObject","arg","isNull","isNullOrUndefined","punycode","protocolPattern","portPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","TypeError","rest","trim","proto","exec","lowerProto","toLowerCase","substr","match","hostEnd","hec","indexOf","atSign","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","unshift","join","domainArray","newOut","s","encode","p","h","ae","esc","encodeURIComponent","escape","qm","replace","keys","charAt","rel","result","forEach","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","splice","isAbsolute","335","InvalidCharacterError","message","object","chars","btoa","input","block","charCode","idx","map","output","atob","bs","buffer","bc","String","fromCharCode","345","_interopRequireDefault","_stringify","_stringify2","_quillRender","_quillRender2","_Subjects","_Subjects2","_Languages","_Languages2","_Card","_Card2","_store","_store2","_actions","_getters","delayTimer","ready","newQuestion","language","getUserLanguage","components","Subject","Card","methods","readImg","c","$els","fabricprocess","canvas","fabric","Canvas","width","height","reader","FileReader","onload","event","imgObj","Image","src","target","image","set","angle","padding","cornersize","centerObject","add","renderAll","readAsDataURL","files","outputImg","$http","then","response","console","log","data","uptoken","uploadImage","getObjects","toDataURL","publishQuestion","publishButton","disabled","checkComplete","context","editorPreview","question","ops","choices","answer","mc","rawData","post","$showToast","$broadcast","renderQuestionPreview","renderMcPreview","questionInbox","questions","contentComplete","answerComplete","addTag","tag","tags","removeTag","index","option","document","querySelector","innerHTML","setTimeout","renderMathInElement","delimiters","left","right","display","getElementById","getLatestQuestionsCreatedByMe","style","imageData","token","headers","Content-Type","Authorization","key","images","show","subjects","type","subject","tips","difficulty","label","filters","timestamp","$options","calendar","Date","toString","substring","watch","editorPreview.question.ops","self","clearTimeout","editorPreview.answer.mc","store","vuex","actions","setUserLanguage","getters","393","437","Buffer","process","jsdom","createWindow","parentWindow","isTouchSupported","documentElement","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","handler","__eventListeners","eventListener","util","array","fill","observe","prop","stopObserving","fire","listenersForEvent","len","filter","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","insertAt","nonSplicing","objects","remove","_onObjectRemoved","forEachObject","callback","o","item","isEmpty","size","contains","complexity","reduce","memo","current","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","removeFromArray","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","sin","cos","rx","ry","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","toUpperCase","resolveNamespace","parts","loadImage","crossOrigin","img","createImage","onerror","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","klass","async","fromObject","error","groupSVGElements","elements","PathGroup","setSourcePath","populateWithProperties","destination","properties","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","stateProperties","propName","capitalizedPropName","setterName","getterName","property","Function","clipContext","receiver","beginPath","clipTo","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","setAngle","getFunctionBody","fn","isTransparent","tolerance","_isTransparent","getImageData","temp","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","Array","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","boundCopy","invoke","args","byProperty","find","value1","value2","condition","searchElement","n","POSITIVE_INFINITY","NEGATIVE_INFINITY","every","some","val","rv","extend","clone","character","capitalize","firstLetterOnly","escapeXml","Dummy","bind","thisArg","_this","Subclass","callSuper","methodName","constructor","superclass","createClass","initialize","parent","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","createListener","uid","wrappedHandler","createWrappedHandler","getElement","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","listeners","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","makeElement","tagName","attributes","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","err","arr","defaultView","getComputedStyle","undefined","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","onComplete","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","warn","animate","requestAnimFrame","time","start","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","isNaN","_setStrokeFillOpacity","colorAttributes","color","Color","setAlpha","getAlpha","toRgba","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","nodeName","classNames","getAttribute","RegExp","elementById","node","nodelist","parseUseDirectives","attrs","xlink","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","_enlivenCachedObject","cachedObject","_createSVGPattern","markup","toSVG","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewXMatrix","skewYMatrix","iMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","m","operation","combinedMatrix","parseSVGDocument","hasAncestorWithNodeName","startTime","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","documentParsingTime","svgCache","has","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","linearGradientEls","radialGradientEls","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","font","ElementsParser","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","loadXML","results","hasUrl","enlivedRecord","loadSVGFromString","DOMParser","parser","parseFromString","createSVGFontFacesMarkup","row","rowIndex","_char","charIndex","fontList","createSVGRefElementsMarkup","numElements","createObjects","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","Gradient","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","round","getSource","_source","toRgb","toHsl","hsl","toHsla","toHex","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","colorStops","gradientTransform","addColorStop","colorStop","position","toObject","commonAttributes","sort","group","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","Pattern","repeat","patternSource","patternWidth","getWidth","patternHeight","getHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","NUM_FRACTION_DIGITS","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","preserveObjectStacking","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","lowerCanvasEl","contextContainer","_offset","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","setOptions","_createCanvasElement","_initCanvasElement","_applyCanvasStyle","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","getActiveGroup","setCoords","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getActiveObject","setupState","_set","_discardActiveObject","clearContext","clearRect","clear","discardActiveGroup","discardActiveObject","contextTop","_chooseObjectsToRender","activeObject","objsToRender","activeGroupObjects","canvasToDrawOn","selection","_groupSelector","isDrawingMode","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","renderTop","_drawSelection","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","iVpt","setPositionByOrigin","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","background","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","sendToBack","objs","bringToFront","sendBackwards","intersecting","newIdx","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","createPath","pathData","Path","strokeWidth","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","lastRenderedKey","selectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","_currentTransform","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","isTargetTransparent","hasBorders","transparentCorners","contextCache","shouldTransform","active","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","_rotateObject","lastAngle","curAngle","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","strokeRect","_isLastRenderedObject","lastRendered","lastRenderedWithControls","findTarget","skipGroup","_checkTarget","targets","_searchPossibleTargets","_fireOverOutEvents","_hoveredTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","lowerCanvasClass","_copyCanvasStyle","class","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","setActiveObject","_setActiveGroup","_activeGroup","setActiveGroup","_discardActiveGroup","destroy","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","_setCursorFromEvent","Element","cursorOffset","tr","mr","br","mb","bl","ml","tl","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseWheel","_onMouseOut","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","__onTransformGesture","__onDrag","__onMouseWheel","__onOrientationChange","__onShake","__onLongPress","__onMouseDown","__onMouseUp","preventDefault","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_isCurrentlyDrawing","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","_handleCursorAndEvent","eventType","_handleEvent","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","ivt","_onMouseMoveInDrawingMode","isLeftClick","which","button","shouldGroup","_shouldGroup","_clearSelection","_handleGrouping","__corner","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","reverse","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","quality","multiplier","cropping","__toDataURLWithMultiplier","__toDataURL","croppedCanvasEl","__getCroppedCanvas","croppedCtx","shouldCrop","drawImage","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","_tempRemoveBordersControlsFromGroup","_restoreBordersControlsOnGroup","toDataURLWithMultiplier","origHasControls","hasControls","origBorderColor","borderColor","hideControls","origHideControls","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","_toDataURL","_toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","cornerSize","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","selectionBackgroundColor","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","_initGradient","_initPattern","_initClipping","functionBody","fromLeft","_getLeftTopCoords","_removeDefaultValues","_setObject","shouldConstrainValue","_constrainScale","setOnGroup","toggle","sourcePath","getViewportTransform","noTransform","_setupCompositeOperation","drawSelectionBackground","_setStrokeStyles","_setFillStyles","_setOpacity","miterLimit","_setLineDash","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_removeShadow","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","pos","adjustPosition","to","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","oCoords","multiplyMatrices","pointTL","pointBR","intersection","other","point1","point2","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","yi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","skewMatrixY","getSvgColorString","str","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","originalState","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","_getNonTransformedDimensions","w","addStrokeToW","addStrokeToH","bbox","dimX","dimY","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","currentValue","from","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","ellipse","_initRxRy","isRounded","Polyline","Polygon","_calcDimensions","commonRender","pathOffset","addTransform","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","parentToObject","paths","parseDimensionsFromPaths","xC","yC","isSameColor","firstPathFill","pathFill","total","pathGroup","_lockProperties","isAlreadyGrouped","_updateObjectsCoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","originalLeft","originalTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","_lastScaleX","_lastScaleY","resizeFilters","_initElement","_element","_originalElement","_initConfig","applyFilters","setCrossOrigin","getOriginalSize","_stroke","filterObj","_src","getSvgSrc","origFill","getSrc","setSrc","imgElement","forResizing","imgEl","replacement","applyTo","toBuffer","pngCompression","_filteredEl","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","createImageData","dst","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","newWidth","newHeight","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","lanczosCreate","lobes","xx","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","w2","h2","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","_getTextHeight","_renderTextBackground","_renderText","_renderTextDecoration","_translateForTextAlign","_renderTextFill","_renderTextStroke","back","sign","textBaseline","skipTextAlign","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","shortM","_renderTextLine","line","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","measureText","_getLeftOffset","_getTopOffset","isEmptyStyles","lineHeights","heightOfLine","maxHeight","_renderTextBoxBackground","_renderTextLinesBackground","lineLeftOffset","lineTopOffset","_getLineLeftOffset","__lineWidths","__lineHeights","_shouldClearCache","shouldClear","_forceClearCache","wordCount","_measureLine","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textBgRects","textSpans","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorWidth","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateTextarea","setSelectionEnd","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","oldWidth","oldHeight","renderCursorOrSelection","boundaries","_clearTextArea","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","decl","_getHeightOfChar","_applyCharStylesGetWidth","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","underline","line-through","overline","decorations","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","clonedStyles","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","initSelectedHandler","selected","_hasITextHandlers","_initCanvasHandlers","_iTextInstances","exitEditingOnOthers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","initHiddenTextarea","hiddenTextarea","focus","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","mouseMoveHandler","getSelectionStartFromPointer","__selectionStartOnMouseDown","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","stopPropagation","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","_keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","_ctrlKeysMapUp","88","_ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","getDownCursorOffset","isRight","selectionProp","textOnSameLineBeforeCursor","textOnSameLineAfterCursor","textOnNextLine","widthOfSameLineBeforeCursor","widthOfCharsOnSameLineBeforeCursor","indexOnNextLine","_getIndexOnNextLine","foundMatch","widthOfNextLine","widthOfCharsOnNextLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","moveCursorDownWithShift","moveCursorDownWithoutShift","swapSelectionPoints","swapSel","getUpCursorOffset","indexOnPrevLine","_getIndexOnPrevLine","widthOfPreviousLine","widthOfCharsOnPreviousLine","moveCursorUp","moveCursorUpWithShift","moveCursorUpWithoutShift","moveCursorLeft","moveCursorLeftWithShift","moveCursorLeftWithoutShift","_move","propMethod","_moveLeft","_moveRight","moveCursorRightWithShift","moveCursorRightWithoutShift","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","charCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","setObjectScaleOverridden","_refreshControlsVisibility","override","tmp","oURL","URL","reqHandler","HTTPS","HTTP","setEncoding","statusCode","errno","ECONNREFUSED","requestFs","fs","readFile","createImageAndCallBack","eval","oImg","createCanvasForNode","nodeCanvasOptions","nodeCanvas","FabricCanvas","fabricCanvas","Font","createPNGStream","createJPEGStream","origSetWidth","origSetHeight","443","Stream","Response","Base64","inherits","writable","uri","withCredentials","responseType","emit","_headers","objectKeys","isSafeRequestHeader","setHeader","res","__aborted","handle","getHeader","removeHeader","write","isXHR2Compatible","unsafeHeaders","headerName","xs","Blob","ArrayBuffer","FormData","444","parseHeaders","getAllResponseHeaders","readable","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody","Uint8Array","byteLength","445","hasOwnProperty","459","qs","sep","regexp","maxKeys","kstr","vstr","460","stringifyPrimitive","isFinite","ks","461","decode","487","__WEBPACK_AMD_DEFINE_RESULT__","RangeError","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","out","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","491","515","537","538","539"],"mappings":"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","file":"5.7fab92f2f7caedf98429.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 12:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: {}\n\t};\n\n/***/ },\n\n/***/ 16:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".card{background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/reuseable/Card.vue\"],\"names\":[],\"mappings\":\"AACA,MACE,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC\",\"file\":\"Card.vue\",\"sourcesContent\":[\"\\n.card {\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(16);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 19:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div> <div class=card> <slot name=content></slot> </div> </div> \";\n\n/***/ },\n\n/***/ 20:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(17)\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(19)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(67), __esModule: true };\n\n/***/ },\n\n/***/ 67:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core  = __webpack_require__(14)\n\t  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n/***/ },\n\n/***/ 96:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  languages: [{ name: 'English', id: 'eng' }, { name: '中文', id: 'cht' }]\n\t};\n\n/***/ },\n\n/***/ 175:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*!\\n * Quill Editor v1.0.2\\n * https://quilljs.com/\\n * Copyright (c) 2014, Jason Chen\\n * Copyright (c) 2013, salesforce.com\\n */.ql-container{box-sizing:border-box;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;margin:0;position:relative}.ql-clipboard{left:-100000px;height:1px;overflow-y:hidden;position:absolute;top:50%}.ql-clipboard p{margin:0;padding:0}.ql-editor{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}.ql-editor blockquote,.ql-editor h1,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor h5,.ql-editor h6,.ql-editor ol,.ql-editor p,.ql-editor pre,.ql-editor ul{margin:0;padding:0;counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol,.ql-editor ul{padding-left:1.5em}.ql-editor ol>li,.ql-editor ul>li{list-style-type:none}.ql-editor ul>li:before{content:'\\\\25CF'}.ql-editor li:before{display:inline-block;margin-right:.3em;text-align:right;white-space:nowrap;width:1.2em}.ql-editor li:not(.ql-direction-rtl):before{margin-left:-1.5em}.ql-editor ol li,.ql-editor ul li{padding-left:1.5em}.ql-editor ol li{counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;counter-increment:list-num}.ql-editor ol li:before{content:counter(list-num,decimal) '. '}.ql-editor ol li.ql-indent-1{counter-increment:list-1}.ql-editor ol li.ql-indent-1:before{content:counter(list-1,lower-alpha) '. '}.ql-editor ol li.ql-indent-1{counter-reset:list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-2{counter-increment:list-2}.ql-editor ol li.ql-indent-2:before{content:counter(list-2,lower-roman) '. '}.ql-editor ol li.ql-indent-2{counter-reset:list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-3{counter-increment:list-3}.ql-editor ol li.ql-indent-3:before{content:counter(list-3,decimal) '. '}.ql-editor ol li.ql-indent-3{counter-reset:list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-4{counter-increment:list-4}.ql-editor ol li.ql-indent-4:before{content:counter(list-4,lower-alpha) '. '}.ql-editor ol li.ql-indent-4{counter-reset:list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-5{counter-increment:list-5}.ql-editor ol li.ql-indent-5:before{content:counter(list-5,lower-roman) '. '}.ql-editor ol li.ql-indent-5{counter-reset:list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-6{counter-increment:list-6}.ql-editor ol li.ql-indent-6:before{content:counter(list-6,decimal) '. '}.ql-editor ol li.ql-indent-6{counter-reset:list-7 list-8 list-9}.ql-editor ol li.ql-indent-7{counter-increment:list-7}.ql-editor ol li.ql-indent-7:before{content:counter(list-7,lower-alpha) '. '}.ql-editor ol li.ql-indent-7{counter-reset:list-8 list-9}.ql-editor ol li.ql-indent-8{counter-increment:list-8}.ql-editor ol li.ql-indent-8:before{content:counter(list-8,lower-roman) '. '}.ql-editor ol li.ql-indent-8{counter-reset:list-9}.ql-editor ol li.ql-indent-9{counter-increment:list-9}.ql-editor ol li.ql-indent-9:before{content:counter(list-9,decimal) '. '}.ql-editor .ql-indent-1:not(.ql-direction-rtl){padding-left:3em}.ql-editor li.ql-indent-1:not(.ql-direction-rtl){padding-left:4.5em}.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:3em}.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:4.5em}.ql-editor .ql-indent-2:not(.ql-direction-rtl){padding-left:6em}.ql-editor li.ql-indent-2:not(.ql-direction-rtl){padding-left:7.5em}.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:6em}.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:7.5em}.ql-editor .ql-indent-3:not(.ql-direction-rtl){padding-left:9em}.ql-editor li.ql-indent-3:not(.ql-direction-rtl){padding-left:10.5em}.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:9em}.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:10.5em}.ql-editor .ql-indent-4:not(.ql-direction-rtl){padding-left:12em}.ql-editor li.ql-indent-4:not(.ql-direction-rtl){padding-left:13.5em}.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:12em}.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:13.5em}.ql-editor .ql-indent-5:not(.ql-direction-rtl){padding-left:15em}.ql-editor li.ql-indent-5:not(.ql-direction-rtl){padding-left:16.5em}.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:15em}.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:16.5em}.ql-editor .ql-indent-6:not(.ql-direction-rtl){padding-left:18em}.ql-editor li.ql-indent-6:not(.ql-direction-rtl){padding-left:19.5em}.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:18em}.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:19.5em}.ql-editor .ql-indent-7:not(.ql-direction-rtl){padding-left:21em}.ql-editor li.ql-indent-7:not(.ql-direction-rtl){padding-left:22.5em}.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:21em}.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:22.5em}.ql-editor .ql-indent-8:not(.ql-direction-rtl){padding-left:24em}.ql-editor li.ql-indent-8:not(.ql-direction-rtl){padding-left:25.5em}.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:24em}.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:25.5em}.ql-editor .ql-indent-9:not(.ql-direction-rtl){padding-left:27em}.ql-editor li.ql-indent-9:not(.ql-direction-rtl){padding-left:28.5em}.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:27em}.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:28.5em}.ql-editor .ql-video{display:block;max-width:100%}.ql-editor .ql-video.ql-align-center{margin:0 auto}.ql-editor .ql-video.ql-align-right{margin:0 0 0 auto}.ql-editor .ql-bg-black{background-color:#000}.ql-editor .ql-bg-red{background-color:#e60000}.ql-editor .ql-bg-orange{background-color:#f90}.ql-editor .ql-bg-yellow{background-color:#ff0}.ql-editor .ql-bg-green{background-color:#008a00}.ql-editor .ql-bg-blue{background-color:#06c}.ql-editor .ql-bg-purple{background-color:#93f}.ql-editor .ql-color-white{color:#fff}.ql-editor .ql-color-red{color:#e60000}.ql-editor .ql-color-orange{color:#f90}.ql-editor .ql-color-yellow{color:#ff0}.ql-editor .ql-color-green{color:#008a00}.ql-editor .ql-color-blue{color:#06c}.ql-editor .ql-color-purple{color:#93f}.ql-editor .ql-font-serif{font-family:Georgia,Times New Roman,serif}.ql-editor .ql-font-monospace{font-family:Monaco,Courier New,monospace}.ql-editor .ql-size-small{font-size:.75em}.ql-editor .ql-size-large{font-size:1.5em}.ql-editor .ql-size-huge{font-size:2.5em}.ql-editor .ql-direction-rtl{direction:rtl;text-align:inherit}.ql-editor .ql-align-center{text-align:center}.ql-editor .ql-align-justify{text-align:justify}.ql-editor .ql-align-right{text-align:right}.ql-editor.ql-blank:before{color:rgba(0,0,0,.6);content:attr(data-placeholder);font-style:italic;pointer-events:none;position:absolute}.ql-snow.ql-toolbar:after,.ql-snow .ql-toolbar:after{clear:both;content:'';display:table}.ql-snow.ql-toolbar button,.ql-snow .ql-toolbar button{background:none;border:none;cursor:pointer;display:inline-block;float:left;height:24px;outline:none;padding:3px 5px;width:28px}.ql-snow.ql-toolbar button svg,.ql-snow .ql-toolbar button svg{float:left;height:100%}.ql-snow.ql-toolbar input.ql-image[type=file],.ql-snow .ql-toolbar input.ql-image[type=file]{display:none}.ql-snow.ql-toolbar .ql-picker-item.ql-selected,.ql-snow .ql-toolbar .ql-picker-item.ql-selected,.ql-snow.ql-toolbar .ql-picker-item:hover,.ql-snow .ql-toolbar .ql-picker-item:hover,.ql-snow.ql-toolbar .ql-picker-label.ql-active,.ql-snow .ql-toolbar .ql-picker-label.ql-active,.ql-snow.ql-toolbar .ql-picker-label:hover,.ql-snow .ql-toolbar .ql-picker-label:hover,.ql-snow.ql-toolbar button.ql-active,.ql-snow .ql-toolbar button.ql-active,.ql-snow.ql-toolbar button:hover,.ql-snow .ql-toolbar button:hover{color:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:hover .ql-fill,.ql-snow .ql-toolbar button:hover .ql-fill,.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill{fill:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow.ql-toolbar button.ql-active .ql-stroke,.ql-snow .ql-toolbar button.ql-active .ql-stroke,.ql-snow.ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar button:hover .ql-stroke,.ql-snow .ql-toolbar button:hover .ql-stroke,.ql-snow.ql-toolbar button:hover .ql-stroke-mitter,.ql-snow .ql-toolbar button:hover .ql-stroke-mitter{stroke:#06c}.ql-snow,.ql-snow *{box-sizing:border-box}.ql-snow .ql-hidden{display:none}.ql-snow .ql-out-bottom,.ql-snow .ql-out-top{visibility:hidden}.ql-snow .ql-tooltip{position:absolute}.ql-snow .ql-tooltip a{cursor:pointer;text-decoration:none}.ql-snow .ql-formats{display:inline-block;vertical-align:middle}.ql-snow .ql-formats:after{clear:both;content:'';display:table}.ql-snow .ql-stroke,.ql-snow .ql-toolbar.snow{fill:none;stroke:#444;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}.ql-snow .ql-stroke-mitter{fill:none;stroke:#444;stroke-mitterlimit:10;stroke-width:2}.ql-snow .ql-fill,.ql-snow .ql-stroke.ql-fill{fill:#444}.ql-snow .ql-empty{fill:none}.ql-snow .ql-even{fill-rule:evenodd}.ql-snow .ql-stroke.ql-thin,.ql-snow .ql-thin{stroke-width:1}.ql-snow .ql-transparent{opacity:.4}.ql-snow .ql-direction svg:last-child{display:none}.ql-snow .ql-direction.ql-active svg:last-child{display:inline}.ql-snow .ql-direction.ql-active svg:first-child{display:none}.ql-snow .ql-editor h1{font-size:2em}.ql-snow .ql-editor h2{font-size:1.5em}.ql-snow .ql-editor h3{font-size:1.17em}.ql-snow .ql-editor h4{font-size:1em}.ql-snow .ql-editor h5{font-size:.83em}.ql-snow .ql-editor h6{font-size:.67em}.ql-snow .ql-editor a{text-decoration:underline}.ql-snow .ql-editor blockquote{border-left:4px solid #ccc;margin-bottom:5px;margin-top:5px;padding-left:16px}.ql-snow .ql-editor code,.ql-snow .ql-editor pre{background-color:#f0f0f0;border-radius:3px}.ql-snow .ql-editor pre{white-space:pre-wrap;margin-bottom:5px;margin-top:5px;padding:5px 10px}.ql-snow .ql-editor code{font-size:85%;padding-bottom:2px;padding-top:2px}.ql-snow .ql-editor code:after,.ql-snow .ql-editor code:before{content:\\\"\\\\A0\\\";letter-spacing:-2px}.ql-snow .ql-editor pre.ql-syntax{background-color:#23241f;color:#f8f8f2;overflow:visible}.ql-snow .ql-editor img{max-width:100%}.ql-snow .ql-picker{color:#444;display:inline-block;float:left;font-size:14px;font-weight:500;height:24px;position:relative;vertical-align:middle}.ql-snow .ql-picker-label{cursor:pointer;display:inline-block;height:100%;padding-left:8px;padding-right:2px;position:relative;width:100%}.ql-snow .ql-picker-label:before{display:inline-block;line-height:22px}.ql-snow .ql-picker-options{background-color:#fff;display:none;min-width:100%;padding:4px 8px;position:absolute;white-space:nowrap}.ql-snow .ql-picker-options .ql-picker-item{cursor:pointer;display:block;padding-bottom:5px;padding-top:5px}.ql-snow .ql-picker.ql-expanded .ql-picker-label{color:#ccc;z-index:2}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill{fill:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke{stroke:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-options{display:block;margin-top:-1px;top:100%;z-index:1}.ql-snow .ql-color-picker,.ql-snow .ql-icon-picker{width:28px}.ql-snow .ql-color-picker .ql-picker-label,.ql-snow .ql-icon-picker .ql-picker-label{padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-label svg,.ql-snow .ql-icon-picker .ql-picker-label svg{right:4px}.ql-snow .ql-icon-picker .ql-picker-options{padding:4px 0}.ql-snow .ql-icon-picker .ql-picker-item{height:24px;width:24px;padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-options{padding:3px 5px;width:152px}.ql-snow .ql-color-picker .ql-picker-item{border:1px solid transparent;float:left;height:16px;margin:2px;padding:0;width:16px}.ql-snow .ql-color-picker .ql-picker-item.ql-primary-color{margin-bottom:toolbarPadding}.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg{position:absolute;margin-top:-9px;right:0;top:50%;width:18px}.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label='']):before{content:attr(data-label)}.ql-snow .ql-picker.ql-header{width:98px}.ql-snow .ql-picker.ql-header .ql-picker-item:before,.ql-snow .ql-picker.ql-header .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"1\\\"]:before{content:'Heading 1'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"2\\\"]:before{content:'Heading 2'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"3\\\"]:before{content:'Heading 3'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"4\\\"]:before{content:'Heading 4'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"5\\\"]:before{content:'Heading 5'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"6\\\"]:before{content:'Heading 6'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before{font-size:2em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before{font-size:1.5em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before{font-size:1.17em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before{font-size:1em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before{font-size:.83em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before{font-size:.67em}.ql-snow .ql-picker.ql-font{width:108px}.ql-snow .ql-picker.ql-font .ql-picker-item:before,.ql-snow .ql-picker.ql-font .ql-picker-label:before{content:'Sans Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]:before{content:'Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]:before{content:'Monospace'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before{font-family:Georgia,Times New Roman,serif}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before{font-family:Monaco,Courier New,monospace}.ql-snow .ql-picker.ql-size{width:98px}.ql-snow .ql-picker.ql-size .ql-picker-item:before,.ql-snow .ql-picker.ql-size .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]:before{content:'Small'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]:before{content:'Large'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]:before{content:'Huge'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before{font-size:10px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before{font-size:18px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before{font-size:32px}.ql-snow .ql-color-picker.ql-background .ql-picker-item{background-color:#fff}.ql-snow .ql-color-picker.ql-color .ql-picker-item{background-color:#000}.ql-toolbar.ql-snow{border:1px solid #ccc;box-sizing:border-box;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding:8px}.ql-toolbar.ql-snow .ql-formats{margin-right:15px}.ql-toolbar.ql-snow .ql-picker-label{border:1px solid transparent}.ql-toolbar.ql-snow .ql-picker-options{border:1px solid transparent;box-shadow:0 2px 8px rgba(0,0,0,.2)}.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label,.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options{border-color:#ccc}.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item.ql-selected,.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item:hover{border-color:#000}.ql-toolbar.ql-snow+.ql-container.ql-snow{border-top:0}.ql-snow .ql-tooltip{background-color:#fff;border:1px solid #ccc;box-shadow:0 0 5px #ddd;color:#444;margin-top:10px;padding:5px 12px;white-space:nowrap}.ql-snow .ql-tooltip:before{content:\\\"Visit URL:\\\";line-height:26px;margin-right:8px}.ql-snow .ql-tooltip input[type=text]{display:none;border:1px solid #ccc;font-size:13px;height:26px;margin:0;padding:3px 5px;width:170px}.ql-snow .ql-tooltip a.ql-preview{display:inline-block;max-width:200px;overflow-x:hidden;text-overflow:ellipsis;vertical-align:top}.ql-snow .ql-tooltip a.ql-action:after{border-right:1px solid #ccc;content:'Edit';margin-left:16px;padding-right:8px}.ql-snow .ql-tooltip a.ql-remove:before{content:'Remove';margin-left:8px}.ql-snow .ql-tooltip a{line-height:26px}.ql-snow .ql-tooltip.ql-editing a.ql-preview,.ql-snow .ql-tooltip.ql-editing a.ql-remove{display:none}.ql-snow .ql-tooltip.ql-editing input[type=text]{display:inline-block}.ql-snow .ql-tooltip.ql-editing a.ql-action:after{border-right:0;content:'Save';padding-right:0}.ql-snow .ql-tooltip[data-mode=link]:before{content:\\\"Enter link:\\\"}.ql-snow .ql-tooltip[data-mode=formula]:before{content:\\\"Enter formula:\\\"}.ql-snow .ql-tooltip[data-mode=video]:before{content:\\\"Enter video:\\\"}.ql-snow a{color:#06c}.ql-container.ql-snow{border:1px solid #ccc}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 205:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(175);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(82)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./quill.snow.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./quill.snow.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 213:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 222:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = module.exports;\n\tvar EventEmitter = __webpack_require__(91).EventEmitter;\n\tvar Request = __webpack_require__(443);\n\tvar url = __webpack_require__(333)\n\t\n\thttp.request = function (params, cb) {\n\t    if (typeof params === 'string') {\n\t        params = url.parse(params)\n\t    }\n\t    if (!params) params = {};\n\t    if (!params.host && !params.port) {\n\t        params.port = parseInt(window.location.port, 10);\n\t    }\n\t    if (!params.host && params.hostname) {\n\t        params.host = params.hostname;\n\t    }\n\t\n\t    if (!params.protocol) {\n\t        if (params.scheme) {\n\t            params.protocol = params.scheme + ':';\n\t        } else {\n\t            params.protocol = window.location.protocol;\n\t        }\n\t    }\n\t\n\t    if (!params.host) {\n\t        params.host = window.location.hostname || window.location.host;\n\t    }\n\t    if (/:/.test(params.host)) {\n\t        if (!params.port) {\n\t            params.port = params.host.split(':')[1];\n\t        }\n\t        params.host = params.host.split(':')[0];\n\t    }\n\t    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n\t    \n\t    var req = new Request(new xhrHttp, params);\n\t    if (cb) req.on('response', cb);\n\t    return req;\n\t};\n\t\n\thttp.get = function (params, cb) {\n\t    params.method = 'GET';\n\t    var req = http.request(params, cb);\n\t    req.end();\n\t    return req;\n\t};\n\t\n\thttp.Agent = function () {};\n\thttp.Agent.defaultMaxSockets = 4;\n\t\n\tvar xhrHttp = (function () {\n\t    if (typeof window === 'undefined') {\n\t        throw new Error('no window object present');\n\t    }\n\t    else if (window.XMLHttpRequest) {\n\t        return window.XMLHttpRequest;\n\t    }\n\t    else if (window.ActiveXObject) {\n\t        var axs = [\n\t            'Msxml2.XMLHTTP.6.0',\n\t            'Msxml2.XMLHTTP.3.0',\n\t            'Microsoft.XMLHTTP'\n\t        ];\n\t        for (var i = 0; i < axs.length; i++) {\n\t            try {\n\t                var ax = new(window.ActiveXObject)(axs[i]);\n\t                return function () {\n\t                    if (ax) {\n\t                        var ax_ = ax;\n\t                        ax = null;\n\t                        return ax_;\n\t                    }\n\t                    else {\n\t                        return new(window.ActiveXObject)(axs[i]);\n\t                    }\n\t                };\n\t            }\n\t            catch (e) {}\n\t        }\n\t        throw new Error('ajax not supported in this browser')\n\t    }\n\t    else {\n\t        throw new Error('ajax not supported in this browser');\n\t    }\n\t})();\n\t\n\thttp.STATUS_CODES = {\n\t    100 : 'Continue',\n\t    101 : 'Switching Protocols',\n\t    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n\t    200 : 'OK',\n\t    201 : 'Created',\n\t    202 : 'Accepted',\n\t    203 : 'Non-Authoritative Information',\n\t    204 : 'No Content',\n\t    205 : 'Reset Content',\n\t    206 : 'Partial Content',\n\t    207 : 'Multi-Status',               // RFC 4918\n\t    300 : 'Multiple Choices',\n\t    301 : 'Moved Permanently',\n\t    302 : 'Moved Temporarily',\n\t    303 : 'See Other',\n\t    304 : 'Not Modified',\n\t    305 : 'Use Proxy',\n\t    307 : 'Temporary Redirect',\n\t    400 : 'Bad Request',\n\t    401 : 'Unauthorized',\n\t    402 : 'Payment Required',\n\t    403 : 'Forbidden',\n\t    404 : 'Not Found',\n\t    405 : 'Method Not Allowed',\n\t    406 : 'Not Acceptable',\n\t    407 : 'Proxy Authentication Required',\n\t    408 : 'Request Time-out',\n\t    409 : 'Conflict',\n\t    410 : 'Gone',\n\t    411 : 'Length Required',\n\t    412 : 'Precondition Failed',\n\t    413 : 'Request Entity Too Large',\n\t    414 : 'Request-URI Too Large',\n\t    415 : 'Unsupported Media Type',\n\t    416 : 'Requested Range Not Satisfiable',\n\t    417 : 'Expectation Failed',\n\t    418 : 'I\\'m a teapot',              // RFC 2324\n\t    422 : 'Unprocessable Entity',       // RFC 4918\n\t    423 : 'Locked',                     // RFC 4918\n\t    424 : 'Failed Dependency',          // RFC 4918\n\t    425 : 'Unordered Collection',       // RFC 4918\n\t    426 : 'Upgrade Required',           // RFC 2817\n\t    428 : 'Precondition Required',      // RFC 6585\n\t    429 : 'Too Many Requests',          // RFC 6585\n\t    431 : 'Request Header Fields Too Large',// RFC 6585\n\t    500 : 'Internal Server Error',\n\t    501 : 'Not Implemented',\n\t    502 : 'Bad Gateway',\n\t    503 : 'Service Unavailable',\n\t    504 : 'Gateway Time-out',\n\t    505 : 'HTTP Version Not Supported',\n\t    506 : 'Variant Also Negotiates',    // RFC 2295\n\t    507 : 'Insufficient Storage',       // RFC 4918\n\t    509 : 'Bandwidth Limit Exceeded',\n\t    510 : 'Not Extended',               // RFC 2774\n\t    511 : 'Network Authentication Required' // RFC 6585\n\t};\n\n/***/ },\n\n/***/ 333:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar punycode = __webpack_require__(487);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(461);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n\n/***/ 335:\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var object =  true ? exports : this; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error;\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '');\n\t    if (input.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n\n/***/ 345:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(60);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\t__webpack_require__(437);\n\t\n\tvar _quillRender = __webpack_require__(196);\n\t\n\tvar _quillRender2 = _interopRequireDefault(_quillRender);\n\t\n\tvar _Subjects = __webpack_require__(21);\n\t\n\tvar _Subjects2 = _interopRequireDefault(_Subjects);\n\t\n\tvar _Languages = __webpack_require__(96);\n\t\n\tvar _Languages2 = _interopRequireDefault(_Languages);\n\t\n\tvar _Card = __webpack_require__(20);\n\t\n\tvar _Card2 = _interopRequireDefault(_Card);\n\t\n\tvar _store = __webpack_require__(51);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _actions = __webpack_require__(58);\n\t\n\tvar _getters = __webpack_require__(59);\n\t\n\t__webpack_require__(205);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar delayTimer;\n\t\n\texports.default = {\n\t  ready: function ready() {\n\t    this.newQuestion.language = this.getUserLanguage;\n\t  },\n\t  components: {\n\t    Subject: _Subjects2.default,\n\t    Card: _Card2.default\n\t  },\n\t  methods: {\n\t    readImg: function readImg(e) {\n\t      var c = this.$els.fabricprocess;\n\t      var canvas = new window.fabric.Canvas(c, { width: 600, height: 300 });\n\t      c.fabric = canvas;\n\t      var reader = new window.FileReader();\n\t      reader.onload = function (event) {\n\t        var imgObj = new window.Image();\n\t        imgObj.src = event.target.result;\n\t        imgObj.onload = function () {\n\t          var image = new window.fabric.Image(imgObj);\n\t          image.set({\n\t            angle: 0,\n\t            padding: 10,\n\t            cornersize: 10,\n\t            height: 160,\n\t            width: imgObj.width * (160 / imgObj.height)\n\t          });\n\t          canvas.centerObject(image);\n\t          canvas.add(image);\n\t          canvas.renderAll();\n\t        };\n\t      };\n\t      reader.readAsDataURL(e.target.files[0]);\n\t    },\n\t    outputImg: function outputImg() {\n\t      var c = this.$els.fabricprocess;\n\t      var canvas = c.fabric;\n\t      this.$http.get('/api/qiniu/uptoken').then(function (response) {\n\t        console.log(response.data.uptoken);\n\t        this.uploadImage(canvas.getObjects()[0].toDataURL(), response.data.uptoken);\n\t      });\n\t    },\n\t    publishQuestion: function publishQuestion() {\n\t      this.publishButton.disabled = true;\n\t      if (this.checkComplete()) {\n\t        this.newQuestion.context = (0, _quillRender2.default)(this.editorPreview.question.ops);\n\t        this.newQuestion.choices[0] = (0, _quillRender2.default)(this.editorPreview.answer.mc[0].ops);\n\t        this.newQuestion.choices[1] = (0, _quillRender2.default)(this.editorPreview.answer.mc[1].ops);\n\t        this.newQuestion.choices[2] = (0, _quillRender2.default)(this.editorPreview.answer.mc[2].ops);\n\t        this.newQuestion.choices[3] = (0, _quillRender2.default)(this.editorPreview.answer.mc[3].ops);\n\t        this.newQuestion.rawData = (0, _stringify2.default)(this.editorPreview);\n\t        this.$http.post('/api/manage-question/questions', this.newQuestion).then(function (response) {\n\t          this.$showToast('發佈成功');\n\t          this.publishButton.disabled = false;\n\t          this.newQuestion.context = '';\n\t          this.newQuestion.choices = ['', '', '', ''];\n\t          this.newQuestion.answer = {\n\t            mc: 1\n\t          };\n\t          this.editorPreview = {\n\t            question: { ops: [] },\n\t            answer: {\n\t              mc: [{ ops: [] }, { ops: [] }, { ops: [] }, { ops: [] }]\n\t            }\n\t          };\n\t          this.$broadcast('clear-editor');\n\t          this.renderQuestionPreview('clear');\n\t          this.renderMcPreview('clear');\n\t          this.questionInbox.questions.push(response.data);\n\t        }, function (response) {\n\t          this.$showToast('發佈失敗');\n\t          this.publishButton.disabled = false;\n\t          console.log(response);\n\t        });\n\t      } else {\n\t        this.publishButton.disabled = false;\n\t        this.$showToast('信息不完整');\n\t      }\n\t    },\n\t    checkComplete: function checkComplete() {\n\t      var contentComplete = this.editorPreview.question.ops.length !== 0;\n\t      var answerComplete = this.editorPreview.answer.mc[0].ops.length !== 0 && this.editorPreview.answer.mc[1].ops.length !== 0 && this.editorPreview.answer.mc[2].ops.length !== 0 && this.editorPreview.answer.mc[3].ops.length !== 0;\n\t\n\t      return contentComplete && answerComplete;\n\t    },\n\t    addTag: function addTag() {\n\t      if (this.tag.trim() !== '') {\n\t        if (this.newQuestion.tags.indexOf(this.tag) === -1) {\n\t          this.newQuestion.tags.push(this.tag);\n\t          this.tag = '';\n\t        } else {\n\t          this.tag = '';\n\t        }\n\t      }\n\t    },\n\t    removeTag: function removeTag(index) {\n\t      this.newQuestion.tags.splice(index, 1);\n\t    },\n\t    renderQuestionPreview: function renderQuestionPreview(option) {\n\t      if (option === 'clear') {\n\t        window.document.querySelector('.question_preview').innerHTML = '<p></p>';\n\t      } else {\n\t        window.document.querySelector('.question_preview').innerHTML = (0, _quillRender2.default)(this.editorPreview.question.ops);\n\t        setTimeout(function renderQuestionPreview() {\n\t          window.renderMathInElement(document.querySelector('.question_preview'), {\n\t            delimiters: [{ left: '$$', right: '$$', display: false }]\n\t          });\n\t        }, 0);\n\t      }\n\t    },\n\t    renderMcPreview: function renderMcPreview(option) {\n\t      if (option === 'clear') {\n\t        window.document.getElementById('mc1').innerHTML = '<p></p>';\n\t        window.document.getElementById('mc2').innerHTML = '<p></p>';\n\t        window.document.getElementById('mc3').innerHTML = '<p></p>';\n\t        window.document.getElementById('mc4').innerHTML = '<p></p>';\n\t      } else {\n\t        window.document.getElementById('mc1').innerHTML = (0, _quillRender2.default)(this.editorPreview.answer.mc[0].ops);\n\t        window.document.getElementById('mc2').innerHTML = (0, _quillRender2.default)(this.editorPreview.answer.mc[1].ops);\n\t        window.document.getElementById('mc3').innerHTML = (0, _quillRender2.default)(this.editorPreview.answer.mc[2].ops);\n\t        window.document.getElementById('mc4').innerHTML = (0, _quillRender2.default)(this.editorPreview.answer.mc[3].ops);\n\t\n\t        setTimeout(function renderMcPreview() {\n\t          window.renderMathInElement(document.getElementById('mc_preview'), {\n\t            delimiters: [{ left: '$$', right: '$$', display: false }]\n\t          });\n\t        }, 0);\n\t      }\n\t    },\n\t    getLatestQuestionsCreatedByMe: function getLatestQuestionsCreatedByMe() {\n\t      this.$http.get('/api/manage-question/mine').then(function (response) {\n\t        document.getElementById('getLatestQuestionsButton').style.display = 'none';\n\t        this.questionInbox.questions = response.data;\n\t      });\n\t    },\n\t    uploadImage: function uploadImage(imageData, token) {\n\t      imageData = imageData.split(',')[1];\n\t      var uptoken = 'UpToken ' + token;\n\t      this.$http.post('http://upload.qiniu.com/putb64/' + imageData.length * 0.75, imageData, { headers: { 'Content-Type': 'application/octet-stream', 'Authorization': uptoken } }).then(function (response) {\n\t        console.log(response.data);\n\t        this.editorPreview.image.data = response.data.key;\n\t        this.newQuestion.images.push(this.editorPreview.image);\n\t      });\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      publishButton: {\n\t        disabled: false\n\t      },\n\t      questionInbox: {\n\t        questions: [],\n\t        show: false\n\t      },\n\t      subjects: _Subjects2.default.subjects,\n\t      languages: _Languages2.default.languages,\n\t      tag: '',\n\t      newQuestion: {\n\t        language: '',\n\t        type: 'mc',\n\t        subject: 'math',\n\t        tags: [],\n\t        tips: '',\n\t        difficulty: 1,\n\t        context: '',\n\t        choices: ['', '', '', ''],\n\t        images: [],\n\t        answer: {\n\t          mc: 0\n\t        },\n\t        rawData: ''\n\t      },\n\t      editorPreview: {\n\t        image: {\n\t          label: '',\n\t          type: 'qiniu',\n\t          data: '',\n\t          show: false\n\t        },\n\t        question: { ops: [] },\n\t        answer: {\n\t          mc: [{ ops: [] }, { ops: [] }, { ops: [] }, { ops: [] }]\n\t        }\n\t      }\n\t    };\n\t  },\n\t\n\t  filters: {\n\t    'timestamp': function timestamp(input) {\n\t      return this.$options.filters.calendar(new Date(parseInt(input.toString().substring(0, 8), 16) * 1000), '');\n\t    }\n\t  },\n\t  watch: {\n\t    'editorPreview.question.ops': function editorPreviewQuestionOps() {\n\t      var self = this;\n\t      clearTimeout(delayTimer);\n\t      delayTimer = setTimeout(function () {\n\t        self.renderQuestionPreview();\n\t      }, 500);\n\t    },\n\t    'editorPreview.answer.mc': function editorPreviewAnswerMc() {\n\t      var self = this;\n\t      clearTimeout(delayTimer);\n\t      delayTimer = setTimeout(function () {\n\t        self.renderMcPreview();\n\t      }, 500);\n\t    }\n\t  },\n\t  store: _store2.default,\n\t  vuex: {\n\t    actions: {\n\t      setUserLanguage: _actions.setUserLanguage\n\t    },\n\t    getters: {\n\t      getUserLanguage: _getters.getUserLanguage\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 393:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"#create-mc-question .set_difficulty i{width:24px;color:#aaa;cursor:pointer}#create-mc-question .difficulty_status{color:#ffc107!important}#create-mc-question .body_wrapper{max-width:800px;margin:32px auto}#create-mc-question .question_preview{padding:8px;border-top:1px solid #ccc;min-height:43px;box-sizing:border-box}#create-mc-question .mc_content,#create-mc-question .question_preview{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;-o-tab-size:4;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}#create-mc-question .mc_content ol,#create-mc-question .mc_content p,#create-mc-question .question_preview ol,#create-mc-question .question_preview p{margin:0}#create-mc-question .toolbar_title{padding:8px;margin:0}#create-mc-question .mc_preview{display:inline-block;width:100%}#create-mc-question .mc_label{padding:16px}#create-mc-question .mc_content{padding-bottom:16px}#create-mc-question .questions_inbox{position:fixed;right:-360px;top:55px;background:#fff;width:360px;box-shadow:0 0 12px #aaa;height:100%;-webkit-transition:right .2s;transition:right .2s}#create-mc-question .questions_inbox.show{right:0}#create-mc-question .questions_inbox .question{padding:8px 16px;border-bottom:1px solid #eee}#create-mc-question .mc_preview{cursor:pointer}#create-mc-question .mc_preview .hightlight-answer .card{background-color:#009688;color:#fff}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/create-question/Create-mc-question.vue\"],\"names\":[],\"mappings\":\"AAsYA,sCACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AAED,uCACE,uBAAyB,CAC1B,AAED,kCACE,gBAAiB,AACjB,gBAAiB,CAClB,AAED,sCACE,YAAa,AACb,0BAA4B,AAC5B,gBAAiB,AACjB,qBAAuB,CACxB,AAED,sEACE,sBAAuB,AACvB,YAAa,AACb,iBAAkB,AAClB,YAAa,AACb,aAAc,AACd,gBAAiB,AACjB,kBAAmB,AACnB,cAAe,AACZ,WAAY,AACf,gBAAiB,AACjB,gBAAiB,AACjB,qBAAsB,AACtB,oBAAsB,CACvB,AACD,sJACE,QAAS,CACV,AAED,mCACE,YAAa,AACb,QAAS,CACV,AAED,gCACE,qBAAsB,AACtB,UAAW,CACZ,AAED,8BACE,YAAc,CACf,AAED,gCACE,mBAAqB,CACtB,AAED,qCACE,eAAgB,AAChB,aAAc,AACd,SAAU,AACV,gBAAiB,AACjB,YAAa,AACb,yBAA0B,AAC1B,YAAa,AACb,6BAA+B,AAC/B,oBAAuB,CACxB,AAED,0CACE,OAAS,CACV,AAED,+CACE,iBAAkB,AAClB,4BAA6B,CAC9B,AAED,gCACE,cAAgB,CACjB,AAED,yDACE,yBAA0B,AAC1B,UAAW,CACZ\",\"file\":\"Create-mc-question.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#create-mc-question .set_difficulty i {\\n  width: 24px;\\n  color: #aaa;\\n  cursor: pointer;\\n}\\n\\n#create-mc-question .difficulty_status {\\n  color: #FFC107 !important\\n}\\n\\n#create-mc-question .body_wrapper {\\n  max-width: 800px;\\n  margin:32px auto;\\n}\\n\\n#create-mc-question .question_preview {\\n  padding: 8px;\\n  border-top:  1px solid #ccc;\\n  min-height: 43px;\\n  box-sizing: border-box;\\n}\\n\\n#create-mc-question .question_preview, #create-mc-question .mc_content {\\n  box-sizing: border-box;\\n  cursor: text;\\n  line-height: 1.42;\\n  height: 100%;\\n  outline: none;\\n  overflow-y: auto;\\n  padding: 12px 15px;\\n  -o-tab-size: 4;\\n     tab-size: 4;\\n  -moz-tab-size: 4;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n#create-mc-question .mc_content p,  #create-mc-question .mc_content ol, #create-mc-question .question_preview p,  #create-mc-question .question_preview ol{\\n  margin: 0\\n}\\n\\n#create-mc-question .toolbar_title {\\n  padding: 8px;\\n  margin: 0\\n}\\n\\n#create-mc-question .mc_preview {\\n  display: inline-block;\\n  width: 100%\\n}\\n\\n#create-mc-question .mc_label {\\n  padding: 16px;\\n}\\n\\n#create-mc-question .mc_content {\\n  padding-bottom: 16px;\\n}\\n\\n#create-mc-question .questions_inbox {\\n  position: fixed;\\n  right: -360px;\\n  top: 55px;\\n  background: #fff;\\n  width: 360px;\\n  box-shadow: 0 0 12px #aaa;\\n  height: 100%;\\n  -webkit-transition: right 0.2s;\\n  transition: right 0.2s;\\n}\\n\\n#create-mc-question .questions_inbox.show {\\n  right: 0;\\n}\\n\\n#create-mc-question .questions_inbox .question {\\n  padding: 8px 16px;\\n  border-bottom: 1px solid #eee\\n}\\n\\n#create-mc-question .mc_preview {\\n  cursor: pointer;\\n}\\n\\n#create-mc-question .mc_preview .hightlight-answer .card {\\n  background-color: #009688;\\n  color: #fff\\n}\\n\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 423:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(393);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 437:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.6.3\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(538)\n\t    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\tfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\tfabric.fontPaths = { };\n\t\n\t/**\n\t * Cache Object for widths of chars in text rendering.\n\t */\n\tfabric.charWidthsCache = { };\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t    var eventListener = this.__eventListeners[eventName];\n\t    if (handler) {\n\t      eventListener[eventListener.indexOf(handler)] = false;\n\t    }\n\t    else {\n\t      fabric.util.array.fill(eventListener, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [ ];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      for (eventName in this.__eventListeners) {\n\t        _removeEventListener.call(this, eventName);\n\t      }\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n\t    }\n\t    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n\t      return value !== false;\n\t    });\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n\t   * @see {@link http://fabricjs.com/events|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  /**\n\t   * Adds objects to collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      this._onObjectAdded(arguments[i]);\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Iteration happens in reverse order (for performance reasons).\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects(),\n\t        i = objects.length;\n\t    while (i--) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      pow = Math.pow,\n\t      abs = Math.abs,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {Any} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var v = fabric.util.rotateVector(point, radians);\n\t      return new fabric.Point(v.x, v.y).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Rotates `vector` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} vector The vector to rotate (x and y)\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {Object} The new rotated point\n\t     */\n\t    rotateVector: function(vector, radians) {\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = vector.x * cos - vector.y * sin,\n\t          ry = vector.x * sin + vector.y * cos;\n\t      return {\n\t        x: rx,\n\t        y: ry\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n\t     * @param {Array} points 4 points array\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    makeBoundingBoxFromPoints: function(points) {\n\t      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n\t          minX = fabric.util.array.min(xPoints),\n\t          maxX = fabric.util.array.max(xPoints),\n\t          width = Math.abs(minX - maxX),\n\t          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n\t          minY = fabric.util.array.min(yPoints),\n\t          maxY = fabric.util.array.max(yPoints),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length,\n\t          obj = global || fabric.window;\n\t\n\t      for (var i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {Any} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [ ];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [ ],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        if (klass.async) {\n\t          klass.fromObject(o, function (obj, error) {\n\t            if (!error) {\n\t              enlivenedObjects[index] = obj;\n\t              reviver && reviver(o, enlivenedObjects[index]);\n\t            }\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedObjects[index] = klass.fromObject(o);\n\t          reviver && reviver(o, enlivenedObjects[index]);\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.setSourcePath(path);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(213).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype;\n\t\n\t      for (var i = proto.stateProperties.length; i--; ) {\n\t\n\t        var propName = proto.stateProperties[i],\n\t            capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1),\n\t            setterName = 'set' + capitalizedPropName,\n\t            getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b, is2x2) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n\t        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Decomposes standard 2x2 matrix into transform componentes\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a transformMatrix\n\t     * @return {Object} Components of transform\n\t     */\n\t    qrDecompose: function(a) {\n\t      var angle = atan2(a[1], a[0]),\n\t          denom = pow(a[0], 2) + pow(a[1], 2),\n\t          scaleX = sqrt(denom),\n\t          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n\t          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n\t      return {\n\t        angle: angle  / PiBy180,\n\t        scaleX: scaleX,\n\t        scaleY: scaleY,\n\t        skewX: skewX / PiBy180,\n\t        skewY: 0,\n\t        translateX: a[4],\n\t        translateY: a[5]\n\t      };\n\t    },\n\t\n\t    customTransformMatrix: function(scaleX, scaleY, skewX) {\n\t      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n\t          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n\t      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n\t    },\n\t\n\t    resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.flipX = false;\n\t      target.flipY = false;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1);\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (var i = 3, l = imageData.data.length; i < l; i += 4) {\n\t        var temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    },\n\t\n\t    /**\n\t     * Parse preserveAspectRatio attribute from element\n\t     * @param {string} attribute to be parsed\n\t     * @return {Object} an object containing align and meetOrSlice attribute\n\t     */\n\t    parsePreserveAspectRatioAttribute: function(attribute) {\n\t      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n\t          aspectRatioAttrs = attribute.split(' '), align;\n\t\n\t      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t        meetOrSlice = aspectRatioAttrs.pop();\n\t        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t          align = meetOrSlice;\n\t          meetOrSlice = 'meet';\n\t        }\n\t        else if (aspectRatioAttrs.length) {\n\t          align = aspectRatioAttrs.pop();\n\t        }\n\t      }\n\t      //divide align in alignX and alignY\n\t      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t      return {\n\t        meetOrSlice: meetOrSlice,\n\t        alignX: alignX,\n\t        alignY: alignY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {String} fontFamily\n\t     */\n\t    clearFabricFontCache: function(fontFamily) {\n\t      if (fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl/(rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl /(rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( - cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( - sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[ ], [ ], [ ], [ ]],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound = [ ], bounds = [ ],\n\t    segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot),\n\t    boundCopy = [[ ], [ ]];\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      boundCopy[0].x = bound[0].x + fx;\n\t      boundCopy[0].y = bound[0].y + fy;\n\t      boundCopy[1].x = bound[1].x + fx;\n\t      boundCopy[1].y = bound[1].y + fy;\n\t      bounds.push(boundCopy[0]);\n\t      bounds.push(boundCopy[1]);\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [ ],\n\t        bounds = [[ ], [ ]],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {Any} searchElement\n\t     * @param {Number} [fromIndex]\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [ ];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [ ], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [initial] Object to use as the first argument to the first call of the callback\n\t     * @return {Any}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [ ];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {Any}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {Any}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function fill(array, value) {\n\t    var k = array.length;\n\t    while (k--) {\n\t      array[k] = value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    fill: fill,\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Copies all enumerable properties of one object to another\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t  function extend(destination, source) {\n\t    // JScript DontEnum bug is not taken care of\n\t    for (var property in source) {\n\t      destination[property] = source[property];\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object) {\n\t    return extend({ }, object);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t}());\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var fn = this.constructor.superclass.prototype[methodName];\n\t    return (arguments.length > 1)\n\t      ? fn.apply(this, slice.call(arguments, 1))\n\t      : fn.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [ ];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      element.addEventListener(eventName, handler, false);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      element.removeEventListener(eventName, handler, false);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [ ];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [ ];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t    return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t  },\n\t\n\t  pointerY = function(event) {\n\t    return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t  };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    // While loop checks (and then sets element to) .parentNode OR .host\n\t    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n\t    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n\t    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\t    while (element && (element.parentNode || element.host)) {\n\t\n\t      // Set element to element parent, or 'host' in case of ShadowDOM\n\t      element = element.parentNode || element.host;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {Any} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {Any} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* jshint ignore:start */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* jshint ignore:end */\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || function() { },\n\t          abort = options.abort || function() { return false; },\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start);\n\t        if (abort()) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        onChange(easing(currentTime, startValue, byValue, duration));\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      //handle the 0/0 case:\n\t      if (c === 0 && a === 0) {\n\t        s = p / (2 * Math.PI) * Math.asin(1);\n\t      }\n\t      else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d/2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2/2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5/2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t}());\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      capitalize = fabric.util.string.capitalize,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t        return parseFloat(n);\n\t      });\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n\t        continue;\n\t      }\n\t\n\t      if (typeof attributes[attr] === 'undefined') {\n\t        if (!fabric.Object.prototype[attr]) {\n\t          continue;\n\t        }\n\t        attributes[attr] = fabric.Object.prototype[attr];\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var angle = args[0],\n\t          x = (args.length === 3) ? args[1] : 0,\n\t          y = (args.length === 3) ? args[2] : 0;\n\t\n\t      matrix[0] = Math.cos(angle);\n\t      matrix[1] = Math.sin(angle);\n\t      matrix[2] = -Math.sin(angle);\n\t      matrix[3] = Math.cos(angle);\n\t      matrix[4] = x - (matrix[0] * x + matrix[2] * y);\n\t      matrix[5] = y - (matrix[1] * x + matrix[3] * y);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewXMatrix(matrix, args) {\n\t      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function skewYMatrix(matrix, args) {\n\t      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [ ];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              return (match !== '' && match != null);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewXMatrix(matrix, args);\n\t            break;\n\t          case 'skewY':\n\t            skewYMatrix(matrix, args);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = normalizeAttr(pair[0].trim().toLowerCase());\n\t      value = normalizeValue(attr, pair[1].trim());\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = normalizeAttr(prop.toLowerCase());\n\t      value = normalizeValue(attr, style[prop]);\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (id === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = doc.getElementsByTagName('use'), i = 0;\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        while (el2.firstChild != null) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        x = element.getAttribute('x') || 0,\n\t        y = element.getAttribute('y') || 0,\n\t        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.tagName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { }, translateMatrix = '';\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]),\n\t    minY = -parseFloat(viewBoxAttr[2]),\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]),\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\t    if (preserveAspectRatio.alignX !== 'none') {\n\t      //translate all container for the effect of Mid, Min, Max\n\t      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t    }\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (x || y) {\n\t      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n\t    }\n\t\n\t    matrix = translateMatrix + ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.tagName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      while (element.firstChild != null) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished; It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   */\n\t  fabric.parseSVGDocument = (function() {\n\t\n\t    function hasAncestorWithNodeName(element, nodeName) {\n\t      while (element && (element = element.parentNode)) {\n\t        if (nodeName.test(element.nodeName) && !element.getAttribute('instantiated_by_use')) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    return function(doc, callback, reviver) {\n\t      if (!doc) {\n\t        return;\n\t      }\n\t\n\t      parseUseDirectives(doc);\n\t\n\t      var startTime = new Date(),\n\t          svgUid =  fabric.Object.__uid++,\n\t          options = applyViewboxTransform(doc),\n\t          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t\n\t      options.svgUid = svgUid;\n\t\n\t      if (descendants.length === 0 && fabric.isLikelyNode) {\n\t        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t        // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t        var arr = [ ];\n\t        for (var i = 0, len = descendants.length; i < len; i++) {\n\t          arr[i] = descendants[i];\n\t        }\n\t        descendants = arr;\n\t      }\n\t\n\t      var elements = descendants.filter(function(el) {\n\t        applyViewboxTransform(el);\n\t        return reAllowedSVGTagNames.test(el.tagName) &&\n\t              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t      });\n\t\n\t      if (!elements || (elements && !elements.length)) {\n\t        callback && callback([], {});\n\t        return;\n\t      }\n\t\n\t      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t      // Precedence of rules:   style > class > attribute\n\t      fabric.parseElements(elements, function(instances) {\n\t        fabric.documentParsingTime = new Date() - startTime;\n\t        if (callback) {\n\t          callback(instances, options);\n\t        }\n\t      }, clone(options), reviver);\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n\t   * @namespace\n\t   */\n\t  var svgCache = {\n\t\n\t    /**\n\t     * @param {String} name\n\t     * @param {Function} callback\n\t     */\n\t    has: function (name, callback) {\n\t      callback(false);\n\t    },\n\t\n\t    get: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    set: function () {\n\t      /* NOOP */\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _enlivenCachedObject(cachedObject) {\n\t\n\t    var objects = cachedObject.objects,\n\t        options = cachedObject.options;\n\t\n\t    objects = objects.map(function (o) {\n\t      return fabric[capitalize(o.type)].fromObject(o);\n\t    });\n\t\n\t    return ({ objects: objects, options: options });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _createSVGPattern(markup, canvas, property) {\n\t    if (canvas[property] && canvas[property].toSVG) {\n\t      markup.push(\n\t        '\\t<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n\t          'width=\"', canvas[property].source.width,\n\t          '\" height=\"', canvas[property].source.height,\n\t          '\" patternUnits=\"userSpaceOnUse\">\\n',\n\t        '\\t\\t<image x=\"0\" y=\"0\" ',\n\t        'width=\"', canvas[property].source.width,\n\t        '\" height=\"', canvas[property].source.height,\n\t        '\" xlink:href=\"', canvas[property].source.src,\n\t        '\"></image>\\n\\t</pattern>\\n'\n\t      );\n\t    }\n\t  }\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var linearGradientEls = doc.getElementsByTagName('linearGradient'),\n\t          radialGradientEls = doc.getElementsByTagName('radialGradient'),\n\t          el, i, j = 0, id, xlink, elList = [ ],\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      elList.length = linearGradientEls.length + radialGradientEls.length;\n\t      i = linearGradientEls.length;\n\t      while (i--) {\n\t        elList[j++] = linearGradientEls[i];\n\t      }\n\t      i = radialGradientEls.length;\n\t      while (i--) {\n\t        elList[j++] = radialGradientEls[i];\n\t      }\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) {\n\t          attr = normalizeAttr(attr);\n\t          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\t\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t      if (ownAttributes.font) {\n\t        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n\t      }\n\t      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [ ], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i+=2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        // IE9 doesn't support textContent, but provides text instead.\n\t        var styleContents = styles[i].textContent || styles[i].text;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t          ruleObj = { }, declaration = match[2].trim(),\n\t          propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = normalizeAttr(pair[0]),\n\t                value = normalizeValue(property, pair[1], pair[0]);\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects. Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      svgCache.has(url, function (hasUrl) {\n\t        if (hasUrl) {\n\t          svgCache.get(url, function (value) {\n\t            var enlivedRecord = _enlivenCachedObject(value);\n\t            callback(enlivedRecord.objects, enlivedRecord.options);\n\t          });\n\t        }\n\t        else {\n\t          new fabric.util.request(url, {\n\t            method: 'get',\n\t            onComplete: onComplete\n\t          });\n\t        }\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          callback && callback(null);\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n\t          svgCache.set(url, {\n\t            objects: fabric.util.array.invoke(results, 'toObject'),\n\t            options: options\n\t          });\n\t          callback && callback(results, options);\n\t        }, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n\t        callback(results, options);\n\t      }, reviver);\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces,\n\t     * font URLs for font faces must be collected by developers\n\t     * and are not extracted from the DOM by fabricjs\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function(objects) {\n\t      var markup = '', fontList = { }, obj, fontFamily,\n\t          style, row, rowIndex, _char, charIndex,\n\t          fontPaths = fabric.fontPaths;\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        obj = objects[i];\n\t        fontFamily = obj.fontFamily;\n\t        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n\t          continue;\n\t        }\n\t        fontList[fontFamily] = true;\n\t        if (!obj.styles) {\n\t          continue;\n\t        }\n\t        style = obj.styles;\n\t        for (rowIndex in style) {\n\t          row = style[rowIndex];\n\t          for (charIndex in row) {\n\t            _char = row[charIndex];\n\t            fontFamily = _char.fontFamily;\n\t            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n\t              fontList[fontFamily] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var j in fontList) {\n\t        markup += [\n\t          //jscs:disable validateIndentation\n\t          '\\t\\t@font-face {\\n',\n\t            '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n\t            '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n\t          '\\t\\t}\\n'\n\t          //jscs:enable validateIndentation\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          //jscs:disable validateIndentation\n\t          '\\t<style type=\"text/css\">',\n\t            '<![CDATA[\\n',\n\t              markup,\n\t            ']]>',\n\t          '</style>\\n'\n\t          //jscs:enable validateIndentation\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function(canvas) {\n\t      var markup = [ ];\n\t\n\t      _createSVGPattern(markup, canvas, 'backgroundColor');\n\t      _createSVGPattern(markup, canvas, 'overlayColor');\n\t\n\t      return markup.join('');\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_this, i) {\n\t      setTimeout(function() {\n\t        _this.createObject(_this.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName)];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return new Point(this.x + (that.x - this.x)/2, this.y + (that.y - this.y)/2);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.points.push(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var b1 = points[i],\n\t          b2 = points[(i + 1) % length],\n\t          inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {Number} r1\n\t   * @param {Number} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        source = [255, 255, 255, 0];\n\t      }\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromHex(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (!source) {\n\t        //if color is not recognize let's make black as canvas does\n\t        source = [0, 0, 0, 1];\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255, g /= 255, b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    grey:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1/6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1/2) {\n\t      return q;\n\t    }\n\t    if (t < 2/3) {\n\t      return p + (q - p) * (2/3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1/3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1/3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6);\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset') || 0,\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStop) {\n\t      for (var position in colorStop) {\n\t        var color = new fabric.Color(colorStop[position]);\n\t        this.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @return {Object}\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY,\n\t        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @param {Boolean} normalize Whether coords should be normalized\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = fabric.util.object.clone(this.coords),\n\t          markup, commonAttributes;\n\t\n\t      // colorStops must be sorted ascending\n\t      this.colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          //jscs:disable validateIndentation\n\t          '<linearGradient ',\n\t            commonAttributes,\n\t            ' x1=\"', coords.x1,\n\t            '\" y1=\"', coords.y1,\n\t            '\" x2=\"', coords.x2,\n\t            '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t          //jscs:enable validateIndentation\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        markup = [\n\t          //jscs:disable validateIndentation\n\t          '<radialGradient ',\n\t            commonAttributes,\n\t            ' cx=\"', coords.x2,\n\t            '\" cy=\"', coords.y2,\n\t            '\" r=\"', coords.r2,\n\t            '\" fx=\"', coords.x1,\n\t            '\" fy=\"', coords.y1,\n\t          '\">\\n'\n\t          //jscs:enable validateIndentation\n\t        ];\n\t      }\n\t\n\t      for (var i = 0; i < this.colorStops.length; i++) {\n\t        markup.push(\n\t          //jscs:disable validateIndentation\n\t          '<stop ',\n\t            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n\t            '\" style=\"stop-color:', this.colorStops[i].color,\n\t            (this.colorStops[i].opacity != null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n\t          '\"/>\\n'\n\t          //jscs:enable validateIndentation\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(parseFloat(offset), color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type = (el.nodeName === 'linearGradient' ? 'linear' : 'radial'),\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords = { }, ellipseMatrix;\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry/object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t/**\n\t * Pattern class\n\t * @class fabric.Pattern\n\t * @see {@link http://fabricjs.com/patterns|Pattern demo}\n\t * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n\t * @see {@link fabric.Pattern#initialize} for constructor definition\n\t */\n\tfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t  /**\n\t   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t   * @type String\n\t   * @default\n\t   */\n\t  repeat: 'repeat',\n\t\n\t  /**\n\t   * Pattern horizontal offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetX: 0,\n\t\n\t  /**\n\t   * Pattern vertical offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetY: 0,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Pattern} thisArg\n\t   */\n\t  initialize: function(options) {\n\t    options || (options = { });\n\t\n\t    this.id = fabric.Object.__uid++;\n\t\n\t    if (options.source) {\n\t      if (typeof options.source === 'string') {\n\t        // function string\n\t        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t          this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        }\n\t        else {\n\t          // img src string\n\t          var _this = this;\n\t          this.source = fabric.util.createImage();\n\t          fabric.util.loadImage(options.source, function(img) {\n\t            _this.source = img;\n\t          });\n\t        }\n\t      }\n\t      else {\n\t        // img element\n\t        this.source = options.source;\n\t      }\n\t    }\n\t    if (options.repeat) {\n\t      this.repeat = options.repeat;\n\t    }\n\t    if (options.offsetX) {\n\t      this.offsetX = options.offsetX;\n\t    }\n\t    if (options.offsetY) {\n\t      this.offsetY = options.offsetY;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of a pattern\n\t   * @return {Object} Object representation of a pattern instance\n\t   */\n\t  toObject: function() {\n\t\n\t    var source;\n\t\n\t    // callback\n\t    if (typeof this.source === 'function') {\n\t      source = String(this.source);\n\t    }\n\t    // <img> element\n\t    else if (typeof this.source.src === 'string') {\n\t      source = this.source.src;\n\t    }\n\t    // <canvas> element\n\t    else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t      source = this.source.toDataURL();\n\t    }\n\t\n\t    return {\n\t      source: source,\n\t      repeat: this.repeat,\n\t      offsetX: this.offsetX,\n\t      offsetY: this.offsetY\n\t    };\n\t  },\n\t\n\t  /* _TO_SVG_START_ */\n\t  /**\n\t   * Returns SVG representation of a pattern\n\t   * @param {fabric.Object} object\n\t   * @return {String} SVG representation of a pattern\n\t   */\n\t  toSVG: function(object) {\n\t    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t        patternWidth = patternSource.width / object.getWidth(),\n\t        patternHeight = patternSource.height / object.getHeight(),\n\t        patternOffsetX = this.offsetX / object.getWidth(),\n\t        patternOffsetY = this.offsetY / object.getHeight(),\n\t        patternImgSrc = '';\n\t    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t      patternHeight = 1;\n\t    }\n\t    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t      patternWidth = 1;\n\t    }\n\t    if (patternSource.src) {\n\t      patternImgSrc = patternSource.src;\n\t    }\n\t    else if (patternSource.toDataURL) {\n\t      patternImgSrc = patternSource.toDataURL();\n\t    }\n\t\n\t    return '<pattern id=\"SVGID_' + this.id +\n\t                  '\" x=\"' + patternOffsetX +\n\t                  '\" y=\"' + patternOffsetY +\n\t                  '\" width=\"' + patternWidth +\n\t                  '\" height=\"' + patternHeight + '\">\\n' +\n\t             '<image x=\"0\" y=\"0\"' +\n\t                    ' width=\"' + patternSource.width +\n\t                    '\" height=\"' + patternSource.height +\n\t                    '\" xlink:href=\"' + patternImgSrc +\n\t             '\"></image>\\n' +\n\t           '</pattern>\\n';\n\t  },\n\t  /* _TO_SVG_END_ */\n\t\n\t  /**\n\t   * Returns an instance of CanvasPattern\n\t   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t   * @return {CanvasPattern}\n\t   */\n\t  toLive: function(ctx) {\n\t    var source = typeof this.source === 'function'\n\t      ? this.source()\n\t      : this.source;\n\t\n\t    // if the image failed to load, return, and allow rest to continue loading\n\t    if (!source) {\n\t      return '';\n\t    }\n\t\n\t    // if an image\n\t    if (typeof source.src !== 'undefined') {\n\t      if (!source.complete) {\n\t        return '';\n\t      }\n\t      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t        return '';\n\t      }\n\t    }\n\t    return ctx.createPattern(source, this.repeat);\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [ ],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          offset = fabric.util.rotateVector(\n\t            { x: this.offsetX, y: this.offsetY },\n\t            fabric.util.degreesToRadians(-object.angle)),\n\t          BLUR_BOX = 20;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t      }\n\t      if (object.flipX) {\n\t        offset.x *= -1;\n\t      }\n\t      if (object.flipY) {\n\t        offset.y *= -1;\n\t      }\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n\t          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY,\n\t          affectStroke: this.affectStroke\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t\n\t      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n\t        if (this[prop] !== proto[prop]) {\n\t          obj[prop] = this[prop];\n\t        }\n\t      }, this);\n\t\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t      toFixed = fabric.util.toFixed,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: true,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected. When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: [1, 0, 0, 1, 0, 0],\n\t\n\t    /**\n\t     * if set to false background image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    backgroundVpt: true,\n\t\n\t    /**\n\t     * if set to false overlya image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    overlayVpt: true,\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      this._objects = [];\n\t\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, this.renderAll.bind(this));\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, this.renderAll.bind(this));\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, this.renderAll.bind(this));\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, this.renderAll.bind(this));\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isRetinaScaling: function() {\n\t      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (!this._isRetinaScaling()) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n\t        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n\t      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          img && (this[property] = new fabric.Image(img, options));\n\t          callback && callback(img);\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback(image);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      if (color && color.source) {\n\t        var _this = this;\n\t        fabric.util.loadImage(color.source, function(img) {\n\t          _this[property] = new fabric.Pattern({\n\t            source: img,\n\t            repeat: color.repeat,\n\t            offsetX: color.offsetX,\n\t            offsetY: color.offsetY\n\t          });\n\t          callback && callback();\n\t        });\n\t      }\n\t      else {\n\t        this[property] = color;\n\t        callback && callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function() {\n\t      var element = fabric.document.createElement('canvas');\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      this._initCanvasElement(element);\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element\n\t     */\n\t    _initCanvasElement: function(element) {\n\t      fabric.util.createCanvasElement(element);\n\t\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n\t      this._initCanvasElement(this.lowerCanvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t      this._initRetinaScaling();\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this.getActiveGroup();\n\t      this.viewportTransform = vpt;\n\t      this.renderAll();\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i].setCoords();\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point;\n\t      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n\t      this.viewportTransform[0] = value;\n\t      this.viewportTransform[3] = value;\n\t      var after = fabric.util.transformPoint(point, this.viewportTransform);\n\t      this.viewportTransform[4] += before.x - after.x;\n\t      this.viewportTransform[5] += before.y - after.y;\n\t      this.renderAll();\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i].setCoords();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      this.viewportTransform[4] = -point.x;\n\t      this.viewportTransform[5] = -point.y;\n\t      this.renderAll();\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i].setCoords();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * Returns currently selected object, if any\n\t     * @return {fabric.Object}\n\t     */\n\t    getActiveObject: function() {\n\t      return null;\n\t    },\n\t\n\t    /**\n\t     * Returns currently selected group of object, if any\n\t     * @return {fabric.Group}\n\t     */\n\t    getActiveGroup: function() {\n\t      return null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared');\n\t      }\n\t\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      if (this.discardActiveGroup) {\n\t        this.discardActiveGroup();\n\t      }\n\t      if (this.discardActiveObject) {\n\t        this.discardActiveObject();\n\t      }\n\t      this.clearContext(this.contextContainer);\n\t      if (this.contextTop) {\n\t        this.clearContext(this.contextTop);\n\t      }\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides objects in two groups, one to render immediately\n\t     * and one to render as activeGroup.\n\t     * return objects to render immediately and pushes the other in the activeGroup.\n\t     */\n\t    _chooseObjectsToRender: function() {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          object, objsToRender = [ ], activeGroupObjects = [ ];\n\t\n\t      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n\t        for (var i = 0, length = this._objects.length; i < length; i++) {\n\t          object = this._objects[i];\n\t          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n\t            objsToRender.push(object);\n\t          }\n\t          else {\n\t            activeGroupObjects.push(object);\n\t          }\n\t        }\n\t        activeGroup && activeGroup._set('_objects', activeGroupObjects);\n\t      }\n\t      else {\n\t        objsToRender = this._objects;\n\t      }\n\t      return objsToRender;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @param {Boolean} [allOnTop] Whether we want to force all images to be rendered on the top canvas\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      var canvasToDrawOn = this.contextContainer, objsToRender;\n\t\n\t      if (this.contextTop && this.selection && !this._groupSelector && !this.isDrawingMode) {\n\t        this.clearContext(this.contextTop);\n\t      }\n\t\n\t      this.clearContext(canvasToDrawOn);\n\t\n\t      this.fire('before:render');\n\t\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, canvasToDrawOn);\n\t      }\n\t      this._renderBackground(canvasToDrawOn);\n\t\n\t      canvasToDrawOn.save();\n\t      objsToRender = this._chooseObjectsToRender();\n\t      //apply viewport transform once for all rendering process\n\t      canvasToDrawOn.transform.apply(canvasToDrawOn, this.viewportTransform);\n\t      this._renderObjects(canvasToDrawOn, objsToRender);\n\t      if (!this.preserveObjectStacking) {\n\t        objsToRender = [this.getActiveGroup(), this.getActiveObject()];\n\t        this._renderObjects(canvasToDrawOn, objsToRender);\n\t      }\n\t      canvasToDrawOn.restore();\n\t\n\t      if (!this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(canvasToDrawOn);\n\t      }\n\t      if (this.clipTo) {\n\t        canvasToDrawOn.restore();\n\t      }\n\t      this._renderOverlay(canvasToDrawOn);\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(canvasToDrawOn);\n\t      }\n\t\n\t      this.fire('after:render');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} objects to render\n\t     */\n\t    _renderObjects: function(ctx, objects) {\n\t      for (var i = 0, length = objects.length; i < length; ++i) {\n\t        objects[i] && objects[i].render(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {string} property 'background' or 'overlay'\n\t     */\n\t    _renderBackgroundOrOverlay: function(ctx, property) {\n\t      var object = this[property + 'Color'];\n\t      if (object) {\n\t        ctx.fillStyle = object.toLive\n\t          ? object.toLive(ctx)\n\t          : object;\n\t\n\t        ctx.fillRect(\n\t          object.offsetX || 0,\n\t          object.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      object = this[property + 'Image'];\n\t      if (object) {\n\t        if (this[property + 'Vpt']) {\n\t          ctx.save();\n\t          ctx.transform.apply(ctx, this.viewportTransform);\n\t        }\n\t        object.render(ctx);\n\t        this[property + 'Vpt'] && ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'background');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'overlay');\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop || this.contextContainer;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection();\n\t      }\n\t\n\t      this.fire('after:render');\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(center.left, center.top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the viewport\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObject: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, vpCenter);\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectH: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object Vertically in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectV: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n\t    },\n\t\n\t    /**\n\t     * Calculate the point in canvas that correspond to the center of actual viewport.\n\t     * @return {fabric.Point} vpCenter, viewport center\n\t     * @chainable\n\t     */\n\t    getVpCenter: function() {\n\t      var center = this.getCenter(),\n\t          iVpt = fabric.util.invertTransform(this.viewportTransform);\n\t      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay());\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().filter(function(object) {\n\t          return !object.excludeFromExport;\n\t        }).map(function(instance) {\n\t          return this._toObject(instance, methodName, propertiesToInclude);\n\t        }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {};\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function() {\n\t      var data = {\n\t        background: (this.backgroundColor && this.backgroundColor.toObject)\n\t          ? this.backgroundColor.toObject()\n\t          : this.backgroundColor\n\t      };\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject()\n\t          : this.overlayColor;\n\t      }\n\t      if (this.backgroundImage) {\n\t        data.backgroundImage = this.backgroundImage.toObject();\n\t      }\n\t      if (this.overlayImage) {\n\t        data.overlayImage = this.overlayImage.toObject();\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {String} [options.width] desired width of svg with or without units\n\t     * @param {String} [options.height] desired height of svg with or without units\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (options.suppressPreamble) {\n\t        return;\n\t      }\n\t      markup.push(\n\t        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n\t          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width = options.width || this.width,\n\t          height = options.height || this.height,\n\t          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t      if (options.viewBox) {\n\t        viewBox = 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" ';\n\t      }\n\t      else {\n\t        if (this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          viewBox = 'viewBox=\"' +\n\t                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          (this.backgroundColor && !this.backgroundColor.toLive\n\t            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n\t            : null),\n\t          viewBox,\n\t          'xml:space=\"preserve\">\\n',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n\t        '<defs>',\n\t          fabric.createSVGFontFacesMarkup(this.getObjects()),\n\t          fabric.createSVGRefElementsMarkup(this),\n\t        '</defs>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      var instance, originalProperties;\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        instance = objects[i];\n\t        if (instance.excludeFromExport) {\n\t          continue;\n\t        }\n\t        //If the object is in a selection group, simulate what would happen to that\n\t        //object when the group is deselected\n\t        originalProperties = this._realizeGroupTransformOnObject(instance);\n\t        markup.push(instance.toSVG(reviver));\n\t        this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property, reviver) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG(reviver));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      if (this[property] && this[property].source) {\n\t        markup.push(\n\t          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n\t            'width=\"',\n\t              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.height\n\t                : this.height),\n\t            '\" fill=\"url(#' + property + 'Pattern)\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t      else if (this[property] && property === 'overlayColor') {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.unshift(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.unshift(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.push(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.push(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== 0) {\n\t            newIdx = idx - 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== 0) {\n\t          // if object is not on the bottom of stack\n\t          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== this._objects.length - 1) {\n\t            newIdx = idx + 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== this._objects.length - 1) {\n\t          // if object is not on top of stack (last item in an array)\n\t          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color:            'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:            1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow:           null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap:    'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin:   'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray:  null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur;\n\t    ctx.shadowOffsetX = this.shadow.offsetX;\n\t    ctx.shadowOffsetY = this.shadow.offsetY;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [ ];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        p1.x -= 0.5;\n\t        p2.x += 0.5;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (var i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @param {Number} minX\n\t     * @param {Number} minY\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [],\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y);\n\t\n\t      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n\t      for (var i = 1, len = points.length; i < len; i++) {\n\t        var midPoint = p1.midPointFrom(p2);\n\t        // p1 is our bezier control point\n\t        // midpoint is our endpoint\n\t        // start point is p(i-1) value.\n\t        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        p1 = new fabric.Point(points[i].x, points[i].y);\n\t        if ((i + 1) < points.length) {\n\t          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n\t        }\n\t      }\n\t      path.push('L ', p1.x, ' ', p1.y, ' ');\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t                   fill: null,\n\t                   stroke: this.color,\n\t                   strokeWidth: this.width,\n\t                   strokeLineCap: this.strokeLineCap,\n\t                   strokeLineJoin: this.strokeLineJoin,\n\t                   strokeDashArray: this.strokeDashArray,\n\t                   originX: 'center',\n\t                   originY: 'center'\n\t                 });\n\t\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [ ];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [ ];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [ ];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [ ];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [ ];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [ ];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData);\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction()\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * Indicates which key enable unproportional scaling\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    uniScaleKey:           'shiftKey',\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates which key enable centered Transfrom\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    centeredKey:           'altKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternate action on corner\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    altActionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates which key enable last rendered selection independently of stack position\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.3\n\t     * @type String\n\t     * @default\n\t     */\n\t    lastRenderedKey:        'altKey',\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Indicates which key enable multiple click selection\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [ ],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _resetCurrentTransform: function() {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        skewX: t.original.skewX,\n\t        skewY: t.original.skewY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @param {Object} [point] x,y object of point coordinates we want to check.\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target, point) {\n\t      var pointer = point || this.getPointer(e, true),\n\t          xy = this._normalizePointer(target, pointer);\n\t\n\t      if (target.group && target.group === this.getActiveGroup()) {\n\t        xy = this._normalizePointer(target.group, pointer);\n\t      }\n\t      else {\n\t        xy = { x: pointer.x, y: pointer.y };\n\t      }\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var lt, m;\n\t\n\t      m = fabric.util.multiplyTransformMatrices(\n\t            this.viewportTransform,\n\t            object.calcTransformMatrix());\n\t\n\t      m = fabric.util.invertTransform(m);\n\t      pointer = fabric.util.transformPoint(pointer, m , false);\n\t      lt = fabric.util.transformPoint(object.getCenterPoint(), m , false);\n\t      pointer.x -= lt.x;\n\t      pointer.y -= lt.y;\n\t      return { x: pointer.x, y: pointer.y };\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners,\n\t          ctx = this.contextCache,\n\t          shouldTransform = target.group && target.group === this.getActiveGroup();\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t\n\t      ctx.save();\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      if (shouldTransform) {\n\t        ctx.transform.apply(ctx, target.group.calcTransformMatrix());\n\t      }\n\t      target.render(ctx);\n\t      ctx.restore();\n\t\n\t      target.active && target._renderControls(ctx);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        ctx, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(ctx);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e[this.selectionKey])\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !t.altKey : t.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner, e) {\n\t      if (!corner) {\n\t        return 'drag';\n\t      }\n\t\n\t      switch (corner) {\n\t        case 'mtr':\n\t          return 'rotate';\n\t        case 'ml':\n\t        case 'mr':\n\t          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\t        case 'mt':\n\t        case 'mb':\n\t          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\t        default:\n\t          return 'scale';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner, e),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        corner: corner,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        lastX: pointer.x,\n\t        lastY: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1,\n\t        shiftKey: e.shiftKey,\n\t        altKey: e[this.centeredKey]\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform();\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the translation occurred\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var transform = this._currentTransform,\n\t          target = transform.target,\n\t          newLeft = x - transform.offsetX,\n\t          newTop = y - transform.offsetY,\n\t          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n\t          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\t\n\t      moveX && target.set('left', newLeft);\n\t      moveY && target.set('top', newTop);\n\t      return moveX || moveY;\n\t    },\n\t\n\t    /**\n\t     * Check if we are increasing a positive skew or lower it,\n\t     * checking mouse direction and pressed corner.\n\t     * @private\n\t     */\n\t    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n\t      var property = 'originX', origins = { 0: 'center' },\n\t          skew = t.target.skewX, originA = 'left', originB = 'right',\n\t          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n\t          flipSign = 1;\n\t\n\t      mouseMove = mouseMove > 0 ? 1 : -1;\n\t      if (by === 'y') {\n\t        skew = t.target.skewY;\n\t        originA = 'top';\n\t        originB = 'bottom';\n\t        property = 'originY';\n\t      }\n\t      origins[-1] = originA;\n\t      origins[1] = originB;\n\t\n\t      t.target.flipX && (flipSign *= -1);\n\t      t.target.flipY && (flipSign *= -1);\n\t\n\t      if (skew === 0) {\n\t        t.skewSign = -corner * mouseMove * flipSign;\n\t        t[property] = origins[-mouseMove];\n\t      }\n\t      else {\n\t        skew = skew > 0 ? 1 : -1;\n\t        t.skewSign = skew;\n\t        t[property] = origins[skew * corner * flipSign];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Skew object by mouse events\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y'\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _skewObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target, skewed = false,\n\t          lockSkewingX = target.get('lockSkewingX'),\n\t          lockSkewingY = target.get('lockSkewingY');\n\t\n\t      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var center = target.getCenterPoint(),\n\t          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n\t          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n\t          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\t\n\t      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\t      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by],\n\t\n\t      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n\t      // Actually skew the object\n\t      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n\t      t.lastX = x;\n\t      t.lastY = y;\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Set object skew\n\t     * @private\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _setObjectSkew: function(localMouse, transform, by, _dim) {\n\t      var target = transform.target, newValue, skewed = false,\n\t          skewSign = transform.skewSign, newDim, dimNoSkew,\n\t          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\t\n\t      if (by === 'x') {\n\t        otherBy = 'y';\n\t        _otherBy = 'Y';\n\t        _by = 'X';\n\t        skewX = 0;\n\t        skewY = target.skewY;\n\t      }\n\t      else {\n\t        otherBy = 'x';\n\t        _otherBy = 'X';\n\t        _by = 'Y';\n\t        skewX = target.skewX;\n\t        skewY = 0;\n\t      }\n\t\n\t      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n\t      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\t      if (newDimMouse <= 2) {\n\t        newValue = 0;\n\t      }\n\t      else {\n\t        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n\t                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n\t        newValue = fabric.util.radiansToDegrees(newValue);\n\t      }\n\t      skewed = target['skew' + _by] !== newValue;\n\t      target.set('skew' + _by, newValue);\n\t      if (target['skew' + _otherBy] !== 0) {\n\t        newDim = target._getTransformedDimensions();\n\t        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n\t        target.set('scale' + _otherBy, newValue);\n\t      }\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n\t          dim = target._getTransformedDimensions(), scaled = false;\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n\t          changeX, changeY, scaleX, scaleY;\n\t\n\t      scaleX = localMouse.x * target.scaleX / _dim.x;\n\t      scaleY = localMouse.y * target.scaleY / _dim.y;\n\t      changeX = target.scaleX !== scaleX;\n\t      changeY = target.scaleY !== scaleY;\n\t\n\t      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      transform.newScaleX = scaleX;\n\t      transform.newScaleY = scaleY;\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n\t                     _dim.x * transform.original.scaleX / target.scaleX,\n\t          scaled;\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n\t      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n\t      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > target.padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += target.padding;\n\t        }\n\t        else {\n\t          localMouse.x -= target.padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > target.padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += target.padding;\n\t        }\n\t        else {\n\t          localMouse.y -= target.padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the rotation occurred\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return false;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta);\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t\n\t      t.target.angle = angle % 360;\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawSelection: function () {\n\t      var ctx = this.contextTop,\n\t          groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      ctx.fillRect(\n\t        groupSelector.ex - ((left > 0) ? 0 : -left),\n\t        groupSelector.ey - ((top > 0) ? 0 : -top),\n\t        aleft,\n\t        atop\n\t      );\n\t\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0: aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0: atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isLastRenderedObject: function(pointer, e) {\n\t      var lastRendered = this.lastRenderedWithControls;\n\t      return (\n\t        (this.preserveObjectStacking || e[this.lastRenderedKey]) &&\n\t        lastRendered &&\n\t        lastRendered.visible &&\n\t        (this.containsPoint(null, lastRendered, pointer) ||\n\t        lastRendered._findTargetCorner(pointer)));\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e, true),\n\t      activeGroup = this.getActiveGroup();\n\t\n\t      // first check current group (if one exists)\n\t      // active group does not check sub targets like normal groups.\n\t      // if active group just exits.\n\t      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n\t        return activeGroup;\n\t      }\n\t\n\t      var objects = this._objects;\n\t      this.targets = [ ];\n\t\n\t      if (this._isLastRenderedObject(pointer, e)) {\n\t        objects = [this.lastRenderedWithControls];\n\t      }\n\t\n\t      var target = this._searchPossibleTargets(objects, pointer);\n\t      this._fireOverOutEvents(target, e);\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      if (target) {\n\t        if (this._hoveredTarget !== target) {\n\t          if (this._hoveredTarget) {\n\t            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t            this._hoveredTarget.fire('mouseout');\n\t          }\n\t          this.fire('mouse:over', { target: target, e: e });\n\t          target.fire('mouseover');\n\t          this._hoveredTarget = target;\n\t        }\n\t      }\n\t      else if (this._hoveredTarget) {\n\t        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t        this._hoveredTarget.fire('mouseout');\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(pointer, obj) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(null, obj, pointer)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(objects, pointer) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target, i = objects.length, normalizedPointer, subTarget;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if (this._checkTarget(pointer, objects[i])) {\n\t          target = objects[i];\n\t          if (target.type === 'group' && target.subTargetCheck) {\n\t            normalizedPointer = this._normalizePointer(target, pointer);\n\t            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n\t            subTarget && this.targets.push(subTarget);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * @param {Event} e\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = fabric.util.transformPoint(\n\t          pointer,\n\t          fabric.util.invertTransform(this.viewportTransform)\n\t        );\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      this.upperCanvasEl = this._createCanvasElement();\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      this._setActiveObject(object);\n\t      this.renderAll();\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      this._discardActiveObject();\n\t      this.renderAll();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a specified one\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      this._discardActiveGroup();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length;\n\t      for ( ; i < len; i++) {\n\t        allObjects[i].set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t      if (activeObject) {\n\t        this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t      }\n\t      this.deactivateAll();\n\t      if (activeObject) {\n\t        this.fire('selection:cleared', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.callSuper('dispose');\n\t      var wrapper = this.wrapperEl;\n\t      this.removeListeners();\n\t      wrapper.removeChild(this.upperCanvasEl);\n\t      wrapper.removeChild(this.lowerCanvasEl);\n\t      delete this.upperCanvasEl;\n\t      if (wrapper.parentNode) {\n\t        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n\t      }\n\t      delete this.wrapperEl;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup) {\n\t        activeGroup._renderControls(ctx);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t        this.lastRenderedWithControls = this._objects[i];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      if (obj === this.lastRenderedWithControls) {\n\t        delete this.lastRenderedWithControls;\n\t      }\n\t      this.callSuper('_onObjectRemoved', obj);\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      delete this.lastRenderedWithControls;\n\t      return this.callSuper('clear');\n\t    }\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @ignore\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t    mt: 0, // n\n\t    tr: 1, // ne\n\t    mr: 2, // e\n\t    br: 3, // se\n\t    mb: 4, // s\n\t    bl: 5, // sw\n\t    ml: 6, // w\n\t    tl: 7 // nw\n\t  },\n\t  addListener = fabric.util.addListener,\n\t  removeListener = fabric.util.removeListener;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n\t      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t      this._onMouseOut = this._onMouseOut.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n\t      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js wheel event\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onMouseWheel: function(e, self) {\n\t      this.__onMouseWheel && this.__onMouseWheel(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseOut: function(e) {\n\t      var target = this._hoveredTarget;\n\t      this.fire('mouse:out', { target: target, e: e });\n\t      this._hoveredTarget = null;\n\t      target && target.fire('mouseout', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp);\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t      var target, searchTarget = true, transform = this._currentTransform,\n\t          groupSelector = this._groupSelector,\n\t          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      if (transform) {\n\t        this._finalizeCurrentTransform();\n\t        searchTarget = !transform.actionPerformed;\n\t      }\n\t\n\t      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      if (target || !isClick) {\n\t        this._maybeGroupObjects(e);\n\t      }\n\t      else {\n\t        // those are done by default on mouse up\n\t        // by _maybeGroupObjects, we are skipping it in case of no target find\n\t        this._groupSelector = null;\n\t        this._currentTransform = null;\n\t      }\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t\n\t      this._handleCursorAndEvent(e, target, 'up');\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * set cursor for mouse up and handle mouseUp event\n\t     * @param {Event} e event from mouse\n\t     * @param {fabric.Object} target receiving event\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     */\n\t    _handleCursorAndEvent: function(e, target, eventType) {\n\t      this._setCursorFromEvent(e, target);\n\t      this._handleEvent(e, eventType, target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Handle event firing for target and subtargets\n\t     * @param {Event} e event from mouse\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     * @param {fabric.Object} targetObj receiving event\n\t     */\n\t    _handleEvent: function(e, eventType, targetObj) {\n\t      var target = typeof targetObj === undefined ? this.findTarget(e) : targetObj,\n\t          targets = this.targets || [ ],\n\t          options = { e: e, target: target, subTargets: targets };\n\t\n\t      this.fire('mouse:' + eventType, options);\n\t      target && target.fire('mouse' + eventType, options);\n\t      for (var i = 0; i < targets.length; i++) {\n\t        targets[i].fire('mouse' + eventType, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _finalizeCurrentTransform: function() {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t      this._restoreOriginXY(target);\n\t\n\t      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n\t        this.fire('object:modified', { target: target });\n\t        target.fire('modified');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var ivt = fabric.util.invertTransform(this.viewportTransform),\n\t          pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this._handleEvent(e, 'down');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var ivt = fabric.util.invertTransform(this.viewportTransform),\n\t            pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this._handleEvent(e, 'move');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this._handleEvent(e, 'up');\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clic ked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      // accept only left clicks\n\t      var isLeftClick  = 'which' in e ? e.which === 1 : e.button === 0;\n\t      if (!isLeftClick && !fabric.isTouchSupported) {\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      var target = this.findTarget(e),\n\t          pointer = this.getPointer(e, true);\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this._clearSelection(e, target, pointer);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (target) {\n\t        if (target.selectable && (target.__corner || !shouldGroup)) {\n\t          this._beforeTransform(e, target);\n\t          this._setupCurrentTransform(e, target);\n\t        }\n\t\n\t        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n\t          this.deactivateAll();\n\t          target.selectable && this.setActiveObject(target, e);\n\t        }\n\t      }\n\t      this._handleEvent(e, 'down', target ? target : null);\n\t      // we must renderAll so that active image is placed on the top canvas\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearSelection: function(e, target, pointer) {\n\t      this.deactivateAllWithDispatch(e);\n\t\n\t      if (target && target.selectable) {\n\t        this.setActiveObject(target, e);\n\t      }\n\t      else if (this.selection) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t        target = this.findTarget(e);\n\t        this._setCursorFromEvent(e, target);\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t      this._handleEvent(e, 'move', target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false,\n\t      transform.target.isMoving = true;\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action,\n\t          actionPerformed = false;\n\t\n\t      if (action === 'rotate') {\n\t        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'skewX') {\n\t        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n\t      }\n\t      else if (action === 'skewY') {\n\t        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n\t      }\n\t      else {\n\t        actionPerformed = this._translateObject(x, y);\n\t        if (actionPerformed) {\n\t          this._fire('moving', target, e);\n\t          this.setCursor(target.moveCursor || this.moveCursor);\n\t        }\n\t      }\n\t      transform.actionPerformed = actionPerformed;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform();\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      // rotate object only if shift key is not pressed\n\t      // and if it is not a group we are transforming\n\t      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        return this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform();\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        return this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t\n\t      var hoverCursor = target.hoverCursor || this.hoverCursor;\n\t      if (!target.selectable) {\n\t        //let's skip _findTargetCorner if object is not selectable\n\t        this.setCursor(hoverCursor);\n\t      }\n\t      else {\n\t        var activeGroup = this.getActiveGroup(),\n\t            // only show proper corner when group selection is not active\n\t            corner = target._findTargetCorner\n\t                      && (!activeGroup || !activeGroup.contains(target))\n\t                      && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t        if (!corner) {\n\t          this.setCursor(hoverCursor);\n\t        }\n\t        else {\n\t          this._setCornerCursor(corner, target, e);\n\t        }\n\t      }\n\t      //actually unclear why it should return something\n\t      //is never evaluated\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target, e) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target, e) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n\t        //if we are holding shift and we are on a mx corner...\n\t        n += 2;\n\t      }\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e[this.selectionKey] && target && target.selectable &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (target === activeGroup) {\n\t        // if it's a group, find target again, using activeGroup objects\n\t        target = this.findTarget(e, true);\n\t        // if even object is not found, bail out\n\t        if (!target) {\n\t          return;\n\t        }\n\t      }\n\t      if (activeGroup) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0));\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [ this._activeObject, target ]\n\t            : [ target, this._activeObject ];\n\t      this._activeObject.isEditing && this._activeObject.exitEditing();\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [ ],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t   * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t   * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t   * var dataURL = canvas.toDataURL({\n\t   *   format: 'jpeg',\n\t   *   quality: 0.8\n\t   * });\n\t   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t   * var dataURL = canvas.toDataURL({\n\t   *   format: 'png',\n\t   *   left: 100,\n\t   *   top: 100,\n\t   *   width: 200,\n\t   *   height: 200\n\t   * });\n\t   * @example <caption>Generate double scaled png dataURL</caption>\n\t   * var dataURL = canvas.toDataURL({\n\t   *   format: 'png',\n\t   *   multiplier: 2\n\t   * });\n\t   */\n\t  toDataURL: function (options) {\n\t    options || (options = { });\n\t\n\t    var format = options.format || 'png',\n\t        quality = options.quality || 1,\n\t        multiplier = options.multiplier || 1,\n\t        cropping = {\n\t          left: options.left,\n\t          top: options.top,\n\t          width: options.width,\n\t          height: options.height\n\t        };\n\t\n\t    if (this._isRetinaScaling()) {\n\t      multiplier *= fabric.devicePixelRatio;\n\t    }\n\t\n\t    if (multiplier !== 1) {\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    }\n\t    else {\n\t      return this.__toDataURL(format, quality, cropping);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  __toDataURL: function(format, quality, cropping) {\n\t\n\t    this.renderAll();\n\t\n\t    var canvasEl = this.contextContainer.canvas,\n\t        croppedCanvasEl = this.__getCroppedCanvas(canvasEl, cropping);\n\t\n\t    // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t    if (format === 'jpg') {\n\t      format = 'jpeg';\n\t    }\n\t\n\t    var data = (fabric.StaticCanvas.supports('toDataURLWithQuality'))\n\t              ? (croppedCanvasEl || canvasEl).toDataURL('image/' + format, quality)\n\t              : (croppedCanvasEl || canvasEl).toDataURL('image/' + format);\n\t\n\t    if (croppedCanvasEl) {\n\t      croppedCanvasEl = null;\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  __getCroppedCanvas: function(canvasEl, cropping) {\n\t\n\t    var croppedCanvasEl,\n\t        croppedCtx,\n\t        shouldCrop = 'left' in cropping ||\n\t                     'top' in cropping ||\n\t                     'width' in cropping ||\n\t                     'height' in cropping;\n\t\n\t    if (shouldCrop) {\n\t\n\t      croppedCanvasEl = fabric.util.createCanvasElement();\n\t      croppedCtx = croppedCanvasEl.getContext('2d');\n\t\n\t      croppedCanvasEl.width = cropping.width || this.width;\n\t      croppedCanvasEl.height = cropping.height || this.height;\n\t\n\t      croppedCtx.drawImage(canvasEl, -cropping.left || 0, -cropping.top || 0);\n\t    }\n\t\n\t    return croppedCanvasEl;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t    var origWidth = this.getWidth(),\n\t        origHeight = this.getHeight(),\n\t        scaledWidth = origWidth * multiplier,\n\t        scaledHeight = origHeight * multiplier,\n\t        activeObject = this.getActiveObject(),\n\t        activeGroup = this.getActiveGroup(),\n\t        zoom = this.getZoom(),\n\t        newZoom = zoom * multiplier / fabric.devicePixelRatio;\n\t\n\t    if (multiplier > 1) {\n\t      this.setDimensions({ width: scaledWidth, height: scaledHeight });\n\t    }\n\t\n\t    this.setZoom(newZoom);\n\t\n\t    if (cropping.left) {\n\t      cropping.left *= multiplier;\n\t    }\n\t    if (cropping.top) {\n\t      cropping.top *= multiplier;\n\t    }\n\t    if (cropping.width) {\n\t      cropping.width *= multiplier;\n\t    }\n\t    else if (multiplier < 1) {\n\t      cropping.width = scaledWidth;\n\t    }\n\t    if (cropping.height) {\n\t      cropping.height *= multiplier;\n\t    }\n\t    else if (multiplier < 1) {\n\t      cropping.height = scaledHeight;\n\t    }\n\t\n\t    if (activeGroup) {\n\t      // not removing group due to complications with restoring it with correct state afterwords\n\t      this._tempRemoveBordersControlsFromGroup(activeGroup);\n\t    }\n\t    else if (activeObject && this.deactivateAll) {\n\t      this.deactivateAll();\n\t    }\n\t\n\t    var data = this.__toDataURL(format, quality, cropping);\n\t    if (activeGroup) {\n\t      this._restoreBordersControlsOnGroup(activeGroup);\n\t    }\n\t    else if (activeObject && this.setActiveObject) {\n\t      this.setActiveObject(activeObject);\n\t    }\n\t    this.setZoom(zoom);\n\t    //setDimensions with no option object is taking care of:\n\t    //this.width, this.height, this.renderAll()\n\t    this.setDimensions({ width: origWidth, height: origHeight });\n\t\n\t    return data;\n\t  },\n\t\n\t  /**\n\t   * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t   * @deprecated since 1.0.13\n\t   * @param {String} format (png|jpeg)\n\t   * @param {Number} multiplier\n\t   * @param {Number} quality (0..1)\n\t   * @return {String}\n\t   */\n\t  toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t    return this.toDataURL({\n\t      format: format,\n\t      multiplier: multiplier,\n\t      quality: quality\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _tempRemoveBordersControlsFromGroup: function(group) {\n\t    group.origHasControls = group.hasControls;\n\t    group.origBorderColor = group.borderColor;\n\t\n\t    group.hasControls = true;\n\t    group.borderColor = 'rgba(0,0,0,0)';\n\t\n\t    group.forEachObject(function(o) {\n\t      o.origBorderColor = o.borderColor;\n\t      o.borderColor = 'rgba(0,0,0,0)';\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _restoreBordersControlsOnGroup: function(group) {\n\t    group.hideControls = group.origHideControls;\n\t    group.borderColor = group.origBorderColor;\n\t\n\t    group.forEachObject(function(o) {\n\t      o.borderColor = o.origBorderColor;\n\t      delete o.origBorderColor;\n\t    });\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : fabric.util.object.clone(json);\n\t\n\t    this.clear();\n\t\n\t    var _this = this;\n\t    this._enlivenObjects(serialized.objects, function () {\n\t      _this._setBgOverlay(serialized, function () {\n\t        // remove parts i cannot set as options\n\t        delete serialized.objects;\n\t        delete serialized.backgroundImage;\n\t        delete serialized.overlayImage;\n\t        delete serialized.background;\n\t        delete serialized.overlay;\n\t        // this._initOptions does too many things to just\n\t        // call it. Normally loading an Object from JSON\n\t        // create the Object instance. Here the Canvas is\n\t        // already an instance and we are just loading things over it\n\t        for (var prop in serialized) {\n\t          _this[prop] = serialized[prop];\n\t        }\n\t        callback && callback();\n\t      });\n\t    }, reviver);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var _this = this,\n\t        loaded = {\n\t          backgroundColor: false,\n\t          overlayColor: false,\n\t          backgroundImage: false,\n\t          overlayImage: false\n\t        };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        _this.renderAll();\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t\n\t    cbIfLoaded();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.Image.fromObject(value, function(img) {\n\t        _this[property] = img;\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    var _this = this;\n\t\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      enlivenedObjects.forEach(function(obj, index) {\n\t        _this.insertAt(obj, index, true);\n\t      });\n\t\n\t      _this.renderOnAddRemove = renderOnAddRemove;\n\t      callback && callback();\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   * @fires skewing\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   * @fires mouseover\n\t   * @fires mouseout\n\t   */\n\t  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Angle of skew on x axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewX:                    0,\n\t\n\t    /**\n\t     * Angle of skew on y axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewY:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               13,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Default cursor value used when moving this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:               null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    borderDashArray:          null,\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active and transparentCorners false)\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerStrokeColor:        null,\n\t\n\t    /**\n\t     * Specify style of control, 'rect' or 'circle'\n\t     * @since 1.6.2\n\t     * @type String\n\t     */\n\t    cornerStyle:          'rect',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's control (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    cornerDashArray:          null,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object. Only works with text objects at the moment.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * Selection Background color of an object. colored layer behind the object when it is active.\n\t     * does not mix good with globalCompositeOperation methods.\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBackgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object horizontal skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingY:             false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t\n\t    lockScalingFlip:          false,\n\t\n\t    /**\n\t     * When `true`, object is not exported in SVG or OBJECT/JSON\n\t     * since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t\n\t    excludeFromExport:          false,\n\t\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:  (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'alignX alignY meetOrSlice skewX skewY'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initGradient: function(options) {\n\t      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n\t        this.set('fill', new fabric.Gradient(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n\t        this.set('stroke', new fabric.Gradient(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initPattern: function(options) {\n\t      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n\t        this.set('fill', new fabric.Pattern(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n\t        this.set('stroke', new fabric.Pattern(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initClipping: function(options) {\n\t      if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t        return;\n\t      }\n\t\n\t      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t      if (typeof functionBody !== 'undefined') {\n\t        this.clipTo = new Function('ctx', functionBody);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this.set(prop, options[prop]);\n\t      }\n\t      this._initGradient(options);\n\t      this._initPattern(options);\n\t      this._initClipping(options);\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && this.canvas.preserveObjectStacking && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n\t      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,\n\t            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n\t            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n\t          };\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Basic getter\n\t     * @param {String} property Property name\n\t     * @return {Any} value of a property\n\t     */\n\t    get: function(property) {\n\t      return this[property];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObject: function(obj) {\n\t      for (var prop in obj) {\n\t        this._set(prop, obj[prop]);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    set: function(key, value) {\n\t      if (typeof key === 'object') {\n\t        this._setObject(key);\n\t      }\n\t      else {\n\t        if (typeof value === 'function' && key !== 'clipTo') {\n\t          this._set(key, value(this.get(key)));\n\t        }\n\t        else {\n\t          this._set(key, value);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = Math.min(0.1, 1/Math.max(this.width, this.height));\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Toggles specified property from `true` to `false` or from `false` to `true`\n\t     * @param {String} property Property to toggle\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    toggle: function(property) {\n\t      var value = this.get(property);\n\t      if (typeof value === 'boolean') {\n\t        this.set(property, !value);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value // TODO\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if ((this.width === 0 && this.height === 0) || !this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._render(ctx, noTransform);\n\t      this.clipTo && ctx.restore();\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      if (this.group) {\n\t        this.group._setOpacity(ctx);\n\t      }\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Sets line dash\n\t     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n\t     * @param {Array} dashArray array representing dashes\n\t     * @param {Function} alternative function to call if browaser does not support lineDash\n\t     */\n\t    _setLineDash: function(ctx, dashArray, alternative) {\n\t      if (!dashArray) {\n\t        return;\n\t      }\n\t      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t      if (1 & dashArray.length) {\n\t        dashArray.push.apply(dashArray, dashArray);\n\t      }\n\t      if (supportsLineDash) {\n\t        ctx.setLineDash(dashArray);\n\t      }\n\t      else {\n\t        alternative && alternative(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      if (!this.active || noTransform\n\t          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n\t        return;\n\t      }\n\t\n\t      var vpt = this.getViewportTransform(),\n\t          matrix = this.calcTransformMatrix(),\n\t          options;\n\t      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n\t      options = fabric.util.qrDecompose(matrix);\n\t\n\t      ctx.save();\n\t      ctx.translate(options.translateX, options.translateY);\n\t      ctx.lineWidth = 1 / this.borderScaleFactor;\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t\n\t      if (this.group && this.group === this.canvas.getActiveGroup()) {\n\t        ctx.rotate(degreesToRadians(options.angle));\n\t        this.drawBordersInGroup(ctx, options);\n\t      }\n\t      else {\n\t        ctx.rotate(degreesToRadians(this.angle));\n\t        this.drawBorders(ctx);\n\t      }\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1;\n\t      if (this.canvas && this.canvas._isRetinaScaling()) {\n\t        multX *= fabric.devicePixelRatio;\n\t        multY *= fabric.devicePixelRatio;\n\t      }\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (this.scaleX + this.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * this.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * this.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.fill.gradientTransform) {\n\t        var g = this.fill.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.fill.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.fill.offsetX || 0,\n\t          -this.height / 2 + this.fill.offsetY || 0);\n\t      }\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\t      if (this.stroke.gradientTransform) {\n\t        var g = this.stroke.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.stroke.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.stroke.offsetX || 0,\n\t          -this.height / 2 + this.stroke.offsetY || 0);\n\t      }\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback) {\n\t      var dataUrl = this.toDataURL();\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el);\n\t\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      options.gradientTransform && (gradient.gradientTransform = options.gradientTransform);\n\t\n\t      for (var position in options.colorStops) {\n\t        var color = new fabric.Color(options.colorStops[position]);\n\t        gradient.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas && this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterH: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas && this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterV: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas && this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenter: function () {\n\t      this.canvas && this.canvas.viewportCenterObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      this.canvas && this.canvas.remove(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX = originXOffset[toOriginX] - originXOffset[fromOriginX],\n\t          offsetY = originYOffset[toOriginY] - originYOffset[fromOriginY],\n\t          dim;\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (originX && originY) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      this.left += xFull * (originXOffset[to] - originXOffset[this.originX]);\n\t      this.top += yFull * (originXOffset[to] - originXOffset[this.originX]);\n\t\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function getCoords(oCoords) {\n\t    return [\n\t      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n\t      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n\t      new fabric.Point(oCoords.br.x, oCoords.br.y),\n\t      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n\t    ];\n\t  }\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Object containing coordinates of object's controls\n\t     * @type Object\n\t     * @default\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR) {\n\t      var oCoords = getCoords(this.oCoords),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            oCoords,\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other) {\n\t      var intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            getCoords(this.oCoords),\n\t            getCoords(other.oCoords)\n\t          );\n\t\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other) {\n\t      var boundingRect = other.getBoundingRect(),\n\t          point1 = new fabric.Point(boundingRect.left, boundingRect.top),\n\t          point2 = new fabric.Point(boundingRect.left + boundingRect.width, boundingRect.top + boundingRect.height);\n\t\n\t      return this.isContainedWithinRect(point1, point2);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR) {\n\t      var boundingRect = this.getBoundingRect();\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point) {\n\t      if (!this.oCoords) {\n\t        this.setCoords();\n\t      }\n\t      var lines = this._getImageLines(this.oCoords),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} oCoords Coordinates of the object being evaluated\n\t     */\n\t    _findCrossPoints: function(point, oCoords) {\n\t      var b1, b2, a1, a2, xi, yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in oCoords) {\n\t        iLine = oCoords[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = - (a1 - a2) / (b1 - b2);\n\t          yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function() {\n\t      this.oCoords || this.setCoords();\n\t      return fabric.util.makeBoundingBoxFromPoints([\n\t        this.oCoords.tl,\n\t        this.oCoords.tr,\n\t        this.oCoords.br,\n\t        this.oCoords.bl\n\t      ]);\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object bounding box counting transformations\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this._getTransformedDimensions().x;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object bounding box counting transformations\n\t     * to be renamed in 2.0\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this._getTransformedDimensions().y;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      this.setCoords();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function() {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = this._calculateCurrentDimensions(),\n\t          currentWidth = dim.x, currentHeight = dim.y;\n\t\n\t      // If width is negative, make postive. Fixes path selection issue\n\t      if (currentWidth < 0) {\n\t        currentWidth = Math.abs(currentWidth);\n\t      }\n\t\n\t      var sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t\n\t          // offset added for rotate and scale actions\n\t          coords = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n\t          ml  = new fabric.Point((tl.x + bl.x)/2, (tl.y + bl.y)/2),\n\t          mt  = new fabric.Point((tr.x + tl.x)/2, (tr.y + tl.y)/2),\n\t          mr  = new fabric.Point((br.x + tr.x)/2, (br.y + tr.y)/2),\n\t          mb  = new fabric.Point((br.x + bl.x)/2, (br.y + bl.y)/2),\n\t          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      this.oCoords = {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t        // middle\n\t        ml: ml, mt: mt, mr: mr, mb: mb,\n\t        // rotating point\n\t        mtr: mtr\n\t      };\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      this._setCornerCoords && this._setCornerCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    _calcRotateMatrix: function() {\n\t      if (this.angle) {\n\t        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n\t        return [cos, sin, -sin, cos, 0, 0];\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /*\n\t     * calculate trasform Matrix that represent current transformation from\n\t     * object properties.\n\t     * @return {Array} matrix Transform Matrix for the object\n\t     */\n\t    calcTransformMatrix: function() {\n\t      var center = this.getCenterPoint(),\n\t          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n\t          rotateMatrix = this._calcRotateMatrix(),\n\t          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n\t          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n\t      matrix = multiplyMatrices(matrix, translateMatrix);\n\t      matrix = multiplyMatrices(matrix, rotateMatrix);\n\t      matrix = multiplyMatrices(matrix, dimensionMatrix);\n\t      return matrix;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n\t      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n\t          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n\t          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n\t          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n\t          scaleMatrix = [scaleX, 0, 0, scaleY],\n\t          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n\t      return multiplyMatrices(m, skewMatrixY, true);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t\n\t  function getSvgColorString(prop, value) {\n\t    if (!value) {\n\t      return prop + ': none; ';\n\t    }\n\t    else if (value.toLive) {\n\t      return prop + ': url(#SVGID_' + value.id + '); ';\n\t    }\n\t    else {\n\t      var color = new fabric.Color(value),\n\t          str = prop + ': ' + color.toRgb() + '; ',\n\t          opacity = color.getAlpha();\n\t      if (opacity !== 1) {\n\t        //change the color in rgb + opacity\n\t        str += prop + '-opacity: ' + opacity.toString() + '; ';\n\t      }\n\t      return str;\n\t    }\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t    /**\n\t     * Returns styles-string for svg-export\n\t     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n\t     * @return {String}\n\t     */\n\t    getSvgStyles: function(skipShadow) {\n\t\n\t      var fillRule = this.fillRule,\n\t          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t          visibility = this.visible ? '' : ' visibility: hidden;',\n\t          filter = skipShadow ? '' : this.getSvgFilter(),\n\t          fill = getSvgColorString('fill', this.fill),\n\t          stroke = getSvgColorString('stroke', this.stroke);\n\t\n\t      return [\n\t        stroke,\n\t        'stroke-width: ', strokeWidth, '; ',\n\t        'stroke-dasharray: ', strokeDashArray, '; ',\n\t        'stroke-linecap: ', strokeLineCap, '; ',\n\t        'stroke-linejoin: ', strokeLineJoin, '; ',\n\t        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t        fill,\n\t        'fill-rule: ', fillRule, '; ',\n\t        'opacity: ', opacity, ';',\n\t        filter,\n\t        visibility\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns filter for svg shadow\n\t     * @return {String}\n\t     */\n\t    getSvgFilter: function() {\n\t      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns id attribute for svg output\n\t     * @return {String}\n\t     */\n\t    getSvgId: function() {\n\t      return this.id ? 'id=\"' + this.id + '\" ' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export\n\t     * @return {String}\n\t     */\n\t    getSvgTransform: function() {\n\t      if (this.group && this.group.type === 'path-group') {\n\t        return '';\n\t      }\n\t      var toFixed = fabric.util.toFixed,\n\t          angle = this.getAngle(),\n\t          skewX = (this.getSkewX() % 360),\n\t          skewY = (this.getSkewY() % 360),\n\t          center = this.getCenterPoint(),\n\t\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                            ' ' +\n\t                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                          ')',\n\t\n\t          anglePart = angle !== 0\n\t            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t            : '',\n\t\n\t          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n\t            ? '' :\n\t            (' scale(' +\n\t              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n\t              ' ' +\n\t              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n\t            ')'),\n\t\n\t          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\t\n\t          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\t\n\t          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t      return [\n\t        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export from the transform matrix of single elements\n\t     * @return {String}\n\t     */\n\t    getSvgTransformMatrix: function() {\n\t      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createBaseSVGMarkup: function() {\n\t      var markup = [ ];\n\t\n\t      if (this.fill && this.fill.toLive) {\n\t        markup.push(this.fill.toSVG(this, false));\n\t      }\n\t      if (this.stroke && this.stroke.toLive) {\n\t        markup.push(this.stroke.toSVG(this, false));\n\t      }\n\t      if (this.shadow) {\n\t        markup.push(this.shadow.toSVG(this));\n\t      }\n\t      return markup;\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t/*\n\t  Depends on `stateProperties`\n\t*/\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Returns true if object state (one of its state properties) was changed\n\t   * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t   */\n\t  hasStateChanged: function() {\n\t    return this.stateProperties.some(function(prop) {\n\t      return this.get(prop) !== this.originalState[prop];\n\t    }, this);\n\t  },\n\t\n\t  /**\n\t   * Saves state of an object\n\t   * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t   * @return {fabric.Object} thisArg\n\t   */\n\t  saveState: function(options) {\n\t    this.stateProperties.forEach(function(prop) {\n\t      this.originalState[prop] = this.get(prop);\n\t    }, this);\n\t\n\t    if (options && options.stateProperties) {\n\t      options.stateProperties.forEach(function(prop) {\n\t        this.originalState[prop] = this.get(prop);\n\t      }, this);\n\t    }\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Setups state of an object\n\t   * @return {fabric.Object} thisArg\n\t   */\n\t  setupState: function() {\n\t    this.originalState = { };\n\t    this.saveState();\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t  //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t      this.__corner = 0;\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width,\n\t          h = this.height,\n\t          addStrokeToW = true,\n\t          addStrokeToH = true;\n\t\n\t      if (this.type === 'line' && this.strokeLineCap === 'butt') {\n\t        addStrokeToH = w;\n\t        addStrokeToW = h;\n\t      }\n\t\n\t      if (addStrokeToH) {\n\t        h += h < 0 ? -strokeWidth : strokeWidth;\n\t      }\n\t\n\t      if (addStrokeToW) {\n\t        w += w < 0 ? -strokeWidth : strokeWidth;\n\t      }\n\t\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     */\n\t    _getTransformedDimensions: function(skewX, skewY) {\n\t      if (typeof skewX === 'undefined') {\n\t        skewX = this.skewX;\n\t      }\n\t      if (typeof skewY === 'undefined') {\n\t        skewY = this.skewY;\n\t      }\n\t      var dimensions = this._getNonTransformedDimensions(),\n\t          dimX = dimensions.x /2, dimY = dimensions.y / 2,\n\t          points = [\n\t          {\n\t            x: -dimX,\n\t            y: -dimY\n\t          },\n\t          {\n\t            x: dimX,\n\t            y: -dimY\n\t          },\n\t          {\n\t            x: -dimX,\n\t            y: dimY\n\t          },\n\t          {\n\t            x: dimX,\n\t            y: dimY\n\t          }],\n\t          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n\t          bbox;\n\t      for (i = 0; i < points.length; i++) {\n\t        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n\t      }\n\t      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n\t      return { x: bbox.width, y: bbox.height };\n\t    },\n\t\n\t    /*\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function()  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          w = dim.x, h = dim.y,\n\t          p = fabric.util.transformPoint(new fabric.Point(w, h), vpt, true);\n\t\n\t      return p.scalarAdd(2 * this.padding);\n\t    },\n\t\n\t    /**\n\t     * Draws a colored layer behind the object, inside its selection borders.\n\t     * Requires public options: padding, selectionBackgroundColor\n\t     * this function is called when the context is transformed\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawSelectionBackground: function(ctx) {\n\t      if (!this.selectionBackgroundColor || this.group\n\t        || this !== this.canvas.getActiveObject()) {\n\t        return this;\n\t      }\n\t      ctx.save();\n\t      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n\t          vpt = this.canvas.viewportTransform;\n\t      ctx.translate(center.x, center.y);\n\t      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.fillStyle = this.selectionBackgroundColor;\n\t      ctx.fillRect(-wh.x/2, -wh.y/2, wh.x, wh.y);\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = this.borderColor;\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box when it is inside a group.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @param {object} options object representing current object parameters\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBordersInGroup: function(ctx, options) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var p = this._getNonTransformedDimensions(),\n\t          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n\t          wh = fabric.util.transformPoint(p, matrix),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth + 2 * this.padding,\n\t          height = wh.y + strokeWidth + 2 * this.padding;\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t      ctx.strokeStyle = this.borderColor;\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          scaleOffset = this.cornerSize,\n\t          left = -(width + scaleOffset) / 2,\n\t          top = -(height + scaleOffset) / 2,\n\t          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t      if (!this.transparentCorners) {\n\t        ctx.strokeStyle = this.cornerStrokeColor;\n\t      }\n\t      this._setLineDash(ctx, this.cornerDashArray, null);\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left,\n\t        top);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width,\n\t        top);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left,\n\t        top + height);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width,\n\t        top + height);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width/2,\n\t          top);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width/2,\n\t          top + height);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width,\n\t          top + height/2);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left,\n\t          top + height/2);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width / 2,\n\t          top - this.rotatingPointOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n\t      switch (this.cornerStyle) {\n\t        case 'circle':\n\t          ctx.beginPath();\n\t          ctx.arc(left + size/2, top + size/2, size/2, 0, 2 * Math.PI, false);\n\t          ctx[methodName]();\n\t          if (stroke) {\n\t            ctx.stroke();\n\t          }\n\t          break;\n\t        default:\n\t          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t          ctx[methodName + 'Rect'](left, top, size, size);\n\t          if (stroke) {\n\t            ctx.strokeRect(left, top, size, size);\n\t          }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [ ], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange();\n\t      },\n\t      onComplete: function() {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete();\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || { };\n\t\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint();\n\t        ctx.translate(\n\t          cp.x - this.strokeWidth / 2,\n\t          cp.y - this.strokeWidth / 2\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ', this.getSvgId(),\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object) {\n\t    var points = [object.x1, object.y1, object.x2, object.y2];\n\t    return new fabric.Line(points, object);\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t      case nearest:\n\t        return Math.min(this.get(axis1), this.get(axis2));\n\t      case center:\n\t        return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t      case farthest:\n\t        return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options.radius || 0);\n\t\n\t      this.startAngle = options.startAngle || this.startAngle;\n\t      this.endAngle = options.endAngle || this.endAngle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        radius: this.get('radius'),\n\t        startAngle: this.startAngle,\n\t        endAngle: this.endAngle\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t      angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ', this.getSvgId(),\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', + largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object) {\n\t    return new fabric.Circle(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('width', options.width || 100)\n\t          .set('height', options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ', this.getSvgId(),\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Triangle instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {Object} instance of Canvas.Triangle\n\t   */\n\t  fabric.Triangle.fromObject = function(object) {\n\t    return new fabric.Triangle(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('rx', options.rx || 0);\n\t      this.set('ry', options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        rx: this.get('rx'),\n\t        ry: this.get('ry')\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ', this.getSvgId(),\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry/this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx/this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object) {\n\t    return new fabric.Ellipse(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('rx', 'ry', 'x', 'y');\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Used to specify dash pattern for stroke on this object\n\t     * @type Array\n\t     */\n\t    strokeDashArray: null,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(-0.5, -0.5, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          k = 1 - 0.5522847498 /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */;\n\t\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        rx: this.get('rx') || 0,\n\t        ry: this.get('ry') || 0\n\t      });\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ', this.getSvgId(),\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object) {\n\t    return new fabric.Rect(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [skipOffset] Whether points offsetting should be skipped\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      return fabric.Polygon.prototype.initialize.call(this, points, options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t      return fabric.Polygon.prototype._calcDimensions.call(this);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object) {\n\t    var points = object.points;\n\t    return new fabric.Polyline(points, object, true);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polygon} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || { };\n\t      this.points = points || [ ];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t      this.pathOffset = {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t\n\t      this.minX = minX || 0,\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [], addTransform,\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n\t      }\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<', this.type, ' ', this.getSvgId(),\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      if (this.stroke || this.strokeDashArray) {\n\t        ctx.closePath();\n\t        this._renderStroke(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    commonRender: function(ctx, noTransform) {\n\t      var point, len = this.points.length;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t\n\t      noTransform || ctx.translate(-this.pathOffset.x, -this.pathOffset.y);\n\t      ctx.beginPath();\n\t      ctx.moveTo(this.points[0].x, this.points[0].y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x, point.y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.points.length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object) {\n\t    return new fabric.Polygon(object.points, object, true);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t\n\t      this.setOptions(options);\n\t\n\t      if (!path) {\n\t        path = [ ];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        path: this.path.map(function(item) { return item.slice() }),\n\t        pathOffset: this.pathOffset\n\t      });\n\t      if (this.sourcePath) {\n\t        o.sourcePath = this.sourcePath;\n\t      }\n\t      if (this.transformMatrix) {\n\t        o.transformMatrix = this.transformMatrix;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        //jscs:disable validateIndentation\n\t        '<path ', this.getSvgId(),\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t        //jscs:enable validateIndentation\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [ ],\n\t          coords = [ ],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [ currentPath.charAt(0) ];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([ command ].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [ ];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              x,\n\t              y\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   */\n\t  fabric.Path.fromObject = function(object, callback) {\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var path = elements[0],\n\t            pathUrl = object.path;\n\t\n\t        delete object.path;\n\t\n\t        fabric.util.object.extend(path, object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback(path);\n\t      });\n\t    }\n\t    else {\n\t      callback(new fabric.Path(object.path, object));\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      invoke = fabric.util.array.invoke,\n\t      parentToObject = fabric.Object.prototype.toObject;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [ ];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [ ], yC = [ ], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Renders this group on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render this instance on\n\t     */\n\t    render: function(ctx) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.transform(ctx);\n\t\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      ctx.translate(-this.width/2, -this.height/2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {Any} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(parentToObject.call(this, propertiesToInclude), {\n\t        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n\t      });\n\t      if (this.sourcePath) {\n\t        o.sourcePath = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(),\n\t        'style=\"', this.getSvgStyles(), '\" ',\n\t        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t        '>\\n'\n\t      );\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push('\\t', objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = this.getObjects()[0].get('fill') || '';\n\t      if (typeof firstPathFill !== 'string') {\n\t        return false;\n\t      }\n\t      firstPathFill = firstPathFill.toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        var pathFill = path.get('fill') || '';\n\t        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    if (typeof object.paths === 'string') {\n\t      fabric.loadSVGFromURL(object.paths, function (elements) {\n\t\n\t        var pathUrl = object.paths;\n\t        delete object.paths;\n\t\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n\t        delete object.paths;\n\t        callback(new fabric.PathGroup(enlivenedObjects, object));\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      invoke = fabric.util.array.invoke;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Indicates if click events should also check for subtargets\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    subTargetCheck: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      this.originalState = { };\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          center = this.getCenterPoint();\n\t\n\t      object.set({\n\t        originalLeft: objectLeft,\n\t        originalTop: objectTop,\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      stroke:           true,\n\t      strokeWidth:      true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.transform(ctx);\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      // the array is now sorted in order of highest first, so start from end\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t\n\t      this.clipTo && ctx.restore();\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      var matrix = object.calcTransformMatrix(),\n\t          options = fabric.util.qrDecompose(matrix),\n\t          center = new fabric.Point(options.translateX, options.translateY);\n\t      object.scaleX = options.scaleX;\n\t      object.scaleY = options.scaleY;\n\t      object.skewX = options.skewX;\n\t      object.skewY = options.skewY;\n\t      object.angle = options.angle;\n\t      object.flipX = false;\n\t      object.flipY = false;\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this.realizeTransform(object);\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all group objects\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      this.forEachObject(function(object) {\n\t        object.setCoords();\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords();\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var ivt = fabric.util.invertTransform(this.getViewportTransform()),\n\t          minXY = fabric.util.transformPoint(new fabric.Point(min(aX), min(aY)), ivt),\n\t          maxXY = fabric.util.transformPoint(new fabric.Point(max(aX), max(aY)), ivt),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(), 'transform=\"',\n\t        /* avoiding styles intentionally */\n\t        this.getSvgTransform(),\n\t        this.getSvgTransformMatrix(),\n\t        '\" style=\"',\n\t        this.getSvgFilter(),\n\t        '\">\\n'\n\t      );\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push('\\t', this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {Any}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   * @return {fabric.Group} An instance of fabric.Group\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      delete object.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * Width of a stroke.\n\t     * For image quality a stroke multiple of 2 gives better results.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options) {\n\t      options || (options = { });\n\t      this.filters = [ ];\n\t      this.resizeFilters = [ ];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(callback);\n\t      }\n\t      else if (callback) {\n\t        callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t      var w = this.width / 2, h = this.height / 2;\n\t      ctx.beginPath();\n\t      ctx.moveTo(-w, -h);\n\t      ctx.lineTo(w, -h);\n\t      ctx.lineTo(w, h);\n\t      ctx.lineTo(-w, h);\n\t      ctx.lineTo(-w, -h);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [ ], resizeFilters = [ ],\n\t          element = this._originalElement,\n\t          scaleX = 1, scaleY = 1;\n\t\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          if (filterObj.type === 'Resize') {\n\t            scaleX *= filterObj.scaleX;\n\t            scaleY *= filterObj.scaleY;\n\t          }\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t\n\t      this.resizeFilters.forEach(function(filterObj) {\n\t        filterObj && resizeFilters.push(filterObj.toObject());\n\t      });\n\t\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        src: element ? element.src || element._src : '',\n\t        filters: filters,\n\t        resizeFilters: resizeFilters,\n\t        crossOrigin: this.crossOrigin,\n\t        alignX: this.alignX,\n\t        alignY: this.alignY,\n\t        meetOrSlice: this.meetOrSlice\n\t      });\n\t\n\t      object.width /= scaleX;\n\t      object.height /= scaleY;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none';\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function() {\n\t      if (this.getElement()) {\n\t        return this.getElement().src || this.getElement()._src;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Returns a clone of an instance\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var imgEl = imgElement,\n\t          canvasEl = fabric.util.createCanvasElement(),\n\t          replacement = fabric.util.createImage(),\n\t          _this = this;\n\t\n\t      canvasEl.width = imgEl.width;\n\t      canvasEl.height = imgEl.height;\n\t      canvasEl.getContext('2d').drawImage(imgEl, 0, 0, imgEl.width, imgEl.height);\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback();\n\t        return canvasEl;\n\t      }\n\t      filters.forEach(function(filter) {\n\t        filter && filter.applyTo(canvasEl, filter.scaleX || _this.scaleX, filter.scaleY || _this.scaleY);\n\t        if (!forResizing && filter && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback();\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback();\n\t          replacement.onload = canvasEl = imgEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._stroke(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options) {\n\t      this.setElement(fabric.util.getById(element), null, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img) {\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [ ];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [ ];\n\t          var instance = new fabric.Image(img, object);\n\t          callback && callback(instance);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        preserveAR;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n\t      extend(parsedAttributes, preserveAR);\n\t    }\n\t\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Brightness = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = function(object) {\n\t    return new fabric.Image.filters.Brightness(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Convolute = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side/2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t          output = context.createImageData(sw, sh),\n\t          dst = output.data,\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0,\n\t          r, g, b, a, dstOff,\n\t          scx, scy, srcOff, wt;\n\t\n\t      for (var y = 0; y < sh; y++) {\n\t        for (var x = 0; x < sw; x++) {\n\t          dstOff = (y * sw + x) * 4;\n\t          // calculate the weighed sum of the source image pixels that\n\t          // fall under the convolution matrix\n\t          r = 0; g = 0; b = 0; a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t              scy = y + cy - halfSide;\n\t              scx = x + cx - halfSide;\n\t\n\t              /* jshint maxdepth:5 */\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              srcOff = (scy * sw + scx) * 4;\n\t              wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = function(object) {\n\t    return new fabric.Image.filters.Convolute(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.GradientTransparency = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n\t    return new fabric.Image.filters.GradientTransparency(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Grayscale = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function() {\n\t    return new fabric.Image.filters.Grayscale();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Invert = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function() {\n\t    return new fabric.Image.filters.Invert();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  fabric.Image.filters.Mask = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [ 0, 1, 2, 3 ].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = canvasEl.width;\n\t      maskCanvasEl.height = canvasEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      callback && callback(new fabric.Image.filters.Mask(object));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Noise = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = function(object) {\n\t    return new fabric.Image.filters.Noise(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Pixelate = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = function(object) {\n\t    return new fabric.Image.filters.Pixelate(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.RemoveWhite = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 0;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n\t    return new fabric.Image.filters.RemoveWhite(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Sepia = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { });\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Sepia2 = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia2();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Tint = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = function(object) {\n\t    return new fabric.Image.filters.Tint(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Multiply = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i+=4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = function(object) {\n\t    return new fabric.Image.filters.Multiply(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Blend = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */{\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  fabric.Image.filters.Blend.fromObject = function(object) {\n\t    return new fabric.Image.filters.Blend(object);\n\t  };\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  fabric.Image.filters.Resize = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    sliceByTwo: function(canvasEl, width, height, newWidth, newHeight) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = width, stepH = height,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      newWidth = floor(newWidth);\n\t      newHeight = floor(newHeight);\n\t      tmpCanvas.width = max(newWidth, width);\n\t      tmpCanvas.height = max(newHeight, height);\n\t\n\t      if (newWidth > width) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (newHeight > height) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, width, height);\n\t      canvasEl.width = max(newWidth, width);\n\t      canvasEl.height = max(newHeight, height);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        width = stepW;\n\t        height = stepH;\n\t        if (newWidth * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = newWidth;\n\t          doneW = true;\n\t        }\n\t        if (newHeight * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = newHeight;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, width, height);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, width, height, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, newWidth, newHeight);\n\t    },\n\t\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0, red = 0, green = 0, blue = 0, alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    bilinearFiltering: function(canvasEl, w, h, w2, h2) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (w - 1), img = context.getImageData(0, 0, w, h),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, w2, h2),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < h2; i++) {\n\t        for (j = 0; j < w2; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * w + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /*jshint maxdepth:5 */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                /*jshint maxdepth:6 */\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                /*jshint maxdepth:5 */\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /*jshint maxdepth:4 */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = function(object) {\n\t    return new fabric.Image.filters.Resize(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor'\n\t  );\n\t\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: {\n\t      fontSize: true,\n\t      fontWeight: true,\n\t      fontFamily: true,\n\t      fontStyle: true,\n\t      lineHeight: true,\n\t      stroke: true,\n\t      strokeWidth: true,\n\t      text: true,\n\t      textAlign: true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:      stateProperties,\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.setOptions(options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      this.width = this._getTextWidth(ctx);\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      this._setupCompositeOperation(ctx);\n\t      this._renderTextBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t      this.clipTo && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t\n\t      this._translateForTextAlign(ctx);\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t      this._translateForTextAlign(ctx, true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} back Indicates if translate back or forward\n\t     */\n\t    _translateForTextAlign: function(ctx, back) {\n\t      if (this.textAlign !== 'left' && this.textAlign !== 'justify') {\n\t        var sign = back ? -1 : 1;\n\t        ctx.translate(this.textAlign === 'center' ? (sign * this.width / 2) : sign * this.width, 0);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      if (!this.skipTextAlign) {\n\t        ctx.textAlign = this.textAlign;\n\t      }\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @override\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      return { x: this.width, y: this.height };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4);\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      ctx[method](chars, left, top);\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex);\n\t      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      // stretch the line\n\t      var words = line.split(/\\s+/),\n\t          charOffset = 0,\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          leftOffset = 0, word;\n\t\n\t      for (var i = 0, len = words.length; i < len; i++) {\n\t        while (line[charOffset] === ' ' && charOffset < line.length) {\n\t          charOffset++;\n\t        }\n\t        word = words[i];\n\t        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n\t        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n\t        charOffset += word.length;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} line\n\t     */\n\t    _getWidthOfWords: function (ctx, line) {\n\t      return ctx.measureText(line.replace(/\\s+/g, '')).width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * Returns true because text has no style\n\t     */\n\t    isEmptyStyles: function() {\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      var lineHeights = 0;\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight;\n\t\n\t        this._renderTextLine(\n\t          'fillText',\n\t          ctx,\n\t          this._textLines[i],\n\t          this._getLeftOffset(),\n\t          this._getTopOffset() + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      var lineHeights = 0;\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.strokeDashArray) {\n\t        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t        if (1 & this.strokeDashArray.length) {\n\t          this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray);\n\t        }\n\t        supportsLineDash && ctx.setLineDash(this.strokeDashArray);\n\t      }\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight;\n\t\n\t        this._renderTextLine(\n\t          'strokeText',\n\t          ctx,\n\t          this._textLines[i],\n\t          this._getLeftOffset(),\n\t          this._getTopOffset() + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line\n\t     */\n\t    _getHeightOfLine: function() {\n\t      return this._getHeightOfSingleLine() * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line without lineHeight\n\t     */\n\t    _getHeightOfSingleLine: function() {\n\t      return this.fontSize * this._fontSizeMult;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} textLines Array of all text lines\n\t     */\n\t    _renderTextBackground: function(ctx) {\n\t      this._renderTextBoxBackground(ctx);\n\t      this._renderTextLinesBackground(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextBoxBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        this._getLeftOffset(),\n\t        this._getTopOffset(),\n\t        this.width,\n\t        this.height\n\t      );\n\t      // if there is background color no other shadows\n\t      // should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        if (lineWidth > 0) {\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      // if there is text background color no\n\t      // other shadows should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [ ];\n\t      this.__lineHeights = [ ];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearCache: function() {\n\t      var shouldClear = false;\n\t      if (this._forceClearCache) {\n\t        this._forceClearCache = false;\n\t        return true;\n\t      }\n\t      for (var prop in this._dimensionAffectingProps) {\n\t        if (this['__' + prop] !== this[prop]) {\n\t          this['__' + prop] = this[prop];\n\t          shouldClear = true;\n\t        }\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n\t      }\n\t\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else {\n\t        width = this._measureLine(ctx, lineIndex);\n\t      }\n\t      this.__lineWidths[lineIndex] = width;\n\t\n\t      if (width && this.textAlign === 'justify') {\n\t        wordCount = line.split(/\\s+/);\n\t        if (wordCount.length > 1) {\n\t          this.__lineWidths[lineIndex] = -1;\n\t        }\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      return ctx.measureText(this._textLines[lineIndex]).width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i),\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth),\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      this._setTextStyles(ctx);\n\t\n\t      if (this._shouldClearCache()) {\n\t        this._initDimensions(ctx);\n\t      }\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._render(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        text:                 this.text,\n\t        fontSize:             this.fontSize,\n\t        fontWeight:           this.fontWeight,\n\t        fontFamily:           this.fontFamily,\n\t        fontStyle:            this.fontStyle,\n\t        lineHeight:           this.lineHeight,\n\t        textDecoration:       this.textDecoration,\n\t        textAlign:            this.textAlign,\n\t        textBackgroundColor:  this.textBackgroundColor\n\t      });\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      var noShadow = true, filter = this.getSvgFilter(),\n\t          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\t\n\t      markup.push(\n\t        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n\t          style, '>\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ': ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ': ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ': ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ': ''),\n\t            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n\t            textAndBg.textSpans.join(''),\n\t          '\\t\\t</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [ ],\n\t          textBgRects = [ ],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      if (this.textAlign === 'justify') {\n\t        // i call from here to do not intefere with IText\n\t        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n\t        return;\n\t      }\n\t      textSpans.push(\n\t        '\\t\\t\\t<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>\\n'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n\t      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this._setTextStyles(ctx);\n\t\n\t      var line = this._textLines[i],\n\t          words = line.split(/\\s+/),\n\t          wordsWidth = this._getWidthOfWords(ctx, line),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          word, attributes = this._getFillAttributes(this.fill),\n\t          len;\n\t\n\t      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\t\n\t      for (i = 0, len = words.length; i < len; i++) {\n\t        word = words[i];\n\t        textSpans.push(\n\t          '\\t\\t\\t<tspan x=\"',\n\t            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n\t            'y=\"',\n\t            toFixed(yPos, NUM_FRACTION_DIGITS),\n\t            '\" ',\n\t            // doing this on <tspan> elements since setting opacity\n\t            // on containing <text> one doesn't work in Illustrator\n\t            attributes, '>',\n\t            fabric.util.string.escapeXml(word),\n\t          '</tspan>\\n'\n\t        );\n\t        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n\t      }\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {Any} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key in this._dimensionAffectingProps) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t\n\t    var textContent = '';\n\t\n\t    // The XML is not properly parsed in IE9 so a workaround to get\n\t    // textContent is through firstChild.data. Another workaround would be\n\t    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\t    if (!('textContent' in element)) {\n\t      if ('firstChild' in element && element.firstChild !== null) {\n\t        if ('data' in element.firstChild && element.firstChild.data !== null) {\n\t          textContent = element.firstChild.data;\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      textContent = element.textContent;\n\t    }\n\t\n\t    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\t\n\t    var text = new fabric.Text(textContent, options),\n\t        textHeightScaleFactor = text.getHeight() / text.height,\n\t        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n\t        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n\t        textHeight = text.getHeight() + scaledDiff,\n\t        offX = 0;\n\t    /*\n\t      Adjust positioning:\n\t        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t        top/left properties in Fabric correspond to center point of text bounding box\n\t    */\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object) {\n\t    return new fabric.Text(object.text, clone(object));\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __widthOfSpace: [ ],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__widthOfSpace = [ ];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          /*jshint unused:false */\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      if (this.selectionStart !== index) {\n\t        this.fire('selection:changed');\n\t        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t        this.selectionStart = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      if (this.selectionEnd !== index) {\n\t        this.fire('selection:changed');\n\t        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t        this.selectionEnd = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [ ];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.oldWidth = this.width;\n\t      this.oldHeight = this.height;\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t      this.isEditing && this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t\n\t      if (this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    _clearTextArea: function(ctx) {\n\t      // we add 4 pixel, to be sure to do not leave any pixel out\n\t      var width = this.oldWidth + 4, height = this.oldHeight + 4;\n\t      ctx.clearRect(-width / 2, -height / 2, width, height);\n\t    },\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t\n\t      var lineLeftOffset = 0,\n\t\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          multiplier = this.scaleX * this.canvas.getZoom(),\n\t          cursorWidth = this.cursorWidth / multiplier;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset - cursorWidth/2,\n\t        boundaries.top + boundaries.topOffset,\n\t        cursorWidth,\n\t        charHeight);\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t        }\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      charOffset = charOffset || 0;\n\t      this.skipTextAlign = true;\n\t\n\t      // set proper box offset\n\t      left -= this.textAlign === 'center'\n\t        ? (this.width / 2)\n\t        : (this.textAlign === 'right')\n\t          ? this.width\n\t          : 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex)),\n\t          prevStyle,\n\t          thisStyle,\n\t          charsToRender = '';\n\t\n\t      left += lineLeftOffset || 0;\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i - charOffset];\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t      this.skipTextAlign = false;\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight, shouldFill, shouldStroke,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset, textDecoration;\n\t\n\t      if (decl) {\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t        shouldStroke = decl.stroke;\n\t        shouldFill = decl.fill;\n\t        textDecoration = decl.textDecoration;\n\t      }\n\t      else {\n\t        charHeight = this.fontSize;\n\t      }\n\t\n\t      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n\t      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\t\n\t      decl && ctx.save();\n\t\n\t      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || {});\n\t      textDecoration = textDecoration || this.textDecoration;\n\t\n\t      if (decl && decl.textBackgroundColor) {\n\t        this._removeShadow(ctx);\n\t      }\n\t      shouldFill && ctx.fillText(_char, left, top);\n\t      shouldStroke && ctx.strokeText(_char, left, top);\n\t\n\t      if (textDecoration || textDecoration !== '') {\n\t        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n\t      }\n\t\n\t      decl && ctx.restore();\n\t      ctx.translate(charWidth, 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var decorationWeight = charHeight / 15,\n\t          positions = {\n\t            underline: top + charHeight / 10,\n\t            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n\t            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n\t          },\n\t          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\t\n\t      for (i = 0; i < decorations.length; i++) {\n\t        decoration = decorations[i];\n\t        if (textDecoration.indexOf(decoration) > -1) {\n\t          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      this.callSuper('_renderTextLinesBackground', ctx);\n\t\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset,\n\t          leftOffset = this._getLeftOffset(),\n\t          topOffset = this._getTopOffset(),\n\t          line, _char, style;\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        line = this._textLines[i];\n\t\n\t        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n\t          lineTopOffset += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t\n\t        for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t          style = this._getStyleDeclaration(i, j);\n\t          if (!style || !style.textBackgroundColor) {\n\t            continue;\n\t          }\n\t          _char = line[j];\n\t\n\t          ctx.fillStyle = style.textBackgroundColor;\n\t\n\t          ctx.fillRect(\n\t            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n\t            topOffset + lineTopOffset,\n\t            this._getWidthOfChar(ctx, _char, i, j) + 1,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} fontFamily name\n\t     * @return {Object} reference to cache\n\t     */\n\t    _getFontCache: function(fontFamily) {\n\t      if (!fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t      return fabric.charWidthsCache[fontFamily];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var charDecl = this._getStyleDeclaration(lineIndex, charIndex),\n\t          styleDeclaration = (decl && clone(decl)) || clone(charDecl),\n\t          width, cacheProp, charWidthsCache;\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles for this char\n\t      // global style from object is always applyed and handled by save and restore\n\t      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t\n\t      //if we want this._setShadow.call to work with styleDeclarion\n\t      //we have to add those references\n\t      if (styleDeclaration.shadow) {\n\t        styleDeclaration.scaleX = this.scaleX;\n\t        styleDeclaration.scaleY = this.scaleY;\n\t        styleDeclaration.canvas = this.canvas;\n\t        this._setShadow.call(styleDeclaration, ctx);\n\t      }\n\t\n\t      if (!this.caching || !charWidthsCache[cacheProp]) {\n\t        width = ctx.measureText(_char).width;\n\t        this.caching && (charWidthsCache[cacheProp] = width);\n\t        return width;\n\t      }\n\t\n\t      return charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t      var charWidthsCache, cacheProp,\n\t          styleDeclaration = this._getStyleDeclaration(lineIndex, charIndex, true);\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      if (charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t      else if (ctx) {\n\t        ctx.save();\n\t        var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t        ctx.restore();\n\t        return width;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      this._isMeasuring = true;\n\t      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      this._isMeasuring = false;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} line\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var height = this._getHeightOfLine(ctx, 0) / this.lineHeight;\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        height += this._getHeightOfLine(ctx, i);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var clonedStyles = { }, i, j, row;\n\t      for (i in this.styles) {\n\t        row = this.styles[i];\n\t        clonedStyles[i] = { };\n\t        for (j in row) {\n\t          clonedStyles[i][j] = clone(row[j]);\n\t        }\n\t      }\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clonedStyles\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object) {\n\t    return new fabric.IText(object.text, clone(object));\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t    },\n\t\n\t    /**\n\t     * Initializes \"selected\" event handler\n\t     */\n\t    initSelectedHandler: function() {\n\t      this.on('selected', function() {\n\t\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          _this.selected = true;\n\t        }, 100);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        if (this.canvas && !this.canvas._hasITextHandlers) {\n\t          this.canvas._hasITextHandlers = true;\n\t          this._initCanvasHandlers();\n\t        }\n\t\n\t        // Track IText instances per-canvas. Only register in this array once added\n\t        // to a canvas; we don't want to leak a reference to the instance forever\n\t        // simply because it existed at some point.\n\t        // (Might be added to a collection, but not on a canvas.)\n\t        if (_this.canvas) {\n\t          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n\t          _this.canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        // (Might be removed from a collection, but not on a canvas.)\n\t        if (_this.canvas) {\n\t          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(_this.canvas._iTextInstances, _this);\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function() {\n\t      var _this = this;\n\t\n\t      this.canvas.on('selection:cleared', function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n\t      });\n\t\n\t      this.canvas.on('mouse:up', function() {\n\t        if (_this.canvas._iTextInstances) {\n\t          _this.canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      });\n\t\n\t      this.canvas.on('object:selected', function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          // we do not want to animate a selection, only cursor\n\t          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      // to clear just itext area we need to transform the context\n\t      // it may not be worth it\n\t      this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.setSelectionStart(0);\n\t      this.setSelectionEnd(this.text.length);\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd   = this.searchWordBoundary(selectionStart, 1);\n\t      /* search forward */\n\t\n\t      this.setSelectionStart(newSelectionStart);\n\t      this.setSelectionEnd(newSelectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd   = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.setSelectionStart(newSelectionStart);\n\t      this.setSelectionEnd(newSelectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function(e) {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t\n\t      this.initHiddenTextarea(e);\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t      this._textBeforeEdit = this.text;\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t\n\t      this.canvas.renderAll();\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.initMouseMoveHandler();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      this.canvas.on('mouse:move', this.mouseMoveHandler.bind(this));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    mouseMoveHandler: function(options) {\n\t      if (!this.__isMousedown || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var newSelectionStart = this.getSelectionStartFromPointer(options.e);\n\t      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n\t        return;\n\t      }\n\t      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n\t        this.setSelectionStart(this.__selectionStartOnMouseDown);\n\t        this.setSelectionEnd(newSelectionStart);\n\t      }\n\t      else {\n\t        this.setSelectionStart(newSelectionStart);\n\t        this.setSelectionEnd(this.__selectionStartOnMouseDown);\n\t      }\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea || this.inCompositionMode) {\n\t        return;\n\t      }\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        var style = this._calcTextareaPosition();\n\t        this.hiddenTextarea.style.left = style.left;\n\t        this.hiddenTextarea.style.top = style.top;\n\t        this.hiddenTextarea.style.fontSize = style.fontSize;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Object} style contains style for hiddenTextarea\n\t     */\n\t    _calcTextareaPosition: function() {\n\t      if (!this.canvas) {\n\t        return { x: 1, y: 1 };\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          m = this.calcTransformMatrix(),\n\t          p = {\n\t            x: boundaries.left + leftOffset,\n\t            y: boundaries.top + boundaries.topOffset + charHeight\n\t          },\n\t          upperCanvas = this.canvas.upperCanvasEl,\n\t          maxWidth = upperCanvas.width - charHeight,\n\t          maxHeight = upperCanvas.height - charHeight;\n\t\n\t      p = fabric.util.transformPoint(p, m);\n\t      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\t\n\t      if (p.x < 0) {\n\t        p.x = 0;\n\t      }\n\t      if (p.x > maxWidth) {\n\t        p.x = maxWidth;\n\t      }\n\t      if (p.y < 0) {\n\t        p.y = 0;\n\t      }\n\t      if (p.y > maxHeight) {\n\t        p.y = maxHeight;\n\t      }\n\t\n\t      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t      var isTextChanged = (this._textBeforeEdit !== this.text);\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t      this.hiddenTextarea = null;\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      isTextChanged && this.fire('modified');\n\t      if (this.canvas) {\n\t        this.canvas.off('mouse:move', this.mouseMoveHandler);\n\t        this.canvas.fire('text:editing:exited', { target: this });\n\t        isTextChanged && this.canvas.fire('object:modified', { target: this });\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.setSelectionStart(start);\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t        this.setSelectionEnd(this.selectionStart);\n\t      }\n\t      //short circuit for block paste\n\t      if (!useCopiedStyle && this.isEmptyStyles()) {\n\t        this.insertChar(_chars, false);\n\t        return;\n\t      }\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.copiedTextStyle[i];\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.selectionStart += _char.length;\n\t      this.selectionEnd = this.selectionStart;\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this._updateTextarea();\n\t      this.canvas && this.canvas.renderAll();\n\t      this.setCoords();\n\t      this.fire('changed');\n\t      this.canvas && this.canvas.fire('text:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      if (!this.styles[lineIndex + 1]) {\n\t        this.styles[lineIndex + 1] = {};\n\t      }\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        for (var index in this.styles[lineIndex]) {\n\t          if (parseInt(index, 10) >= charIndex) {\n\t            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t\n\t      this.styles[lineIndex][charIndex] =\n\t        style || clone(currentLineStyles[charIndex - 1]);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    },\n\t\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      return this._textLines[lIndex - 1];\n\t    },\n\t\n\t    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t        }\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initSelectedHandler();\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t      if (!this.editable) {\n\t        return;\n\t      }\n\t      var pointer = this.canvas.getPointer(options.e);\n\t\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.hiddenTextarea && this.canvas) {\n\t        this.canvas.wrapperEl.appendChild(this.hiddenTextarea);\n\t      }\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        this.initDelayedCursor(true);\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (!this.editable || this._isObjectMoved(options.e)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected && !this.__corner) {\n\t        this.enterEditing(options.e);\n\t        this.initDelayedCursor(true);\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelectionStart = this.getSelectionStartFromPointer(e);\n\t\n\t    if (e.shiftKey) {\n\t      if (newSelectionStart < this.selectionStart) {\n\t        this.setSelectionEnd(this.selectionStart);\n\t        this.setSelectionStart(newSelectionStart);\n\t      }\n\t      else {\n\t        this.setSelectionEnd(newSelectionStart);\n\t      }\n\t    }\n\t    else {\n\t      this.setSelectionStart(newSelectionStart);\n\t      this.setSelectionEnd(newSelectionStart);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    var style = this._calcTextareaPosition();\n\t    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n\t                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n\t    if (this.canvas) {\n\t      this.canvas.lowerCanvasEl.parentNode.appendChild(this.hiddenTextarea);\n\t    }\n\t    else {\n\t      fabric.document.body.appendChild(this.hiddenTextarea);\n\t    }\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapUp: {\n\t    67: 'copy',\n\t    88: 'cut'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapDown: {\n\t    65: 'selectAll'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this._keysMap) {\n\t      this[this._keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapDown[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n\t   * if a copy/cut event fired, keyup is dismissed\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyUp: function(e) {\n\t    if (!this.isEditing || this._copyDone) {\n\t      this._copyDone = false;\n\t      return;\n\t    }\n\t    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapUp[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this.inCompositionMode) {\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        offsetEnd = this.selectionEnd || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff, charsToInsert, start;\n\t    if (newTextLength > textLength) {\n\t      //we added some character\n\t      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n\t      diff = newTextLength - textLength;\n\t      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n\t    }\n\t    else {\n\t      //we selected a portion of text and then input something else.\n\t      //Internet explorer does not trigger this else\n\t      diff = newTextLength - textLength + offsetEnd - offset;\n\t      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    }\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Composition start\n\t   */\n\t  onCompositionStart: function() {\n\t    this.inCompositionMode = true;\n\t    this.prevCompositionLength = 0;\n\t    this.compositionStart = this.selectionStart;\n\t  },\n\t\n\t  /**\n\t   * Composition end\n\t   */\n\t  onCompositionEnd: function() {\n\t    this.inCompositionMode = false;\n\t  },\n\t\n\t  /**\n\t   * Composition update\n\t   */\n\t  onCompositionUpdate: function(e) {\n\t    var data = e.data;\n\t    this.selectionStart = this.compositionStart;\n\t    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n\t      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n\t    this.insertChars(data, false);\n\t    this.prevCompositionLength = data.length;\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      //do not cut-copy if no selection\n\t      return;\n\t    }\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = this.getSelectionStyles(\n\t                          this.selectionStart,\n\t                          this.selectionEnd);\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this._copyDone = true;\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy(e);\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return (e && e.clipboardData) || fabric.window.clipboardData;\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        _char, lineLeftOffset, lineIndex = cursorLocation.lineIndex,\n\t        textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n\t        textOnSameLineAfterCursor = this._textLines[lineIndex].slice(cursorLocation.charIndex),\n\t        textOnNextLine = this._textLines[lineIndex + 1] || '';\n\t\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t\n\t    var widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, lineIndex);\n\t    lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor);\n\t\n\t    var widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\t\n\t    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n\t      _char = textOnSameLineBeforeCursor[i];\n\t      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t\n\t    var indexOnNextLine = this._getIndexOnNextLine(\n\t      cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor);\n\t\n\t    return textOnSameLineAfterCursor.length + 1 + indexOnNextLine;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getIndexOnNextLine: function(cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor) {\n\t    var lineIndex = cursorLocation.lineIndex + 1,\n\t        widthOfNextLine = this._getLineWidth(this.ctx, lineIndex),\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfNextLine),\n\t        widthOfCharsOnNextLine = lineLeftOffset,\n\t        indexOnNextLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnNextLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnNextLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnNextLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnNextLine > widthOfCharsOnSameLineBeforeCursor) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnNextLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnNextLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n\t            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\t\n\t        indexOnNextLine = offsetFromRightEdge < offsetFromLeftEdge ? j + 1 : j;\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnNextLine = textOnNextLine.length;\n\t    }\n\t\n\t    return indexOnNextLine;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    var offset = this.getDownCursorOffset(e, this._selectionDirection === 'right');\n\t\n\t    if (e.shiftKey) {\n\t      this.moveCursorDownWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorDownWithoutShift(offset);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * Moves cursor down without keeping selection\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorDownWithoutShift: function(offset) {\n\t    this._selectionDirection = 'right';\n\t    this.setSelectionStart(this.selectionStart + offset);\n\t    this.setSelectionEnd(this.selectionStart);\n\t  },\n\t\n\t  /**\n\t   * private\n\t   */\n\t  swapSelectionPoints: function() {\n\t    var swapSel = this.selectionEnd;\n\t    this.setSelectionEnd(this.selectionStart);\n\t    this.setSelectionStart(swapSel);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor down while keeping selection\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorDownWithShift: function(offset) {\n\t    if (this.selectionEnd === this.selectionStart) {\n\t      this._selectionDirection = 'right';\n\t    }\n\t    if (this._selectionDirection === 'right') {\n\t      this.setSelectionEnd(this.selectionEnd + offset);\n\t    }\n\t    else {\n\t      this.setSelectionStart(this.selectionStart + offset);\n\t    }\n\t    if (this.selectionEnd < this.selectionStart  && this._selectionDirection === 'left') {\n\t      this.swapSelectionPoints();\n\t      this._selectionDirection = 'right';\n\t    }\n\t    if (this.selectionEnd > this.text.length) {\n\t      this.setSelectionEnd(this.text.length);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on first line, up cursor goes to start of line\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      return selectionProp;\n\t    }\n\t\n\t    var textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n\t        textOnPreviousLine = this._textLines[lineIndex - 1] || '',\n\t        _char,\n\t        widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, cursorLocation.lineIndex),\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor),\n\t        widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\t\n\t    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n\t      _char = textOnSameLineBeforeCursor[i];\n\t      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t\n\t    var indexOnPrevLine = this._getIndexOnPrevLine(\n\t      cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor);\n\t\n\t    return textOnPreviousLine.length - indexOnPrevLine + textOnSameLineBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getIndexOnPrevLine: function(cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor) {\n\t\n\t    var lineIndex = cursorLocation.lineIndex - 1,\n\t        widthOfPreviousLine = this._getLineWidth(this.ctx, lineIndex),\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfPreviousLine),\n\t        widthOfCharsOnPreviousLine = lineLeftOffset,\n\t        indexOnPrevLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnPreviousLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnPreviousLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnPreviousLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnPreviousLine > widthOfCharsOnSameLineBeforeCursor) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnPreviousLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnPreviousLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n\t            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\t\n\t        indexOnPrevLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnPrevLine = textOnPreviousLine.length - 1;\n\t    }\n\t\n\t    return indexOnPrevLine;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    var offset = this.getUpCursorOffset(e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorUpWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorUpWithoutShift(offset);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorUpWithShift: function(offset) {\n\t    if (this.selectionEnd === this.selectionStart) {\n\t      this._selectionDirection = 'left';\n\t    }\n\t    if (this._selectionDirection === 'right') {\n\t      this.setSelectionEnd(this.selectionEnd - offset);\n\t    }\n\t    else {\n\t      this.setSelectionStart(this.selectionStart - offset);\n\t    }\n\t    if (this.selectionEnd < this.selectionStart && this._selectionDirection === 'right') {\n\t      this.swapSelectionPoints();\n\t      this._selectionDirection = 'left';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorUpWithoutShift: function(offset) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this.setSelectionStart(this.selectionStart - offset);\n\t    }\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._selectionDirection = 'left';\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      this.moveCursorLeftWithShift(e);\n\t    }\n\t    else {\n\t      this.moveCursorLeftWithoutShift(e);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var propMethod = (prop === 'selectionStart' ? 'setSelectionStart' : 'setSelectionEnd');\n\t    if (e.altKey) {\n\t      this[propMethod](this['findWordBoundary' + direction](this[prop]));\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      this[propMethod](this['findLineBoundary' + direction](this[prop]));\n\t    }\n\t    else {\n\t      this[propMethod](this[prop] + (direction === 'Left' ? -1 : 1));\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart) {\n\t      this._moveLeft(e, 'selectionStart');\n\t    }\n\t    this.setSelectionEnd(this.selectionStart);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else {\n\t      this._selectionDirection = 'left';\n\t      this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t\n\t    this.abortCursorAnimation();\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      this.moveCursorRightWithShift(e);\n\t    }\n\t    else {\n\t      this.moveCursorRightWithoutShift(e);\n\t    }\n\t\n\t    this.initDelayedCursor();\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      this._moveRight(e, 'selectionStart');\n\t    }\n\t    else {\n\t      this._selectionDirection = 'right';\n\t      this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._moveRight(e, 'selectionStart');\n\t      this.setSelectionEnd(this.selectionStart);\n\t    }\n\t    else {\n\t      this.setSelectionEnd(this.selectionEnd + this.getNumNewLinesInSelectedText());\n\t      this.setSelectionStart(this.selectionEnd);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        //jscs:disable validateIndentation\n\t        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height/2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n'\n\t        //jscs:enable validateIndentation\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text',\n\t        getSvgFilter: fabric.Object.prototype.getSvgFilter\n\t      }, styleDecl));\n\t\n\t      return [\n\t        //jscs:disable validateIndentation\n\t        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n\t          toFixed(lineTopOffset - this.height/2, NUM_FRACTION_DIGITS), '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ': ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ': ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ': ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ': ''),\n\t          'style=\"', fillStyles, '\">',\n\t          fabric.util.string.escapeXml(_char),\n\t        '</tspan>\\n'\n\t        //jscs:enable validateIndentation\n\t      ].join('');\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {}),\n\t      clone  = fabric.util.object.clone;\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 0,\n\t\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingY: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingFlip: true,\n\t\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      this.callSuper('initialize', text, options);\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t\n\t      // add width to this list of props that effect line wrapping.\n\t      this._dimensionAffectingProps.width = true;\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines();\n\t\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n') {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ') {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        if (!map) {\n\t          return returnCloneOrEmpty ? { } : null;\n\t        }\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0;\n\t      charOffset = charOffset || 0;\n\t\n\t      for (var i = 0, len = text.length; i < len; i++) {\n\t        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var lineWidth        = 0,\n\t          lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          word             = '',\n\t          offset           = 0,\n\t          infix            = ' ',\n\t          wordWidth        = 0,\n\t          infixWidth       = 0,\n\t          largestWordWidth = 0,\n\t          lineJustStarted = true;\n\t\n\t      for (var i = 0; i < words.length; i++) {\n\t        word = words[i];\n\t        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\t\n\t        offset += word.length;\n\t\n\t        lineWidth += infixWidth + wordWidth;\n\t\n\t        if (lineWidth >= this.width && !lineJustStarted) {\n\t          lines.push(line);\n\t          line = '';\n\t          lineWidth = wordWidth;\n\t          lineJustStarted = true;\n\t        }\n\t\n\t        if (!lineJustStarted) {\n\t          line += infix;\n\t        }\n\t        line += word;\n\t\n\t        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n\t        offset++;\n\t        lineJustStarted = false;\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      i && lines.push(line);\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      var originalAlign = this.textAlign;\n\t      this.ctx.save();\n\t      this._setTextStyles(this.ctx);\n\t      this.textAlign = 'left';\n\t      var lines = this._wrapText(this.ctx, this.text);\n\t      this.textAlign = originalAlign;\n\t      this.ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {Any} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        minWidth: this.minWidth\n\t      });\n\t    }\n\t  });\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object) {\n\t    return new fabric.Textbox(object.text, clone(object));\n\t  };\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t        return true;\n\t      }\n\t    }\n\t    else {\n\t      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles),\n\t          map          = this._styleMap[lineIndex];\n\t\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(539).DOMParser,\n\t      URL = __webpack_require__(333),\n\t      HTTP = __webpack_require__(222),\n\t      HTTPS = __webpack_require__(445),\n\t\n\t      Canvas = __webpack_require__(213),\n\t      Image = __webpack_require__(213).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(537);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img) {\n\t      var oImg = new fabric.Image(img);\n\t\n\t      oImg._initConfig(object);\n\t      oImg._initFilters(object.filters, function(filters) {\n\t        oImg.filters = filters || [ ];\n\t        oImg._initFilters(object.resizeFilters, function(resizeFilters) {\n\t          oImg.resizeFilters = resizeFilters || [ ];\n\t          callback && callback(oImg);\n\t        });\n\t      });\n\t    });\n\t  };\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.Font = Canvas.Font;\n\t\n\t    return fabricCanvas;\n\t  };\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  var origSetWidth = fabric.StaticCanvas.prototype.setWidth;\n\t  fabric.StaticCanvas.prototype.setWidth = function(width, options) {\n\t    origSetWidth.call(this, width, options);\n\t    this.nodeCanvas.width = width;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype.setWidth = fabric.StaticCanvas.prototype.setWidth;\n\t  }\n\t\n\t  var origSetHeight = fabric.StaticCanvas.prototype.setHeight;\n\t  fabric.StaticCanvas.prototype.setHeight = function(height, options) {\n\t    origSetHeight.call(this, height, options);\n\t    this.nodeCanvas.height = height;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype.setHeight = fabric.StaticCanvas.prototype.setHeight;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22).Buffer, __webpack_require__(57)))\n\n/***/ },\n\n/***/ 443:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(46);\n\tvar Response = __webpack_require__(444);\n\tvar Base64 = __webpack_require__(335);\n\tvar inherits = __webpack_require__(26);\n\t\n\tvar Request = module.exports = function (xhr, params) {\n\t    var self = this;\n\t    self.writable = true;\n\t    self.xhr = xhr;\n\t    self.body = [];\n\t    \n\t    self.uri = (params.protocol || 'http:') + '//'\n\t        + params.host\n\t        + (params.port ? ':' + params.port : '')\n\t        + (params.path || '/')\n\t    ;\n\t    \n\t    if (typeof params.withCredentials === 'undefined') {\n\t        params.withCredentials = true;\n\t    }\n\t\n\t    try { xhr.withCredentials = params.withCredentials }\n\t    catch (e) {}\n\t    \n\t    if (params.responseType) try { xhr.responseType = params.responseType }\n\t    catch (e) {}\n\t    \n\t    xhr.open(\n\t        params.method || 'GET',\n\t        self.uri,\n\t        true\n\t    );\n\t\n\t    xhr.onerror = function(event) {\n\t        self.emit('error', new Error('Network error'));\n\t    };\n\t\n\t    self._headers = {};\n\t    \n\t    if (params.headers) {\n\t        var keys = objectKeys(params.headers);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (!self.isSafeRequestHeader(key)) continue;\n\t            var value = params.headers[key];\n\t            self.setHeader(key, value);\n\t        }\n\t    }\n\t    \n\t    if (params.auth) {\n\t        //basic auth\n\t        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n\t    }\n\t\n\t    var res = new Response;\n\t    res.on('close', function () {\n\t        self.emit('close');\n\t    });\n\t    \n\t    res.on('ready', function () {\n\t        self.emit('response', res);\n\t    });\n\t\n\t    res.on('error', function (err) {\n\t        self.emit('error', err);\n\t    });\n\t    \n\t    xhr.onreadystatechange = function () {\n\t        // Fix for IE9 bug\n\t        // SCRIPT575: Could not complete the operation due to error c00c023f\n\t        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n\t        if (xhr.__aborted) return;\n\t        res.handle(xhr);\n\t    };\n\t};\n\t\n\tinherits(Request, Stream);\n\t\n\tRequest.prototype.setHeader = function (key, value) {\n\t    this._headers[key.toLowerCase()] = value\n\t};\n\t\n\tRequest.prototype.getHeader = function (key) {\n\t    return this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.removeHeader = function (key) {\n\t    delete this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.write = function (s) {\n\t    this.body.push(s);\n\t};\n\t\n\tRequest.prototype.destroy = function (s) {\n\t    this.xhr.__aborted = true;\n\t    this.xhr.abort();\n\t    this.emit('close');\n\t};\n\t\n\tRequest.prototype.end = function (s) {\n\t    if (s !== undefined) this.body.push(s);\n\t\n\t    var keys = objectKeys(this._headers);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i];\n\t        var value = this._headers[key];\n\t        if (isArray(value)) {\n\t            for (var j = 0; j < value.length; j++) {\n\t                this.xhr.setRequestHeader(key, value[j]);\n\t            }\n\t        }\n\t        else this.xhr.setRequestHeader(key, value)\n\t    }\n\t\n\t    if (this.body.length === 0) {\n\t        this.xhr.send('');\n\t    }\n\t    else if (typeof this.body[0] === 'string') {\n\t        this.xhr.send(this.body.join(''));\n\t    }\n\t    else if (isArray(this.body[0])) {\n\t        var body = [];\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body.push.apply(body, this.body[i]);\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n\t        var len = 0;\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            len += this.body[i].length;\n\t        }\n\t        var body = new(this.body[0].constructor)(len);\n\t        var k = 0;\n\t        \n\t        for (var i = 0; i < this.body.length; i++) {\n\t            var b = this.body[i];\n\t            for (var j = 0; j < b.length; j++) {\n\t                body[k++] = b[j];\n\t            }\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (isXHR2Compatible(this.body[0])) {\n\t        this.xhr.send(this.body[0]);\n\t    }\n\t    else {\n\t        var body = '';\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body += this.body[i].toString();\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t};\n\t\n\t// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\n\tRequest.unsafeHeaders = [\n\t    \"accept-charset\",\n\t    \"accept-encoding\",\n\t    \"access-control-request-headers\",\n\t    \"access-control-request-method\",\n\t    \"connection\",\n\t    \"content-length\",\n\t    \"cookie\",\n\t    \"cookie2\",\n\t    \"content-transfer-encoding\",\n\t    \"date\",\n\t    \"expect\",\n\t    \"host\",\n\t    \"keep-alive\",\n\t    \"origin\",\n\t    \"referer\",\n\t    \"te\",\n\t    \"trailer\",\n\t    \"transfer-encoding\",\n\t    \"upgrade\",\n\t    \"user-agent\",\n\t    \"via\"\n\t];\n\t\n\tRequest.prototype.isSafeRequestHeader = function (headerName) {\n\t    if (!headerName) return false;\n\t    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n\t};\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    return keys;\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\t\n\tvar indexOf = function (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t};\n\t\n\tvar isXHR2Compatible = function (obj) {\n\t    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n\t    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n\t    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n\t};\n\n\n/***/ },\n\n/***/ 444:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(46);\n\tvar util = __webpack_require__(83);\n\t\n\tvar Response = module.exports = function (res) {\n\t    this.offset = 0;\n\t    this.readable = true;\n\t};\n\t\n\tutil.inherits(Response, Stream);\n\t\n\tvar capable = {\n\t    streaming : true,\n\t    status2 : true\n\t};\n\t\n\tfunction parseHeaders (res) {\n\t    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n\t    var headers = {};\n\t    for (var i = 0; i < lines.length; i++) {\n\t        var line = lines[i];\n\t        if (line === '') continue;\n\t        \n\t        var m = line.match(/^([^:]+):\\s*(.*)/);\n\t        if (m) {\n\t            var key = m[1].toLowerCase(), value = m[2];\n\t            \n\t            if (headers[key] !== undefined) {\n\t            \n\t                if (isArray(headers[key])) {\n\t                    headers[key].push(value);\n\t                }\n\t                else {\n\t                    headers[key] = [ headers[key], value ];\n\t                }\n\t            }\n\t            else {\n\t                headers[key] = value;\n\t            }\n\t        }\n\t        else {\n\t            headers[line] = true;\n\t        }\n\t    }\n\t    return headers;\n\t}\n\t\n\tResponse.prototype.getResponse = function (xhr) {\n\t    var respType = String(xhr.responseType).toLowerCase();\n\t    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n\t    if (respType === 'arraybuffer') return xhr.response;\n\t    return xhr.responseText;\n\t}\n\t\n\tResponse.prototype.getHeader = function (key) {\n\t    return this.headers[key.toLowerCase()];\n\t};\n\t\n\tResponse.prototype.handle = function (res) {\n\t    if (res.readyState === 2 && capable.status2) {\n\t        try {\n\t            this.statusCode = res.status;\n\t            this.headers = parseHeaders(res);\n\t        }\n\t        catch (err) {\n\t            capable.status2 = false;\n\t        }\n\t        \n\t        if (capable.status2) {\n\t            this.emit('ready');\n\t        }\n\t    }\n\t    else if (capable.streaming && res.readyState === 3) {\n\t        try {\n\t            if (!this.statusCode) {\n\t                this.statusCode = res.status;\n\t                this.headers = parseHeaders(res);\n\t                this.emit('ready');\n\t            }\n\t        }\n\t        catch (err) {}\n\t        \n\t        try {\n\t            this._emitData(res);\n\t        }\n\t        catch (err) {\n\t            capable.streaming = false;\n\t        }\n\t    }\n\t    else if (res.readyState === 4) {\n\t        if (!this.statusCode) {\n\t            this.statusCode = res.status;\n\t            this.emit('ready');\n\t        }\n\t        this._emitData(res);\n\t        \n\t        if (res.error) {\n\t            this.emit('error', this.getResponse(res));\n\t        }\n\t        else this.emit('end');\n\t        \n\t        this.emit('close');\n\t    }\n\t};\n\t\n\tResponse.prototype._emitData = function (res) {\n\t    var respBody = this.getResponse(res);\n\t    if (respBody.toString().match(/ArrayBuffer/)) {\n\t        this.emit('data', new Uint8Array(respBody, this.offset));\n\t        this.offset = respBody.byteLength;\n\t        return;\n\t    }\n\t    if (respBody.length > this.offset) {\n\t        this.emit('data', respBody.slice(this.offset));\n\t        this.offset = respBody.length;\n\t    }\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 445:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(222);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ },\n\n/***/ 459:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n\n/***/ 460:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n\n/***/ 461:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(459);\n\texports.encode = exports.stringify = __webpack_require__(460);\n\n\n/***/ },\n\n/***/ 487:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 491:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div id=create-mc-question> <mdl-button primary raised class=float-button style=\\\"bottom: 80px\\\" @click=\\\"questionInbox.show = true\\\" v-bind:disabled=publishButton.disabled> <i class=material-icons>inbox</i> {{questionInbox.questions.length}} </mdl-button> <mdl-button primary raised class=float-button @click=publishQuestion() v-bind:disabled=publishButton.disabled> 發佈 </mdl-button> <div class=body_wrapper> <card> <div slot=content style=\\\"padding: 16px 16px 0 16px\\\"> <div class=flex-column> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>科目</span> <select v-model=newQuestion.subject> <option v-for=\\\"subject in subjects\\\" v-bind:value=subject.id> {{ subject.name }} </option> </select> </div> <div class=\\\"set_difficulty flex-column flex-50\\\"> <span class=field-title style=margin-bottom:4px>難度</span> <span class=flex-row> <i v-for=\\\"n in 5\\\" class=material-icons @click=\\\"newQuestion.difficulty = $index + 1\\\" :class=\\\"{'difficulty_status': newQuestion.difficulty > $index}\\\">star_rate</i> </span> </div> </div> <div class=flex-row style=\\\"padding-top: 25px\\\"> <div class=\\\"flex-column flex-50\\\"> <div style=\\\"margin-right: 10px\\\"> <span class=field-title>標籤</span> </div> <div class=\\\"flex-row flex-center flex-wrap\\\"> <span class=q-tag @click=removeTag($index) v-for=\\\"tag in newQuestion.tags\\\" track-by=$index>{{tag}}</span> </div> <div style=\\\"position: relative;top: -12px\\\"> <mdl-textfield label=輸入標籤.回車 @keyup.enter=addTag() :value.sync=tag style=width:200px></mdl-textfield> </div> </div> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>語言</span> <select v-model=newQuestion.language v-on:change=setUserLanguage(newQuestion.language)> <option v-for=\\\"language in languages\\\" v-bind:value=language.id> {{ language.name }} </option> </select> </div> </div> </div> </div> </card> <div class=flex-column style=\\\"margin-bottom: 16px\\\"> <h5 style=margin-left:4px>編輯題目</h5> <div style=background:#ddd class=flex-column> <mdl-button primary @click=\\\"editorPreview.image.show = !editorPreview.image.show\\\"><i class=material-icons>photo</i> <span>添加圖片</span> </mdl-button> </div> <div v-show=editorPreview.image.show> <form v-on:change=readImg($event)> <input type=file id=uploadedImg /> </form> <div class=\\\"flex-column flex-center\\\"> <canvas v-el:fabricprocess></canvas> <mdl-textfield label=圖片名字 :value.sync=editorPreview.image.label></mdl-textfield> <mdl-button primary @click=outputImg()><i class=material-icons>photo</i> <span>输出图片</span></mdl-button> </div> </div> </div> <div class=flex-row> <div class=flex-50> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.question></quill> </div> </card> </div> <div class=flex-50> <card> <div slot=content> <p class=toolbar_title>預覽</p> <div class=question_preview></div> </div> </card> </div> </div> <div class=mc_preview> <p style=margin:0;text-align:center;color:#9E9E9E>點擊選項設定正確答案</p> <div class=flex-row> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 0}\\\" @click=\\\"newQuestion.answer.mc = 0\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>A</div><div id=mc1 class=mc_content></div></div> </card> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 1}\\\" @click=\\\"newQuestion.answer.mc = 1\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>B</div><div id=mc2 class=mc_content></div></div> </card> </div> <div class=flex-row> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 2}\\\" @click=\\\"newQuestion.answer.mc = 2\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>C</div><div id=mc3 class=mc_content></div></div> </card> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 3}\\\" @click=\\\"newQuestion.answer.mc = 3\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>D</div><div id=mc4 class=mc_content></div></div> </card> </div> </div> <h5 style=margin-left:4px>編輯答案</h5> <div id=mc_input_container> <p style=margin:0;text-align:center;color:#9E9E9E>答案選項輸入</p> <div class=flex-row> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[0]></quill></div></card> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[1]></quill></div></card> </div> <div class=flex-row> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[2]></quill></div></card> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[3]></quill></div></card> </div> </div> </div> <div class=questions_inbox class=flex-column :class=\\\"{'show': questionInbox.show}\\\"> <div class=flex-row style=\\\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0\\\"> <i class=material-icons @click=\\\"questionInbox.show = false\\\">close</i> <span style=\\\"font-size: 20px;padding-top: 2px;padding-left: 16px\\\">創建題集記錄</span> </div> <div class=\\\"flex-column flex-center\\\" style=\\\"margin: 8px 0\\\" id=getLatestQuestionsButton> <mdl-button primary raised @click=getLatestQuestionsCreatedByMe()>獲取我最近創建的題目</mdl-button> </div> <div class=flex-column style=\\\"overflow-y: auto;margin-bottom:60px; flex: 1\\\"> <div class=question v-for=\\\"q in questionInbox.questions\\\" track-by=_id> <span v-html=q.context></span> <div class=flex-row> <span style=\\\"color: #9E9E9E\\\">{{q._id | timestamp}}</span> <span class=\\\"flex-row flex-center\\\" style=color:#FFC107;margin-left:auto>{{q.difficulty}}<i class=material-icons style=\\\"font-size: 18px\\\">star</i></span> </div> </div> </div> </div> </div> \";\n\n/***/ },\n\n/***/ 515:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(423)\n\t__vue_script__ = __webpack_require__(345)\n\t__vue_template__ = __webpack_require__(491)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n\n/***/ 537:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 538:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 539:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 5.7fab92f2f7caedf98429.js\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".card{background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/reuseable/Card.vue\"],\"names\":[],\"mappings\":\"AACA,MACE,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC\",\"file\":\"Card.vue\",\"sourcesContent\":[\"\\n.card {\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/reuseable/Card.vue\n ** module id = 16\n ** module chunks = 1 3 4 5 9\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/reuseable/Card.vue\n ** module id = 17\n ** module chunks = 1 3 4 5 9\n **/","module.exports = \" <div> <div class=card> <slot name=content></slot> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/reuseable/Card.vue\n ** module id = 19\n ** module chunks = 1 3 4 5 9\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Card.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Card.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/reuseable/Card.vue\n ** module id = 20\n ** module chunks = 1 3 4 5 9\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/json/stringify.js\n ** module id = 60\n ** module chunks = 3 5 9\n **/","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/json/stringify.js\n ** module id = 67\n ** module chunks = 3 5 9\n **/","module.exports = {\n  languages: [\n    {name: 'English', id: 'eng'},\n    {name: '中文', id: 'cht'}\n  ]\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/Languages.js\n **/","exports = module.exports = require(\"./../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n * Quill Editor v1.0.2\\n * https://quilljs.com/\\n * Copyright (c) 2014, Jason Chen\\n * Copyright (c) 2013, salesforce.com\\n */.ql-container{box-sizing:border-box;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;margin:0;position:relative}.ql-clipboard{left:-100000px;height:1px;overflow-y:hidden;position:absolute;top:50%}.ql-clipboard p{margin:0;padding:0}.ql-editor{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}.ql-editor blockquote,.ql-editor h1,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor h5,.ql-editor h6,.ql-editor ol,.ql-editor p,.ql-editor pre,.ql-editor ul{margin:0;padding:0;counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol,.ql-editor ul{padding-left:1.5em}.ql-editor ol>li,.ql-editor ul>li{list-style-type:none}.ql-editor ul>li:before{content:'\\\\25CF'}.ql-editor li:before{display:inline-block;margin-right:.3em;text-align:right;white-space:nowrap;width:1.2em}.ql-editor li:not(.ql-direction-rtl):before{margin-left:-1.5em}.ql-editor ol li,.ql-editor ul li{padding-left:1.5em}.ql-editor ol li{counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;counter-increment:list-num}.ql-editor ol li:before{content:counter(list-num,decimal) '. '}.ql-editor ol li.ql-indent-1{counter-increment:list-1}.ql-editor ol li.ql-indent-1:before{content:counter(list-1,lower-alpha) '. '}.ql-editor ol li.ql-indent-1{counter-reset:list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-2{counter-increment:list-2}.ql-editor ol li.ql-indent-2:before{content:counter(list-2,lower-roman) '. '}.ql-editor ol li.ql-indent-2{counter-reset:list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-3{counter-increment:list-3}.ql-editor ol li.ql-indent-3:before{content:counter(list-3,decimal) '. '}.ql-editor ol li.ql-indent-3{counter-reset:list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-4{counter-increment:list-4}.ql-editor ol li.ql-indent-4:before{content:counter(list-4,lower-alpha) '. '}.ql-editor ol li.ql-indent-4{counter-reset:list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-5{counter-increment:list-5}.ql-editor ol li.ql-indent-5:before{content:counter(list-5,lower-roman) '. '}.ql-editor ol li.ql-indent-5{counter-reset:list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-6{counter-increment:list-6}.ql-editor ol li.ql-indent-6:before{content:counter(list-6,decimal) '. '}.ql-editor ol li.ql-indent-6{counter-reset:list-7 list-8 list-9}.ql-editor ol li.ql-indent-7{counter-increment:list-7}.ql-editor ol li.ql-indent-7:before{content:counter(list-7,lower-alpha) '. '}.ql-editor ol li.ql-indent-7{counter-reset:list-8 list-9}.ql-editor ol li.ql-indent-8{counter-increment:list-8}.ql-editor ol li.ql-indent-8:before{content:counter(list-8,lower-roman) '. '}.ql-editor ol li.ql-indent-8{counter-reset:list-9}.ql-editor ol li.ql-indent-9{counter-increment:list-9}.ql-editor ol li.ql-indent-9:before{content:counter(list-9,decimal) '. '}.ql-editor .ql-indent-1:not(.ql-direction-rtl){padding-left:3em}.ql-editor li.ql-indent-1:not(.ql-direction-rtl){padding-left:4.5em}.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:3em}.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:4.5em}.ql-editor .ql-indent-2:not(.ql-direction-rtl){padding-left:6em}.ql-editor li.ql-indent-2:not(.ql-direction-rtl){padding-left:7.5em}.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:6em}.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:7.5em}.ql-editor .ql-indent-3:not(.ql-direction-rtl){padding-left:9em}.ql-editor li.ql-indent-3:not(.ql-direction-rtl){padding-left:10.5em}.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:9em}.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:10.5em}.ql-editor .ql-indent-4:not(.ql-direction-rtl){padding-left:12em}.ql-editor li.ql-indent-4:not(.ql-direction-rtl){padding-left:13.5em}.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:12em}.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:13.5em}.ql-editor .ql-indent-5:not(.ql-direction-rtl){padding-left:15em}.ql-editor li.ql-indent-5:not(.ql-direction-rtl){padding-left:16.5em}.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:15em}.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:16.5em}.ql-editor .ql-indent-6:not(.ql-direction-rtl){padding-left:18em}.ql-editor li.ql-indent-6:not(.ql-direction-rtl){padding-left:19.5em}.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:18em}.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:19.5em}.ql-editor .ql-indent-7:not(.ql-direction-rtl){padding-left:21em}.ql-editor li.ql-indent-7:not(.ql-direction-rtl){padding-left:22.5em}.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:21em}.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:22.5em}.ql-editor .ql-indent-8:not(.ql-direction-rtl){padding-left:24em}.ql-editor li.ql-indent-8:not(.ql-direction-rtl){padding-left:25.5em}.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:24em}.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:25.5em}.ql-editor .ql-indent-9:not(.ql-direction-rtl){padding-left:27em}.ql-editor li.ql-indent-9:not(.ql-direction-rtl){padding-left:28.5em}.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:27em}.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:28.5em}.ql-editor .ql-video{display:block;max-width:100%}.ql-editor .ql-video.ql-align-center{margin:0 auto}.ql-editor .ql-video.ql-align-right{margin:0 0 0 auto}.ql-editor .ql-bg-black{background-color:#000}.ql-editor .ql-bg-red{background-color:#e60000}.ql-editor .ql-bg-orange{background-color:#f90}.ql-editor .ql-bg-yellow{background-color:#ff0}.ql-editor .ql-bg-green{background-color:#008a00}.ql-editor .ql-bg-blue{background-color:#06c}.ql-editor .ql-bg-purple{background-color:#93f}.ql-editor .ql-color-white{color:#fff}.ql-editor .ql-color-red{color:#e60000}.ql-editor .ql-color-orange{color:#f90}.ql-editor .ql-color-yellow{color:#ff0}.ql-editor .ql-color-green{color:#008a00}.ql-editor .ql-color-blue{color:#06c}.ql-editor .ql-color-purple{color:#93f}.ql-editor .ql-font-serif{font-family:Georgia,Times New Roman,serif}.ql-editor .ql-font-monospace{font-family:Monaco,Courier New,monospace}.ql-editor .ql-size-small{font-size:.75em}.ql-editor .ql-size-large{font-size:1.5em}.ql-editor .ql-size-huge{font-size:2.5em}.ql-editor .ql-direction-rtl{direction:rtl;text-align:inherit}.ql-editor .ql-align-center{text-align:center}.ql-editor .ql-align-justify{text-align:justify}.ql-editor .ql-align-right{text-align:right}.ql-editor.ql-blank:before{color:rgba(0,0,0,.6);content:attr(data-placeholder);font-style:italic;pointer-events:none;position:absolute}.ql-snow.ql-toolbar:after,.ql-snow .ql-toolbar:after{clear:both;content:'';display:table}.ql-snow.ql-toolbar button,.ql-snow .ql-toolbar button{background:none;border:none;cursor:pointer;display:inline-block;float:left;height:24px;outline:none;padding:3px 5px;width:28px}.ql-snow.ql-toolbar button svg,.ql-snow .ql-toolbar button svg{float:left;height:100%}.ql-snow.ql-toolbar input.ql-image[type=file],.ql-snow .ql-toolbar input.ql-image[type=file]{display:none}.ql-snow.ql-toolbar .ql-picker-item.ql-selected,.ql-snow .ql-toolbar .ql-picker-item.ql-selected,.ql-snow.ql-toolbar .ql-picker-item:hover,.ql-snow .ql-toolbar .ql-picker-item:hover,.ql-snow.ql-toolbar .ql-picker-label.ql-active,.ql-snow .ql-toolbar .ql-picker-label.ql-active,.ql-snow.ql-toolbar .ql-picker-label:hover,.ql-snow .ql-toolbar .ql-picker-label:hover,.ql-snow.ql-toolbar button.ql-active,.ql-snow .ql-toolbar button.ql-active,.ql-snow.ql-toolbar button:hover,.ql-snow .ql-toolbar button:hover{color:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:hover .ql-fill,.ql-snow .ql-toolbar button:hover .ql-fill,.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill{fill:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow.ql-toolbar button.ql-active .ql-stroke,.ql-snow .ql-toolbar button.ql-active .ql-stroke,.ql-snow.ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar button:hover .ql-stroke,.ql-snow .ql-toolbar button:hover .ql-stroke,.ql-snow.ql-toolbar button:hover .ql-stroke-mitter,.ql-snow .ql-toolbar button:hover .ql-stroke-mitter{stroke:#06c}.ql-snow,.ql-snow *{box-sizing:border-box}.ql-snow .ql-hidden{display:none}.ql-snow .ql-out-bottom,.ql-snow .ql-out-top{visibility:hidden}.ql-snow .ql-tooltip{position:absolute}.ql-snow .ql-tooltip a{cursor:pointer;text-decoration:none}.ql-snow .ql-formats{display:inline-block;vertical-align:middle}.ql-snow .ql-formats:after{clear:both;content:'';display:table}.ql-snow .ql-stroke,.ql-snow .ql-toolbar.snow{fill:none;stroke:#444;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}.ql-snow .ql-stroke-mitter{fill:none;stroke:#444;stroke-mitterlimit:10;stroke-width:2}.ql-snow .ql-fill,.ql-snow .ql-stroke.ql-fill{fill:#444}.ql-snow .ql-empty{fill:none}.ql-snow .ql-even{fill-rule:evenodd}.ql-snow .ql-stroke.ql-thin,.ql-snow .ql-thin{stroke-width:1}.ql-snow .ql-transparent{opacity:.4}.ql-snow .ql-direction svg:last-child{display:none}.ql-snow .ql-direction.ql-active svg:last-child{display:inline}.ql-snow .ql-direction.ql-active svg:first-child{display:none}.ql-snow .ql-editor h1{font-size:2em}.ql-snow .ql-editor h2{font-size:1.5em}.ql-snow .ql-editor h3{font-size:1.17em}.ql-snow .ql-editor h4{font-size:1em}.ql-snow .ql-editor h5{font-size:.83em}.ql-snow .ql-editor h6{font-size:.67em}.ql-snow .ql-editor a{text-decoration:underline}.ql-snow .ql-editor blockquote{border-left:4px solid #ccc;margin-bottom:5px;margin-top:5px;padding-left:16px}.ql-snow .ql-editor code,.ql-snow .ql-editor pre{background-color:#f0f0f0;border-radius:3px}.ql-snow .ql-editor pre{white-space:pre-wrap;margin-bottom:5px;margin-top:5px;padding:5px 10px}.ql-snow .ql-editor code{font-size:85%;padding-bottom:2px;padding-top:2px}.ql-snow .ql-editor code:after,.ql-snow .ql-editor code:before{content:\\\"\\\\A0\\\";letter-spacing:-2px}.ql-snow .ql-editor pre.ql-syntax{background-color:#23241f;color:#f8f8f2;overflow:visible}.ql-snow .ql-editor img{max-width:100%}.ql-snow .ql-picker{color:#444;display:inline-block;float:left;font-size:14px;font-weight:500;height:24px;position:relative;vertical-align:middle}.ql-snow .ql-picker-label{cursor:pointer;display:inline-block;height:100%;padding-left:8px;padding-right:2px;position:relative;width:100%}.ql-snow .ql-picker-label:before{display:inline-block;line-height:22px}.ql-snow .ql-picker-options{background-color:#fff;display:none;min-width:100%;padding:4px 8px;position:absolute;white-space:nowrap}.ql-snow .ql-picker-options .ql-picker-item{cursor:pointer;display:block;padding-bottom:5px;padding-top:5px}.ql-snow .ql-picker.ql-expanded .ql-picker-label{color:#ccc;z-index:2}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill{fill:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke{stroke:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-options{display:block;margin-top:-1px;top:100%;z-index:1}.ql-snow .ql-color-picker,.ql-snow .ql-icon-picker{width:28px}.ql-snow .ql-color-picker .ql-picker-label,.ql-snow .ql-icon-picker .ql-picker-label{padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-label svg,.ql-snow .ql-icon-picker .ql-picker-label svg{right:4px}.ql-snow .ql-icon-picker .ql-picker-options{padding:4px 0}.ql-snow .ql-icon-picker .ql-picker-item{height:24px;width:24px;padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-options{padding:3px 5px;width:152px}.ql-snow .ql-color-picker .ql-picker-item{border:1px solid transparent;float:left;height:16px;margin:2px;padding:0;width:16px}.ql-snow .ql-color-picker .ql-picker-item.ql-primary-color{margin-bottom:toolbarPadding}.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg{position:absolute;margin-top:-9px;right:0;top:50%;width:18px}.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label='']):before{content:attr(data-label)}.ql-snow .ql-picker.ql-header{width:98px}.ql-snow .ql-picker.ql-header .ql-picker-item:before,.ql-snow .ql-picker.ql-header .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"1\\\"]:before{content:'Heading 1'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"2\\\"]:before{content:'Heading 2'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"3\\\"]:before{content:'Heading 3'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"4\\\"]:before{content:'Heading 4'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"5\\\"]:before{content:'Heading 5'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"6\\\"]:before{content:'Heading 6'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before{font-size:2em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before{font-size:1.5em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before{font-size:1.17em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before{font-size:1em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before{font-size:.83em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before{font-size:.67em}.ql-snow .ql-picker.ql-font{width:108px}.ql-snow .ql-picker.ql-font .ql-picker-item:before,.ql-snow .ql-picker.ql-font .ql-picker-label:before{content:'Sans Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]:before{content:'Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]:before{content:'Monospace'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before{font-family:Georgia,Times New Roman,serif}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before{font-family:Monaco,Courier New,monospace}.ql-snow .ql-picker.ql-size{width:98px}.ql-snow .ql-picker.ql-size .ql-picker-item:before,.ql-snow .ql-picker.ql-size .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]:before{content:'Small'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]:before{content:'Large'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]:before{content:'Huge'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before{font-size:10px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before{font-size:18px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before{font-size:32px}.ql-snow .ql-color-picker.ql-background .ql-picker-item{background-color:#fff}.ql-snow .ql-color-picker.ql-color .ql-picker-item{background-color:#000}.ql-toolbar.ql-snow{border:1px solid #ccc;box-sizing:border-box;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding:8px}.ql-toolbar.ql-snow .ql-formats{margin-right:15px}.ql-toolbar.ql-snow .ql-picker-label{border:1px solid transparent}.ql-toolbar.ql-snow .ql-picker-options{border:1px solid transparent;box-shadow:0 2px 8px rgba(0,0,0,.2)}.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label,.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options{border-color:#ccc}.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item.ql-selected,.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item:hover{border-color:#000}.ql-toolbar.ql-snow+.ql-container.ql-snow{border-top:0}.ql-snow .ql-tooltip{background-color:#fff;border:1px solid #ccc;box-shadow:0 0 5px #ddd;color:#444;margin-top:10px;padding:5px 12px;white-space:nowrap}.ql-snow .ql-tooltip:before{content:\\\"Visit URL:\\\";line-height:26px;margin-right:8px}.ql-snow .ql-tooltip input[type=text]{display:none;border:1px solid #ccc;font-size:13px;height:26px;margin:0;padding:3px 5px;width:170px}.ql-snow .ql-tooltip a.ql-preview{display:inline-block;max-width:200px;overflow-x:hidden;text-overflow:ellipsis;vertical-align:top}.ql-snow .ql-tooltip a.ql-action:after{border-right:1px solid #ccc;content:'Edit';margin-left:16px;padding-right:8px}.ql-snow .ql-tooltip a.ql-remove:before{content:'Remove';margin-left:8px}.ql-snow .ql-tooltip a{line-height:26px}.ql-snow .ql-tooltip.ql-editing a.ql-preview,.ql-snow .ql-tooltip.ql-editing a.ql-remove{display:none}.ql-snow .ql-tooltip.ql-editing input[type=text]{display:inline-block}.ql-snow .ql-tooltip.ql-editing a.ql-action:after{border-right:0;content:'Save';padding-right:0}.ql-snow .ql-tooltip[data-mode=link]:before{content:\\\"Enter link:\\\"}.ql-snow .ql-tooltip[data-mode=formula]:before{content:\\\"Enter formula:\\\"}.ql-snow .ql-tooltip[data-mode=video]:before{content:\\\"Enter video:\\\"}.ql-snow a{color:#06c}.ql-container.ql-snow{border:1px solid #ccc}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/quill/dist/quill.snow.css\n ** module id = 175\n ** module chunks = 3 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../css-loader/index.js!./quill.snow.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./quill.snow.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./quill.snow.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/quill/dist/quill.snow.css\n ** module id = 205\n ** module chunks = 3 5\n **/","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/index.js\n ** module id = 222\n ** module chunks = 5\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/url.js\n ** module id = 333\n ** module chunks = 5\n **/",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Base64/base64.js\n ** module id = 335\n ** module chunks = 5\n **/","<template>\n  <div id=\"create-mc-question\">\n    <mdl-button primary raised class=\"float-button\" style=\"bottom: 80px\" @click=\"questionInbox.show = true\" v-bind:disabled=\"publishButton.disabled\">\n      <i class=\"material-icons\">inbox</i> {{questionInbox.questions.length}}\n    </mdl-button>\n    <mdl-button primary raised class=\"float-button\" @click=\"publishQuestion()\" v-bind:disabled=\"publishButton.disabled\">\n      發佈\n    </mdl-button>\n    <div class=\"body_wrapper\">\n      <card>\n        <div slot=\"content\" style=\"padding: 16px 16px 0 16px\">\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"flex-column flex-50\">\n                <span class=\"field-title\">科目</span>\n                <select v-model=\"newQuestion.subject\">\n                  <option v-for=\"subject in subjects\" v-bind:value=\"subject.id\">\n                    {{ subject.name }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"set_difficulty flex-column flex-50\">\n                <span class=\"field-title\" style=\"margin-bottom:4px\">難度</span>\n                <span class=\"flex-row\">\n                  <i v-for=\"n in 5\" class=\"material-icons\" @click=\"newQuestion.difficulty = $index + 1\" :class=\"{'difficulty_status': newQuestion.difficulty > $index}\">star_rate</i>\n                </span>\n              </div>\n            </div>\n            <div class=\"flex-row\" style=\"padding-top: 25px;\">\n              <div class=\"flex-column flex-50\">\n                <div style=\"margin-right: 10px;\">\n                  <span class=\"field-title\">標籤</span>\n                </div>\n                <div class=\"flex-row flex-center flex-wrap\">\n                  <span class=\"q-tag\" @click=\"removeTag($index)\" v-for=\"tag in newQuestion.tags\" track-by=\"$index\">{{tag}}</span>\n                </div>\n                <div style=\"position: relative;top: -12px\">\n                  <mdl-textfield label=\"輸入標籤.回車\" @keyup.enter=\"addTag()\" :value.sync=\"tag\" style=\"width:200px\"></mdl-textfield>\n                </div>\n              </div>\n\n              <div class=\"flex-column flex-50\">\n                <span class=\"field-title\">語言</span>\n                <select v-model=\"newQuestion.language\" v-on:change=\"setUserLanguage(newQuestion.language)\">\n                  <option v-for=\"language in languages\" v-bind:value=\"language.id\">\n                    {{ language.name }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </card>\n      <div class=\"flex-column\" style=\"margin-bottom: 16px\">\n        <h5 style=\"margin-left:4px\">編輯題目</h5>\n        <div style=\"background:#ddd\" class=\"flex-column\">\n          <mdl-button primary @click=\"editorPreview.image.show = !editorPreview.image.show\"><i class=\"material-icons\">photo</i>\n            <span>添加圖片</span>\n          </mdl-button>\n        </div>\n        <div v-show=\"editorPreview.image.show\">\n          <form v-on:change=\"readImg($event)\">\n            <input type=\"file\" id=\"uploadedImg\"/>\n          </form>\n          <div class=\"flex-column flex-center\">\n            <canvas v-el:fabricprocess></canvas>\n            <mdl-textfield label=\"圖片名字\" :value.sync=\"editorPreview.image.label\"></mdl-textfield>\n            <mdl-button primary @click=\"outputImg()\"><i class=\"material-icons\">photo</i> <span>输出图片</span></mdl-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-row\">\n        <div class=\"flex-50\">\n          <card>\n            <div slot=\"content\">\n              <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.question\"></quill>\n            </div>\n          </card>\n        </div>\n        <div class=\"flex-50\">\n          <card>\n            <div slot=\"content\">\n              <p class=\"toolbar_title\">預覽</p>\n              <div class=\"question_preview\"></div>\n            </div>\n          </card>\n        </div>\n      </div>\n      <div class=\"mc_preview\">\n        <p style=\"margin:0;text-align:center;color:#9E9E9E\">點擊選項設定正確答案</p>\n        <div class=\"flex-row\">\n          <card class=\"flex-50\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 0}\" @click=\"newQuestion.answer.mc = 0\">\n            <div slot=\"content\" class=\"flex-row flex-baseline\"><div class=\"mc_label\">A</div><div id=\"mc1\" class=\"mc_content\"></div></div>\n          </card>\n          <card class=\"flex-50\":class=\"{'hightlight-answer': newQuestion.answer.mc === 1}\" @click=\"newQuestion.answer.mc = 1\">\n            <div slot=\"content\" class=\"flex-row flex-baseline\"><div class=\"mc_label\">B</div><div id=\"mc2\" class=\"mc_content\"></div></div>\n          </card>\n\n        </div>\n        <div class=\"flex-row\">\n          <card class=\"flex-50\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 2}\" @click=\"newQuestion.answer.mc = 2\">\n            <div slot=\"content\" class=\"flex-row flex-baseline\"><div class=\"mc_label\">C</div><div id=\"mc3\" class=\"mc_content\"></div></div>\n          </card>\n          <card class=\"flex-50\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 3}\" @click=\"newQuestion.answer.mc = 3\">\n            <div slot=\"content\" class=\"flex-row flex-baseline\"><div class=\"mc_label\">D</div><div id=\"mc4\" class=\"mc_content\"></div></div>\n          </card>\n        </div>\n      </div>\n      <h5 style=\"margin-left:4px\">編輯答案</h5>\n\n      <div id=\"mc_input_container\">\n        <p style=\"margin:0;text-align:center;color:#9E9E9E\">答案選項輸入</p>\n        <div class=\"flex-row\">\n          <card class=\"flex-50\"><div slot=\"content\"><quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[0]\"></quill></div></card>\n          <card class=\"flex-50\"><div slot=\"content\"><quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[1]\"></quill></div></card>\n        </div>\n        <div class=\"flex-row\">\n          <card class=\"flex-50\"><div slot=\"content\"><quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[2]\"></quill></div></card>\n          <card class=\"flex-50\"><div slot=\"content\"><quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[3]\"></quill></div></card>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"questions_inbox\" class=\"flex-column\" :class=\"{'show': questionInbox.show}\">\n      <div class=\"flex-row\" style=\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0;\">\n        <i class=\"material-icons\" @click=\"questionInbox.show = false\">close</i>\n        <span style=\"font-size: 20px;padding-top: 2px;padding-left: 16px;\">創建題集記錄</span>\n      </div>\n\n      <div class=\"flex-column flex-center\" style=\"margin: 8px 0;\" id=\"getLatestQuestionsButton\">\n        <mdl-button primary raised @click=\"getLatestQuestionsCreatedByMe()\">獲取我最近創建的題目</mdl-button>\n      </div>\n\n      <div class=\"flex-column\" style=\"overflow-y: auto;margin-bottom:60px; flex: 1\">\n        <div class=\"question\" v-for=\"q in questionInbox.questions\" track-by=\"_id\">\n          <span v-html=\"q.context\"></span>\n          <div class=\"flex-row\">\n            <span style=\"color: #9E9E9E\">{{q._id | timestamp}}</span>\n            <span class=\"flex-row flex-center\" style=\"color:#FFC107;margin-left:auto\">{{q.difficulty}}<i class=\"material-icons\" style=\"font-size: 18px\">star</i></span>\n          </div>\n        </div>\n      </div>\n\n\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'fabric'\nimport renderQuill from 'quill-render'\nimport Subject from '../../modules/Subjects'\nimport Language from '../../modules/Languages'\nimport Card from '../../components/reuseable/Card'\nimport store from '../../vuex/store'\nimport { setUserLanguage } from '../../vuex/actions'\nimport { getUserLanguage } from '../../vuex/getters'\n\nimport 'quill/dist/quill.snow.css'\nvar delayTimer\n\nexport default {\n  ready: function () {\n    this.newQuestion.language = this.getUserLanguage\n  },\n  components: {\n    Subject,\n    Card\n  },\n  methods: {\n    readImg: function (e) {\n      let c = this.$els.fabricprocess\n      var canvas = new window.fabric.Canvas(c, { width: 600, height: 300 })\n      c.fabric = canvas\n      var reader = new window.FileReader()\n      reader.onload = function (event) {\n        var imgObj = new window.Image()\n        imgObj.src = event.target.result\n        imgObj.onload = function () {\n          var image = new window.fabric.Image(imgObj)\n          image.set({\n            angle: 0,\n            padding: 10,\n            cornersize: 10,\n            height: 160,\n            width: imgObj.width * (160 / imgObj.height)\n          })\n          canvas.centerObject(image)\n          canvas.add(image)\n          canvas.renderAll()\n        }\n      }\n      reader.readAsDataURL(e.target.files[0])\n    },\n    outputImg: function () {\n      let c = this.$els.fabricprocess\n      let canvas = c.fabric\n      this.$http.get('/api/qiniu/uptoken').then(function (response) {\n        console.log(response.data.uptoken)\n        this.uploadImage(canvas.getObjects()[0].toDataURL(), response.data.uptoken)\n      })\n    },\n    publishQuestion: function () {\n      this.publishButton.disabled = true\n      if (this.checkComplete()) {\n        this.newQuestion.context = renderQuill(this.editorPreview.question.ops)\n        this.newQuestion.choices[0] = renderQuill(this.editorPreview.answer.mc[0].ops)\n        this.newQuestion.choices[1] = renderQuill(this.editorPreview.answer.mc[1].ops)\n        this.newQuestion.choices[2] = renderQuill(this.editorPreview.answer.mc[2].ops)\n        this.newQuestion.choices[3] = renderQuill(this.editorPreview.answer.mc[3].ops)\n        this.newQuestion.rawData = JSON.stringify(this.editorPreview)\n        this.$http.post('/api/manage-question/questions', this.newQuestion).then(function (response) {\n          this.$showToast('發佈成功')\n          this.publishButton.disabled = false\n          this.newQuestion.context = ''\n          this.newQuestion.choices = ['', '', '', '']\n          this.newQuestion.answer = {\n            mc: 1\n          }\n          this.editorPreview = {\n            question: { ops: [] },\n            answer: {\n              mc: [ { ops: [] }, { ops: [] }, { ops: [] }, { ops: [] } ]\n            }\n          }\n          this.$broadcast('clear-editor')\n          this.renderQuestionPreview('clear')\n          this.renderMcPreview('clear')\n          this.questionInbox.questions.push(response.data)\n        }, function (response) {\n          this.$showToast('發佈失敗')\n          this.publishButton.disabled = false\n          console.log(response)\n        })\n      } else {\n        this.publishButton.disabled = false\n        this.$showToast('信息不完整')\n      }\n    },\n    checkComplete: function () {\n      let contentComplete = this.editorPreview.question.ops.length !== 0\n      let answerComplete = this.editorPreview.answer.mc[0].ops.length !== 0 && this.editorPreview.answer.mc[1].ops.length !== 0 && this.editorPreview.answer.mc[2].ops.length !== 0 && this.editorPreview.answer.mc[3].ops.length !== 0\n\n      return (contentComplete && answerComplete)\n    },\n    addTag: function () {\n      if (this.tag.trim() !== '') {\n        if (this.newQuestion.tags.indexOf(this.tag) === -1) {\n          this.newQuestion.tags.push(this.tag)\n          this.tag = ''\n        } else {\n          this.tag = ''\n        }\n      }\n    },\n    removeTag: function (index) {\n      this.newQuestion.tags.splice(index, 1)\n    },\n    renderQuestionPreview: function (option) {\n      if (option === 'clear') {\n        window.document.querySelector('.question_preview').innerHTML = '<p></p>'\n      } else {\n        window.document.querySelector('.question_preview').innerHTML = renderQuill(this.editorPreview.question.ops)\n        setTimeout(function renderQuestionPreview () {\n          window.renderMathInElement(\n            document.querySelector('.question_preview'),\n            {\n              delimiters: [\n                {left: '$$', right: '$$', display: false}\n              ]\n            }\n          )\n        }, 0)\n      }\n    },\n    renderMcPreview: function (option) {\n      if (option === 'clear') {\n        window.document.getElementById('mc1').innerHTML = '<p></p>'\n        window.document.getElementById('mc2').innerHTML = '<p></p>'\n        window.document.getElementById('mc3').innerHTML = '<p></p>'\n        window.document.getElementById('mc4').innerHTML = '<p></p>'\n      } else {\n        window.document.getElementById('mc1').innerHTML = renderQuill(this.editorPreview.answer.mc[0].ops)\n        window.document.getElementById('mc2').innerHTML = renderQuill(this.editorPreview.answer.mc[1].ops)\n        window.document.getElementById('mc3').innerHTML = renderQuill(this.editorPreview.answer.mc[2].ops)\n        window.document.getElementById('mc4').innerHTML = renderQuill(this.editorPreview.answer.mc[3].ops)\n\n        setTimeout(function renderMcPreview () {\n          window.renderMathInElement(\n            document.getElementById('mc_preview'),\n            {\n              delimiters: [\n                {left: '$$', right: '$$', display: false}\n              ]\n            }\n          )\n        }, 0)\n      }\n    },\n    getLatestQuestionsCreatedByMe: function () {\n      this.$http.get('/api/manage-question/mine').then(function (response) {\n        document.getElementById('getLatestQuestionsButton').style.display = 'none'\n        this.questionInbox.questions = response.data\n      })\n    },\n    uploadImage: function (imageData, token) {\n      imageData = imageData.split(',')[1]\n      let uptoken = 'UpToken ' + token\n      this.$http.post('http://upload.qiniu.com/putb64/' + imageData.length * 0.75, imageData, {headers: {'Content-Type': 'application/octet-stream', 'Authorization': uptoken}}).then(function (response) {\n        console.log(response.data)\n        this.editorPreview.image.data = response.data.key\n        this.newQuestion.images.push(this.editorPreview.image)\n      })\n    }\n  },\n  data () {\n    return {\n      publishButton: {\n        disabled: false\n      },\n      questionInbox: {\n        questions: [],\n        show: false\n      },\n      subjects: Subject.subjects,\n      languages: Language.languages,\n      tag: '',\n      newQuestion: {\n        language: '',\n        type: 'mc',\n        subject: 'math',\n        tags: [],\n        tips: '',\n        difficulty: 1,\n        context: '',\n        choices: ['', '', '', ''],\n        images: [],\n        answer: {\n          mc: 0\n        },\n        rawData: ''\n      },\n      editorPreview: {\n        image: {\n          label: '',\n          type: 'qiniu',\n          data: '',\n          show: false\n        },\n        question: { ops: [] },\n        answer: {\n          mc: [ { ops: [] }, { ops: [] }, { ops: [] }, { ops: [] } ]\n        }\n      }\n    }\n  },\n  filters: {\n    'timestamp': function (input) {\n      return this.$options.filters.calendar(new Date(parseInt(input.toString().substring(0, 8), 16) * 1000), '')\n    }\n  },\n  watch: {\n    'editorPreview.question.ops': function () {\n      var self = this\n      clearTimeout(delayTimer)\n      delayTimer = setTimeout(function () {\n        self.renderQuestionPreview()\n      }, 500)\n    },\n    'editorPreview.answer.mc': function () {\n      var self = this\n      clearTimeout(delayTimer)\n      delayTimer = setTimeout(function () {\n        self.renderMcPreview()\n      }, 500)\n    }\n  },\n  store,\n  vuex: {\n    actions: {\n      setUserLanguage: setUserLanguage\n    },\n    getters: {\n      getUserLanguage: getUserLanguage\n    }\n  }\n}\n</script>\n<style>\n#create-mc-question .set_difficulty i {\n  width: 24px;\n  color: #aaa;\n  cursor: pointer;\n}\n\n#create-mc-question .difficulty_status {\n  color: #FFC107 !important\n}\n\n#create-mc-question .body_wrapper {\n  max-width: 800px;\n  margin:32px auto;\n}\n\n#create-mc-question .question_preview {\n  padding: 8px;\n  border-top:  1px solid #ccc;\n  min-height: 43px;\n  box-sizing: border-box;\n}\n\n#create-mc-question .question_preview, #create-mc-question .mc_content {\n  box-sizing: border-box;\n  cursor: text;\n  line-height: 1.42;\n  height: 100%;\n  outline: none;\n  overflow-y: auto;\n  padding: 12px 15px;\n  tab-size: 4;\n  -moz-tab-size: 4;\n  text-align: left;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n#create-mc-question .mc_content p,  #create-mc-question .mc_content ol, #create-mc-question .question_preview p,  #create-mc-question .question_preview ol{\n  margin: 0\n}\n\n#create-mc-question .toolbar_title {\n  padding: 8px;\n  margin: 0\n}\n\n#create-mc-question .mc_preview {\n  display: inline-block;\n  width: 100%\n}\n\n#create-mc-question .mc_label {\n  padding: 16px;\n}\n\n#create-mc-question .mc_content {\n  padding-bottom: 16px;\n}\n\n#create-mc-question .questions_inbox {\n  position: fixed;\n  right: -360px;\n  top: 55px;\n  background: #fff;\n  width: 360px;\n  box-shadow: 0 0 12px #aaa;\n  height: 100%;\n  transition: right 0.2s;\n}\n\n#create-mc-question .questions_inbox.show {\n  right: 0;\n}\n\n#create-mc-question .questions_inbox .question {\n  padding: 8px 16px;\n  border-bottom: 1px solid #eee\n}\n\n#create-mc-question .mc_preview {\n  cursor: pointer;\n}\n\n#create-mc-question .mc_preview .hightlight-answer .card {\n  background-color: #009688;\n  color: #fff\n}\n\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Create-mc-question.vue?35628c88\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#create-mc-question .set_difficulty i{width:24px;color:#aaa;cursor:pointer}#create-mc-question .difficulty_status{color:#ffc107!important}#create-mc-question .body_wrapper{max-width:800px;margin:32px auto}#create-mc-question .question_preview{padding:8px;border-top:1px solid #ccc;min-height:43px;box-sizing:border-box}#create-mc-question .mc_content,#create-mc-question .question_preview{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;-o-tab-size:4;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}#create-mc-question .mc_content ol,#create-mc-question .mc_content p,#create-mc-question .question_preview ol,#create-mc-question .question_preview p{margin:0}#create-mc-question .toolbar_title{padding:8px;margin:0}#create-mc-question .mc_preview{display:inline-block;width:100%}#create-mc-question .mc_label{padding:16px}#create-mc-question .mc_content{padding-bottom:16px}#create-mc-question .questions_inbox{position:fixed;right:-360px;top:55px;background:#fff;width:360px;box-shadow:0 0 12px #aaa;height:100%;-webkit-transition:right .2s;transition:right .2s}#create-mc-question .questions_inbox.show{right:0}#create-mc-question .questions_inbox .question{padding:8px 16px;border-bottom:1px solid #eee}#create-mc-question .mc_preview{cursor:pointer}#create-mc-question .mc_preview .hightlight-answer .card{background-color:#009688;color:#fff}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/create-question/Create-mc-question.vue\"],\"names\":[],\"mappings\":\"AAsYA,sCACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AAED,uCACE,uBAAyB,CAC1B,AAED,kCACE,gBAAiB,AACjB,gBAAiB,CAClB,AAED,sCACE,YAAa,AACb,0BAA4B,AAC5B,gBAAiB,AACjB,qBAAuB,CACxB,AAED,sEACE,sBAAuB,AACvB,YAAa,AACb,iBAAkB,AAClB,YAAa,AACb,aAAc,AACd,gBAAiB,AACjB,kBAAmB,AACnB,cAAe,AACZ,WAAY,AACf,gBAAiB,AACjB,gBAAiB,AACjB,qBAAsB,AACtB,oBAAsB,CACvB,AACD,sJACE,QAAS,CACV,AAED,mCACE,YAAa,AACb,QAAS,CACV,AAED,gCACE,qBAAsB,AACtB,UAAW,CACZ,AAED,8BACE,YAAc,CACf,AAED,gCACE,mBAAqB,CACtB,AAED,qCACE,eAAgB,AAChB,aAAc,AACd,SAAU,AACV,gBAAiB,AACjB,YAAa,AACb,yBAA0B,AAC1B,YAAa,AACb,6BAA+B,AAC/B,oBAAuB,CACxB,AAED,0CACE,OAAS,CACV,AAED,+CACE,iBAAkB,AAClB,4BAA6B,CAC9B,AAED,gCACE,cAAgB,CACjB,AAED,yDACE,yBAA0B,AAC1B,UAAW,CACZ\",\"file\":\"Create-mc-question.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#create-mc-question .set_difficulty i {\\n  width: 24px;\\n  color: #aaa;\\n  cursor: pointer;\\n}\\n\\n#create-mc-question .difficulty_status {\\n  color: #FFC107 !important\\n}\\n\\n#create-mc-question .body_wrapper {\\n  max-width: 800px;\\n  margin:32px auto;\\n}\\n\\n#create-mc-question .question_preview {\\n  padding: 8px;\\n  border-top:  1px solid #ccc;\\n  min-height: 43px;\\n  box-sizing: border-box;\\n}\\n\\n#create-mc-question .question_preview, #create-mc-question .mc_content {\\n  box-sizing: border-box;\\n  cursor: text;\\n  line-height: 1.42;\\n  height: 100%;\\n  outline: none;\\n  overflow-y: auto;\\n  padding: 12px 15px;\\n  -o-tab-size: 4;\\n     tab-size: 4;\\n  -moz-tab-size: 4;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n#create-mc-question .mc_content p,  #create-mc-question .mc_content ol, #create-mc-question .question_preview p,  #create-mc-question .question_preview ol{\\n  margin: 0\\n}\\n\\n#create-mc-question .toolbar_title {\\n  padding: 8px;\\n  margin: 0\\n}\\n\\n#create-mc-question .mc_preview {\\n  display: inline-block;\\n  width: 100%\\n}\\n\\n#create-mc-question .mc_label {\\n  padding: 16px;\\n}\\n\\n#create-mc-question .mc_content {\\n  padding-bottom: 16px;\\n}\\n\\n#create-mc-question .questions_inbox {\\n  position: fixed;\\n  right: -360px;\\n  top: 55px;\\n  background: #fff;\\n  width: 360px;\\n  box-shadow: 0 0 12px #aaa;\\n  height: 100%;\\n  -webkit-transition: right 0.2s;\\n  transition: right 0.2s;\\n}\\n\\n#create-mc-question .questions_inbox.show {\\n  right: 0;\\n}\\n\\n#create-mc-question .questions_inbox .question {\\n  padding: 8px 16px;\\n  border-bottom: 1px solid #eee\\n}\\n\\n#create-mc-question .mc_preview {\\n  cursor: pointer;\\n}\\n\\n#create-mc-question .mc_preview .hightlight-answer .card {\\n  background-color: #009688;\\n  color: #fff\\n}\\n\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/create-question/Create-mc-question.vue\n ** module id = 393\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/create-question/Create-mc-question.vue\n ** module id = 423\n ** module chunks = 5\n **/","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.6.3\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [ ];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  /**\n   * Adds objects to collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * Objects should be instances of (or inherit from) fabric.Object\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      this._onObjectAdded(arguments[i]);\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        objects.splice(index, 1);\n        this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Iteration happens in reverse order (for performance reasons).\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects(),\n        i = objects.length;\n    while (i--) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {Any} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length,\n          obj = global || fabric.window;\n\n      for (var i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {Any} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [ ];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [ ],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        if (klass.async) {\n          klass.fromObject(o, function (obj, error) {\n            if (!error) {\n              enlivenedObjects[index] = obj;\n              reviver && reviver(o, enlivenedObjects[index]);\n            }\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedObjects[index] = klass.fromObject(o);\n          reviver && reviver(o, enlivenedObjects[index]);\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.setSourcePath(path);\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype;\n\n      for (var i = proto.stateProperties.length; i--; ) {\n\n        var propName = proto.stateProperties[i],\n            capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1),\n            setterName = 'set' + capitalizedPropName,\n            getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1);\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (var i = 3, l = imageData.data.length; i < l; i += 4) {\n        var temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} fontFamily\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl/(rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl /(rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( - cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( - sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[ ], [ ], [ ], [ ]],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound = [ ], bounds = [ ],\n    segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot),\n    boundCopy = [[ ], [ ]];\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      boundCopy[0].x = bound[0].x + fx;\n      boundCopy[0].y = bound[0].y + fy;\n      boundCopy[1].x = bound[1].x + fx;\n      boundCopy[1].y = bound[1].y + fy;\n      bounds.push(boundCopy[0]);\n      bounds.push(boundCopy[1]);\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [ ],\n        bounds = [[ ], [ ]],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {Any} searchElement\n     * @param {Number} [fromIndex]\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [ ];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [ ], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [initial] Object to use as the first argument to the first call of the callback\n     * @return {Any}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [ ];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {Any}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {Any}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n\n  /**\n   * Copies all enumerable properties of one object to another\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source) {\n    // JScript DontEnum bug is not taken care of\n    for (var property in source) {\n      destination[property] = source[property];\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object) {\n    return extend({ }, object);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n}());\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var fn = this.constructor.superclass.prototype[methodName];\n    return (arguments.length > 1)\n      ? fn.apply(this, slice.call(arguments, 1))\n      : fn.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [ ];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      element.addEventListener(eventName, handler, false);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      element.removeEventListener(eventName, handler, false);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [ ];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [ ];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n    return (typeof event.clientX !== unknown ? event.clientX : 0);\n  },\n\n  pointerY = function(event) {\n    return (typeof event.clientY !== unknown ? event.clientY : 0);\n  };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {Any} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {Any} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* jshint ignore:start */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* jshint ignore:end */\n\n\n(function() {\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || function() { },\n          abort = options.abort || function() { return false; },\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start);\n        if (abort()) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        onChange(easing(currentTime, startValue, byValue, duration));\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d/2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2/2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5/2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n}());\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      capitalize = fabric.util.string.capitalize,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n        return parseFloat(n);\n      });\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var angle = args[0],\n          x = (args.length === 3) ? args[1] : 0,\n          y = (args.length === 3) ? args[2] : 0;\n\n      matrix[0] = Math.cos(angle);\n      matrix[1] = Math.sin(angle);\n      matrix[2] = -Math.sin(angle);\n      matrix[3] = Math.cos(angle);\n      matrix[4] = x - (matrix[0] * x + matrix[2] * y);\n      matrix[5] = y - (matrix[1] * x + matrix[3] * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewXMatrix(matrix, args) {\n      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function skewYMatrix(matrix, args) {\n      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [ ];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              return (match !== '' && match != null);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewXMatrix(matrix, args);\n            break;\n          case 'skewY':\n            skewYMatrix(matrix, args);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = normalizeAttr(pair[0].trim().toLowerCase());\n      value = normalizeValue(attr, pair[1].trim());\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = normalizeAttr(prop.toLowerCase());\n      value = normalizeValue(attr, style[prop]);\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = doc.getElementsByTagName('use'), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        while (el2.firstChild != null) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.tagName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]),\n    minY = -parseFloat(viewBoxAttr[2]),\n    viewBoxWidth = parseFloat(viewBoxAttr[3]),\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.tagName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      while (element.firstChild != null) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished; It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   */\n  fabric.parseSVGDocument = (function() {\n\n    function hasAncestorWithNodeName(element, nodeName) {\n      while (element && (element = element.parentNode)) {\n        if (nodeName.test(element.nodeName) && !element.getAttribute('instantiated_by_use')) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return function(doc, callback, reviver) {\n      if (!doc) {\n        return;\n      }\n\n      parseUseDirectives(doc);\n\n      var startTime = new Date(),\n          svgUid =  fabric.Object.__uid++,\n          options = applyViewboxTransform(doc),\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\n      options.svgUid = svgUid;\n\n      if (descendants.length === 0 && fabric.isLikelyNode) {\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n        var arr = [ ];\n        for (var i = 0, len = descendants.length; i < len; i++) {\n          arr[i] = descendants[i];\n        }\n        descendants = arr;\n      }\n\n      var elements = descendants.filter(function(el) {\n        applyViewboxTransform(el);\n        return reAllowedSVGTagNames.test(el.tagName) &&\n              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n      });\n\n      if (!elements || (elements && !elements.length)) {\n        callback && callback([], {});\n        return;\n      }\n\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n      // Precedence of rules:   style > class > attribute\n      fabric.parseElements(elements, function(instances) {\n        fabric.documentParsingTime = new Date() - startTime;\n        if (callback) {\n          callback(instances, options);\n        }\n      }, clone(options), reviver);\n    };\n  })();\n\n  /**\n   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n   * @namespace\n   */\n  var svgCache = {\n\n    /**\n     * @param {String} name\n     * @param {Function} callback\n     */\n    has: function (name, callback) {\n      callback(false);\n    },\n\n    get: function () {\n      /* NOOP */\n    },\n\n    set: function () {\n      /* NOOP */\n    }\n  };\n\n  /**\n   * @private\n   */\n  function _enlivenCachedObject(cachedObject) {\n\n    var objects = cachedObject.objects,\n        options = cachedObject.options;\n\n    objects = objects.map(function (o) {\n      return fabric[capitalize(o.type)].fromObject(o);\n    });\n\n    return ({ objects: objects, options: options });\n  }\n\n  /**\n   * @private\n   */\n  function _createSVGPattern(markup, canvas, property) {\n    if (canvas[property] && canvas[property].toSVG) {\n      markup.push(\n        '\\t<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n          'width=\"', canvas[property].source.width,\n          '\" height=\"', canvas[property].source.height,\n          '\" patternUnits=\"userSpaceOnUse\">\\n',\n        '\\t\\t<image x=\"0\" y=\"0\" ',\n        'width=\"', canvas[property].source.width,\n        '\" height=\"', canvas[property].source.height,\n        '\" xlink:href=\"', canvas[property].source.src,\n        '\"></image>\\n\\t</pattern>\\n'\n      );\n    }\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var linearGradientEls = doc.getElementsByTagName('linearGradient'),\n          radialGradientEls = doc.getElementsByTagName('radialGradient'),\n          el, i, j = 0, id, xlink, elList = [ ],\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      elList.length = linearGradientEls.length + radialGradientEls.length;\n      i = linearGradientEls.length;\n      while (i--) {\n        elList[j++] = linearGradientEls[i];\n      }\n      i = radialGradientEls.length;\n      while (i--) {\n        elList[j++] = radialGradientEls[i];\n      }\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) {\n          attr = normalizeAttr(attr);\n          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      if (ownAttributes.font) {\n        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n      }\n      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver) {\n      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [ ], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i+=2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n          ruleObj = { }, declaration = match[2].trim(),\n          propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = normalizeAttr(pair[0]),\n                value = normalizeValue(property, pair[1], pair[0]);\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            allRules[_rule] = fabric.util.object.clone(ruleObj);\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects. Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromURL: function(url, callback, reviver) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      svgCache.has(url, function (hasUrl) {\n        if (hasUrl) {\n          svgCache.get(url, function (value) {\n            var enlivedRecord = _enlivenCachedObject(value);\n            callback(enlivedRecord.objects, enlivedRecord.options);\n          });\n        }\n        else {\n          new fabric.util.request(url, {\n            method: 'get',\n            onComplete: onComplete\n          });\n        }\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n          svgCache.set(url, {\n            objects: fabric.util.array.invoke(results, 'toObject'),\n            options: options\n          });\n          callback && callback(results, options);\n        }, reviver);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromString: function(string, callback, reviver) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n        callback(results, options);\n      }, reviver);\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function(objects) {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths;\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          //jscs:disable validateIndentation\n          '\\t\\t@font-face {\\n',\n            '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n            '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n          //jscs:enable validateIndentation\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          //jscs:disable validateIndentation\n          '\\t<style type=\"text/css\">',\n            '<![CDATA[\\n',\n              markup,\n            ']]>',\n          '</style>\\n'\n          //jscs:enable validateIndentation\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function(canvas) {\n      var markup = [ ];\n\n      _createSVGPattern(markup, canvas, 'backgroundColor');\n      _createSVGPattern(markup, canvas, 'overlayColor');\n\n      return markup.join('');\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_this, i) {\n      setTimeout(function() {\n        _this.createObject(_this.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName)];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return new Point(this.x + (that.x - this.x)/2, this.y + (that.y - this.y)/2);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.points.push(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length;\n\n    for (var i = 0; i < length; i++) {\n      var b1 = points[i],\n          b2 = points[(i + 1) % length],\n          inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {Number} r1\n   * @param {Number} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255, g /= 255, b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color represenation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color represenation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color represenation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1/6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1/2) {\n      return q;\n    }\n    if (t < 2/3) {\n      return p + (q - p) * (2/3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6);\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStop) {\n      for (var position in colorStop) {\n        var color = new fabric.Color(colorStop[position]);\n        this.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @return {Object}\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @param {Boolean} normalize Whether coords should be normalized\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = fabric.util.object.clone(this.coords),\n          markup, commonAttributes;\n\n      // colorStops must be sorted ascending\n      this.colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          //jscs:disable validateIndentation\n          '<linearGradient ',\n            commonAttributes,\n            ' x1=\"', coords.x1,\n            '\" y1=\"', coords.y1,\n            '\" x2=\"', coords.x2,\n            '\" y2=\"', coords.y2,\n          '\">\\n'\n          //jscs:enable validateIndentation\n        ];\n      }\n      else if (this.type === 'radial') {\n        markup = [\n          //jscs:disable validateIndentation\n          '<radialGradient ',\n            commonAttributes,\n            ' cx=\"', coords.x2,\n            '\" cy=\"', coords.y2,\n            '\" r=\"', coords.r2,\n            '\" fx=\"', coords.x1,\n            '\" fy=\"', coords.y1,\n          '\">\\n'\n          //jscs:enable validateIndentation\n        ];\n      }\n\n      for (var i = 0; i < this.colorStops.length; i++) {\n        markup.push(\n          //jscs:disable validateIndentation\n          '<stop ',\n            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n            '\" style=\"stop-color:', this.colorStops[i].color,\n            (this.colorStops[i].opacity != null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n          '\"/>\\n'\n          //jscs:enable validateIndentation\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(parseFloat(offset), color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type = (el.nodeName === 'linearGradient' ? 'linear' : 'radial'),\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords = { }, ellipseMatrix;\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry/object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n/**\n * Pattern class\n * @class fabric.Pattern\n * @see {@link http://fabricjs.com/patterns|Pattern demo}\n * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n * @see {@link fabric.Pattern#initialize} for constructor definition\n */\nfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n  /**\n   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n   * @type String\n   * @default\n   */\n  repeat: 'repeat',\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX: 0,\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY: 0,\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @return {fabric.Pattern} thisArg\n   */\n  initialize: function(options) {\n    options || (options = { });\n\n    this.id = fabric.Object.__uid++;\n\n    if (options.source) {\n      if (typeof options.source === 'string') {\n        // function string\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\n        }\n        else {\n          // img src string\n          var _this = this;\n          this.source = fabric.util.createImage();\n          fabric.util.loadImage(options.source, function(img) {\n            _this.source = img;\n          });\n        }\n      }\n      else {\n        // img element\n        this.source = options.source;\n      }\n    }\n    if (options.repeat) {\n      this.repeat = options.repeat;\n    }\n    if (options.offsetX) {\n      this.offsetX = options.offsetX;\n    }\n    if (options.offsetY) {\n      this.offsetY = options.offsetY;\n    }\n  },\n\n  /**\n   * Returns object representation of a pattern\n   * @return {Object} Object representation of a pattern instance\n   */\n  toObject: function() {\n\n    var source;\n\n    // callback\n    if (typeof this.source === 'function') {\n      source = String(this.source);\n    }\n    // <img> element\n    else if (typeof this.source.src === 'string') {\n      source = this.source.src;\n    }\n    // <canvas> element\n    else if (typeof this.source === 'object' && this.source.toDataURL) {\n      source = this.source.toDataURL();\n    }\n\n    return {\n      source: source,\n      repeat: this.repeat,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY\n    };\n  },\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   * @param {fabric.Object} object\n   * @return {String} SVG representation of a pattern\n   */\n  toSVG: function(object) {\n    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n        patternWidth = patternSource.width / object.getWidth(),\n        patternHeight = patternSource.height / object.getHeight(),\n        patternOffsetX = this.offsetX / object.getWidth(),\n        patternOffsetY = this.offsetY / object.getHeight(),\n        patternImgSrc = '';\n    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n      patternHeight = 1;\n    }\n    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n      patternWidth = 1;\n    }\n    if (patternSource.src) {\n      patternImgSrc = patternSource.src;\n    }\n    else if (patternSource.toDataURL) {\n      patternImgSrc = patternSource.toDataURL();\n    }\n\n    return '<pattern id=\"SVGID_' + this.id +\n                  '\" x=\"' + patternOffsetX +\n                  '\" y=\"' + patternOffsetY +\n                  '\" width=\"' + patternWidth +\n                  '\" height=\"' + patternHeight + '\">\\n' +\n             '<image x=\"0\" y=\"0\"' +\n                    ' width=\"' + patternSource.width +\n                    '\" height=\"' + patternSource.height +\n                    '\" xlink:href=\"' + patternImgSrc +\n             '\"></image>\\n' +\n           '</pattern>\\n';\n  },\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive: function(ctx) {\n    var source = typeof this.source === 'function'\n      ? this.source()\n      : this.source;\n\n    // if the image failed to load, return, and allow rest to continue loading\n    if (!source) {\n      return '';\n    }\n\n    // if an image\n    if (typeof source.src !== 'undefined') {\n      if (!source.complete) {\n        return '';\n      }\n      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n        return '';\n      }\n    }\n    return ctx.createPattern(source, this.repeat);\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [ ],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: true,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected. When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: [1, 0, 0, 1, 0, 0],\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      this._objects = [];\n\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, this.renderAll.bind(this));\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, this.renderAll.bind(this));\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, this.renderAll.bind(this));\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, this.renderAll.bind(this));\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      if (color && color.source) {\n        var _this = this;\n        fabric.util.loadImage(color.source, function(img) {\n          _this[property] = new fabric.Pattern({\n            source: img,\n            repeat: color.repeat,\n            offsetX: color.offsetX,\n            offsetY: color.offsetY\n          });\n          callback && callback();\n        });\n      }\n      else {\n        this[property] = color;\n        callback && callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.document.createElement('canvas');\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      this._initCanvasElement(element);\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element\n     */\n    _initCanvasElement: function(element) {\n      fabric.util.createCanvasElement(element);\n\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      this._initCanvasElement(this.lowerCanvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this.getActiveGroup();\n      this.viewportTransform = vpt;\n      this.renderAll();\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].setCoords();\n      }\n      if (activeGroup) {\n        activeGroup.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point;\n      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n      this.viewportTransform[0] = value;\n      this.viewportTransform[3] = value;\n      var after = fabric.util.transformPoint(point, this.viewportTransform);\n      this.viewportTransform[4] += before.x - after.x;\n      this.viewportTransform[5] += before.y - after.y;\n      this.renderAll();\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      this.viewportTransform[4] = -point.x;\n      this.viewportTransform[5] = -point.y;\n      this.renderAll();\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * Returns currently selected object, if any\n     * @return {fabric.Object}\n     */\n    getActiveObject: function() {\n      return null;\n    },\n\n    /**\n     * Returns currently selected group of object, if any\n     * @return {fabric.Group}\n     */\n    getActiveGroup: function() {\n      return null;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared');\n      }\n\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      if (this.discardActiveGroup) {\n        this.discardActiveGroup();\n      }\n      if (this.discardActiveObject) {\n        this.discardActiveObject();\n      }\n      this.clearContext(this.contextContainer);\n      if (this.contextTop) {\n        this.clearContext(this.contextTop);\n      }\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * return objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [ ], activeGroupObjects = [ ];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        activeGroup && activeGroup._set('_objects', activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @param {Boolean} [allOnTop] Whether we want to force all images to be rendered on the top canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer, objsToRender;\n\n      if (this.contextTop && this.selection && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n      }\n\n      this.clearContext(canvasToDrawOn);\n\n      this.fire('before:render');\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, canvasToDrawOn);\n      }\n      this._renderBackground(canvasToDrawOn);\n\n      canvasToDrawOn.save();\n      objsToRender = this._chooseObjectsToRender();\n      //apply viewport transform once for all rendering process\n      canvasToDrawOn.transform.apply(canvasToDrawOn, this.viewportTransform);\n      this._renderObjects(canvasToDrawOn, objsToRender);\n      if (!this.preserveObjectStacking) {\n        objsToRender = [this.getActiveGroup(), this.getActiveObject()];\n        this._renderObjects(canvasToDrawOn, objsToRender);\n      }\n      canvasToDrawOn.restore();\n\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(canvasToDrawOn);\n      }\n      if (this.clipTo) {\n        canvasToDrawOn.restore();\n      }\n      this._renderOverlay(canvasToDrawOn);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(canvasToDrawOn);\n      }\n\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop || this.contextContainer;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection();\n      }\n\n      this.fire('after:render');\n\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = fabric.util.invertTransform(this.viewportTransform);\n      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay());\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n          return !object.excludeFromExport;\n        }).map(function(instance) {\n          return this._toObject(instance, methodName, propertiesToInclude);\n        }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function() {\n      var data = {\n        background: (this.backgroundColor && this.backgroundColor.toObject)\n          ? this.backgroundColor.toObject()\n          : this.backgroundColor\n      };\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject()\n          : this.overlayColor;\n      }\n      if (this.backgroundImage) {\n        data.backgroundImage = this.backgroundImage.toObject();\n      }\n      if (this.overlayImage) {\n        data.overlayImage = this.overlayImage.toObject();\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          (this.backgroundColor && !this.backgroundColor.toLive\n            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n            : null),\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>',\n          fabric.createSVGFontFacesMarkup(this.getObjects()),\n          fabric.createSVGRefElementsMarkup(this),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, originalProperties;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        //If the object is in a selection group, simulate what would happen to that\n        //object when the group is deselected\n        originalProperties = this._realizeGroupTransformOnObject(instance);\n        markup.push(instance.toSVG(reviver));\n        this._unwindGroupTransformOnObject(instance, originalProperties);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      if (this[property] && this[property].source) {\n        markup.push(\n          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n            'width=\"',\n              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n                ? this[property].source.width\n                : this.width),\n            '\" height=\"',\n              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n                ? this[property].source.height\n                : this.height),\n            '\" fill=\"url(#' + property + 'Pattern)\"',\n          '></rect>\\n'\n        );\n      }\n      else if (this[property] && property === 'overlayColor') {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== 0) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this.getActiveGroup ? this.getActiveGroup() : null,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== this._objects.length - 1) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color:            'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width:            1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow:           null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap:    'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin:   'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray:  null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur;\n    ctx.shadowOffsetX = this.shadow.offsetX;\n    ctx.shadowOffsetY = this.shadow.offsetY;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [ ];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        p1.x -= 0.5;\n        p2.x += 0.5;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (var i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @param {Number} minX\n     * @param {Number} minY\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [],\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y);\n\n      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n      for (var i = 1, len = points.length; i < len; i++) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        p1 = new fabric.Point(points[i].x, points[i].y);\n        if ((i + 1) < points.length) {\n          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n        }\n      }\n      path.push('L ', p1.x, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n                   fill: null,\n                   stroke: this.color,\n                   strokeWidth: this.width,\n                   strokeLineCap: this.strokeLineCap,\n                   strokeLineJoin: this.strokeLineJoin,\n                   strokeDashArray: this.strokeDashArray,\n                   originX: 'center',\n                   originY: 'center'\n                 });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [ ];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [ ];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [ ];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [ ];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [ ];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [ ];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData);\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction()\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable last rendered selection independently of stack position\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.3\n     * @type String\n     * @default\n     */\n    lastRenderedKey:        'altKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [ ],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var pointer = point || this.getPointer(e, true),\n          xy = this._normalizePointer(target, pointer);\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var lt, m;\n\n      m = fabric.util.multiplyTransformMatrices(\n            this.viewportTransform,\n            object.calcTransformMatrix());\n\n      m = fabric.util.invertTransform(m);\n      pointer = fabric.util.transformPoint(pointer, m , false);\n      lt = fabric.util.transformPoint(object.getCenterPoint(), m , false);\n      pointer.x -= lt.x;\n      pointer.y -= lt.y;\n      return { x: pointer.x, y: pointer.y };\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          shouldTransform = target.group && target.group === this.getActiveGroup();\n\n      target.hasBorders = target.transparentCorners = false;\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      if (shouldTransform) {\n        ctx.transform.apply(ctx, target.group.calcTransformMatrix());\n      }\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by],\n\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > target.padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += target.padding;\n        }\n        else {\n          localMouse.x -= target.padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > target.padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += target.padding;\n        }\n        else {\n          localMouse.y -= target.padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta);\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      t.target.angle = angle % 360;\n      return true;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     */\n    _drawSelection: function () {\n      var ctx = this.contextTop,\n          groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      ctx.fillStyle = this.selectionColor;\n\n      ctx.fillRect(\n        groupSelector.ex - ((left > 0) ? 0 : -left),\n        groupSelector.ey - ((top > 0) ? 0 : -top),\n        aleft,\n        atop\n      );\n\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0: aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0: atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * @private\n     */\n    _isLastRenderedObject: function(pointer, e) {\n      var lastRendered = this.lastRenderedWithControls;\n      return (\n        (this.preserveObjectStacking || e[this.lastRenderedKey]) &&\n        lastRendered &&\n        lastRendered.visible &&\n        (this.containsPoint(null, lastRendered, pointer) ||\n        lastRendered._findTargetCorner(pointer)));\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var pointer = this.getPointer(e, true),\n      activeGroup = this.getActiveGroup();\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n        return activeGroup;\n      }\n\n      var objects = this._objects;\n      this.targets = [ ];\n\n      if (this._isLastRenderedObject(pointer, e)) {\n        objects = [this.lastRenderedWithControls];\n      }\n\n      var target = this._searchPossibleTargets(objects, pointer);\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      if (target) {\n        if (this._hoveredTarget !== target) {\n          if (this._hoveredTarget) {\n            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n            this._hoveredTarget.fire('mouseout');\n          }\n          this.fire('mouse:over', { target: target, e: e });\n          target.fire('mouseover');\n          this._hoveredTarget = target;\n        }\n      }\n      else if (this._hoveredTarget) {\n        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n        this._hoveredTarget.fire('mouseout');\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * @param {Event} e\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = fabric.util.transformPoint(\n          pointer,\n          fabric.util.invertTransform(this.viewportTransform)\n        );\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      this.upperCanvasEl = this._createCanvasElement();\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      this._setActiveObject(object);\n      this.renderAll();\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      this._discardActiveObject();\n      this.renderAll();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one\n     * @param {fabric.Group} group Group to set as a current one\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group\n     * @return {fabric.Canvas} thisArg\n     */\n    discardActiveGroup: function (e) {\n      this._discardActiveGroup();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length;\n      for ( ; i < len; i++) {\n        allObjects[i].set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events\n     * @return {fabric.Canvas} thisArg\n     */\n    deactivateAllWithDispatch: function (e) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n      if (activeObject) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this.deactivateAll();\n      if (activeObject) {\n        this.fire('selection:cleared', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.callSuper('dispose');\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n        this.lastRenderedWithControls = this._objects[i];\n      }\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      if (obj === this.lastRenderedWithControls) {\n        delete this.lastRenderedWithControls;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      delete this.lastRenderedWithControls;\n      return this.callSuper('clear');\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n    mt: 0, // n\n    tr: 1, // ne\n    mr: 2, // e\n    br: 3, // se\n    mb: 4, // s\n    bl: 5, // sw\n    ml: 6, // w\n    tl: 7 // nw\n  },\n  addListener = fabric.util.addListener,\n  removeListener = fabric.util.removeListener;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mousewheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js wheel event\n     * @param {Event} [self] Inner Event object\n     */\n    _onMouseWheel: function(e, self) {\n      this.__onMouseWheel && this.__onMouseWheel(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp);\n      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform();\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._handleCursorAndEvent(e, target, 'up');\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * set cursor for mouse up and handle mouseUp event\n     * @param {Event} e event from mouse\n     * @param {fabric.Object} target receiving event\n     * @param {String} eventType event to fire (up, down or move)\n     */\n    _handleCursorAndEvent: function(e, target, eventType) {\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, eventType, target ? target : null);\n    },\n\n    /**\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     */\n    _handleEvent: function(e, eventType, targetObj) {\n      var target = typeof targetObj === undefined ? this.findTarget(e) : targetObj,\n          targets = this.targets || [ ],\n          options = { e: e, target: target, subTargets: targets };\n\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _finalizeCurrentTransform: function() {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target });\n        target.fire('modified');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var ivt = fabric.util.invertTransform(this.viewportTransform),\n          pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var ivt = fabric.util.invertTransform(this.viewportTransform),\n            pointer = fabric.util.transformPoint(this.getPointer(e, true), ivt);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clic ked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      // accept only left clicks\n      var isLeftClick  = 'which' in e ? e.which === 1 : e.button === 0;\n      if (!isLeftClick && !fabric.isTouchSupported) {\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var target = this.findTarget(e),\n          pointer = this.getPointer(e, true);\n\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this._clearSelection(e, target, pointer);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n\n        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n          this.deactivateAll();\n          target.selectable && this.setActiveObject(target, e);\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that active image is placed on the top canvas\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     */\n    _clearSelection: function(e, target, pointer) {\n      this.deactivateAllWithDispatch(e);\n\n      if (target && target.selectable) {\n        this.setActiveObject(target, e);\n      }\n      else if (this.selection) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false,\n      transform.target.isMoving = true;\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      // rotate object only if shift key is not pressed\n      // and if it is not a group we are transforming\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor;\n      if (!target.selectable) {\n        //let's skip _findTargetCorner if object is not selectable\n        this.setCursor(hoverCursor);\n      }\n      else {\n        var activeGroup = this.getActiveGroup(),\n            // only show proper corner when group selection is not active\n            corner = target._findTargetCorner\n                      && (!activeGroup || !activeGroup.contains(target))\n                      && target._findTargetCorner(this.getPointer(e, true));\n\n        if (!corner) {\n          this.setCursor(hoverCursor);\n        }\n        else {\n          this._setCornerCursor(corner, target, e);\n        }\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0));\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [ this._activeObject, target ]\n            : [ target, this._activeObject ];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [ ],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   */\n  toDataURL: function (options) {\n    options || (options = { });\n\n    var format = options.format || 'png',\n        quality = options.quality || 1,\n        multiplier = options.multiplier || 1,\n        cropping = {\n          left: options.left,\n          top: options.top,\n          width: options.width,\n          height: options.height\n        };\n\n    if (this._isRetinaScaling()) {\n      multiplier *= fabric.devicePixelRatio;\n    }\n\n    if (multiplier !== 1) {\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    }\n    else {\n      return this.__toDataURL(format, quality, cropping);\n    }\n  },\n\n  /**\n   * @private\n   */\n  __toDataURL: function(format, quality, cropping) {\n\n    this.renderAll();\n\n    var canvasEl = this.contextContainer.canvas,\n        croppedCanvasEl = this.__getCroppedCanvas(canvasEl, cropping);\n\n    // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n    if (format === 'jpg') {\n      format = 'jpeg';\n    }\n\n    var data = (fabric.StaticCanvas.supports('toDataURLWithQuality'))\n              ? (croppedCanvasEl || canvasEl).toDataURL('image/' + format, quality)\n              : (croppedCanvasEl || canvasEl).toDataURL('image/' + format);\n\n    if (croppedCanvasEl) {\n      croppedCanvasEl = null;\n    }\n\n    return data;\n  },\n\n  /**\n   * @private\n   */\n  __getCroppedCanvas: function(canvasEl, cropping) {\n\n    var croppedCanvasEl,\n        croppedCtx,\n        shouldCrop = 'left' in cropping ||\n                     'top' in cropping ||\n                     'width' in cropping ||\n                     'height' in cropping;\n\n    if (shouldCrop) {\n\n      croppedCanvasEl = fabric.util.createCanvasElement();\n      croppedCtx = croppedCanvasEl.getContext('2d');\n\n      croppedCanvasEl.width = cropping.width || this.width;\n      croppedCanvasEl.height = cropping.height || this.height;\n\n      croppedCtx.drawImage(canvasEl, -cropping.left || 0, -cropping.top || 0);\n    }\n\n    return croppedCanvasEl;\n  },\n\n  /**\n   * @private\n   */\n  __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n    var origWidth = this.getWidth(),\n        origHeight = this.getHeight(),\n        scaledWidth = origWidth * multiplier,\n        scaledHeight = origHeight * multiplier,\n        activeObject = this.getActiveObject(),\n        activeGroup = this.getActiveGroup(),\n        zoom = this.getZoom(),\n        newZoom = zoom * multiplier / fabric.devicePixelRatio;\n\n    if (multiplier > 1) {\n      this.setDimensions({ width: scaledWidth, height: scaledHeight });\n    }\n\n    this.setZoom(newZoom);\n\n    if (cropping.left) {\n      cropping.left *= multiplier;\n    }\n    if (cropping.top) {\n      cropping.top *= multiplier;\n    }\n    if (cropping.width) {\n      cropping.width *= multiplier;\n    }\n    else if (multiplier < 1) {\n      cropping.width = scaledWidth;\n    }\n    if (cropping.height) {\n      cropping.height *= multiplier;\n    }\n    else if (multiplier < 1) {\n      cropping.height = scaledHeight;\n    }\n\n    if (activeGroup) {\n      // not removing group due to complications with restoring it with correct state afterwords\n      this._tempRemoveBordersControlsFromGroup(activeGroup);\n    }\n    else if (activeObject && this.deactivateAll) {\n      this.deactivateAll();\n    }\n\n    var data = this.__toDataURL(format, quality, cropping);\n    if (activeGroup) {\n      this._restoreBordersControlsOnGroup(activeGroup);\n    }\n    else if (activeObject && this.setActiveObject) {\n      this.setActiveObject(activeObject);\n    }\n    this.setZoom(zoom);\n    //setDimensions with no option object is taking care of:\n    //this.width, this.height, this.renderAll()\n    this.setDimensions({ width: origWidth, height: origHeight });\n\n    return data;\n  },\n\n  /**\n   * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n   * @deprecated since 1.0.13\n   * @param {String} format (png|jpeg)\n   * @param {Number} multiplier\n   * @param {Number} quality (0..1)\n   * @return {String}\n   */\n  toDataURLWithMultiplier: function (format, multiplier, quality) {\n    return this.toDataURL({\n      format: format,\n      multiplier: multiplier,\n      quality: quality\n    });\n  },\n\n  /**\n   * @private\n   */\n  _tempRemoveBordersControlsFromGroup: function(group) {\n    group.origHasControls = group.hasControls;\n    group.origBorderColor = group.borderColor;\n\n    group.hasControls = true;\n    group.borderColor = 'rgba(0,0,0,0)';\n\n    group.forEachObject(function(o) {\n      o.origBorderColor = o.borderColor;\n      o.borderColor = 'rgba(0,0,0,0)';\n    });\n  },\n\n  /**\n   * @private\n   */\n  _restoreBordersControlsOnGroup: function(group) {\n    group.hideControls = group.origHideControls;\n    group.borderColor = group.origBorderColor;\n\n    group.forEachObject(function(o) {\n      o.borderColor = o.origBorderColor;\n      delete o.origBorderColor;\n    });\n  }\n});\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    this.clear();\n\n    var _this = this;\n    this._enlivenObjects(serialized.objects, function () {\n      _this._setBgOverlay(serialized, function () {\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        for (var prop in serialized) {\n          _this[prop] = serialized[prop];\n        }\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var _this = this,\n        loaded = {\n          backgroundColor: false,\n          overlayColor: false,\n          backgroundImage: false,\n          overlayImage: false\n        };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        _this.renderAll();\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\n    cbIfLoaded();\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.Image.fromObject(value, function(img) {\n        _this[property] = img;\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    var _this = this;\n\n    if (!objects || objects.length === 0) {\n      callback && callback();\n      return;\n    }\n\n    var renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      enlivenedObjects.forEach(function(obj, index) {\n        _this.insertAt(obj, index, true);\n      });\n\n      _this.renderOnAddRemove = renderOnAddRemove;\n      callback && callback();\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   */\n  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object. Only works with text objects at the moment.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n\n    excludeFromExport:          false,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:  (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'alignX alignY meetOrSlice skewX skewY'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initGradient: function(options) {\n      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n        this.set('fill', new fabric.Gradient(options.fill));\n      }\n      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n        this.set('stroke', new fabric.Gradient(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initPattern: function(options) {\n      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n        this.set('fill', new fabric.Pattern(options.fill));\n      }\n      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n        this.set('stroke', new fabric.Pattern(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initClipping: function(options) {\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\n        return;\n      }\n\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n      if (typeof functionBody !== 'undefined') {\n        this.clipTo = new Function('ctx', functionBody);\n      }\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      for (var prop in options) {\n        this.set(prop, options[prop]);\n      }\n      this._initGradient(options);\n      this._initPattern(options);\n      this._initClipping(options);\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && this.canvas.preserveObjectStacking && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Basic getter\n     * @param {String} property Property name\n     * @return {Any} value of a property\n     */\n    get: function(property) {\n      return this[property];\n    },\n\n    /**\n     * @private\n     */\n    _setObject: function(obj) {\n      for (var prop in obj) {\n        this._set(prop, obj[prop]);\n      }\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      if (typeof key === 'object') {\n        this._setObject(key);\n      }\n      else {\n        if (typeof value === 'function' && key !== 'clipTo') {\n          this._set(key, value(this.get(key)));\n        }\n        else {\n          this._set(key, value);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n\n      this[key] = value;\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1/Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Toggles specified property from `true` to `false` or from `false` to `true`\n     * @param {String} property Property to toggle\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    toggle: function(property) {\n      var value = this.get(property);\n      if (typeof value === 'boolean') {\n        this.set(property, !value);\n      }\n      return this;\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value // TODO\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if ((this.width === 0 && this.height === 0) || !this.visible) {\n        return;\n      }\n\n      ctx.save();\n\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._render(ctx, noTransform);\n      this.clipTo && ctx.restore();\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group) {\n        this.group._setOpacity(ctx);\n      }\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      if (!this.active || noTransform\n          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 / this.borderScaleFactor;\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1;\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (this.scaleX + this.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * this.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * this.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      if (this.fill.gradientTransform) {\n        var g = this.fill.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.fill.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.fill.offsetX || 0,\n          -this.height / 2 + this.fill.offsetY || 0);\n      }\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      if (this.stroke.gradientTransform) {\n        var g = this.stroke.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.stroke.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.stroke.offsetX || 0,\n          -this.height / 2 + this.stroke.offsetY || 0);\n      }\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback) {\n      var dataUrl = this.toDataURL();\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el);\n\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 0;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      options.gradientTransform && (gradient.gradientTransform = options.gradientTransform);\n\n      for (var position in options.colorStops) {\n        var color = new fabric.Color(options.colorStops[position]);\n        gradient.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      this.canvas && this.canvas.remove(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX = originXOffset[toOriginX] - originXOffset[fromOriginX],\n          offsetY = originYOffset[toOriginY] - originYOffset[fromOriginY],\n          dim;\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (originX && originY) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      this.left += xFull * (originXOffset[to] - originXOffset[this.originX]);\n      this.top += yFull * (originXOffset[to] - originXOffset[this.originX]);\n\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(oCoords) {\n    return [\n      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n      new fabric.Point(oCoords.br.x, oCoords.br.y),\n      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Object containing coordinates of object's controls\n     * @type Object\n     * @default\n     */\n    oCoords: null,\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR) {\n      var oCoords = getCoords(this.oCoords),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            oCoords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            getCoords(this.oCoords),\n            getCoords(other.oCoords)\n          );\n\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other) {\n      var boundingRect = other.getBoundingRect(),\n          point1 = new fabric.Point(boundingRect.left, boundingRect.top),\n          point2 = new fabric.Point(boundingRect.left + boundingRect.width, boundingRect.top + boundingRect.height);\n\n      return this.isContainedWithinRect(point1, point2);\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR) {\n      var boundingRect = this.getBoundingRect();\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var lines = this._getImageLines(this.oCoords),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} oCoords Coordinates of the object being evaluated\n     */\n    _findCrossPoints: function(point, oCoords) {\n      var b1, b2, a1, a2, xi, yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in oCoords) {\n        iLine = oCoords[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = - (a1 - a2) / (b1 - b2);\n          yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function() {\n      this.oCoords || this.setCoords();\n      return fabric.util.makeBoundingBoxFromPoints([\n        this.oCoords.tl,\n        this.oCoords.tr,\n        this.oCoords.br,\n        this.oCoords.bl\n      ]);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      this.setCoords();\n      return this;\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function() {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y;\n\n      // If width is negative, make postive. Fixes path selection issue\n      if (currentWidth < 0) {\n        currentWidth = Math.abs(currentWidth);\n      }\n\n      var sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\n          // offset added for rotate and scale actions\n          coords = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n          ml  = new fabric.Point((tl.x + bl.x)/2, (tl.y + bl.y)/2),\n          mt  = new fabric.Point((tr.x + tl.x)/2, (tr.y + tl.y)/2),\n          mr  = new fabric.Point((br.x + tr.x)/2, (br.y + tr.y)/2),\n          mb  = new fabric.Point((br.x + bl.x)/2, (br.y + bl.y)/2),\n          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      this.oCoords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n        // middle\n        ml: ml, mt: mt, mr: mr, mb: mb,\n        // rotating point\n        mtr: mtr\n      };\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      this._setCornerCoords && this._setCornerCoords();\n\n      return this;\n    },\n\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /*\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function() {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix = this._calcRotateMatrix(),\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n      matrix = multiplyMatrices(matrix, translateMatrix);\n      matrix = multiplyMatrices(matrix, rotateMatrix);\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY],\n          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n      return multiplyMatrices(m, skewMatrixY, true);\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [ ];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n/*\n  Depends on `stateProperties`\n*/\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Returns true if object state (one of its state properties) was changed\n   * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n   */\n  hasStateChanged: function() {\n    return this.stateProperties.some(function(prop) {\n      return this.get(prop) !== this.originalState[prop];\n    }, this);\n  },\n\n  /**\n   * Saves state of an object\n   * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n   * @return {fabric.Object} thisArg\n   */\n  saveState: function(options) {\n    this.stateProperties.forEach(function(prop) {\n      this.originalState[prop] = this.get(prop);\n    }, this);\n\n    if (options && options.stateProperties) {\n      options.stateProperties.forEach(function(prop) {\n        this.originalState[prop] = this.get(prop);\n      }, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Setups state of an object\n   * @return {fabric.Object} thisArg\n   */\n  setupState: function() {\n    this.originalState = { };\n    this.saveState();\n\n    return this;\n  }\n});\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      //jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n  //jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width,\n          h = this.height,\n          addStrokeToW = true,\n          addStrokeToH = true;\n\n      if (this.type === 'line' && this.strokeLineCap === 'butt') {\n        addStrokeToH = w;\n        addStrokeToW = h;\n      }\n\n      if (addStrokeToH) {\n        h += h < 0 ? -strokeWidth : strokeWidth;\n      }\n\n      if (addStrokeToW) {\n        w += w < 0 ? -strokeWidth : strokeWidth;\n      }\n\n      return { x: w, y: h };\n    },\n\n    /*\n     * @private\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x /2, dimY = dimensions.y / 2,\n          points = [\n          {\n            x: -dimX,\n            y: -dimY\n          },\n          {\n            x: dimX,\n            y: -dimY\n          },\n          {\n            x: -dimX,\n            y: dimY\n          },\n          {\n            x: dimX,\n            y: dimY\n          }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          w = dim.x, h = dim.y,\n          p = fabric.util.transformPoint(new fabric.Point(w, h), vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group\n        || this !== this.canvas.getActiveObject()) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x/2, -wh.y/2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth + 2 * this.padding,\n          height = wh.y + strokeWidth + 2 * this.padding;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width/2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width/2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height/2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height/2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size/2, top + size/2, size/2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [ ], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange();\n      },\n      onComplete: function() {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete();\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || { };\n\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint();\n        ctx.translate(\n          cp.x - this.strokeWidth / 2,\n          cp.y - this.strokeWidth / 2\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object) {\n    var points = [object.x1, object.y1, object.x2, object.y2];\n    return new fabric.Line(points, object);\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n      case nearest:\n        return Math.min(this.get(axis1), this.get(axis2));\n      case center:\n        return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n      case farthest:\n        return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n      this.set('radius', options.radius || 0);\n\n      this.startAngle = options.startAngle || this.startAngle;\n      this.endAngle = options.endAngle || this.endAngle;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        radius: this.get('radius'),\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n      angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', + largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object) {\n    return new fabric.Circle(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n\n      this.set('width', options.width || 100)\n          .set('height', options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Returns fabric.Triangle instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @return {Object} instance of Canvas.Triangle\n   */\n  fabric.Triangle.fromObject = function(object) {\n    return new fabric.Triangle(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n\n      this.set('rx', options.rx || 0);\n      this.set('ry', options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        rx: this.get('rx'),\n        ry: this.get('ry')\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry/this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx/this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object) {\n    return new fabric.Ellipse(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry', 'x', 'y');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Used to specify dash pattern for stroke on this object\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n      this._initRxRy();\n\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          k = 1 - 0.5522847498 /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */;\n\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        rx: this.get('rx') || 0,\n        ry: this.get('ry') || 0\n      });\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object) {\n    return new fabric.Rect(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @param {Boolean} [skipOffset] Whether points offsetting should be skipped\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      return fabric.Polygon.prototype.initialize.call(this, points, options);\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n      return fabric.Polygon.prototype._calcDimensions.call(this);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object) {\n    var points = object.points;\n    return new fabric.Polyline(points, object, true);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Object\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Polygon} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || { };\n      this.points = points || [ ];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n\n      this.minX = minX || 0,\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], addTransform,\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n      }\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      if (this.stroke || this.strokeDashArray) {\n        ctx.closePath();\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      noTransform || ctx.translate(-this.pathOffset.x, -this.pathOffset.y);\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x, this.points[0].y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x, point.y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.points.length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object) {\n    return new fabric.Polygon(object.points, object, true);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n\n      this.setOptions(options);\n\n      if (!path) {\n        path = [ ];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice() }),\n        pathOffset: this.pathOffset\n      });\n      if (this.sourcePath) {\n        o.sourcePath = this.sourcePath;\n      }\n      if (this.transformMatrix) {\n        o.transformMatrix = this.transformMatrix;\n      }\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        //jscs:disable validateIndentation\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n        //jscs:enable validateIndentation\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [ ],\n          coords = [ ],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [ currentPath.charAt(0) ];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([ command ].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [ ];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [ ];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [ ];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [ ];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [ ];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [ ];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [ ];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [ ];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              x,\n              y\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var path = elements[0],\n            pathUrl = object.path;\n\n        delete object.path;\n\n        fabric.util.object.extend(path, object);\n        path.setSourcePath(pathUrl);\n\n        callback(path);\n      });\n    }\n    else {\n      callback(new fabric.Path(object.path, object));\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      invoke = fabric.util.array.invoke,\n      parentToObject = fabric.Object.prototype.toObject;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [ ];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [ ], yC = [ ], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Renders this group on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render this instance on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.transform(ctx);\n\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      ctx.translate(-this.width/2, -this.height/2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {Any} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(parentToObject.call(this, propertiesToInclude), {\n        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n      });\n      if (this.sourcePath) {\n        o.sourcePath = this.sourcePath;\n      }\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    if (typeof object.paths === 'string') {\n      fabric.loadSVGFromURL(object.paths, function (elements) {\n\n        var pathUrl = object.paths;\n        delete object.paths;\n\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n        delete object.paths;\n        callback(new fabric.PathGroup(enlivenedObjects, object));\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      invoke = fabric.util.array.invoke;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      this.originalState = { };\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          center = this.getCenterPoint();\n\n      object.set({\n        originalLeft: objectLeft,\n        originalTop: objectTop,\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords();\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.transform(ctx);\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      // the array is now sorted in order of highest first, so start from end\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n\n      this.clipTo && ctx.restore();\n\n      ctx.restore();\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.scaleX = options.scaleX;\n      object.scaleY = options.scaleY;\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.flipX = false;\n      object.flipY = false;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all group objects\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      this.forEachObject(function(object) {\n        object.setCoords();\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords();\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var ivt = fabric.util.invertTransform(this.getViewportTransform()),\n          minXY = fabric.util.transformPoint(new fabric.Point(min(aX), min(aY)), ivt),\n          maxXY = fabric.util.transformPoint(new fabric.Point(max(aX), max(aY)), ivt),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {Any}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   * @return {fabric.Group} An instance of fabric.Group\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [ ];\n      this.resizeFilters = [ ];\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(callback);\n      }\n      else if (callback) {\n        callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [ ], resizeFilters = [ ],\n          element = this._originalElement,\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        src: element ? element.src || element._src : '',\n        filters: filters,\n        resizeFilters: resizeFilters,\n        crossOrigin: this.crossOrigin,\n        alignX: this.alignX,\n        alignY: this.alignY,\n        meetOrSlice: this.meetOrSlice\n      });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none';\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @return {String} Source of an image\n     */\n    getSrc: function() {\n      if (this.getElement()) {\n        return this.getElement().src || this.getElement()._src;\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Returns a clone of an instance\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var imgEl = imgElement,\n          canvasEl = fabric.util.createCanvasElement(),\n          replacement = fabric.util.createImage(),\n          _this = this;\n\n      canvasEl.width = imgEl.width;\n      canvasEl.height = imgEl.height;\n      canvasEl.getContext('2d').drawImage(imgEl, 0, 0, imgEl.width, imgEl.height);\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback();\n        return canvasEl;\n      }\n      filters.forEach(function(filter) {\n        filter && filter.applyTo(canvasEl, filter.scaleX || _this.scaleX, filter.scaleY || _this.scaleY);\n        if (!forResizing && filter && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback();\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback();\n          replacement.onload = canvasEl = imgEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), null, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img) {\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [ ];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [ ];\n          var instance = new fabric.Image(img, object);\n          callback && callback(instance);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Brightness = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = function(object) {\n    return new fabric.Image.filters.Brightness(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Convolute = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side/2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              /* jshint maxdepth:5 */\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = function(object) {\n    return new fabric.Image.filters.Convolute(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.GradientTransparency = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n    return new fabric.Image.filters.GradientTransparency(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Grayscale = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function() {\n    return new fabric.Image.filters.Grayscale();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Invert = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i+=4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function() {\n    return new fabric.Image.filters.Invert();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  fabric.Image.filters.Mask = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [ 0, 1, 2, 3 ].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      callback && callback(new fabric.Image.filters.Mask(object));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Noise = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = function(object) {\n    return new fabric.Image.filters.Noise(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Pixelate = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = function(object) {\n    return new fabric.Image.filters.Pixelate(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.RemoveWhite = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n    return new fabric.Image.filters.RemoveWhite(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Sepia = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i+=4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function() {\n    return new fabric.Image.filters.Sepia();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { });\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Sepia2 = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i+=4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function() {\n    return new fabric.Image.filters.Sepia2();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Tint = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i+=4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = function(object) {\n    return new fabric.Image.filters.Tint(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Multiply = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i+=4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = function(object) {\n    return new fabric.Image.filters.Multiply(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Blend = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */{\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  fabric.Image.filters.Blend.fromObject = function(object) {\n    return new fabric.Image.filters.Blend(object);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  fabric.Image.filters.Resize = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    sliceByTwo: function(canvasEl, width, height, newWidth, newHeight) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = width, stepH = height,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      newWidth = floor(newWidth);\n      newHeight = floor(newHeight);\n      tmpCanvas.width = max(newWidth, width);\n      tmpCanvas.height = max(newHeight, height);\n\n      if (newWidth > width) {\n        multW = 2;\n        signW = -1;\n      }\n      if (newHeight > height) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, width, height);\n      canvasEl.width = max(newWidth, width);\n      canvasEl.height = max(newHeight, height);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        width = stepW;\n        height = stepH;\n        if (newWidth * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = newWidth;\n          doneW = true;\n        }\n        if (newHeight * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = newHeight;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, width, height);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, width, height, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, newWidth, newHeight);\n    },\n\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0, red = 0, green = 0, blue = 0, alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    bilinearFiltering: function(canvasEl, w, h, w2, h2) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (w - 1), img = context.getImageData(0, 0, w, h),\n          pixels = img.data, destImage = context.getImageData(0, 0, w2, h2),\n          destPixels = destImage.data;\n      for (i = 0; i < h2; i++) {\n        for (j = 0; j < w2; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * w + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /*jshint maxdepth:5 */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                /*jshint maxdepth:6 */\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                /*jshint maxdepth:5 */\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /*jshint maxdepth:4 */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = function(object) {\n    return new fabric.Image.filters.Resize(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor'\n  );\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: {\n      fontSize: true,\n      fontWeight: true,\n      fontFamily: true,\n      fontStyle: true,\n      lineHeight: true,\n      stroke: true,\n      strokeWidth: true,\n      text: true,\n      textAlign: true\n    },\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.setOptions(options);\n      this.__skipDimension = false;\n      this._initDimensions();\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx);\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      this._setupCompositeOperation(ctx);\n      this._renderTextBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n      this.clipTo && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n\n      this._translateForTextAlign(ctx);\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n      this._translateForTextAlign(ctx, true);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} back Indicates if translate back or forward\n     */\n    _translateForTextAlign: function(ctx, back) {\n      if (this.textAlign !== 'left' && this.textAlign !== 'justify') {\n        var sign = back ? -1 : 1;\n        ctx.translate(this.textAlign === 'center' ? (sign * this.width / 2) : sign * this.width, 0);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      if (!this.skipTextAlign) {\n        ctx.textAlign = this.textAlign;\n      }\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @override\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      return { x: this.width, y: this.height };\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4);\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      ctx[method](chars, left, top);\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} line\n     */\n    _getWidthOfWords: function (ctx, line) {\n      return ctx.measureText(line.replace(/\\s+/g, '')).width;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      var lineHeights = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight;\n\n        this._renderTextLine(\n          'fillText',\n          ctx,\n          this._textLines[i],\n          this._getLeftOffset(),\n          this._getTopOffset() + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      var lineHeights = 0;\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeDashArray) {\n        // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n        if (1 & this.strokeDashArray.length) {\n          this.strokeDashArray.push.apply(this.strokeDashArray, this.strokeDashArray);\n        }\n        supportsLineDash && ctx.setLineDash(this.strokeDashArray);\n      }\n\n      ctx.beginPath();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight;\n\n        this._renderTextLine(\n          'strokeText',\n          ctx,\n          this._textLines[i],\n          this._getLeftOffset(),\n          this._getTopOffset() + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} textLines Array of all text lines\n     */\n    _renderTextBackground: function(ctx) {\n      this._renderTextBoxBackground(ctx);\n      this._renderTextLinesBackground(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextBoxBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        this._getLeftOffset(),\n        this._getTopOffset(),\n        this.width,\n        this.height\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [ ];\n      this.__lineHeights = [ ];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearCache: function() {\n      var shouldClear = false;\n      if (this._forceClearCache) {\n        this._forceClearCache = false;\n        return true;\n      }\n      for (var prop in this._dimensionAffectingProps) {\n        if (this['__' + prop] !== this[prop]) {\n          this['__' + prop] = this[prop];\n          shouldClear = true;\n        }\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      return ctx.measureText(this._textLines[lineIndex]).width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i),\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth),\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n      this._setTextStyles(ctx);\n\n      if (this._shouldClearCache()) {\n        this._initDimensions(ctx);\n      }\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._render(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        text:                 this.text,\n        fontSize:             this.fontSize,\n        fontWeight:           this.fontWeight,\n        fontFamily:           this.fontFamily,\n        fontStyle:            this.fontStyle,\n        lineHeight:           this.lineHeight,\n        textDecoration:       this.textDecoration,\n        textAlign:            this.textAlign,\n        textBackgroundColor:  this.textBackgroundColor\n      });\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ': ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ': ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ': ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ': ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [ ],\n          textBgRects = [ ],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, line),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {Any} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {Any} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key in this._dimensionAffectingProps) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object) {\n    return new fabric.Text(object.text, clone(object));\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [ ],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [ ];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          /*jshint unused:false */\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      if (this.selectionStart !== index) {\n        this.fire('selection:changed');\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n        this.selectionStart = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      if (this.selectionEnd !== index) {\n        this.fire('selection:changed');\n        this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n        this.selectionEnd = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [ ];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.oldWidth = this.width;\n      this.oldHeight = this.height;\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n      this.isEditing && this.renderCursorOrSelection();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n\n      var chars = this.text.split(''),\n          boundaries, ctx;\n\n      if (this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.oldWidth + 4, height = this.oldHeight + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\n      var lineLeftOffset = 0,\n\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n                    : boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth/2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth,\n          lineHeight);\n\n        boundaries.topOffset += lineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n      this.skipTextAlign = true;\n\n      // set proper box offset\n      left -= this.textAlign === 'center'\n        ? (this.width / 2)\n        : (this.textAlign === 'right')\n          ? this.width\n          : 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex)),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      left += lineLeftOffset || 0;\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n      this.skipTextAlign = false;\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || {});\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          line, _char, style;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j);\n          if (!style || !style.textBackgroundColor) {\n            continue;\n          }\n          _char = line[j];\n\n          ctx.fillStyle = style.textBackgroundColor;\n\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n            topOffset + lineTopOffset,\n            this._getWidthOfChar(ctx, _char, i, j) + 1,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = (decl && clone(decl)) || clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      var charWidthsCache, cacheProp,\n          styleDeclaration = this._getStyleDeclaration(lineIndex, charIndex, true);\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      if (charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n      else if (ctx) {\n        ctx.save();\n        var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n        ctx.restore();\n        return width;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      this._isMeasuring = false;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} line\n     * @param {Number} lineIndex\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var height = this._getHeightOfLine(ctx, 0) / this.lineHeight;\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        height += this._getHeightOfLine(ctx, i);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var clonedStyles = { }, i, j, row;\n      for (i in this.styles) {\n        row = this.styles[i];\n        clonedStyles[i] = { };\n        for (j in row) {\n          clonedStyles[i][j] = clone(row[j]);\n        }\n      }\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clonedStyles\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object) {\n    return new fabric.IText(object.text, clone(object));\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n    },\n\n    /**\n     * Initializes \"selected\" event handler\n     */\n    initSelectedHandler: function() {\n      this.on('selected', function() {\n\n        var _this = this;\n        setTimeout(function() {\n          _this.selected = true;\n        }, 100);\n      });\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        if (this.canvas && !this.canvas._hasITextHandlers) {\n          this.canvas._hasITextHandlers = true;\n          this._initCanvasHandlers();\n        }\n\n        // Track IText instances per-canvas. Only register in this array once added\n        // to a canvas; we don't want to leak a reference to the instance forever\n        // simply because it existed at some point.\n        // (Might be added to a collection, but not on a canvas.)\n        if (_this.canvas) {\n          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n          _this.canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        // (Might be removed from a collection, but not on a canvas.)\n        if (_this.canvas) {\n          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n          fabric.util.removeFromArray(_this.canvas._iTextInstances, _this);\n        }\n      });\n    },\n\n    /**\n     * @private\n     */\n    _initCanvasHandlers: function() {\n      var _this = this;\n\n      this.canvas.on('selection:cleared', function() {\n        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n      });\n\n      this.canvas.on('mouse:up', function() {\n        if (_this.canvas._iTextInstances) {\n          _this.canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      });\n\n      this.canvas.on('object:selected', function() {\n        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.setSelectionStart(0);\n      this.setSelectionEnd(this.text.length);\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd   = this.searchWordBoundary(selectionStart, 1);\n      /* search forward */\n\n      this.setSelectionStart(newSelectionStart);\n      this.setSelectionEnd(newSelectionEnd);\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd   = this.findLineBoundaryRight(selectionStart);\n\n      this.setSelectionStart(newSelectionStart);\n      this.setSelectionEnd(newSelectionEnd);\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n\n      if (!this.canvas) {\n        return this;\n      }\n\n      this.canvas.renderAll();\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler.bind(this));\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e);\n      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.setSelectionStart(this.__selectionStartOnMouseDown);\n        this.setSelectionEnd(newSelectionStart);\n      }\n      else {\n        this.setSelectionStart(newSelectionStart);\n        this.setSelectionEnd(this.__selectionStartOnMouseDown);\n      }\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n                    : boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n      this.hiddenTextarea = null;\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.setSelectionStart(start);\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n        this.setSelectionEnd(this.selectionStart);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.copiedTextStyle[i];\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.canvas && this.canvas.renderAll();\n      this.setCoords();\n      this.fire('changed');\n      this.canvas && this.canvas.fire('text:changed', { target: this });\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      if (!this.styles[lineIndex + 1]) {\n        this.styles[lineIndex + 1] = {};\n      }\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        for (var index in this.styles[lineIndex]) {\n          if (parseInt(index, 10) >= charIndex) {\n            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this.styles[lineIndex][charIndex] =\n        style || clone(currentLineStyles[charIndex - 1]);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initSelectedHandler();\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.hiddenTextarea && this.canvas) {\n        this.canvas.wrapperEl.appendChild(this.hiddenTextarea);\n      }\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        this.initDelayedCursor(true);\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        this.initDelayedCursor(true);\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelectionStart = this.getSelectionStartFromPointer(e);\n\n    if (e.shiftKey) {\n      if (newSelectionStart < this.selectionStart) {\n        this.setSelectionEnd(this.selectionStart);\n        this.setSelectionStart(newSelectionStart);\n      }\n      else {\n        this.setSelectionEnd(newSelectionStart);\n      }\n    }\n    else {\n      this.setSelectionStart(newSelectionStart);\n      this.setSelectionEnd(newSelectionStart);\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n    if (this.canvas) {\n      this.canvas.lowerCanvasEl.parentNode.appendChild(this.hiddenTextarea);\n    }\n    else {\n      fabric.document.body.appendChild(this.hiddenTextarea);\n    }\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this._keysMap) {\n      this[this._keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(\n                          this.selectionStart,\n                          this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        _char, lineLeftOffset, lineIndex = cursorLocation.lineIndex,\n        textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n        textOnSameLineAfterCursor = this._textLines[lineIndex].slice(cursorLocation.charIndex),\n        textOnNextLine = this._textLines[lineIndex + 1] || '';\n\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n\n    var widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, lineIndex);\n    lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor);\n\n    var widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\n    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n      _char = textOnSameLineBeforeCursor[i];\n      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n\n    var indexOnNextLine = this._getIndexOnNextLine(\n      cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor);\n\n    return textOnSameLineAfterCursor.length + 1 + indexOnNextLine;\n  },\n\n  /**\n   * @private\n   */\n  _getIndexOnNextLine: function(cursorLocation, textOnNextLine, widthOfCharsOnSameLineBeforeCursor) {\n    var lineIndex = cursorLocation.lineIndex + 1,\n        widthOfNextLine = this._getLineWidth(this.ctx, lineIndex),\n        lineLeftOffset = this._getLineLeftOffset(widthOfNextLine),\n        widthOfCharsOnNextLine = lineLeftOffset,\n        indexOnNextLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnNextLine.length; j < jlen; j++) {\n\n      var _char = textOnNextLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnNextLine += widthOfChar;\n\n      if (widthOfCharsOnNextLine > widthOfCharsOnSameLineBeforeCursor) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnNextLine - widthOfChar,\n            rightEdge = widthOfCharsOnNextLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\n        indexOnNextLine = offsetFromRightEdge < offsetFromLeftEdge ? j + 1 : j;\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnNextLine = textOnNextLine.length;\n    }\n\n    return indexOnNextLine;\n  },\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    var offset = this.getDownCursorOffset(e, this._selectionDirection === 'right');\n\n    if (e.shiftKey) {\n      this.moveCursorDownWithShift(offset);\n    }\n    else {\n      this.moveCursorDownWithoutShift(offset);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * Moves cursor down without keeping selection\n   * @param {Number} offset\n   */\n  moveCursorDownWithoutShift: function(offset) {\n    this._selectionDirection = 'right';\n    this.setSelectionStart(this.selectionStart + offset);\n    this.setSelectionEnd(this.selectionStart);\n  },\n\n  /**\n   * private\n   */\n  swapSelectionPoints: function() {\n    var swapSel = this.selectionEnd;\n    this.setSelectionEnd(this.selectionStart);\n    this.setSelectionStart(swapSel);\n  },\n\n  /**\n   * Moves cursor down while keeping selection\n   * @param {Number} offset\n   */\n  moveCursorDownWithShift: function(offset) {\n    if (this.selectionEnd === this.selectionStart) {\n      this._selectionDirection = 'right';\n    }\n    if (this._selectionDirection === 'right') {\n      this.setSelectionEnd(this.selectionEnd + offset);\n    }\n    else {\n      this.setSelectionStart(this.selectionStart + offset);\n    }\n    if (this.selectionEnd < this.selectionStart  && this._selectionDirection === 'left') {\n      this.swapSelectionPoints();\n      this._selectionDirection = 'right';\n    }\n    if (this.selectionEnd > this.text.length) {\n      this.setSelectionEnd(this.text.length);\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = isRight ? this.selectionEnd : this.selectionStart,\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on first line, up cursor goes to start of line\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      return selectionProp;\n    }\n\n    var textOnSameLineBeforeCursor = this._textLines[lineIndex].slice(0, cursorLocation.charIndex),\n        textOnPreviousLine = this._textLines[lineIndex - 1] || '',\n        _char,\n        widthOfSameLineBeforeCursor = this._getLineWidth(this.ctx, cursorLocation.lineIndex),\n        lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor),\n        widthOfCharsOnSameLineBeforeCursor = lineLeftOffset;\n\n    for (var i = 0, len = textOnSameLineBeforeCursor.length; i < len; i++) {\n      _char = textOnSameLineBeforeCursor[i];\n      widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n\n    var indexOnPrevLine = this._getIndexOnPrevLine(\n      cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor);\n\n    return textOnPreviousLine.length - indexOnPrevLine + textOnSameLineBeforeCursor.length;\n  },\n\n  /**\n   * @private\n   */\n  _getIndexOnPrevLine: function(cursorLocation, textOnPreviousLine, widthOfCharsOnSameLineBeforeCursor) {\n\n    var lineIndex = cursorLocation.lineIndex - 1,\n        widthOfPreviousLine = this._getLineWidth(this.ctx, lineIndex),\n        lineLeftOffset = this._getLineLeftOffset(widthOfPreviousLine),\n        widthOfCharsOnPreviousLine = lineLeftOffset,\n        indexOnPrevLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnPreviousLine.length; j < jlen; j++) {\n\n      var _char = textOnPreviousLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnPreviousLine += widthOfChar;\n\n      if (widthOfCharsOnPreviousLine > widthOfCharsOnSameLineBeforeCursor) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnPreviousLine - widthOfChar,\n            rightEdge = widthOfCharsOnPreviousLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),\n            offsetFromRightEdge = Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);\n\n        indexOnPrevLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnPrevLine = textOnPreviousLine.length - 1;\n    }\n\n    return indexOnPrevLine;\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    var offset = this.getUpCursorOffset(e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorUpWithShift(offset);\n    }\n    else {\n      this.moveCursorUpWithoutShift(offset);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * Moves cursor up with shift\n   * @param {Number} offset\n   */\n  moveCursorUpWithShift: function(offset) {\n    if (this.selectionEnd === this.selectionStart) {\n      this._selectionDirection = 'left';\n    }\n    if (this._selectionDirection === 'right') {\n      this.setSelectionEnd(this.selectionEnd - offset);\n    }\n    else {\n      this.setSelectionStart(this.selectionStart - offset);\n    }\n    if (this.selectionEnd < this.selectionStart && this._selectionDirection === 'right') {\n      this.swapSelectionPoints();\n      this._selectionDirection = 'left';\n    }\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorUpWithoutShift: function(offset) {\n    if (this.selectionStart === this.selectionEnd) {\n      this.setSelectionStart(this.selectionStart - offset);\n    }\n    this.setSelectionEnd(this.selectionStart);\n\n    this._selectionDirection = 'left';\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      this.moveCursorLeftWithShift(e);\n    }\n    else {\n      this.moveCursorLeftWithoutShift(e);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * @private\n   */\n  _move: function(e, prop, direction) {\n    var propMethod = (prop === 'selectionStart' ? 'setSelectionStart' : 'setSelectionEnd');\n    if (e.altKey) {\n      this[propMethod](this['findWordBoundary' + direction](this[prop]));\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      this[propMethod](this['findLineBoundary' + direction](this[prop]));\n    }\n    else {\n      this[propMethod](this[prop] + (direction === 'Left' ? -1 : 1));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart) {\n      this._moveLeft(e, 'selectionStart');\n    }\n    this.setSelectionEnd(this.selectionStart);\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      this._moveLeft(e, 'selectionEnd');\n    }\n    else {\n      this._selectionDirection = 'left';\n      this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n\n    this.abortCursorAnimation();\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      this.moveCursorRightWithShift(e);\n    }\n    else {\n      this.moveCursorRightWithoutShift(e);\n    }\n\n    this.initDelayedCursor();\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      this._moveRight(e, 'selectionStart');\n    }\n    else {\n      this._selectionDirection = 'right';\n      this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      this._moveRight(e, 'selectionStart');\n      this.setSelectionEnd(this.selectionStart);\n    }\n    else {\n      this.setSelectionEnd(this.selectionEnd + this.getNumNewLinesInSelectedText());\n      this.setSelectionStart(this.selectionEnd);\n    }\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        //jscs:disable validateIndentation\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height/2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n        //jscs:enable validateIndentation\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        //jscs:disable validateIndentation\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n          toFixed(lineTopOffset - this.height/2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ': ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ': ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ': ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ': ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ': ''),\n          'style=\"', fillStyles, '\">',\n          fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n        //jscs:enable validateIndentation\n      ].join('');\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone  = fabric.util.object.clone;\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 0,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.width = true;\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines();\n\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n') {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ') {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true;\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function() {\n      var originalAlign = this.textAlign;\n      this.ctx.save();\n      this._setTextStyles(this.ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(this.ctx, this.text);\n      this.textAlign = originalAlign;\n      this.ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {Any} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        minWidth: this.minWidth\n      });\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object) {\n    return new fabric.Textbox(object.text, clone(object));\n  };\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles),\n          map          = this._styleMap[lineIndex];\n\n      // adjust line index\n      lineIndex = map.line;\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img) {\n      var oImg = new fabric.Image(img);\n\n      oImg._initConfig(object);\n      oImg._initFilters(object.filters, function(filters) {\n        oImg.filters = filters || [ ];\n        oImg._initFilters(object.resizeFilters, function(resizeFilters) {\n          oImg.resizeFilters = resizeFilters || [ ];\n          callback && callback(oImg);\n        });\n      });\n    });\n  };\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.Font = Canvas.Font;\n\n    return fabricCanvas;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  var origSetWidth = fabric.StaticCanvas.prototype.setWidth;\n  fabric.StaticCanvas.prototype.setWidth = function(width, options) {\n    origSetWidth.call(this, width, options);\n    this.nodeCanvas.width = width;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype.setWidth = fabric.StaticCanvas.prototype.setWidth;\n  }\n\n  var origSetHeight = fabric.StaticCanvas.prototype.setHeight;\n  fabric.StaticCanvas.prototype.setHeight = function(height, options) {\n    origSetHeight.call(this, height, options);\n    this.nodeCanvas.height = height;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype.setHeight = fabric.StaticCanvas.prototype.setHeight;\n  }\n\n})();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fabric/dist/fabric.js\n ** module id = 437\n ** module chunks = 5\n **/","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/request.js\n ** module id = 443\n ** module chunks = 5\n **/","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/response.js\n ** module id = 444\n ** module chunks = 5\n **/","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/https-browserify/index.js\n ** module id = 445\n ** module chunks = 5\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 459\n ** module chunks = 5\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 460\n ** module chunks = 5\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 461\n ** module chunks = 5\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/~/punycode/punycode.js\n ** module id = 487\n ** module chunks = 5\n **/","module.exports = \" <div id=create-mc-question> <mdl-button primary raised class=float-button style=\\\"bottom: 80px\\\" @click=\\\"questionInbox.show = true\\\" v-bind:disabled=publishButton.disabled> <i class=material-icons>inbox</i> {{questionInbox.questions.length}} </mdl-button> <mdl-button primary raised class=float-button @click=publishQuestion() v-bind:disabled=publishButton.disabled> 發佈 </mdl-button> <div class=body_wrapper> <card> <div slot=content style=\\\"padding: 16px 16px 0 16px\\\"> <div class=flex-column> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>科目</span> <select v-model=newQuestion.subject> <option v-for=\\\"subject in subjects\\\" v-bind:value=subject.id> {{ subject.name }} </option> </select> </div> <div class=\\\"set_difficulty flex-column flex-50\\\"> <span class=field-title style=margin-bottom:4px>難度</span> <span class=flex-row> <i v-for=\\\"n in 5\\\" class=material-icons @click=\\\"newQuestion.difficulty = $index + 1\\\" :class=\\\"{'difficulty_status': newQuestion.difficulty > $index}\\\">star_rate</i> </span> </div> </div> <div class=flex-row style=\\\"padding-top: 25px\\\"> <div class=\\\"flex-column flex-50\\\"> <div style=\\\"margin-right: 10px\\\"> <span class=field-title>標籤</span> </div> <div class=\\\"flex-row flex-center flex-wrap\\\"> <span class=q-tag @click=removeTag($index) v-for=\\\"tag in newQuestion.tags\\\" track-by=$index>{{tag}}</span> </div> <div style=\\\"position: relative;top: -12px\\\"> <mdl-textfield label=輸入標籤.回車 @keyup.enter=addTag() :value.sync=tag style=width:200px></mdl-textfield> </div> </div> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>語言</span> <select v-model=newQuestion.language v-on:change=setUserLanguage(newQuestion.language)> <option v-for=\\\"language in languages\\\" v-bind:value=language.id> {{ language.name }} </option> </select> </div> </div> </div> </div> </card> <div class=flex-column style=\\\"margin-bottom: 16px\\\"> <h5 style=margin-left:4px>編輯題目</h5> <div style=background:#ddd class=flex-column> <mdl-button primary @click=\\\"editorPreview.image.show = !editorPreview.image.show\\\"><i class=material-icons>photo</i> <span>添加圖片</span> </mdl-button> </div> <div v-show=editorPreview.image.show> <form v-on:change=readImg($event)> <input type=file id=uploadedImg /> </form> <div class=\\\"flex-column flex-center\\\"> <canvas v-el:fabricprocess></canvas> <mdl-textfield label=圖片名字 :value.sync=editorPreview.image.label></mdl-textfield> <mdl-button primary @click=outputImg()><i class=material-icons>photo</i> <span>输出图片</span></mdl-button> </div> </div> </div> <div class=flex-row> <div class=flex-50> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.question></quill> </div> </card> </div> <div class=flex-50> <card> <div slot=content> <p class=toolbar_title>預覽</p> <div class=question_preview></div> </div> </card> </div> </div> <div class=mc_preview> <p style=margin:0;text-align:center;color:#9E9E9E>點擊選項設定正確答案</p> <div class=flex-row> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 0}\\\" @click=\\\"newQuestion.answer.mc = 0\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>A</div><div id=mc1 class=mc_content></div></div> </card> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 1}\\\" @click=\\\"newQuestion.answer.mc = 1\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>B</div><div id=mc2 class=mc_content></div></div> </card> </div> <div class=flex-row> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 2}\\\" @click=\\\"newQuestion.answer.mc = 2\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>C</div><div id=mc3 class=mc_content></div></div> </card> <card class=flex-50 :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 3}\\\" @click=\\\"newQuestion.answer.mc = 3\\\"> <div slot=content class=\\\"flex-row flex-baseline\\\"><div class=mc_label>D</div><div id=mc4 class=mc_content></div></div> </card> </div> </div> <h5 style=margin-left:4px>編輯答案</h5> <div id=mc_input_container> <p style=margin:0;text-align:center;color:#9E9E9E>答案選項輸入</p> <div class=flex-row> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[0]></quill></div></card> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[1]></quill></div></card> </div> <div class=flex-row> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[2]></quill></div></card> <card class=flex-50><div slot=content><quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[3]></quill></div></card> </div> </div> </div> <div class=questions_inbox class=flex-column :class=\\\"{'show': questionInbox.show}\\\"> <div class=flex-row style=\\\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0\\\"> <i class=material-icons @click=\\\"questionInbox.show = false\\\">close</i> <span style=\\\"font-size: 20px;padding-top: 2px;padding-left: 16px\\\">創建題集記錄</span> </div> <div class=\\\"flex-column flex-center\\\" style=\\\"margin: 8px 0\\\" id=getLatestQuestionsButton> <mdl-button primary raised @click=getLatestQuestionsCreatedByMe()>獲取我最近創建的題目</mdl-button> </div> <div class=flex-column style=\\\"overflow-y: auto;margin-bottom:60px; flex: 1\\\"> <div class=question v-for=\\\"q in questionInbox.questions\\\" track-by=_id> <span v-html=q.context></span> <div class=flex-row> <span style=\\\"color: #9E9E9E\\\">{{q._id | timestamp}}</span> <span class=\\\"flex-row flex-center\\\" style=color:#FFC107;margin-left:auto>{{q.difficulty}}<i class=material-icons style=\\\"font-size: 18px\\\">star</i></span> </div> </div> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/create-question/Create-mc-question.vue\n ** module id = 491\n ** module chunks = 5\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Create-mc-question.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Create-mc-question.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/create-question/Create-mc-question.vue\n ** module id = 515\n ** module chunks = 5\n **/"],"sourceRoot":""}