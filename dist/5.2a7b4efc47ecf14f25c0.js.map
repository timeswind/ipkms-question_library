{"version":3,"sources":["webpack:///5.2a7b4efc47ecf14f25c0.js","webpack:///./src/modules/delta-render.js?6119**","webpack:///./src/components/reuseable/Card.vue?a35f***","webpack:///./src/components/reuseable/Card.vue?7f21***","webpack:///./src/components/reuseable/Card.vue?c250***","webpack:///./src/components/reuseable/Card.vue?8fda***","webpack:///./~/babel-runtime/core-js/json/stringify.js?4574*","webpack:///./~/core-js/library/fn/json/stringify.js?6708*","webpack:///./src/modules/Languages.js?43de","webpack:///./~/quill/dist/quill.snow.css?7c6b","webpack:///./~/quill/dist/quill.snow.css?5c41*","webpack:///./~/http-browserify/index.js","webpack:///./~/url/url.js","webpack:///./~/Base64/base64.js","webpack:///Create-mc-question.vue","webpack:///./src/views/create-question/Create-mc-question.vue?b92f","webpack:///./src/views/create-question/Create-mc-question.vue?6361","webpack:///./~/fabric/dist/fabric.js","webpack:///./~/http-browserify/lib/request.js","webpack:///./~/http-browserify/lib/response.js","webpack:///./~/https-browserify/index.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///./src/views/create-question/Create-mc-question.vue?de03","webpack:///./src/views/create-question/Create-mc-question.vue"],"names":["webpackJsonp","5","module","exports","delta","JSON","parse","result","map","op","html","insert","formula","window","katex","renderToString","attributes","bold","join","14","Object","defineProperty","value","props","17","__webpack_require__","push","id","version","sources","names","mappings","file","sourcesContent","sourceRoot","18","content","locals","20","21","__vue_script__","__vue_template__","__vue_styles__","__esModule","__vue_options__","options","template","computed","keys","forEach","key","30","default","31","core","$JSON","stringify","it","apply","arguments","97","languages","name","176","205","213","222","http","Request","EventEmitter","url","request","params","cb","host","port","parseInt","location","hostname","protocol","scheme","test","split","req","xhrHttp","on","get","method","end","Agent","defaultMaxSockets","Error","XMLHttpRequest","ActiveXObject","axs","i","length","ax","ax_","e","STATUS_CODES","100","101","102","200","201","202","203","204","206","207","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511","336","Url","this","slashes","auth","hash","search","query","pathname","path","href","urlParse","parseQueryString","slashesDenoteHost","isObject","u","urlFormat","obj","isString","format","prototype","call","urlResolve","source","relative","resolve","urlResolveObject","resolveObject","arg","isNull","isNullOrUndefined","punycode","protocolPattern","portPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","TypeError","rest","trim","proto","exec","lowerProto","toLowerCase","substr","match","hostEnd","hec","indexOf","atSign","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","unshift","domainArray","newOut","s","encode","p","h","ae","esc","encodeURIComponent","escape","qm","replace","charAt","rel","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","splice","isAbsolute","338","InvalidCharacterError","message","object","chars","btoa","input","block","charCode","idx","output","atob","bs","buffer","bc","String","fromCharCode","349","_interopRequireDefault","_stringify","_stringify2","_deltaRender","_deltaRender2","_Subjects","_Subjects2","_Languages","_Languages2","_Card","_Card2","_store","_store2","_actions","_getters","ready","newQuestion","language","getUserLanguage","components","Subject","Card","methods","renderDelta","readImg","c","$els","fabricprocess","canvas","fabric","Canvas","width","height","reader","FileReader","onload","event","imgObj","Image","src","target","image","set","angle","padding","cornersize","centerObject","add","renderAll","readAsDataURL","files","outputImg","$http","then","response","console","log","data","uptoken","uploadImage","getObjects","toDataURL","publishQuestion","publishButton","disabled","checkComplete","editorPreview","question","ops","choices","answer","mc","post","$showToast","context","label","type","show","$broadcast","questionInbox","questions","contentComplete","answerComplete","addTag","tag","tags","removeTag","index","getLatestQuestionsCreatedByMe","document","getElementById","style","display","imageData","token","headers","Content-Type","Authorization","images","subjects","subject","tips","difficulty","filters","timestamp","$options","calendar","Date","toString","substring","store","vuex","actions","setUserLanguage","getters","397","443","Buffer","process","jsdom","createWindow","parentWindow","isTouchSupported","documentElement","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","handler","__eventListeners","eventListener","util","array","fill","observe","prop","stopObserving","fire","listenersForEvent","len","filter","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","insertAt","nonSplicing","objects","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","o","item","isEmpty","size","contains","complexity","reduce","memo","current","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","removeFromArray","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","sin","cos","rx","ry","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","left","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","toUpperCase","resolveNamespace","parts","loadImage","crossOrigin","img","createImage","onerror","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","klass","async","fromObject","error","groupSVGElements","elements","PathGroup","setSourcePath","populateWithProperties","destination","properties","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","propName","capitalizedPropName","setterName","getterName","stateProperties","property","Function","clipContext","receiver","beginPath","clipTo","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","setAngle","getFunctionBody","fn","isTransparent","tolerance","temp","_isTransparent","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","Array","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","boundCopy","invoke","args","byProperty","find","value1","value2","condition","searchElement","n","POSITIVE_INFINITY","NEGATIVE_INFINITY","every","some","val","rv","extend","deep","clone","character","capitalize","firstLetterOnly","escapeXml","Dummy","bind","thisArg","_this","Subclass","callSuper","methodName","constructor","superclass","createClass","initialize","parent","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","createListener","uid","wrappedHandler","createWrappedHandler","getElement","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","listeners","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","makeElement","tagName","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","err","arr","defaultView","getComputedStyle","undefined","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","onComplete","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","warn","animate","requestAnimFrame","time","start","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","isNaN","_setStrokeFillOpacity","colorAttributes","color","Color","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","RegExp","elementById","node","nodelist","parseUseDirectives","attrs","xlink","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","_enlivenCachedObject","cachedObject","_createSVGPattern","markup","toSVG","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewXMatrix","skewYMatrix","iMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","m","operation","combinedMatrix","parseSVGDocument","hasAncestorWithNodeName","startTime","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","documentParsingTime","svgCache","has","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","font","ElementsParser","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","loadXML","results","hasUrl","enlivedRecord","loadSVGFromString","DOMParser","parser","parseFromString","createSVGFontFacesMarkup","row","rowIndex","_char","charIndex","fontList","createSVGRefElementsMarkup","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","Gradient","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","round","getSource","_source","toRgb","toHsl","hsl","toHsla","toHex","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","colorStops","gradientTransform","addColorStop","colorStop","position","toObject","commonAttributes","sort","group","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","Pattern","repeat","patternSource","patternWidth","getWidth","patternHeight","getHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","NUM_FRACTION_DIGITS","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","setOptions","_createCanvasElement","_applyCanvasStyle","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","_activeGroup","setCoords","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","_set","clearContext","clearRect","clear","canvasToDrawOn","renderCanvas","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","iVpt","setPositionByOrigin","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","background","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","_setSVGObject","sendToBack","objs","bringToFront","sendBackwards","intersecting","newIdx","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","createPath","pathData","Path","strokeWidth","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","stopContextMenu","fireRightClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_chooseObjectsToRender","getActiveGroup","activeObject","getActiveObject","objsToRender","activeGroupObjects","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","ignoreZoom","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","hasBorders","transparentCorners","contextCache","originalColor","selectionBackgroundColor","active","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","_rotateObject","lastAngle","curAngle","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","_checkTarget","_fireOverOutEvents","targets","_searchPossibleTargets","_hoveredTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","setActiveObject","_discardActiveObject","discardActiveObject","_setActiveGroup","setActiveGroup","_discardActiveGroup","destroy","discardActiveGroup","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","_setCursorFromEvent","Element","cursorOffset","tr","mr","br","mb","bl","ml","tl","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseWheel","_onContextMenu","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","self","__onTransformGesture","__onDrag","__onMouseWheel","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_isCurrentlyDrawing","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","_handleCursorAndEvent","__corner","eventType","_handleEvent","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","isRightClick","which","button","shouldGroup","_shouldGroup","_clearSelection","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","reverse","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","supportQuality","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","__toDataURL","toDataURLWithMultiplier","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","_toDataURL","_toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","_initGradient","_initPattern","_initClipping","functionBody","fromLeft","_transformDone","_removeDefaultValues","getObjectScaling","scaling","_setObject","shouldConstrainValue","_constrainScale","setOnGroup","toggle","sourcePath","getViewportTransform","noTransform","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setStrokeStyles","_setFillStyles","_removeShadow","miterLimit","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","pos","adjustPosition","to","offsetFrom","offsetTo","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","oCoords","multiplyMatrices","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","skewMatrixY","getSvgColorString","str","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","saveProps","tmpObj","_isEqual","origValue","currentValue","_currentValue","_origValue","originalState","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","_getNonTransformedDimensions","w","addStrokeToW","addStrokeToH","bbox","dimX","dimY","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","line","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","triangle","piBy2","Ellipse","getRx","getRy","ellipse","_initRxRy","isRounded","Polyline","Polygon","_calcDimensions","commonRender","polyline","pathOffset","addTransform","polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","parentToObject","paths","parseDimensionsFromPaths","xC","yC","isSameColor","firstPathFill","pathFill","total","pathGroup","_lockProperties","isAlreadyGrouped","_updateObjectsCoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","originalLeft","originalTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","ivt","minXY","maxXY","_lastScaleX","_lastScaleY","minimumScaleTrigger","resizeFilters","_initElement","_element","_callback","_originalElement","_initConfig","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","filtered","getSvgSrc","origFill","_src","setSrc","imgElement","forResizing","replacement","retinaScaling","minimumScale","drawImage","applyTo","toBuffer","pngCompression","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","createImageData","dst","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","lanczosCreate","lobes","xx","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","ColorMatrix","MIN_TEXT_WIDTH","_dimensionAffectingProps","charSpacing","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","cursorWidth","_getTextHeight","_renderTextBackground","_renderText","_renderTextDecoration","_renderTextFill","_renderTextStroke","textBaseline","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","char","shortM","additionalSpace","_getWidthOfCharSpacing","measureText","_renderTextLine","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","charCount","_getLeftOffset","_getTopOffset","isEmptyStyles","_renderTextCommon","lineHeights","heightOfLine","maxHeight","_getLineLeftOffset","strokedashArray","_renderTextLinesBackground","lineLeftOffset","lineTopOffset","__lineWidths","__lineHeights","_shouldClearCache","shouldClear","_forceClearCache","wordCount","_measureLine","finalWidth","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textBgRects","textSpans","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","oldWidth","oldHeight","cursorOffsetCache","renderCursorOrSelection","boundaries","_clearTextArea","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","realLineHeight","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","_charWidth","decl","_getHeightOfChar","_applyCharStylesGetWidth","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","underline","line-through","overline","decorations","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","clonedStyles","iText","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","initSelectedHandler","selected","_hasITextHandlers","_initCanvasHandlers","_iTextInstances","exitEditingOnOthers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","clearTimeout","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","initHiddenTextarea","hiddenTextarea","focus","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","mouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","setSelectionStartEndWithShift","newSelection","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","_keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","_ctrlKeysMapUp","67","88","_ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","_getWidthBeforeCursor","textBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","foundMatch","textOnLine","widthOfCharsOnLine","indexOnLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","textbox","setObjectScaleOverridden","_refreshControlsVisibility","override","tmp","oURL","URL","reqHandler","HTTPS","HTTP","setEncoding","statusCode","errno","ECONNREFUSED","requestFs","fs","readFile","createImageAndCallBack","eval","createCanvasForNode","nodeCanvasOptions","nodeCanvas","nodeCacheCanvas","FabricCanvas","fabricCanvas","Font","originaInitStatic","createPNGStream","createJPEGStream","origSetBackstoreDimension","449","Stream","Response","Base64","inherits","writable","uri","withCredentials","responseType","emit","_headers","objectKeys","isSafeRequestHeader","setHeader","res","__aborted","handle","getHeader","removeHeader","write","isXHR2Compatible","unsafeHeaders","headerName","xs","Blob","ArrayBuffer","FormData","450","parseHeaders","getAllResponseHeaders","readable","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody","Uint8Array","byteLength","451","hasOwnProperty","465","qs","sep","regexp","maxKeys","kstr","vstr","466","stringifyPrimitive","isFinite","ks","467","decode","494","__WEBPACK_AMD_DEFINE_RESULT__","RangeError","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","base","digitToBasic","digit","flag","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","out","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","499","525","547","548","549"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAASC,EAAQC,GAEtB,YCLDA,GAAUD,EAAOC,QAAU,SAAUC,GACnCA,EAAQC,KAAKC,MAAMF,EACnB,IAAIG,GAASH,EAAMI,IAAI,SAAUC,GAC/B,GAAIC,GAAOD,EAAGE,MACd,IAAyB,gBAAdF,GAAGE,OAAqB,CACjC,IAAIF,EAAGE,OAAOC,QAGZ,MAAO,EAFPF,GAAOG,OAAOC,MAAMC,eAAeN,EAAGE,OAAOC,SAajD,MARIH,GAAGO,YAAcP,EAAGO,WAAWC,OACjCP,EAAO,WAAaA,EAAO,aAGzBD,EAAGE,OAAOC,UACZF,EAAOG,OAAOC,MAAMC,eAAeN,EAAGE,OAAOC,UAGxCF,IACNQ,KAAK,GAER,OAAOX,KDYHY,GACA,SAASjB,EAAQC,GAEtB,YAEAiB,QAAOC,eAAelB,EAAS,cAC7BmB,OAAO,IAETnB,cACEoB,WAKGC,GACA,SAAStB,EAAQC,EAASsB,GEjDhCtB,EAAAD,EAAAC,QAAAsB,EAAA,KAKAtB,EAAAuB,MAAAxB,EAAAyB,GAAA,8FAAqH,IAAQC,QAAA,EAAAC,SAAA,wCAAAC,SAAAC,SAAA,mDAAAC,KAAA,WAAAC,gBAAA,wHAA+RC,WAAA,iBF0DtZC,GACA,SAASjC,EAAQC,EAASsB,GG7DhC,GAAAW,GAAAX,EAAA,GACA,iBAAAW,SAAAlC,EAAAyB,GAAAS,EAAA,KAEAX,GAAA,GAAAW,KACAA,GAAAC,SAAAnC,EAAAC,QAAAiC,EAAAC,SHmFMC,GACA,SAASpC,EAAQC,GI3FvBD,EAAAC,QAAA,qEJiGMoC,GACA,SAASrC,EAAQC,EAASsB,GKlGhC,GAAAe,GAAAC,EACAC,IACAjB,GAAA,IACAe,EAAAf,EAAA,IACAgB,EAAAhB,EAAA,IACAvB,EAAAC,QAAAqC,MACAtC,EAAAC,QAAAwC,aAAAzC,EAAAC,QAAAD,EAAAC,QAAAD,WACA,IAAA0C,GAAA,kBAAA1C,GAAAC,QAAAD,EAAAC,QAAA0C,UAAA3C,EAAAC,QAAA0C,YAAoH3C,EAAAC,OACpHsC,KACAG,EAAAE,SAAAL,GAEAG,EAAAG,WAAAH,EAAAG,aACA3B,OAAA4B,KAAAN,GAAAO,QAAA,SAAAC,GACA,GAAAhD,GAAAwC,EAAAQ,EACAN,GAAAG,SAAAG,GAAA,WAA6C,MAAAhD,OL0GvCiD,GACA,SAASjD,EAAQC,EAASsB,GMzHhCvB,EAAAC,SAAkBiD,UAAA3B,EAAA,IAAAkB,YAAA,IN+HZU,GACA,SAASnD,EAAQC,EAASsB,GOhIhC,GAAA6B,GAAA7B,EAAA,IACA8B,EAAAD,EAAAjD,OAAAiD,EAAAjD,MAAuCmD,UAAAnD,KAAAmD,WACvCtD,GAAAC,QAAA,SAAAsD,GACA,MAAAF,GAAAC,UAAAE,MAAAH,EAAAI,aPuIMC,GACA,SAAS1D,EAAQC,GAEtB,YQ7IDD,GAAOC,SACL0D,YACGC,KAAM,UAAWnC,GAAI,QACrBmC,KAAM,KAAMnC,GAAI,URkJfoC,IACA,SAAS7D,EAAQC,EAASsB,GStJhCtB,EAAAD,EAAAC,QAAAsB,EAAA,KAKAtB,EAAAuB,MAAAxB,EAAAyB,GAAA,6unBAAownB,MT+J9vnBqC,IACA,SAAS9D,EAAQC,EAASsB,GUlKhC,GAAAW,GAAAX,EAAA,IACA,iBAAAW,SAAAlC,EAAAyB,GAAAS,EAAA,KAEAX,GAAA,IAAAW,KACAA,GAAAC,SAAAnC,EAAAC,QAAAiC,EAAAC,SVwLM4B,IACA,SAAS/D,EAAQC,KAMjB+D,IACA,SAAShE,EAAQC,EAASsB,GWvMhC,GAAA0C,GAAAjE,EAAAC,QAEAiE,GADA3C,EAAA,IAAA4C,aACA5C,EAAA,MACA6C,EAAA7C,EAAA,IAEA0C,GAAAI,QAAA,SAAAC,EAAAC,GACA,gBAAAD,KACAA,EAAAF,EAAAhE,MAAAkE,IAEAA,UACAA,EAAAE,MAAAF,EAAAG,OACAH,EAAAG,KAAAC,SAAA/D,OAAAgE,SAAAF,KAAA,MAEAH,EAAAE,MAAAF,EAAAM,WACAN,EAAAE,KAAAF,EAAAM,UAGAN,EAAAO,WACAP,EAAAQ,OACAR,EAAAO,SAAAP,EAAAQ,OAAA,IAEAR,EAAAO,SAAAlE,OAAAgE,SAAAE,UAIAP,EAAAE,OACAF,EAAAE,KAAA7D,OAAAgE,SAAAC,UAAAjE,OAAAgE,SAAAH,MAEA,IAAAO,KAAAT,EAAAE,QACAF,EAAAG,OACAH,EAAAG,KAAAH,EAAAE,KAAAQ,MAAA,SAEAV,EAAAE,KAAAF,EAAAE,KAAAQ,MAAA,SAEAV,EAAAG,OAAAH,EAAAG,KAAA,UAAAH,EAAAO,SAAA,OAEA,IAAAI,GAAA,GAAAf,GAAA,GAAAgB,GAAAZ,EAEA,OADAC,IAAAU,EAAAE,GAAA,WAAAZ,GACAU,GAGAhB,EAAAmB,IAAA,SAAAd,EAAAC,GACAD,EAAAe,OAAA,KACA,IAAAJ,GAAAhB,EAAAI,QAAAC,EAAAC,EAEA,OADAU,GAAAK,MACAL,GAGAhB,EAAAsB,MAAA,aACAtB,EAAAsB,MAAAC,kBAAA,CAEA,IAAAN,GAAA,WACA,sBAAAvE,QACA,SAAA8E,OAAA,2BAEA,IAAA9E,OAAA+E,eACA,MAAA/E,QAAA+E,cAEA,IAAA/E,OAAAgF,cAAA,CAMA,OALAC,IACA,qBACA,qBACA,qBAEAC,EAAA,EAAuBA,EAAAD,EAAAE,OAAgBD,IACvC,IACA,GAAAE,GAAA,GAAApF,QAAA,cAAAiF,EAAAC,GACA,mBACA,GAAAE,EAAA,CACA,GAAAC,GAAAD,CAEA,OADAA,GAAA,KACAC,EAGA,UAAArF,QAAA,cAAAiF,EAAAC,KAIA,MAAAI,IAEA,SAAAR,OAAA,sCAGA,SAAAA,OAAA,wCAIAxB,GAAAiC,cACAC,IAAA,WACAC,IAAA,sBACAC,IAAA,aACAC,IAAA,KACAC,IAAA,UACAC,IAAA,WACAC,IAAA,gCACAC,IAAA,aACA5C,IAAA,gBACA6C,IAAA,kBACAC,IAAA,eACAC,IAAA,mBACAC,IAAA,oBACAC,IAAA,oBACAC,IAAA,YACAC,IAAA,eACAC,IAAA,YACAC,IAAA,qBACAC,IAAA,cACAC,IAAA,eACAC,IAAA,mBACAC,IAAA,YACAC,IAAA,YACAC,IAAA,qBACAC,IAAA,iBACAC,IAAA,gCACAC,IAAA,mBACAC,IAAA,WACAC,IAAA,OACAC,IAAA,kBACAC,IAAA,sBACAC,IAAA,2BACAC,IAAA,wBACAC,IAAA,yBACAC,IAAA,kCACAC,IAAA,qBACAC,IAAA,eACAC,IAAA,uBACAC,IAAA,SACAC,IAAA,oBACAC,IAAA,uBACAC,IAAA,mBACAC,IAAA,wBACAC,IAAA,oBACAC,IAAA,kCACAC,IAAA,wBACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,sBACAC,IAAA,mBACAC,IAAA,6BACAC,IAAA,0BACAC,IAAA,uBACAC,IAAA,2BACAC,IAAA,eACAC,IAAA,oCX8MMC,IACA,SAAS1J,EAAQC,EAASsB,GYhUhC,QAAAoI,KACAC,KAAA/E,SAAA,KACA+E,KAAAC,QAAA,KACAD,KAAAE,KAAA,KACAF,KAAApF,KAAA,KACAoF,KAAAnF,KAAA,KACAmF,KAAAhF,SAAA,KACAgF,KAAAG,KAAA,KACAH,KAAAI,OAAA,KACAJ,KAAAK,MAAA,KACAL,KAAAM,SAAA,KACAN,KAAAO,KAAA,KACAP,KAAAQ,KAAA,KAqDA,QAAAC,GAAAjG,EAAAkG,EAAAC,GACA,GAAAnG,GAAAoG,EAAApG,gBAAAuF,GAAA,MAAAvF,EAEA,IAAAqG,GAAA,GAAAd,EAEA,OADAc,GAAArK,MAAAgE,EAAAkG,EAAAC,GACAE,EA6OA,QAAAC,GAAAC,GAMA,MADAC,GAAAD,OAAAN,EAAAM,IACAA,YAAAhB,GACAgB,EAAAE,SADAlB,EAAAmB,UAAAD,OAAAE,KAAAJ,GA4DA,QAAAK,GAAAC,EAAAC,GACA,MAAAb,GAAAY,GAAA,MAAAE,QAAAD,GAOA,QAAAE,GAAAH,EAAAC,GACA,MAAAD,GACAZ,EAAAY,GAAA,MAAAI,cAAAH,GADAA,EAyRA,QAAAN,GAAAU,GACA,sBAAAA,GAGA,QAAAd,GAAAc,GACA,sBAAAA,IAAA,OAAAA,EAGA,QAAAC,GAAAD,GACA,cAAAA,EAEA,QAAAE,GAAAF,GACA,aAAAA,EA5qBA,GAAAG,GAAAlK,EAAA,IAEAtB,GAAAG,MAAAiK,EACApK,EAAAkL,QAAAH,EACA/K,EAAAoL,cAAAD,EACAnL,EAAA4K,OAAAH,EAEAzK,EAAA0J,KAqBA,IAAA+B,GAAA,oBACAC,EAAA,WAIAC,GAAA,oCAGAC,GAAA,IAAgB,IAAK,kBAAAC,OAAAF,GAGrBG,GAAA,KAAAD,OAAAD,GAKAG,GAAA,gBAAqC,KAAAF,OAAAC,GACrCE,GAAA,aACAC,EAAA,IACAC,EAAA,wBACAC,EAAA,8BAEAC,GACAC,YAAA,EACAC,eAAA,GAGAC,GACAF,YAAA,EACAC,eAAA,GAGAE,GACAxI,MAAA,EACAyI,OAAA,EACAC,KAAA,EACAC,QAAA,EACA9K,MAAA,EACA+K,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,WAAA,EACAC,SAAA,GAEAC,EAAA3L,EAAA,IAUAoI,GAAAmB,UAAA1K,MAAA,SAAAgE,EAAAkG,EAAAC,GACA,IAAAK,EAAAxG,GACA,SAAA+I,WAAA,+CAAA/I,GAGA,IAAAgJ,GAAAhJ,CAIAgJ,KAAAC,MAEA,IAAAC,GAAA5B,EAAA6B,KAAAH,EACA,IAAAE,EAAA,CACAA,IAAA,EACA,IAAAE,GAAAF,EAAAG,aACA7D,MAAA/E,SAAA2I,EACAJ,IAAAM,OAAAJ,EAAAxH,QAOA,GAAAyE,GAAA+C,GAAAF,EAAAO,MAAA,yBACA,GAAA9D,GAAA,OAAAuD,EAAAM,OAAA,MACA7D,GAAAyD,GAAAd,EAAAc,KACAF,IAAAM,OAAA,GACA9D,KAAAC,SAAA,GAIA,IAAA2C,EAAAc,KACAzD,GAAAyD,IAAAb,EAAAa,IAAA,CAmBA,OADAM,MACA/H,EAAA,EAAmBA,EAAAoG,EAAAnG,OAA4BD,IAAA,CAC/C,GAAAgI,GAAAT,EAAAU,QAAA7B,EAAApG,GACAgI,UAAAD,QAAAC,EAAAD,KACAA,EAAAC,GAKA,GAAA/D,GAAAiE,CAGAA,GAFAH,OAEAR,EAAAY,YAAA,KAIAZ,EAAAY,YAAA,IAAAJ,GAKAG,SACAjE,EAAAsD,EAAAa,MAAA,EAAAF,GACAX,IAAAa,MAAAF,EAAA,GACAnE,KAAAE,KAAAoE,mBAAApE,IAIA8D,IACA,QAAA/H,GAAA,EAAmBA,EAAAmG,EAAAlG,OAAyBD,IAAA,CAC5C,GAAAgI,GAAAT,EAAAU,QAAA9B,EAAAnG,GACAgI,UAAAD,QAAAC,EAAAD,KACAA,EAAAC,GAGAD,SACAA,EAAAR,EAAAtH,QAEA8D,KAAApF,KAAA4I,EAAAa,MAAA,EAAAL,GACAR,IAAAa,MAAAL,GAGAhE,KAAAuE,YAIAvE,KAAAhF,SAAAgF,KAAAhF,UAAA,EAIA,IAAAwJ,GAAA,MAAAxE,KAAAhF,SAAA,IACA,MAAAgF,KAAAhF,SAAAgF,KAAAhF,SAAAkB,OAAA,EAGA,KAAAsI,EAEA,OADAC,GAAAzE,KAAAhF,SAAAI,MAAA,MACAa,EAAA,EAAAyI,EAAAD,EAAAvI,OAA2CD,EAAAyI,EAAOzI,IAAA,CAClD,GAAA0I,GAAAF,EAAAxI,EACA,IAAA0I,IACAA,EAAAZ,MAAAxB,GAAA,CAEA,OADAqC,GAAA,GACAC,EAAA,EAAAC,EAAAH,EAAAzI,OAA0C2I,EAAAC,EAAOD,IAKjDD,GAJAD,EAAAI,WAAAF,GAAA,IAIA,IAEAF,EAAAE,EAIA,KAAAD,EAAAb,MAAAxB,GAAA,CACA,GAAAyC,GAAAP,EAAAJ,MAAA,EAAApI,GACAgJ,EAAAR,EAAAJ,MAAApI,EAAA,GACAiJ,EAAAP,EAAAZ,MAAAvB,EACA0C,KACAF,EAAApN,KAAAsN,EAAA,IACAD,EAAAE,QAAAD,EAAA,KAEAD,EAAA/I,SACAsH,EAAA,IAAAyB,EAAA7N,KAAA,KAAAoM,GAEAxD,KAAAhF,SAAAgK,EAAA5N,KAAA,IACA,SAaA,GAPA4I,KAAAhF,SAAAkB,OAAAoG,EACAtC,KAAAhF,SAAA,GAGAgF,KAAAhF,SAAAgF,KAAAhF,SAAA6I,eAGAW,EAAA,CAOA,OAFAY,GAAApF,KAAAhF,SAAAI,MAAA,KACAiK,KACApJ,EAAA,EAAqBA,EAAAmJ,EAAAlJ,SAAwBD,EAAA,CAC7C,GAAAqJ,GAAAF,EAAAnJ,EACAoJ,GAAAzN,KAAA0N,EAAAvB,MAAA,kBACA,OAAAlC,EAAA0D,OAAAD,MAEAtF,KAAAhF,SAAAqK,EAAAjO,KAAA,KAGA,GAAAoO,GAAAxF,KAAAnF,KAAA,IAAAmF,KAAAnF,KAAA,GACA4K,EAAAzF,KAAAhF,UAAA,EACAgF,MAAApF,KAAA6K,EAAAD,EACAxF,KAAAQ,MAAAR,KAAApF,KAIA4J,IACAxE,KAAAhF,SAAAgF,KAAAhF,SAAA8I,OAAA,EAAA9D,KAAAhF,SAAAkB,OAAA,GACA,MAAAsH,EAAA,KACAA,EAAA,IAAAA,IAOA,IAAAf,EAAAmB,GAKA,OAAA3H,GAAA,EAAAyI,EAAAvC,EAAAjG,OAA0CD,EAAAyI,EAAOzI,IAAA,CACjD,GAAAyJ,GAAAvD,EAAAlG,GACA0J,EAAAC,mBAAAF,EACAC,KAAAD,IACAC,EAAAE,OAAAH,IAEAlC,IAAApI,MAAAsK,GAAAtO,KAAAuO,GAMA,GAAAxF,GAAAqD,EAAAU,QAAA,IACA/D,UAEAH,KAAAG,KAAAqD,EAAAM,OAAA3D,GACAqD,IAAAa,MAAA,EAAAlE,GAEA,IAAA2F,GAAAtC,EAAAU,QAAA,IAoBA,IAnBA4B,QACA9F,KAAAI,OAAAoD,EAAAM,OAAAgC,GACA9F,KAAAK,MAAAmD,EAAAM,OAAAgC,EAAA,GACApF,IACAV,KAAAK,MAAAiD,EAAA9M,MAAAwJ,KAAAK,QAEAmD,IAAAa,MAAA,EAAAyB,IACGpF,IAEHV,KAAAI,OAAA,GACAJ,KAAAK,UAEAmD,IAAAxD,KAAAM,SAAAkD,GACAX,EAAAe,IACA5D,KAAAhF,WAAAgF,KAAAM,WACAN,KAAAM,SAAA,KAIAN,KAAAM,UAAAN,KAAAI,OAAA,CACA,GAAAoF,GAAAxF,KAAAM,UAAA,GACAgF,EAAAtF,KAAAI,QAAA,EACAJ,MAAAO,KAAAiF,EAAAF,EAKA,MADAtF,MAAAQ,KAAAR,KAAAiB,SACAjB,MAcAD,EAAAmB,UAAAD,OAAA,WACA,GAAAf,GAAAF,KAAAE,MAAA,EACAA,KACAA,EAAA0F,mBAAA1F,GACAA,IAAA6F,QAAA,YACA7F,GAAA,IAGA,IAAAjF,GAAA+E,KAAA/E,UAAA,GACAqF,EAAAN,KAAAM,UAAA,GACAH,EAAAH,KAAAG,MAAA,GACAvF,GAAA,EACAyF,EAAA,EAEAL,MAAApF,KACAA,EAAAsF,EAAAF,KAAApF,KACGoF,KAAAhF,WACHJ,EAAAsF,GAAAF,KAAAhF,SAAAkJ,QAAA,UACAlE,KAAAhF,SACA,IAAAgF,KAAAhF,SAAA,KACAgF,KAAAnF,OACAD,GAAA,IAAAoF,KAAAnF,OAIAmF,KAAAK,OACAO,EAAAZ,KAAAK,QACA/I,OAAA4B,KAAA8G,KAAAK,OAAAnE,SACAmE,EAAAiD,EAAA5J,UAAAsG,KAAAK,OAGA,IAAAD,GAAAJ,KAAAI,QAAAC,GAAA,IAAAA,GAAA,EAsBA,OApBApF,IAAA,MAAAA,EAAA6I,aAAA7I,GAAA,KAIA+E,KAAAC,WACAhF,GAAA4H,EAAA5H,KAAAL,KAAA,GACAA,EAAA,MAAAA,GAAA,IACA0F,GAAA,MAAAA,EAAA0F,OAAA,KAAA1F,EAAA,IAAAA,IACG1F,IACHA,EAAA,IAGAuF,GAAA,MAAAA,EAAA6F,OAAA,KAAA7F,EAAA,IAAAA,GACAC,GAAA,MAAAA,EAAA4F,OAAA,KAAA5F,EAAA,IAAAA,GAEAE,IAAAyF,QAAA,iBAAAhC,GACA,MAAA6B,oBAAA7B,KAEA3D,IAAA2F,QAAA,WAEA9K,EAAAL,EAAA0F,EAAAF,EAAAD,GAOAJ,EAAAmB,UAAAK,QAAA,SAAAD,GACA,MAAAtB,MAAAyB,cAAAhB,EAAAa,GAAA,OAAAL,UAQAlB,EAAAmB,UAAAO,cAAA,SAAAH,GACA,GAAAN,EAAAM,GAAA,CACA,GAAA2E,GAAA,GAAAlG,EACAkG,GAAAzP,MAAA8K,GAAA,MACAA,EAAA2E,EAGA,GAAAxP,GAAA,GAAAsJ,EAUA,IATAzI,OAAA4B,KAAA8G,MAAA7G,QAAA,SAAA2L,GACArO,EAAAqO,GAAA9E,KAAA8E,IACG9E,MAIHvJ,EAAA0J,KAAAmB,EAAAnB,KAGA,KAAAmB,EAAAd,KAEA,MADA/J,GAAA+J,KAAA/J,EAAAwK,SACAxK,CAIA,IAAA6K,EAAArB,UAAAqB,EAAArG,SAcA,MAZA3D,QAAA4B,KAAAoI,GAAAnI,QAAA,SAAA2L,GACA,aAAAA,IACArO,EAAAqO,GAAAxD,EAAAwD,MAIAjC,EAAApM,EAAAwE,WACAxE,EAAAuE,WAAAvE,EAAA6J,WACA7J,EAAA8J,KAAA9J,EAAA6J,SAAA,KAGA7J,EAAA+J,KAAA/J,EAAAwK,SACAxK,CAGA,IAAA6K,EAAArG,UAAAqG,EAAArG,WAAAxE,EAAAwE,SAAA,CASA,IAAA4H,EAAAvB,EAAArG,UAKA,MAJA3D,QAAA4B,KAAAoI,GAAAnI,QAAA,SAAA2L,GACArO,EAAAqO,GAAAxD,EAAAwD,KAEArO,EAAA+J,KAAA/J,EAAAwK,SACAxK,CAIA,IADAA,EAAAwE,SAAAqG,EAAArG,SACAqG,EAAA1G,MAAAgI,EAAAtB,EAAArG,UASAxE,EAAA6J,SAAAgB,EAAAhB,aATA,CAEA,IADA,GAAA4F,IAAA5E,EAAAhB,UAAA,IAAAlF,MAAA,KACA8K,EAAAhK,UAAAoF,EAAA1G,KAAAsL,EAAAC,WACA7E,EAAA1G,OAAA0G,EAAA1G,KAAA,IACA0G,EAAAtG,WAAAsG,EAAAtG,SAAA,IACA,KAAAkL,EAAA,IAAAA,EAAAf,QAAA,IACAe,EAAAhK,OAAA,GAAAgK,EAAAf,QAAA,IACA1O,EAAA6J,SAAA4F,EAAA9O,KAAA,KAWA,GAPAX,EAAA2J,OAAAkB,EAAAlB,OACA3J,EAAA4J,MAAAiB,EAAAjB,MACA5J,EAAAmE,KAAA0G,EAAA1G,MAAA,GACAnE,EAAAyJ,KAAAoB,EAAApB,KACAzJ,EAAAuE,SAAAsG,EAAAtG,UAAAsG,EAAA1G,KACAnE,EAAAoE,KAAAyG,EAAAzG,KAEApE,EAAA6J,UAAA7J,EAAA2J,OAAA,CACA,GAAAoF,GAAA/O,EAAA6J,UAAA,GACAgF,EAAA7O,EAAA2J,QAAA,EACA3J,GAAA8J,KAAAiF,EAAAF,EAIA,MAFA7O,GAAAwJ,QAAAxJ,EAAAwJ,SAAAqB,EAAArB,QACAxJ,EAAA+J,KAAA/J,EAAAwK,SACAxK,EAGA,GAAA2P,GAAA3P,EAAA6J,UAAA,MAAA7J,EAAA6J,SAAA0F,OAAA,GACAK,EACA/E,EAAA1G,MACA0G,EAAAhB,UAAA,MAAAgB,EAAAhB,SAAA0F,OAAA,GAEAM,EAAAD,GAAAD,GACA3P,EAAAmE,MAAA0G,EAAAhB,SACAiG,EAAAD,EACAE,EAAA/P,EAAA6J,UAAA7J,EAAA6J,SAAAlF,MAAA,SACA8K,EAAA5E,EAAAhB,UAAAgB,EAAAhB,SAAAlF,MAAA,SACAqL,EAAAhQ,EAAAwE,WAAA4H,EAAApM,EAAAwE,SA2BA,IApBAwL,IACAhQ,EAAAuE,SAAA,GACAvE,EAAAoE,KAAA,KACApE,EAAAmE,OACA,KAAA4L,EAAA,GAAAA,EAAA,GAAA/P,EAAAmE,KACA4L,EAAArB,QAAA1O,EAAAmE,OAEAnE,EAAAmE,KAAA,GACA0G,EAAArG,WACAqG,EAAAtG,SAAA,KACAsG,EAAAzG,KAAA,KACAyG,EAAA1G,OACA,KAAAsL,EAAA,GAAAA,EAAA,GAAA5E,EAAA1G,KACAsL,EAAAf,QAAA7D,EAAA1G,OAEA0G,EAAA1G,KAAA,MAEA0L,MAAA,KAAAJ,EAAA,SAAAM,EAAA,KAGAH,EAEA5P,EAAAmE,KAAA0G,EAAA1G,MAAA,KAAA0G,EAAA1G,KACA0G,EAAA1G,KAAAnE,EAAAmE,KACAnE,EAAAuE,SAAAsG,EAAAtG,UAAA,KAAAsG,EAAAtG,SACAsG,EAAAtG,SAAAvE,EAAAuE,SACAvE,EAAA2J,OAAAkB,EAAAlB,OACA3J,EAAA4J,MAAAiB,EAAAjB,MACAmG,EAAAN,MAEG,IAAAA,EAAAhK,OAGHsK,UACAA,EAAAE,MACAF,IAAAtE,OAAAgE,GACAzP,EAAA2J,OAAAkB,EAAAlB,OACA3J,EAAA4J,MAAAiB,EAAAjB,UACG,KAAAuB,EAAAN,EAAAlB,QAAA,CAIH,GAAAqG,EAAA,CACAhQ,EAAAuE,SAAAvE,EAAAmE,KAAA4L,EAAAL,OAIA,IAAAQ,MAAAlQ,EAAAmE,MAAAnE,EAAAmE,KAAAsJ,QAAA,SACAzN,EAAAmE,KAAAQ,MAAA,IACAuL,KACAlQ,EAAAyJ,KAAAyG,EAAAR,QACA1P,EAAAmE,KAAAnE,EAAAuE,SAAA2L,EAAAR,SAWA,MARA1P,GAAA2J,OAAAkB,EAAAlB,OACA3J,EAAA4J,MAAAiB,EAAAjB,MAEAsB,EAAAlL,EAAA6J,WAAAqB,EAAAlL,EAAA2J,UACA3J,EAAA8J,MAAA9J,EAAA6J,SAAA7J,EAAA6J,SAAA,KACA7J,EAAA2J,OAAA3J,EAAA2J,OAAA,KAEA3J,EAAA+J,KAAA/J,EAAAwK,SACAxK,EAGA,IAAA+P,EAAAtK,OAWA,MARAzF,GAAA6J,SAAA,KAEA7J,EAAA2J,OACA3J,EAAA8J,KAAA,IAAA9J,EAAA2J,OAEA3J,EAAA8J,KAAA,KAEA9J,EAAA+J,KAAA/J,EAAAwK,SACAxK,CAcA,QARAmQ,GAAAJ,EAAAnC,UAAA,GACAwC,GACApQ,EAAAmE,MAAA0G,EAAA1G,QAAA,MAAAgM,GAAA,OAAAA,IACA,KAAAA,EAIAE,EAAA,EACA7K,EAAAuK,EAAAtK,OAA8BD,GAAA,EAAQA,IACtC2K,EAAAJ,EAAAvK,GACA,KAAA2K,EACAJ,EAAAO,OAAA9K,EAAA,GACK,OAAA2K,GACLJ,EAAAO,OAAA9K,EAAA,GACA6K,KACKA,IACLN,EAAAO,OAAA9K,EAAA,GACA6K,IAKA,KAAAR,IAAAC,EACA,KAAUO,IAAMA,EAChBN,EAAArB,QAAA,OAIAmB,GAAA,KAAAE,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAR,OAAA,IACAQ,EAAArB,QAAA,IAGA0B,GAAA,MAAAL,EAAApP,KAAA,KAAA0M,YACA0C,EAAA5O,KAAA,GAGA,IAAAoP,GAAA,KAAAR,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAR,OAAA,EAGA,IAAAS,EAAA,CACAhQ,EAAAuE,SAAAvE,EAAAmE,KAAAoM,EAAA,GACAR,EAAAtK,OAAAsK,EAAAL,QAAA,EAIA,IAAAQ,MAAAlQ,EAAAmE,MAAAnE,EAAAmE,KAAAsJ,QAAA,SACAzN,EAAAmE,KAAAQ,MAAA,IACAuL,KACAlQ,EAAAyJ,KAAAyG,EAAAR,QACA1P,EAAAmE,KAAAnE,EAAAuE,SAAA2L,EAAAR,SAyBA,MArBAG,MAAA7P,EAAAmE,MAAA4L,EAAAtK,OAEAoK,IAAAU,GACAR,EAAArB,QAAA,IAGAqB,EAAAtK,OAIAzF,EAAA6J,SAAAkG,EAAApP,KAAA,MAHAX,EAAA6J,SAAA,KACA7J,EAAA8J,KAAA,MAMAoB,EAAAlL,EAAA6J,WAAAqB,EAAAlL,EAAA2J,UACA3J,EAAA8J,MAAA9J,EAAA6J,SAAA7J,EAAA6J,SAAA,KACA7J,EAAA2J,OAAA3J,EAAA2J,OAAA,KAEA3J,EAAAyJ,KAAAoB,EAAApB,MAAAzJ,EAAAyJ,KACAzJ,EAAAwJ,QAAAxJ,EAAAwJ,SAAAqB,EAAArB,QACAxJ,EAAA+J,KAAA/J,EAAAwK,SACAxK,GAGAsJ,EAAAmB,UAAAqD,UAAA,WACA,GAAA3J,GAAAoF,KAAApF,KACAC,EAAAkH,EAAA4B,KAAA/I,EACAC,KACAA,IAAA,GACA,MAAAA,IACAmF,KAAAnF,OAAAiJ,OAAA,IAEAlJ,IAAAkJ,OAAA,EAAAlJ,EAAAsB,OAAArB,EAAAqB,SAEAtB,IAAAoF,KAAAhF,SAAAJ,KZqXMqM,IACA,SAAS7Q,EAAQC,EAASsB,IaxiC/B,WAKD,QAAAuP,GAAAC,GACAnH,KAAAmH,UAJA,GAAAC,GAAA/Q,EACAgR,EAAA;AAKAH,EAAAhG,UAAA,GAAArF,OACAqL,EAAAhG,UAAAlH,KAAA,wBAIAoN,EAAAE,OACAF,EAAAE,KAAA,SAAAC,GACA,IAEA,GAAAC,GAAAC,EAAAC,EAAA,EAAAhR,EAAA2Q,EAAAM,EAAA,GAIAJ,EAAAvB,OAAA,EAAA0B,KAAAhR,EAAA,IAAAgR,EAAA,GAEAC,GAAAjR,EAAAsP,OAAA,GAAAwB,GAAA,EAAAE,EAAA,KACA,CAEA,GADAD,EAAAF,EAAAxC,WAAA2C,GAAA,KACAD,EAAA,IACA,SAAAP,GAAA,2FAEAM,MAAA,EAAAC,EAEA,MAAAE,KAKAP,EAAAQ,OACAR,EAAAQ,KAAA,SAAAL,GAEA,GADAA,IAAAxB,QAAA,UACAwB,EAAArL,OAAA,KACA,SAAAgL,GAAA,oEAEA,KAEA,GAAAW,GAAAC,EAAAC,EAAA,EAAAL,EAAA,EAAAC,EAAA,GAEAG,EAAAP,EAAAvB,OAAA0B,MAEAI,IAAAD,EAAAE,EAAA,KAAAF,EAAAC,IAGAC,IAAA,GAAAJ,GAAAK,OAAAC,aAAA,IAAAJ,OAAAE,EAAA,MAGAD,EAAAT,EAAAnD,QAAA4D,EAEA,OAAAH,SbkjCMO,IACA,SAAS9R,EAAQC,EAASsB,GAE/B,YAsCA,SAASwQ,GAAuBpH,GAAO,MAAOA,IAAOA,EAAIlI,WAAakI,GAAQzH,UAASyH,GApCvFzJ,OAAOC,eAAelB,EAAS,cAC7BmB,OAAO,GAGT,IAAI4Q,GAAazQ,EAAoB,IAEjC0Q,EAAcF,EAAuBC,Ec/9B1CzQ,GAAA,IACA,IAAA2Q,GAAA3Q,EAAA,Gdo+BK4Q,EAAgBJ,EAAuBG,Gcn+B5CE,EAAA7Q,EAAA,Idu+BK8Q,EAAaN,EAAuBK,Gct+BzCE,EAAA/Q,EAAA,Id0+BKgR,EAAcR,EAAuBO,Gcz+B1CE,EAAAjR,EAAA,Id6+BKkR,EAASV,EAAuBS,Gc5+BrCE,EAAAnR,EAAA,Idg/BKoR,EAAUZ,EAAuBW,Gc/+BtCE,EAAArR,EAAA,IACAsR,EAAAtR,EAAA,GAIAA,GAAA,Kdo/BCtB,cACE6S,MAAO,WACLlJ,KAAKmJ,YAAYC,SAAWpJ,Kcn/BjCqJ,iBdq/BGC,Ycl/BHC,QAAAd,aAEAe,KAAAX,cdo/BGY,SACEC,YAAa,SAAqBpT,GAChC,OAAO,EAAIiS,ccn/BlBjS,Idq/BKqT,QAAS,SAAiBtN,GACxB,GAAIuN,GAAI5J,KAAK6J,Kcn/BpBC,cdo/BWC,EAAS,GAAIhT,QAAOiT,OAAOC,OAAOL,GAAKM,MAAO,IAAKC,Ocn/B9D,Kdo/BOP,GAAEI,Ocn/BTD,Cdo/BO,IAAIK,GAAS,GAAIrT,Qcn/BxBsT,Udo/BOD,GAAOE,OAAS,SAAUC,GACxB,GAAIC,GAAS,GAAIzT,Qcn/B1B0T,Kdo/BSD,GAAOE,IAAMH,EAAMI,Ocn/B5BlU,Odo/BS+T,EAAOF,OAAS,WACd,GAAIM,GAAQ,GAAI7T,QAAOiT,OAAOS,Mcn/BzCD,Edo/BWI,GAAMC,KACJC,Mcn/Bb,Edo/BaC,Qcn/Bb,Gdo/BaC,Wcn/Bb,Gdo/Bab,Ocn/Bb,Ido/BaD,MAAOM,EAAON,OAAS,IAAMM,Ecl/B1CL,Udo/BWJ,EAAOkB,acn/BlBL,Gdo/BWb,EAAOmB,Icn/BlBN,Gdo/BWb,Ecn/BXoB,cds/BOf,EAAOgB,cAAc/O,EAAEsO,OAAOU,Mcn/BrC,Kdq/BKC,UAAW,WACT,GAAI1B,GAAI5J,KAAK6J,Kcn/BpBC,cdo/BWC,EAASH,Ecn/BpBI,Mdo/BOhK,MAAKuL,MAAM/P,IAAI,sBAAsBgQ,KAAK,SAAUC,GAClDC,QAAQC,IAAIF,EAASG,Kcn/B9BC,Sdo/BS7L,KAAK8L,YAAY/B,EAAOgC,aAAa,GAAGC,YAAaP,EAASG,Kcn/BvEC,Yds/BKI,gBAAiB,WACfjM,KAAKkM,cAAcC,Ucn/B1B,Edo/BWnM,KAAKoM,iBACPpM,KAAKmJ,YAAY7S,OAAQ,EAAI+R,cAAqBrI,KAAKqM,cAAcC,Sc9+B9EC,Kdg/BSvM,KAAKmJ,YAAYqD,QAAQ,IAAK,EAAInE,cAAqBrI,KAAKqM,cAAcI,OAAOC,GAAG,Gc/+B7FH,Kdg/BSvM,KAAKmJ,YAAYqD,QAAQ,IAAK,EAAInE,cAAqBrI,KAAKqM,cAAcI,OAAOC,GAAG,Gc/+B7FH,Kdg/BSvM,KAAKmJ,YAAYqD,QAAQ,IAAK,EAAInE,cAAqBrI,KAAKqM,cAAcI,OAAOC,GAAG,Gc/+B7FH,Kdg/BSvM,KAAKmJ,YAAYqD,QAAQ,IAAK,EAAInE,cAAqBrI,KAAKqM,cAAcI,OAAOC,GAAG,Gc9+B7FH,Kdg/BSvM,KAAKuL,MAAMoB,KAAK,iCAAkC3M,KAAKmJ,aAAaqC,KAAK,SAAUC,GACjFzL,KAAK4M,Wc/+BhB,Qdg/BW5M,KAAKkM,cAAcC,Uc/+B9B,Edg/BWnM,KAAKmJ,YAAY0D,Qc/+B5B,Gdg/BW7M,KAAKmJ,YAAYqD,SAAW,GAAI,GAAI,Gc/+B/C,Idg/BWxM,KAAKmJ,YAAYsD,QACfC,Gc9+Bb,Gdg/BW1M,KAAKqM,eACHzB,OACEkC,Mc/+Bf,Gdg/BeC,Kc/+Bf,Qdg/BenB,Kc/+Bf,Gdg/BeoB,Mc9+Bf,Gdg/BaV,UAAYC,QACZE,QACEC,KAAOH,SAAaA,SAAaA,SAAaA,WAGlDvM,KAAKiN,Wc7+BhB,gBd++BWjN,KAAKkN,cAAcC,UAAUvV,KAAK6T,Ec9+B7CG,Od++BY,SAAUH,GACXzL,KAAK4M,Wc9+BhB,Qd++BW5M,KAAKkM,cAAcC,Uc9+B9B,Ed++BWT,QAAQC,Ic9+BnBF,Odi/BSzL,KAAKkM,cAAcC,Uc9+B5B,Ed++BSnM,KAAK4M,Wc9+Bd,Wdi/BKR,cAAe,WACb,GAAIgB,Gc9+BX,Id8+B6BpN,KAAKqM,cAAcC,SAASC,IAAIrQ,OAClDmR,EAAgE,IAA/CrN,KAAKqM,cAAcI,OAAOC,GAAG,GAAGH,IAAIrQ,QAA+D,IAA/C8D,KAAKqM,cAAcI,OAAOC,GAAG,GAAGH,IAAIrQ,QAA+D,IAA/C8D,KAAKqM,cAAcI,OAAOC,GAAG,GAAGH,IAAIrQ,Qc7+BxK,Id6+BwL8D,KAAKqM,cAAcI,OAAOC,GAAG,GAAGH,IAAIrQ,MAErN,OAAOkR,Ic9+BdC,Gdg/BKC,OAAQ,WACkB,KAApBtN,KAAKuN,IAAI9J,SACPzD,KAAKmJ,YAAYqE,KAAKtJ,QAAQlE,KAAKuN,WACrCvN,KAAKmJ,YAAYqE,KAAK5V,KAAKoI,Kc9+BtCuN,Kd++BWvN,KAAKuN,Ic9+BhB,Idg/BWvN,KAAKuN,Ic9+BhB,Kdk/BKE,UAAW,SAAmBC,GAC5B1N,KAAKmJ,YAAYqE,KAAKzG,OAAO2G,Ec9+BpC,Idi/BKC,8BAA+B,WAC7B3N,KAAKuL,MAAM/P,IAAI,6BAA6BgQ,KAAK,SAAUC,GACzDmC,SAASC,eAAe,4BAA4BC,MAAMC,Qct8BnE,Odu8BS/N,KAAKkN,cAAcC,UAAY1B,Ect8BxCG,Qdy8BKE,YAAa,SAAqBkC,EAAWC,GAC3CD,EAAYA,EAAU5S,MAAM,Kct8BnC,Edu8BO,IAAIyQ,GAAU,Wct8BrBoC,Cdu8BOjO,MAAKuL,MAAMoB,KAAK,kCAAuD,IAAnBqB,EAAU9R,OAAe8R,GAAaE,SAAWC,eAAgB,2BAA4BC,cAAiBvC,KAAaL,KAAK,SAAUC,GAC5LC,QAAQC,IAAIF,Ect8BrBG,Mdu8BS5L,KAAKqM,cAAczB,MAAMgB,KAAOH,EAASG,Kct8BlDxS,Idu8BS4G,KAAKmJ,YAAYkF,OAAOzW,KAAKoI,KAAKqM,cct8B3CzB,Wd08BGgB,KAAM,WACJ,OACEM,eACEC,Ucr8BT,Gdu8BOe,eACEC,aACAH,Mcr8BT,Gdu8BOsB,SAAU7F,act8BjB6F,Sdu8BOvU,UAAW4O,act8BlB5O,Udu8BOwT,Ict8BP,Gdu8BOpE,aACEC,Sct8BT,Gdu8BS2D,Kct8BT,Kdu8BSwB,Qct8BT,Odu8BSf,QACAgB,Kct8BT,Gdu8BSC,Wct8BT,Edu8BSjC,SAAU,GAAI,GAAI,Gct8B3B,Idu8BS6B,UACA5B,QACEC,Gcr8BX,Gdu8BSpW,Mcr8BT,Idu8BO+V,eACEzB,OACEkC,Mct8BX,Gdu8BWC,Kct8BX,Qdu8BWnB,Kct8BX,Gdu8BWoB,Mcr8BX,Gdu8BSV,UAAYC,QACZE,QACEC,KAAOH,SAAaA,SAAaA,SAAaA,aAMtDmC,SACEC,UAAa,SAAmBpH,GAC9B,MAAOvH,MAAK4O,SAASF,QAAQG,SAAS,GAAIC,MAAsD,IAAjDhU,SAASyM,EAAMwH,WAAWC,UAAU,EAAG,GAAI,Kcv8BjG,MAmBAC,MAAAlG,ady7BGmG,MACEC,Sct7BLC,gBAAApG,EAAAoG,iBdy7BKC,Scr7BLhG,gBAAAJ,EAAAI,oBd67BMiG,IACA,SAASlZ,EAAQC,EAASsB,Ge70ChCtB,EAAAD,EAAAC,QAAAsB,EAAA,KAKAtB,EAAAuB,MAAAxB,EAAAyB,GAAA,g7CAAu8C,IAAQC,QAAA,EAAAC,SAAA,uDAAAC,SAAAC,SAAA,2sBAAAC,KAAA,yBAAAC,gBAAA,4jFAAs5GC,WAAA,iBfs1C/1J4G,IACA,SAAS5I,EAAQC,EAASsB,GgBz1ChC,GAAAW,GAAAX,EAAA,IACA,iBAAAW,SAAAlC,EAAAyB,GAAAS,EAAA,KAEAX,GAAA,GAAAW,KACAA,GAAAC,SAAAnC,EAAAC,QAAAiC,EAAAC,ShB+2CMgX,IACA,SAASnZ,OAAQC,QAASsB,sBiBv3ChC,SAAA6X,OAAAC;AAGA,GAAAzF,iBAAwBlS,QAAA,QAExBzB,SAAA2T,cAGA,mBAAA4D,WAAA,mBAAA7W,SACAiT,OAAA4D,kBACA5D,OAAAjT,cAEAA,OAAAiT,gBAIAA,OAAA4D,SAAAjW,oBAAA,KACA+X,MAAA,0DAEA1F,OAAA4D,SAAA+B,aACA3F,OAAAjT,OAAAiT,OAAA4D,SAAA+B,eAEA3F,OAAAjT,OAAAiT,OAAA4D,SAAAgC,cAQA5F,OAAA6F,iBAAA,gBAAA7F,QAAA4D,SAAAkC,gBAMA9F,OAAA+F,aAAA,mBAAAP,SACA,mBAAAzY,QAOAiT,OAAAgG,mBACA,UACA,YACA,kCACA,UACA,6CACA,sCACA,gCACA,MAOAhG,OAAAiG,IAAA,GACAjG,OAAAkG,MAAA,+CACAlG,OAAAmG,aAKAnG,OAAAoG,mBAMApG,OAAAqG,iBAAArG,OAAAjT,OAAAsZ,kBACArG,OAAAjT,OAAAuZ,wBACAtG,OAAAjT,OAAAwZ,qBACA,EAGA,WAOA,QAAAC,GAAAC,EAAAC,GACA,GAAA1Q,KAAA2Q,iBAAAF,GAAA,CAGA,GAAAG,GAAA5Q,KAAA2Q,iBAAAF,EACAC,GACAE,IAAA1M,QAAAwM,KAAA,EAGA1G,OAAA6G,KAAAC,MAAAC,KAAAH,GAAA,IAcA,QAAAI,GAAAP,EAAAC,GAKA,GAJA1Q,KAAA2Q,mBACA3Q,KAAA2Q,qBAGA,IAAA9W,UAAAqC,OACA,OAAA+U,KAAAR,GACAzQ,KAAAzE,GAAA0V,EAAAR,EAAAQ,QAIAjR,MAAA2Q,iBAAAF,KACAzQ,KAAA2Q,iBAAAF,OAEAzQ,KAAA2Q,iBAAAF,GAAA7Y,KAAA8Y,EAEA,OAAA1Q,MAcA,QAAAkR,GAAAT,EAAAC,GACA,GAAA1Q,KAAA2Q,iBAAA,CAKA,OAAA9W,UAAAqC,OACA,IAAAuU,IAAAzQ,MAAA2Q,iBACAH,EAAArP,KAAAnB,KAAAyQ,OAIA,QAAA5W,UAAAqC,QAAA,gBAAArC,WAAA,GACA,OAAAoX,KAAAR,GACAD,EAAArP,KAAAnB,KAAAiR,EAAAR,EAAAQ,QAIAT,GAAArP,KAAAnB,KAAAyQ,EAAAC,EAEA,OAAA1Q,OAaA,QAAAmR,GAAAV,EAAA1X,GACA,GAAAiH,KAAA2Q,iBAAA,CAIA,GAAAS,GAAApR,KAAA2Q,iBAAAF,EACA,IAAAW,EAAA,CAIA,OAAAnV,GAAA,EAAAoV,EAAAD,EAAAlV,OAAmDD,EAAAoV,EAASpV,IAC5DmV,EAAAnV,IAAAmV,EAAAnV,GAAAkF,KAAAnB,KAAAjH,MAKA,OAHAiH,MAAA2Q,iBAAAF,GAAAW,EAAAE,OAAA,SAAA9Z,GACA,MAAAA,MAAA,IAEAwI,OAQAgK,OAAAuH,YACAP,UACAE,gBACAC,OAEA5V,GAAAyV,EACAQ,IAAAN,EACAO,QAAAN,MAQAnH,OAAA0H,YAEAC,YAWAzG,IAAA,WAEA,GADAlL,KAAA2R,SAAA/Z,KAAAgC,MAAAoG,KAAA2R,SAAA9X,WACAmG,KAAA4R,eACA,OAAA3V,GAAA,EAAAC,EAAArC,UAAAqC,OAAgDD,EAAAC,EAAYD,IAC5D+D,KAAA4R,eAAA/X,UAAAoC,GAIA,OADA+D,MAAA6R,mBAAA7R,KAAAmL,YACAnL,MAYA8R,SAAA,SAAA1K,EAAAsG,EAAAqE,GACA,GAAAC,GAAAhS,KAAA+L,YASA,OARAgG,GACAC,EAAAtE,GAAAtG,EAGA4K,EAAAjL,OAAA2G,EAAA,EAAAtG,GAEApH,KAAA4R,gBAAA5R,KAAA4R,eAAAxK,GACApH,KAAA6R,mBAAA7R,KAAAmL,YACAnL,MASAiS,OAAA,WAIA,OAFAvE,GADAsE,EAAAhS,KAAA+L,aACAmG,GAAA,EAEAjW,EAAA,EAAAC,EAAArC,UAAAqC,OAA8CD,EAAAC,EAAYD,IAC1DyR,EAAAsE,EAAA9N,QAAArK,UAAAoC,IAGAyR,SACAwE,GAAA,EACAF,EAAAjL,OAAA2G,EAAA,GACA1N,KAAAmS,kBAAAnS,KAAAmS,iBAAAtY,UAAAoC,IAKA,OADA+D,MAAA6R,mBAAAK,GAAAlS,KAAAmL,YACAnL,MAeAoS,cAAA,SAAAC,EAAAxF,GAEA,OADAmF,GAAAhS,KAAA+L,aACA9P,EAAA,EAAAoV,EAAAW,EAAA9V,OAAyCD,EAAAoV,EAASpV,IAClDoW,EAAAlR,KAAA0L,EAAAmF,EAAA/V,KAAA+V,EAEA,OAAAhS,OASA+L,WAAA,SAAAgB,GACA,yBAAAA,GACA/M,KAAA2R,SAEA3R,KAAA2R,SAAAL,OAAA,SAAAgB,GACA,MAAAA,GAAAvF,YASAwF,KAAA,SAAA7E,GACA,MAAA1N,MAAA+L,aAAA2B,IAOA8E,QAAA,WACA,WAAAxS,KAAA+L,aAAA7P,QAOAuW,KAAA,WACA,MAAAzS,MAAA+L,aAAA7P,QAQAwW,SAAA,SAAAtL,GACA,MAAApH,MAAA+L,aAAA7H,QAAAkD,OAOAuL,WAAA,WACA,MAAA3S,MAAA+L,aAAA6G,OAAA,SAAAC,EAAAC,GAEA,MADAD,IAAAC,EAAAH,WAAAG,EAAAH,aAAA,GAEK,KAKL,SAAAI,GAEA,GAAAC,GAAAC,KAAAD,KACAE,EAAAD,KAAAC,MACAC,EAAAF,KAAAE,IACAC,EAAAH,KAAAG,IACAC,EAAAJ,KAAAK,GAAA,GAKAtJ,QAAA6G,MAWA0C,gBAAA,SAAAzC,EAAAtZ,GACA,GAAAkQ,GAAAoJ,EAAA5M,QAAA1M,EAIA,OAHAkQ,SACAoJ,EAAA/J,OAAAW,EAAA,GAEAoJ,GAWA0C,aAAA,SAAAC,EAAAC,GACA,MAAAT,MAAAU,MAAAV,KAAAW,UAAAF,EAAAD,EAAA,IAAAA,GAUAI,iBAAA,SAAAC,GACA,MAAAA,GAAAT,GAUAU,iBAAA,SAAAC,GACA,MAAAA,GAAAX,GAYAY,YAAA,SAAAC,EAAAC,EAAAH,GACAE,EAAAE,eAAAD,EACA,IAAAE,GAAArK,OAAA6G,KAAAyD,aAAAJ,EAAAF,EACA,WAAAhK,QAAAuK,MAAAF,EAAAG,EAAAH,EAAAI,GAAAC,UAAAP,IAWAG,aAAA,SAAAK,EAAAX,GACA,GAAAY,GAAA3B,KAAA2B,IAAAZ,GACAa,EAAA5B,KAAA4B,IAAAb,GACAc,EAAAH,EAAAH,EAAAK,EAAAF,EAAAF,EAAAG,EACAG,EAAAJ,EAAAH,EAAAI,EAAAD,EAAAF,EAAAI,CACA,QACAL,EAAAM,EACAL,EAAAM,IAaAC,eAAA,SAAAxP,EAAAyP,EAAAC,GACA,MAAAA,GACA,GAAAlL,QAAAuK,MACAU,EAAA,GAAAzP,EAAAgP,EAAAS,EAAA,GAAAzP,EAAAiP,EACAQ,EAAA,GAAAzP,EAAAgP,EAAAS,EAAA,GAAAzP,EAAAiP,GAGA,GAAAzK,QAAAuK,MACAU,EAAA,GAAAzP,EAAAgP,EAAAS,EAAA,GAAAzP,EAAAiP,EAAAQ,EAAA,GACAA,EAAA,GAAAzP,EAAAgP,EAAAS,EAAA,GAAAzP,EAAAiP,EAAAQ,EAAA,KASAE,0BAAA,SAAAC,GACA,GAAAC,IAAAD,EAAA,GAAAZ,EAAAY,EAAA,GAAAZ,EAAAY,EAAA,GAAAZ,EAAAY,EAAA,GAAAZ,GACAc,EAAAtL,OAAA6G,KAAAC,MAAA2C,IAAA4B,GACAE,EAAAvL,OAAA6G,KAAAC,MAAA4C,IAAA2B,GACAnL,EAAA+I,KAAAG,IAAAkC,EAAAC,GACAC,GAAAJ,EAAA,GAAAX,EAAAW,EAAA,GAAAX,EAAAW,EAAA,GAAAX,EAAAW,EAAA,GAAAX,GACAgB,EAAAzL,OAAA6G,KAAAC,MAAA2C,IAAA+B,GACAE,EAAA1L,OAAA6G,KAAAC,MAAA4C,IAAA8B,GACArL,EAAA8I,KAAAG,IAAAqC,EAAAC,EAEA,QACAC,KAAAL,EACAM,IAAAH,EACAvL,QACAC,WAWA0L,gBAAA,SAAAZ,GACA,GAAAa,GAAA,GAAAb,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAc,GAAAD,EAAAb,EAAA,IAAAa,EAAAb,EAAA,IAAAa,EAAAb,EAAA,GAAAa,EAAAb,EAAA,IACA3C,EAAAtI,OAAA6G,KAAAmE,gBAA0CR,EAAAS,EAAA,GAAAR,EAAAQ,EAAA,IAAmBc,GAAA,EAG7D,OAFAA,GAAA,IAAAzD,EAAAkC,EACAuB,EAAA,IAAAzD,EAAAmC,EACAsB,GAWAC,QAAA,SAAAC,EAAAC,GACA,MAAAC,YAAAC,OAAAH,GAAAD,QAAAE,KAUAG,UAAA,SAAA7e,EAAA8e,GACA,GAAAC,GAAA,WAAyB5S,KAAAnM,GACzBye,EAAAE,WAAA3e,EAIA,QAHA8e,IACAA,EAAAtM,OAAAwM,KAAAC,uBAEAF,EAAA,IACA,SACA,MAAAN,GAAAjM,OAAAiG,IAAA,IAEA,UACA,MAAAgG,GAAAjM,OAAAiG,IAAA,IAEA,UACA,MAAAgG,GAAAjM,OAAAiG,GAEA,UACA,MAAAgG,GAAAjM,OAAAiG,IAAA,EAEA,UACA,MAAAgG,GAAAjM,OAAAiG,IAAA,KAEA,UACA,MAAAgG,GAAAK,CAEA,SACA,MAAAL,KAUAS,cAAA,WACA,UAUAC,SAAA,SAAA5J,EAAA6J,GAGA,MADA7J,GAAA/C,OAAA6G,KAAAgG,OAAAC,SAAA/J,EAAA/G,OAAA,GAAA+Q,cAAAhK,EAAA1I,MAAA,IACA2F,OAAA6G,KAAAmG,iBAAAJ,GAAA7J,IASAiK,iBAAA,SAAAJ,GACA,IAAAA,EACA,MAAA5M,OAGA,IACA/N,GADAgb,EAAAL,EAAAxb,MAAA,KACAiW,EAAA4F,EAAA/a,OACA6E,EAAAgS,GAAA/I,OAAAjT,MAEA,KAAAkF,EAAA,EAAiBA,EAAAoV,IAASpV,EAC1B8E,IAAAkW,EAAAhb,GAGA,OAAA8E,IAWAmW,UAAA,SAAA1c,EAAA6X,EAAAxF,EAAAsK,GACA,IAAA3c,EAEA,YADA6X,KAAAlR,KAAA0L,EAAArS,GAIA,IAAA4c,GAAApN,OAAA6G,KAAAwG,aAGAD,GAAA9M,OAAA,WACA+H,KAAAlR,KAAA0L,EAAAuK,GACAA,IAAA9M,OAAA8M,EAAAE,QAAA,MAIAF,EAAAE,QAAA,WACAtN,OAAA2B,IAAA,iBAAAyL,EAAA1M,KACA2H,KAAAlR,KAAA0L,EAAA,SACAuK,IAAA9M,OAAA8M,EAAAE,QAAA,MAOA,IAAA9c,EAAA0J,QAAA,SAAAiT,IACAC,EAAAD,eAGAC,EAAA1M,IAAAlQ,GAaA+c,eAAA,SAAAvF,EAAAK,EAAAuE,EAAAY,GAGA,QAAAC,OACAC,IAAAC,GACAtF,KAAAuF,GAJA5F,OAQA,IAAA4F,MACAF,EAAA,EACAC,EAAA3F,EAAA9V,MAEA,OAAAyb,OAKA3F,GAAA7Y,QAAA,SAAAmZ,EAAA5E,GAEA,IAAA4E,MAAAvF,KAEA,WADA0K,IAGA,IAAAI,GAAA7N,OAAA6G,KAAA8F,SAAArE,EAAAvF,KAAA6J,EACAiB,GAAAC,MACAD,EAAAE,WAAAzF,EAAA,SAAAvR,EAAAiX,GACAA,IACAJ,EAAAlK,GAAA3M,EACAyW,KAAAlF,EAAAsF,EAAAlK,KAEA+J,OAIAG,EAAAlK,GAAAmK,EAAAE,WAAAzF,GACAkF,KAAAlF,EAAAsF,EAAAlK,IACA+J,YAvBApF,KAAAuF,KAqCAK,iBAAA,SAAAC,EAAAnf,EAAAwH,GACA,GAAA6G,EAOA,OALAA,GAAA,GAAA4C,QAAAmO,UAAAD,EAAAnf,GAEA,mBAAAwH,IACA6G,EAAAgR,cAAA7X,GAEA6G,GAWAiR,uBAAA,SAAAhX,EAAAiX,EAAAC,GACA,GAAAA,GAAA,mBAAAjhB,OAAA4J,UAAA6N,SAAA5N,KAAAoX,GACA,OAAAtc,GAAA,EAAAoV,EAAAkH,EAAArc,OAAgDD,EAAAoV,EAASpV,IACzDsc,EAAAtc,IAAAoF,KACAiX,EAAAC,EAAAtc,IAAAoF,EAAAkX,EAAAtc,MAmBAuc,eAAA,SAAAC,EAAAjE,EAAAC,EAAAiE,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAlE,EACAsE,EAAAH,EAAAlE,EACApD,EAAA2B,EAAA6F,IAAAC,KACAC,EAAA7F,EAAA4F,EAAAD,GACAG,EAAAJ,EAAA1c,OACA+c,EAAA,EACAC,GAAA,CAQA,KANAT,EAAAU,OACAV,EAAAW,UAAA5E,EAAAC,GACAgE,EAAAY,OAAA,KACAZ,EAAAa,OAAAP,GAEAvE,EAAA,EACAnD,EAAAmD,GACAA,GAAAoE,EAAAK,IAAAD,GACAxE,EAAAnD,IACAmD,EAAAnD,GAEAoH,EAAAS,EAAA,mBAAA1E,EAAA,GACA0E,IAGAT,GAAAc,WAWAC,oBAAA,SAAAC,GAOA,MANAA,OAAAzP,OAAA4D,SAAA8L,cAAA,WAEAD,EAAAE,YAAA,mBAAAC,qBACAA,mBAAAC,YAAAJ,GAGAA,GASApC,YAAA,WACA,MAAArN,QAAA+F,aACA,IAAApY,oBAAA,YACAqS,OAAA4D,SAAA8L,cAAA,QASAI,gBAAA,SAAAjC,GACA,GAAA5b,GAAA8d,EACAC,EAAAC,EAAAC,EADAxW,EAAAmU,EAAA3W,SAGA,KAAAjF,EAAAyH,EAAAyW,gBAAAje,OAA4CD,KAE5C8d,EAAArW,EAAAyW,gBAAAle,GACA+d,EAAAD,EAAA/T,OAAA,GAAA+Q,cAAAgD,EAAA1V,MAAA,GACA4V,EAAA,MAAAD,EACAE,EAAA,MAAAF,EAGAtW,EAAAwW,KACAxW,EAAAwW,GAAA,SAAAE,GACA,UAAAC,UAAA,oBAAAD,EAAA,OACWL,IAEXrW,EAAAuW,KACAvW,EAAAuW,GAAA,SAAAG,GACA,UAAAC,UAAA,4BAAAD,EAAA,cACWL,KAWXO,YAAA,SAAAC,EAAA9B,GACAA,EAAAU,OACAV,EAAA+B,YACAD,EAAAE,OAAAhC,GACAA,EAAAiC,QAYAC,0BAAA,SAAA7E,EAAA8E,EAAAC,GAEA,OACA/E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GAAA8E,EAAA,GACA9E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GAAA8E,EAAA,GACA9E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GAAA8E,EAAA,GACA9E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GAAA8E,EAAA,GACAC,EAAA,EAAA/E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GACA+E,EAAA,EAAA/E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,GAAA8E,EAAA,GAAA9E,EAAA,KAWAgF,YAAA,SAAAhF,GACA,GAAAhL,GAAAoI,EAAA4C,EAAA,GAAAA,EAAA,IACAiF,EAAA5H,EAAA2C,EAAA,MAAA3C,EAAA2C,EAAA,MACAkF,EAAAhI,EAAA+H,GACAE,GAAAnF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAkF,EACAE,EAAAhI,EAAA4C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAiF,EACA,QACAjQ,QAAAuI,EACA2H,SACAC,SACAC,QAAA7H,EACA8H,MAAA,EACAC,WAAAtF,EAAA,GACAuF,WAAAvF,EAAA,KAIAwF,sBAAA,SAAAN,EAAAC,EAAAC,GACA,GAAAK,IAAA,IAAAnI,EAAAH,KAAAuI,IAAAN,EAAA7H,IAAA,GACAoI,GAAArI,EAAA4H,GAAA,IAAA5H,EAAA6H,GACA,OAAAjR,QAAA6G,KAAA8J,0BAAAc,EAAAF,GAAA,IAGAG,qBAAA,SAAA/Q,GACAA,EAAAqQ,OAAA,EACArQ,EAAAsQ,OAAA,EACAtQ,EAAAuQ,MAAA,EACAvQ,EAAAwQ,MAAA,EACAxQ,EAAAgR,OAAA,EACAhR,EAAAiR,OAAA,EACAjR,EAAAkR,SAAA,IAQAC,gBAAA,SAAAC,GACA,OAAA/T,OAAA+T,GAAAhY,MAAA,mCAAkE,IAWlEiY,cAAA,SAAAvD,EAAAjE,EAAAC,EAAAwH,GAIAA,EAAA,IACAzH,EAAAyH,EACAzH,GAAAyH,EAGAzH,EAAA,EAEAC,EAAAwH,EACAxH,GAAAwH,EAGAxH,EAAA,EAIA,IAAAxY,GAAAigB,EAAAC,GAAA,EACAnO,EAAAyK,EAAA2D,aAAA5H,EAAAC,EAAA,EAAAwH,GAAA,IAAAA,GAAA,GACAvX,EAAAsJ,EAAApC,KAAA1P,MAGA,KAAAD,EAAA,EAAiBA,EAAAyI,IACjBwX,EAAAlO,EAAApC,KAAA3P,GACAkgB,EAAAD,GAAA,EACAC,KAAA,GAHwBlgB,GAAA,GAUxB,MAFA+R,GAAA,KAEAmO,GAQAE,kCAAA,SAAAC,GACA,GACAC,GADAC,EAAA,OAAAC,EAAA,MAAAC,EAAA,MACAC,EAAAL,EAAAlhB,MAAA,IAeA,OAbAuhB,MAAAzgB,SACAsgB,EAAAG,EAAAjW,MACA,SAAA8V,GAAA,UAAAA,GACAD,EAAAC,EACAA,EAAA,QAEAG,EAAAzgB,SACAqgB,EAAAI,EAAAjW,QAIA+V,EAAA,SAAAF,IAAAlY,MAAA,YACAqY,EAAA,SAAAH,IAAAlY,MAAA,aAEAmY,cACAC,SACAC,WASAE,qBAAA,SAAAC,GACAA,EAGA7S,OAAAoG,gBAAAyM,UACA7S,QAAAoG,gBAAAyM,GAHA7S,OAAAoG,sBAQC/Z,SAGD,WAWA,QAAAymB,GAAAC,EAAAC,EAAAlI,EAAAC,EAAAkI,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAlc,KAAAtH,UACA,IAAAyjB,EAAAF,GACA,MAAAE,GAAAF,EAGA,IAAA9J,GAAAL,KAAAK,GAAAiK,EAAAJ,EAAA7J,EAAA,IACAkK,EAAAvK,KAAA2B,IAAA2I,GACAE,EAAAxK,KAAA4B,IAAA0I,GACAG,EAAA,EAAAC,EAAA,CAEA7I,GAAA7B,KAAAG,IAAA0B,GACAC,EAAA9B,KAAAG,IAAA2B,EAEA,IAAA6I,IAAAH,EAAAV,EAAA,GAAAS,EAAAR,EAAA,GACAa,GAAAJ,EAAAT,EAAA,GAAAQ,EAAAT,EAAA,GACAe,EAAAhJ,IAAAiJ,EAAAhJ,IAAAiJ,EAAAH,IAAAI,EAAAL,IACAM,EAAAJ,EAAAC,EAAAD,EAAAE,EAAAD,EAAAE,EACAE,EAAA,CAEA,IAAAD,EAAA,GACA,GAAA5Y,GAAA2N,KAAAD,KAAA,EAAAkL,GAAAJ,EAAAC,GACAjJ,IAAAxP,EACAyP,GAAAzP,MAGA6Y,IAAAlB,IAAAC,KAAA,GACAjK,KAAAD,KAAAkL,GAAAJ,EAAAE,EAAAD,EAAAE,GAGA,IAAAG,GAAAD,EAAArJ,EAAA+I,EAAA9I,EACAsJ,GAAAF,EAAApJ,EAAA6I,EAAA9I,EACAwJ,EAAAb,EAAAW,EAAAZ,EAAAa,EAAA,GAAAtB,EACAwB,EAAAf,EAAAY,EAAAX,EAAAY,EAAA,GAAArB,EACAwB,EAAAC,EAAA,KAAAb,EAAAQ,GAAAtJ,GAAA+I,EAAAQ,GAAAtJ,GACA2J,EAAAD,GAAAb,EAAAQ,GAAAtJ,GAAA+I,EAAAQ,GAAAtJ,IAAA6I,EAAAQ,GAAAtJ,IAAA+I,EAAAQ,GAAAtJ,EAEA,KAAAmI,GAAAwB,EAAA,EACAA,GAAA,EAAApL,EAEA,IAAA4J,GAAAwB,EAAA,IACAA,GAAA,EAAApL,EASA,QALAqL,GAAA1L,KAAA2L,KAAA3L,KAAAG,IAAAsL,EAAApL,EAAA,IACA7c,KAAAooB,EAAAH,EAAAC,EACAG,EAAA,IAAA7L,KAAA2B,IAAAiK,EAAA,GAAA5L,KAAA2B,IAAAiK,EAAA,GAAA5L,KAAA2B,IAAAiK,EAAA,GACAE,EAAAP,EAAAK,EAEA5iB,EAAA,EAAmBA,EAAA0iB,EAAc1iB,IACjCxF,EAAAwF,GAAA+iB,EAAAR,EAAAO,EAAAtB,EAAAD,EAAA1I,EAAAC,EAAAuJ,EAAAC,EAAAO,EAAApB,EAAAC,GACAD,EAAAjnB,EAAAwF,GAAA,GACA0hB,EAAAlnB,EAAAwF,GAAA,GACAuiB,EAAAO,EACAA,GAAAF,CAGA,OADAvB,GAAAF,GAAA3mB,EACAA,EAGA,QAAAuoB,GAAAC,EAAAF,EAAAtB,EAAAD,EAAA1I,EAAAC,EAAAuJ,EAAAC,EAAAO,EAAApB,EAAAC,GACA,GAAAuB,GAAA7B,EAAAlc,KAAAtH,UACA,IAAAslB,EAAAD,GACA,MAAAC,GAAAD,EAGA,IAAAE,GAAAnM,KAAA4B,IAAAoK,GACAI,EAAApM,KAAA2B,IAAAqK,GACAK,EAAArM,KAAA4B,IAAAkK,GACAQ,EAAAtM,KAAA2B,IAAAmK,GACAhC,EAAAU,EAAA3I,EAAAwK,EAAA9B,EAAAzI,EAAAwK,EAAAjB,EACAtB,EAAAQ,EAAA1I,EAAAwK,EAAA7B,EAAA1I,EAAAwK,EAAAhB,EACAiB,EAAA9B,EAAAoB,IAAArB,EAAA3I,EAAAuK,EAAA7B,EAAAzI,EAAAqK,GACAK,EAAA9B,EAAAmB,IAAAtB,EAAA1I,EAAAuK,EAAA5B,EAAA1I,EAAAqK,GACAM,EAAA3C,EAAA+B,GAAArB,EAAA3I,EAAAyK,EAAA/B,EAAAzI,EAAAuK,GACAK,EAAA3C,EAAA8B,GAAAtB,EAAA1I,EAAAyK,EAAA9B,EAAA1I,EAAAuK,EAOA,OALAH,GAAAD,IACAM,EAAAC,EACAC,EAAAC,EACA5C,EAAAC,GAEAmC,EAAAD,GAMA,QAAAT,GAAAmB,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA/M,KAAAC,MAAA2M,EAAAD,GACAK,EAAAhN,KAAAC,MAAA6M,EAAAD,EACA,OAAAG,IAAAD,EACAC,EAAAD,EAGA,EAAA/M,KAAAK,IAAA0M,EAAAC,GA6EA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAA5H,EAAAC,EAAA4H,EAAAC,GACA,GAAApD,GAAAC,EAAAlc,KAAAtH,UACA,IAAA4mB,EAAArD,GACA,MAAAqD,GAAArD,EAGA,IAIAtH,GAAA8E,EAAAhR,EAAAqL,EAAAyL,EAAAC,EAAAC,EAAAC,EAJA7N,EAAAC,KAAAD,KACAS,EAAAR,KAAAQ,IAAAC,EAAAT,KAAAS,IACAN,EAAAH,KAAAG,IAAA0N,KACAC,SAGAnG,GAAA,EAAAuF,EAAA,GAAAE,EAAA,EAAA3H,EACA5C,KAAAqK,EAAA,EAAAE,EAAA,EAAA3H,EAAA,EAAA6H,EACA3W,EAAA,EAAAyW,EAAA,EAAAF,CAEA,QAAAlkB,GAAA,EAAmBA,EAAA,IAAOA,EAO1B,GANAA,EAAA,IACA2e,EAAA,EAAAwF,EAAA,GAAAE,EAAA,EAAA3H,EACA7C,KAAAsK,EAAA,EAAAE,EAAA,EAAA3H,EAAA,EAAA6H,EACA5W,EAAA,EAAA0W,EAAA,EAAAF,GAGAhN,EAAA0C,GAAA,OACA,GAAA1C,EAAAwH,GAAA,MACA,QAEA3F,IAAArL,EAAAgR,EACA,EAAA3F,KAAA,GACA6L,EAAAlpB,KAAAqd,OAIA2L,GAAAhG,IAAA,EAAAhR,EAAAkM,EACA8K,EAAA,IAGAC,EAAA7N,EAAA4N,GACAF,IAAA9F,EAAAiG,IAAA,EAAA/K,GACA,EAAA4K,KAAA,GACAI,EAAAlpB,KAAA8oB,GAEAC,IAAA/F,EAAAiG,IAAA,EAAA/K,GACA,EAAA6K,KAAA,GACAG,EAAAlpB,KAAA+oB,GAKA,KADA,GAAAnM,GAAAC,EAAAuM,EAAAnc,EAAAic,EAAA5kB,OAAA+kB,EAAApc,EACAA,KACAoQ,EAAA6L,EAAAjc,GACAmc,EAAA,EAAA/L,EACAT,EAAAwM,MAAAb,EAAA,EAAAa,IAAA/L,EAAAoL,EAAA,EAAAW,EAAA/L,IAAAyD,EAAAzD,MAAAsL,EACAQ,EAAA,GAAAlc,GAAA2P,EAEAC,EAAAuM,MAAAZ,EAAA,EAAAY,IAAA/L,EAAAqL,EAAA,EAAAU,EAAA/L,IAAA0D,EAAA1D,MAAAuL,EACAO,EAAA,GAAAlc,GAAA4P,CAGAsM,GAAA,GAAAE,GAAAd,EACAY,EAAA,GAAAE,GAAAb,EACAW,EAAA,GAAAE,EAAA,GAAAV,EACAQ,EAAA,GAAAE,EAAA,GAAAT,CACA,IAAA/pB,KAEA+d,EAAAf,EAAA7Z,MAAA,KAAAmnB,EAAA,IACAtM,EAAAhB,EAAA7Z,MAAA,KAAAmnB,EAAA,MAGAvM,EAAAd,EAAA9Z,MAAA,KAAAmnB,EAAA,IACAtM,EAAAf,EAAA9Z,MAAA,KAAAmnB,EAAA,KAIA,OADAN,GAAArD,GAAA3mB,EACAA,EAhQA,GAAA6mB,MACA6B,KACAsB,KACApD,EAAA6D,MAAAhgB,UAAA9J,IAiHA4S,QAAA6G,KAAAsQ,QAAA,SAAA1I,EAAA2I,EAAAC,EAAAC,GAWA,OAVAxM,GAAAwM,EAAA,GACAvM,EAAAuM,EAAA,GACAvI,EAAAuI,EAAA,GACArE,EAAAqE,EAAA,GACApE,EAAAoE,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,gBACAC,EAAA5E,EAAAyE,EAAAH,EAAAI,EAAAH,EAAAvM,EAAAC,EAAAkI,EAAAC,EAAAnE,GAEA9c,EAAA,EAAAoV,EAAAqQ,EAAAxlB,OAA0CD,EAAAoV,EAASpV,IACnDwlB,EAAAxlB,GAAA,GAAAylB,EAAAzlB,GAAA,GAAAmlB,EACAK,EAAAxlB,GAAA,GAAAylB,EAAAzlB,GAAA,GAAAolB,EACAI,EAAAxlB,GAAA,GAAAylB,EAAAzlB,GAAA,GAAAmlB,EACAK,EAAAxlB,GAAA,GAAAylB,EAAAzlB,GAAA,GAAAolB,EACAI,EAAAxlB,GAAA,GAAAylB,EAAAzlB,GAAA,GAAAmlB,EACAK,EAAAxlB,GAAA,GAAAylB,EAAAzlB,GAAA,GAAAolB,EACA5I,EAAAkJ,cAAA/nB,MAAA6e,EAAAgJ,EAAAxlB,KAgBA+N,OAAA6G,KAAA+Q,eAAA,SAAAR,EAAAC,EAAAvM,EAAAC,EAAAgE,EAAAkE,EAAAC,EAAAqE,EAAAC,GAMA,OAJA9D,GAAA,EAAAC,EAAA,EAAAkE,KAAAd,KACAU,EAAA3E,EAAAyE,EAAAH,EAAAI,EAAAH,EAAAvM,EAAAC,EAAAkI,EAAAC,EAAAnE,GACA+I,UAEA7lB,EAAA,EAAAoV,EAAAoQ,EAAAvlB,OAAsCD,EAAAoV,EAASpV,IAC/C4lB,EAAA3B,EAAAxC,EAAAC,EAAA8D,EAAAxlB,GAAA,GAAAwlB,EAAAxlB,GAAA,GAAAwlB,EAAAxlB,GAAA,GAAAwlB,EAAAxlB,GAAA,GAAAwlB,EAAAxlB,GAAA,GAAAwlB,EAAAxlB,GAAA,IACA6lB,EAAA,GAAAtN,EAAAqN,EAAA,GAAArN,EAAA4M,EACAU,EAAA,GAAArN,EAAAoN,EAAA,GAAApN,EAAA4M,EACAS,EAAA,GAAAtN,EAAAqN,EAAA,GAAArN,EAAA4M,EACAU,EAAA,GAAArN,EAAAoN,EAAA,GAAApN,EAAA4M,EACAN,EAAAnpB,KAAAkqB,EAAA,IACAf,EAAAnpB,KAAAkqB,EAAA,IACApE,EAAA+D,EAAAxlB,GAAA,GACA0hB,EAAA8D,EAAAxlB,GAAA,EAEA,OAAA8kB,IA4FA/W,OAAA6G,KAAAqP,sBAKA,WAiLA,QAAA6B,GAAAjR,EAAArV,GAEA,OADAumB,GAAA3d,EAAAlD,KAAAtH,UAAA,GAAApD,KACAwF,EAAA,EAAAoV,EAAAP,EAAA5U,OAAuCD,EAAAoV,EAASpV,IAChDxF,EAAAwF,GAAA+lB,EAAA9lB,OAAA4U,EAAA7U,GAAAR,GAAA7B,MAAAkX,EAAA7U,GAAA+lB,GAAAlR,EAAA7U,GAAAR,GAAA0F,KAAA2P,EAAA7U,GAEA,OAAAxF,GAUA,QAAAid,GAAA5C,EAAAmR,GACA,MAAAC,GAAApR,EAAAmR,EAAA,SAAAE,EAAAC,GACA,MAAAD,IAAAC,IAWA,QAAA3O,GAAA3C,EAAAmR,GACA,MAAAC,GAAApR,EAAAmR,EAAA,SAAAE,EAAAC,GACA,MAAAD,GAAAC,IAOA,QAAArR,GAAAD,EAAAtZ,GAEA,IADA,GAAAsN,GAAAgM,EAAA5U,OACA4I,KACAgM,EAAAhM,GAAAtN,CAEA,OAAAsZ,GAMA,QAAAoR,GAAApR,EAAAmR,EAAAI,GACA,GAAAvR,GAAA,IAAAA,EAAA5U,OAAA,CAIA,GAAAD,GAAA6U,EAAA5U,OAAA,EACAzF,EAAAwrB,EAAAnR,EAAA7U,GAAAgmB,GAAAnR,EAAA7U,EACA,IAAAgmB,EACA,KAAAhmB,KACAomB,EAAAvR,EAAA7U,GAAAgmB,GAAAxrB,KACAA,EAAAqa,EAAA7U,GAAAgmB,QAKA,MAAAhmB,KACAomB,EAAAvR,EAAA7U,GAAAxF,KACAA,EAAAqa,EAAA7U,GAIA,OAAAxF,IApPA,GAAA4N,GAAA6c,MAAAhgB,UAAAmD,KAIA6c,OAAAhgB,UAAAgD,UAMAgd,MAAAhgB,UAAAgD,QAAA,SAAAoe,GACA,YAAAtiB,MAAA,OAAAA,KACA,SAAAuD,UAEA,IAAA0R,GAAA3d,OAAA0I,MAAAqR,EAAA4D,EAAA/Y,SAAA,CACA,QAAAmV,EACA,QAEA,IAAAkR,GAAA,CAUA,IATA1oB,UAAAqC,OAAA,IACAqmB,EAAAnM,OAAAvc,UAAA,IACA0oB,MACAA,EAAA,EAEA,IAAAA,OAAAnM,OAAAoM,mBAAAD,IAAAnM,OAAAqM,oBACAF,KAAA,OAAAtP,KAAAU,MAAAV,KAAAG,IAAAmP,MAGAA,GAAAlR,EACA,QAGA,KADA,GAAAvM,GAAAyd,GAAA,EAAAA,EAAAtP,KAAAS,IAAArC,EAAA4B,KAAAG,IAAAmP,GAAA,GACYzd,EAAAuM,EAASvM,IACrB,GAAAA,IAAAmQ,MAAAnQ,KAAAwd,EACA,MAAAxd,EAGA,YAIAoc,MAAAhgB,UAAA/H,UAOA+nB,MAAAhgB,UAAA/H,QAAA,SAAA4iB,EAAAlP,GACA,OAAA5Q,GAAA,EAAAoV,EAAArR,KAAA9D,SAAA,EAA8CD,EAAAoV,EAASpV,IACvDA,IAAA+D,OACA+b,EAAA5a,KAAA0L,EAAA7M,KAAA/D,KAAA+D,QAMAkhB,MAAAhgB,UAAAxK,MAOAwqB,MAAAhgB,UAAAxK,IAAA,SAAAqlB,EAAAlP,GAEA,OADApW,MACAwF,EAAA,EAAAoV,EAAArR,KAAA9D,SAAA,EAA8CD,EAAAoV,EAASpV,IACvDA,IAAA+D,QACAvJ,EAAAwF,GAAA8f,EAAA5a,KAAA0L,EAAA7M,KAAA/D,KAAA+D,MAGA,OAAAvJ,KAIAyqB,MAAAhgB,UAAAwhB,QAOAxB,MAAAhgB,UAAAwhB,MAAA,SAAA3G,EAAAlP,GACA,OAAA5Q,GAAA,EAAAoV,EAAArR,KAAA9D,SAAA,EAA8CD,EAAAoV,EAASpV,IACvD,GAAAA,IAAA+D,QAAA+b,EAAA5a,KAAA0L,EAAA7M,KAAA/D,KAAA+D,MACA,QAGA,YAIAkhB,MAAAhgB,UAAAyhB,OAOAzB,MAAAhgB,UAAAyhB,KAAA,SAAA5G,EAAAlP,GACA,OAAA5Q,GAAA,EAAAoV,EAAArR,KAAA9D,SAAA,EAA8CD,EAAAoV,EAASpV,IACvD,GAAAA,IAAA+D,OAAA+b,EAAA5a,KAAA0L,EAAA7M,KAAA/D,KAAA+D,MACA,QAGA,YAIAkhB,MAAAhgB,UAAAoQ,SAOA4P,MAAAhgB,UAAAoQ,OAAA,SAAAyK,EAAAlP,GAEA,OADA+V,GAAAnsB,KACAwF,EAAA,EAAAoV,EAAArR,KAAA9D,SAAA,EAA8CD,EAAAoV,EAASpV,IACvDA,IAAA+D,QACA4iB,EAAA5iB,KAAA/D,GACA8f,EAAA5a,KAAA0L,EAAA+V,EAAA3mB,EAAA+D,OACAvJ,EAAAmB,KAAAgrB,GAIA,OAAAnsB,KAIAyqB,MAAAhgB,UAAA0R,SAMAsO,MAAAhgB,UAAA0R,OAAA,SAAAmJ,GACA,GAEA8G,GAFAxR,EAAArR,KAAA9D,SAAA,EACAD,EAAA,CAGA,IAAApC,UAAAqC,OAAA,EACA2mB,EAAAhpB,UAAA,OAGA,SACA,GAAAoC,IAAA+D,MAAA,CACA6iB,EAAA7iB,KAAA/D,IACA,OAGA,KAAAA,GAAAoV,EACA,SAAA9N,WAKA,KAAYtH,EAAAoV,EAASpV,IACrBA,IAAA+D,QACA6iB,EAAA9G,EAAA5a,KAAA,KAAA0hB,EAAA7iB,KAAA/D,KAAA+D,MAGA,OAAA6iB,KAwFA7Y,OAAA6G,KAAAC,OACAC,OACAgR,SACAtO,MACAC,UAMA,WASA,QAAAoP,GAAAxK,EAAAjX,EAAA0hB,GAIA,GAAAA,EACA,GAAA1hB,YAAA6f,OACA5I,EAAAjX,EAAA3K,IAAA,SAAA2d,GACA,MAAA2O,GAAA3O,EAAA0O,SAGA,IAAA1hB,YAAA/J,QACA,OAAA8iB,KAAA/Y,GACAiX,EAAA8B,GAAA4I,EAAA3hB,EAAA+Y,GAAA2I,OAKAzK,GAAAjX,MAIA,QAAA+Y,KAAA/Y,GACAiX,EAAA8B,GAAA/Y,EAAA+Y,EAGA,OAAA9B,GASA,QAAA0K,GAAA5b,EAAA2b,GACA,MAAAD,MAAqB1b,EAAA2b,GAIrB/Y,OAAA6G,KAAAzJ,QACA0b,SACAE,YAMA,WAsBA,QAAAlM,GAAAD,GACA,MAAAA,GAAA9Q,QAAA,mBAAAhC,EAAAkf,GACA,MAAAA,KAAAlM,cAAA,KAaA,QAAAmM,GAAArM,EAAAsM,GACA,MAAAtM,GAAA7Q,OAAA,GAAA+Q,eACAoM,EAAAtM,EAAAxS,MAAA,GAAAwS,EAAAxS,MAAA,GAAAR,eASA,QAAAuf,GAAAvM,GACA,MAAAA,GAAA9Q,QAAA,cACAA,QAAA,eACAA,QAAA,eACAA,QAAA,aACAA,QAAA,aAlDAiC,OAAA9G,UAAAuC,OAMAuE,OAAA9G,UAAAuC,KAAA,WAEA,MAAAzD,MAAA+F,QAAA,iBAAAA,QAAA,mBAiDAiE,OAAA6G,KAAAgG,QACAC,WACAoM,aACAE,gBAMA,WAEA,GAAA/e,GAAA6c,MAAAhgB,UAAAmD,MACAzK,EAAAygB,SAAAnZ,UAAAtH,MACAypB,EAAA,YAEAhJ,UAAAnZ,UAAAoiB,OAQAjJ,SAAAnZ,UAAAoiB,KAAA,SAAAC,GACA,GAAA1B,GAAA2B,EAAAxjB,KAAAgiB,EAAA3d,EAAAlD,KAAAtH,UAAA,EAeA,OAbAgoB,GADAG,EAAA9lB,OACA,WACA,MAAAtC,GAAAuH,KAAAqiB,EAAAxjB,eAAAqjB,GAAArjB,KAAAujB,EAAAvB,EAAA9f,OAAAmC,EAAAlD,KAAAtH,cAKA,WACA,MAAAD,GAAAuH,KAAAqiB,EAAAxjB,eAAAqjB,GAAArjB,KAAAujB,EAAA1pB,YAGAwpB,EAAAniB,UAAAlB,KAAAkB,UACA2gB,EAAA3gB,UAAA,GAAAmiB,GAEAxB,OAQA,WAkDA,QAAA4B,MAEA,QAAAC,GAAAC,GACA,GAAA5H,GAAA/b,KAAA4jB,YAAAC,WAAA3iB,UAAAyiB,EACA,OAAA9pB,WAAAqC,OAAA,EACA6f,EAAAniB,MAAAoG,KAAAqE,EAAAlD,KAAAtH,UAAA,IACAkiB,EAAA5a,KAAAnB,MAUA,QAAA8jB,KAOA,QAAAjM,KACA7X,KAAA+jB,WAAAnqB,MAAAoG,KAAAnG,WAPA,GAAAmqB,GAAA,KACAzL,EAAAlU,EAAAlD,KAAAtH,UAAA,EAEA,mBAAA0e,GAAA,KACAyL,EAAAzL,EAAApS,SAMA0R,EAAAgM,WAAAG,EACAnM,EAAAoM,cAEAD,IACAP,EAAAviB,UAAA8iB,EAAA9iB,UACA2W,EAAA3W,UAAA,GAAAuiB,GACAO,EAAAC,WAAArsB,KAAAigB,GAEA,QAAA5b,GAAA,EAAAC,EAAAqc,EAAArc,OAA+CD,EAAAC,EAAYD,IAC3DioB,EAAArM,EAAAU,EAAAtc,GAAA+nB,EAOA,OALAnM,GAAA3W,UAAA6iB,aACAlM,EAAA3W,UAAA6iB,WAAAI,GAEAtM,EAAA3W,UAAA0iB,YAAA/L,EACAA,EAAA3W,UAAAwiB,YACA7L,EA3FA,GAAAxT,GAAA6c,MAAAhgB,UAAAmD,MAAA8f,EAAA,aAEAC,EAAA,WACA,OAAA5e,MAAuBuJ,SAAA,GACvB,gBAAAvJ,EACA,QAGA,aAIA0e,EAAA,SAAArM,EAAAxW,EAAA2iB,GACA,OAAA5J,KAAA/Y,GAEA+Y,IAAAvC,GAAA3W,WACA,kBAAA2W,GAAA3W,UAAAkZ,KACA/Y,EAAA+Y,GAAA,IAAAlW,QAAA,gBAEA2T,EAAA3W,UAAAkZ,GAAA,SAAAA,GACA,kBAEA,GAAAyJ,GAAA7jB,KAAA4jB,YAAAC,UACA7jB,MAAA4jB,YAAAC,WAAAG,CACA,IAAAK,GAAAhjB,EAAA+Y,GAAAxgB,MAAAoG,KAAAnG,UAGA,IAFAmG,KAAA4jB,YAAAC,aAEA,eAAAzJ,EACA,MAAAiK,KAGajK,GAGbvC,EAAA3W,UAAAkZ,GAAA/Y,EAAA+Y,GAGAgK,IACA/iB,EAAA0N,WAAAzX,OAAA4J,UAAA6N,WACA8I,EAAA3W,UAAA6N,SAAA1N,EAAA0N,UAEA1N,EAAAijB,UAAAhtB,OAAA4J,UAAAojB,UACAzM,EAAA3W,UAAAojB,QAAAjjB,EAAAijB,UAoDAta,QAAA6G,KAAAiT,iBAIA,WAMA,QAAAS,GAAAnd,GACA,GACA6N,GAAAhZ,EADAuoB,EAAAtD,MAAAhgB,UAAAmD,MAAAlD,KAAAtH,UAAA,GACAwX,EAAAmT,EAAAtoB,MACA,KAAAD,EAAA,EAAeA,EAAAoV,EAASpV,IAExB,GADAgZ,QAAA7N,GAAAod,EAAAvoB,KACA,gCAAAd,KAAA8Z,GACA,QAGA,UAyBA,QAAAwP,GAAAC,EAAAhU,GACA,OACAA,UACAiU,eAAAC,EAAAF,EAAAhU,IAIA,QAAAkU,GAAAF,EAAAhU,GACA,gBAAArU,GACAqU,EAAAvP,KAAA0jB,EAAAH,GAAAroB,GAAA2N,OAAAjT,OAAAwT,QAIA,QAAAua,GAAAJ,EAAAjU,GACA,gBAAApU,GACA,GAAA0oB,EAAAL,IAAAK,EAAAL,GAAAjU,GAEA,OADAuU,GAAAD,EAAAL,GAAAjU,GACAxU,EAAA,EAAAoV,EAAA2T,EAAA9oB,OAAsDD,EAAAoV,EAASpV,IAC/D+oB,EAAA/oB,GAAAkF,KAAAnB,KAAA3D,GAAA2N,OAAAjT,OAAAwT,QAuHA,QAAA0a,GAAA1a,GACAA,MAAAP,OAAAjT,OAAAwT,MAEA,IAAA2a,GAAA3a,EAAAI,eACAJ,GAAA4a,aAAAC,EAAA7a,EAAA4a,WAAA,MAEAE,EAAArb,OAAA6G,KAAAyU,iBAAAJ,EAEA,QACA1Q,EAAA+Q,EAAAhb,GAAA8a,EAAA1P,KACAlB,EAAA+Q,EAAAjb,GAAA8a,EAAAzP,KAeA,QAAA6P,GAAAlb,EAAAmb,EAAAC,GACA,GAAAC,GAAA,aAAArb,EAAAwC,KAAA,0BAEA,OAAAxC,GAAAqb,IAAArb,EAAAqb,GAAA,GACArb,EAAAqb,GAAA,GAAAF,IAAAnb,EAAAqb,GAAA,GAAAF,GAAAnb,EAAAqb,GAAA,GAAAD,KACApb,EAAAob,GACApb,EAAAob,GA9MA,GAiBAd,GACAgB,EAlBAT,EAAA,UAmBAU,EAAA,WACA,GAAApB,GAAA,CACA,iBAAAQ,GACA,MAAAA,GAAAa,aAAAb,EAAAa,WAAA,aAAArB,UAIA,WACA,GAAAxM,KAEA2M,GAAA,SAAAH,GACA,MAAAxM,GAAAwM,IAGAmB,EAAA,SAAAnB,EAAAQ,GACAhN,EAAAwM,GAAAQ,KA4BA,IAcAc,GAAAC,EAdAC,EACA3B,EAAAva,OAAA4D,SAAAkC,gBAAA,2CACAyU,EAAAva,OAAAjT,OAAA,0CAEAovB,EACA5B,EAAAva,OAAA4D,SAAAkC,gBAAA,8BACAyU,EAAAva,OAAAjT,OAAA,6BAGAqvB,KAGArB,IAIAmB,IAEAF,EAAA,SAAAd,EAAAzU,EAAAC,GACAwU,EAAAmB,iBAAA5V,EAAAC,GAAA,IAGAuV,EAAA,SAAAf,EAAAzU,EAAAC,GACAwU,EAAAoB,oBAAA7V,EAAAC,GAAA,KAIAyV,GAEAH,EAAA,SAAAd,EAAAzU,EAAAC,GACA,GAAAgU,GAAAoB,EAAAZ,EACAW,GAAAnB,EAAAQ,GACAkB,EAAA1B,KACA0B,EAAA1B,OAEA0B,EAAA1B,GAAAjU,KACA2V,EAAA1B,GAAAjU,MAGA,IAAA8V,GAAA9B,EAAAC,EAAAhU,EACA0V,GAAA1B,GAAAjU,GAAA7Y,KAAA2uB,GACArB,EAAAsB,YAAA,KAAA/V,EAAA8V,EAAA5B,iBAGAsB,EAAA,SAAAf,EAAAzU,EAAAC,GACA,GAAA6V,GAAA7B,EAAAoB,EAAAZ,EACA,IAAAkB,EAAA1B,IAAA0B,EAAA1B,GAAAjU,GACA,OAAAxU,GAAA,EAAAoV,EAAA+U,EAAA1B,GAAAjU,GAAAvU,OAA+DD,EAAAoV,EAASpV,IACxEsqB,EAAAH,EAAA1B,GAAAjU,GAAAxU,GACAsqB,KAAA7V,cACAwU,EAAAuB,YAAA,KAAAhW,EAAA8V,EAAA5B,gBACAyB,EAAA1B,GAAAjU,GAAAxU,GAAA,SAQA+pB,EAAA,SAAAd,EAAAzU,EAAAC,GACA,GAAAgU,GAAAoB,EAAAZ,EAIA,IAHAH,EAAAL,KACAK,EAAAL,QAEAK,EAAAL,GAAAjU,GAAA,CACAsU,EAAAL,GAAAjU,KACA,IAAAiW,GAAAxB,EAAA,KAAAzU,EACAiW,IACA3B,EAAAL,GAAAjU,GAAA7Y,KAAA8uB,GAEAxB,EAAA,KAAAzU,GAAAqU,EAAAJ,EAAAjU,GAEAsU,EAAAL,GAAAjU,GAAA7Y,KAAA8Y,IAGAuV,EAAA,SAAAf,EAAAzU,EAAAC,GACA,GAAAgU,GAAAoB,EAAAZ,EACA,IAAAH,EAAAL,IAAAK,EAAAL,GAAAjU,GAEA,OADAuU,GAAAD,EAAAL,GAAAjU,GACAxU,EAAA,EAAAoV,EAAA2T,EAAA9oB,OAAsDD,EAAAoV,EAASpV,IAC/D+oB,EAAA/oB,KAAAyU,GACAsU,EAAAje,OAAA9K,EAAA,KAeA+N,OAAA6G,KAAAmV,cAUAhc,OAAA6G,KAAAoV,gBAqBA,IAAAV,GAAA,SAAAhb,GAIA,aAAAA,GAAAoc,UAAAvB,EAAA7a,EAAAoc,QAAA,GAGAnB,EAAA,SAAAjb,GACA,aAAAA,GAAAqc,UAAAxB,EAAA7a,EAAAqc,QAAA,EAYA5c,QAAA6F,mBACA0V,EAAA,SAAAhb,GACA,MAAAkb,GAAAlb,EAAA,oBAEAib,EAAA,SAAAjb,GACA,MAAAkb,GAAAlb,EAAA,qBAIAP,OAAA6G,KAAAoU,aAEAjb,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA6G,KAAA7G,OAAAuH,eAKA,WASA,QAAAsV,GAAA3B,EAAA4B,GACA,GAAAC,GAAA7B,EAAApX,KACA,KAAAiZ,EACA,MAAA7B,EAEA,oBAAA4B,GAEA,MADA5B,GAAApX,MAAAkZ,SAAA,IAAiCF,EACjCA,EAAA5iB,QAAA,cACA+iB,EAAA/B,EAAA4B,EAAA/iB,MAAA,8BACAmhB,CAEA,QAAA9K,KAAA0M,GACA,eAAA1M,EACA6M,EAAA/B,EAAA4B,EAAA1M,QAEA,CACA,GAAA8M,GAAA,UAAA9M,GAAA,aAAAA,EACA,mBAAA2M,GAAAI,WAAA,wBACA/M,CACA2M,GAAAG,GAAAJ,EAAA1M,GAGA,MAAA8K,GAGA,GAAAkC,GAAApd,OAAA4D,SAAA8L,cAAA,OACA2N,EAAA,gBAAAD,GAAAtZ,MAAAwZ,QACAC,EAAA,gBAAAH,GAAAtZ,MAAAwD,OACAkW,EAAA,wCAGAP,EAAA,SAAA/B,GAAuC,MAAAA,GAEvCmC,GAEAJ,EAAA,SAAA/B,EAAA1tB,GAEA,MADA0tB,GAAApX,MAAAwZ,QAAA9vB,EACA0tB,GAGAqC,IAEAN,EAAA,SAAA/B,EAAA1tB,GACA,GAAAiwB,GAAAvC,EAAApX,KAWA,OAVAoX,GAAAwC,eAAAxC,EAAAwC,aAAAC,YACAF,EAAAG,KAAA,GAEAJ,EAAArsB,KAAAssB,EAAAnW,SACA9Z,KAAA,8BAAAA,EAAA,IACAiwB,EAAAnW,OAAAmW,EAAAnW,OAAAvL,QAAAyhB,EAAAhwB,IAGAiwB,EAAAnW,QAAA,sBAAA9Z,EAAA,IAEA0tB,IAIAlb,OAAA6G,KAAAgW,cAKA,WAUA,QAAAgB,GAAAhwB,GACA,sBAAAA,GAAAmS,OAAA4D,SAAAC,eAAAhW,KAoCA,QAAAiwB,GAAAC,EAAA7wB,GACA,GAAA8wB,GAAAhe,OAAA4D,SAAA8L,cAAAqO,EACA,QAAA9W,KAAA/Z,GACA,UAAA+Z,EACA+W,EAAAC,UAAA/wB,EAAA+Z,GAEA,QAAAA,EACA+W,EAAAE,QAAAhxB,EAAA+Z,GAGA+W,EAAAG,aAAAlX,EAAA/Z,EAAA+Z,GAGA,OAAA+W,GASA,QAAAI,GAAAlD,EAAA+C,GACA/C,IAAA,IAAAA,EAAA+C,UAAA,KAAA/jB,QAAA,IAAA+jB,EAAA,YACA/C,EAAA+C,YAAA/C,EAAA+C,UAAA,QAAAA,GAYA,QAAAI,GAAAnD,EAAAoD,EAAApxB,GAQA,MAPA,gBAAAoxB,KACAA,EAAAR,EAAAQ,EAAApxB,IAEAguB,EAAAqD,YACArD,EAAAqD,WAAAC,aAAAF,EAAApD,GAEAoD,EAAAG,YAAAvD,GACAoD,EASA,QAAAhD,GAAAJ,GAaA,IAXA,GAAAvP,GAAA,EACAC,EAAA,EACA8S,EAAA1e,OAAA4D,SAAAkC,gBACA6Y,EAAA3e,OAAA4D,SAAA+a,OACAC,WAAA,EAAAC,UAAA,GAOA3D,MAAAqD,YAAArD,EAAAtqB,QAGAsqB,IAAAqD,YAAArD,EAAAtqB,KAEAsqB,IAAAlb,OAAA4D,UACA+H,EAAAgT,EAAAC,YAAAF,EAAAE,YAAA,EACAhT,EAAA+S,EAAAE,WAAAH,EAAAG,WAAA,IAGAlT,GAAAuP,EAAA0D,YAAA,EACAhT,GAAAsP,EAAA2D,WAAA,GAGA,IAAA3D,EAAA4D,UACA,UAAA9e,OAAA6G,KAAAkY,gBAAA7D,EAAA,eAKA,OAAYvP,OAAAC,OAUZ,QAAAoT,GAAA9D,GACA,GAAA+D,GAIAC,EAHAC,EAAAjE,KAAAkE,cACAC,GAAe1T,KAAA,EAAAC,IAAA,GACf0T,GAAkB3T,KAAA,EAAAC,IAAA,GAElB2T,GACAC,gBAAA,OACAC,eAAA,MACAC,YAAA,OACAC,WAAA,MAGA,KAAAR,EACA,MAAAG,EAGA,QAAAM,KAAAL,GACAD,EAAAC,EAAAK,KAAA9uB,SAAAiuB,EAAA7D,EAAA0E,GAAA,MAUA,OAPAX,GAAAE,EAAArZ,gBACA,mBAAAoV,GAAA2E,wBACAR,EAAAnE,EAAA2E,yBAGAX,EAAA5D,EAAAJ,IAGAvP,KAAA0T,EAAA1T,KAAAuT,EAAAvT,MAAAsT,EAAAa,YAAA,GAAAR,EAAA3T,KACAC,IAAAyT,EAAAzT,IAAAsT,EAAAtT,KAAAqT,EAAAc,WAAA,GAAAT,EAAA1T,KA3KA,GAYAoU,GAZAC,EAAA/I,MAAAhgB,UAAAmD,MAmBA6lB,EAAA,SAAAC,GACA,MAAAF,GAAA9oB,KAAAgpB,EAAA,GAGA,KACAH,EAAAE,EAAAlgB,OAAA4D,SAAAwc,qBAAAlJ,OAEA,MAAAmJ,IAEAL,IACAE,EAAA,SAAAC,GAEA,IADA,GAAAG,GAAA,GAAApJ,OAAAiJ,EAAAjuB,QAAAD,EAAAkuB,EAAAjuB,OACAD,KACAquB,EAAAruB,GAAAkuB,EAAAluB,EAEA,OAAAquB,IAoJA,IAAAvB,EAEAA,GADA/e,OAAA4D,SAAA2c,aAAAvgB,OAAA4D,SAAA2c,YAAAC,iBACA,SAAAtF,EAAA0E,GACA,GAAA9b,GAAA9D,OAAA4D,SAAA2c,YAAAC,iBAAAtF,EAAA,KACA,OAAApX,KAAA8b,GAAAa,QAIA,SAAAvF,EAAA0E,GACA,GAAApyB,GAAA0tB,EAAApX,MAAA8b,EAIA,QAHApyB,GAAA0tB,EAAAwC,eACAlwB,EAAA0tB,EAAAwC,aAAAkC,IAEApyB,GAIA,WAkBA,QAAAkzB,GAAAxF,GAUA,MATA,mBAAAA,GAAAyF,gBACAzF,EAAAyF,cAAA3gB,OAAA6G,KAAA6F,eAEAkU,EACA1F,EAAApX,MAAA8c,GAAA,OAEA,gBAAA1F,GAAA2F,eACA3F,EAAA2F,aAAA,MAEA3F,EASA,QAAA4F,GAAA5F,GAUA,MATA,mBAAAA,GAAAyF,gBACAzF,EAAAyF,cAAA,MAEAC,EACA1F,EAAApX,MAAA8c,GAAA,GAEA,gBAAA1F,GAAA2F,eACA3F,EAAA2F,aAAA,IAEA3F,EA9CA,GAAApX,GAAA9D,OAAA4D,SAAAkC,gBAAAhC,MACA8c,EAAA,cAAA9c,GACA,aACA,iBAAAA,GACA,gBACA,oBAAAA,GACA,mBACA,mBAAAA,GACA,kBACA,EAwCA9D,QAAA6G,KAAA6Z,0BACA1gB,OAAA6G,KAAAia,2BAGA,WAQA,QAAAC,GAAAvwB,EAAA6X,GACA,GAAA2Y,GAAAhhB,OAAA4D,SAAAqd,qBAAA,WACAC,EAAAlhB,OAAA4D,SAAA8L,cAAA,UACAyR,GAAA,CAGAD,GAAA5gB,OAAA4gB,EAAAE,mBAAA,SAAA/uB,GACA,GAAA8uB,EAAA,CACA,mBAAAnrB,MAAAqrB,YACA,WAAArrB,KAAAqrB,YACA,aAAArrB,KAAAqrB,WACA,MAEAF,IAAA,EACA9Y,EAAAhW,GAAA2N,OAAAjT,OAAAwT,OACA2gB,IAAA5gB,OAAA4gB,EAAAE,mBAAA,OAGAF,EAAAxgB,IAAAlQ,EACAwwB,EAAAvC,YAAAyC,GAKAlhB,OAAA6G,KAAAka,eAGA/gB,OAAA6G,KAAAgX,UACA7d,OAAA6G,KAAAqZ,UACAlgB,OAAA6G,KAAAiX,cACA9d,OAAA6G,KAAAuX,WACApe,OAAA6G,KAAAwX,cACAre,OAAA6G,KAAAyU,mBACAtb,OAAA6G,KAAAmY,mBACAhf,OAAA6G,KAAAkY,qBAKA,WAEA,QAAAuC,GAAA9wB,EAAA+wB,GACA,MAAA/wB,IAAA,KAAAW,KAAAX,GAAA,SAAA+wB,EAqBA,QAAAC,MAaA,QAAA/wB,GAAAD,EAAAzB,GAEAA,SAEA,IAAA0C,GAAA1C,EAAA0C,OAAA1C,EAAA0C,OAAAsb,cAAA,MACA0U,EAAA1yB,EAAA0yB,YAAA,aACAC,EAAAC,IACAhD,EAAA5vB,EAAA4vB,MAAA5vB,EAAA6yB,UAwBA,OArBAF,GAAAN,mBAAA,WACA,IAAAM,EAAAL,aACAI,EAAAC,GACAA,EAAAN,mBAAAI,IAIA,QAAA/vB,IACAktB,EAAA,KACA,gBAAA5vB,GAAA6yB,aACApxB,EAAA8wB,EAAA9wB,EAAAzB,EAAA6yB,cAIAF,EAAAG,KAAApwB,EAAAjB,GAAA,GAEA,SAAAiB,GAAA,QAAAA,GACAiwB,EAAAI,iBAAA,oDAGAJ,EAAAK,KAAApD,GACA+C,EA9DA,GAAAC,GAAA,WAOA,OANAK,IACA,WAAkB,UAAAjwB,eAAA,sBAClB,WAAkB,UAAAA,eAAA,mBAClB,WAAkB,UAAAA,eAAA,uBAClB,WAAkB,UAAAD,kBAElBG,EAAA+vB,EAAA9vB,OAAkCD,KAClC,IACA,GAAAZ,GAAA2wB,EAAA/vB,IACA,IAAAZ,EACA,MAAA2wB,GAAA/vB,GAGA,MAAAouB,OAmDArgB,QAAA6G,KAAApW,aAQAuP,OAAA2B,IAAA,aAMA3B,OAAAiiB,KAAA,aAGA,mBAAAvgB,WAEA,cAAAvS,QAAA,SAAAwqB,GAEA,mBAAAjY,SAAAiY,IACA,kBAAAjY,SAAAiY,GAAA/pB,QAEAoQ,OAAA2Z,GAAA,WACA,MAAAjY,SAAAiY,GAAA/pB,MAAA8R,QAAA7R,eAQA,WAcA,QAAAqyB,GAAAnzB,GAEAozB,EAAA,SAAAxd,GACA5V,SAEA,IAEAqzB,GAFAC,EAAA1d,IAAA,GAAAG,MACAwd,EAAAvzB,EAAAuzB,UAAA,IACAC,EAAAF,EAAAC,EACAE,EAAAzzB,EAAAyzB,UAAA,aACAC,EAAA1zB,EAAA0zB,OAAA,WAA+C,UAC/CC,EAAA3zB,EAAA2zB,QAAA,SAAAzX,EAAA2F,EAAAhR,EAAA+iB,GAA2D,OAAA/iB,EAAAqJ,KAAA4B,IAAAI,EAAA0X,GAAA1Z,KAAAK,GAAA,IAAA1J,EAAAgR,GAC3DgS,EAAA,cAAA7zB,KAAA6zB,WAAA,EACAC,EAAA,YAAA9zB,KAAA8zB,SAAA,IACAC,EAAA/zB,EAAA+zB,SAAAD,EAAAD,CAEA7zB,GAAAg0B,SAAAh0B,EAAAg0B,UAEA,QAAAC,GAAAC,GACAb,EAAAa,IAAA,GAAAne,KACA,IAAAoe,GAAAd,EAAAG,EAAAD,EAAAF,EAAAC,CACA,OAAAI,UACA1zB,EAAA0yB,YAAA1yB,EAAA0yB,eAGAe,EAAAE,EAAAQ,EAAAN,EAAAE,EAAAR,IACAF,EAAAG,OACAxzB,EAAA0yB,YAAA1yB,EAAA0yB,kBAGAU,GAAAa,KACOX,KAqBP,QAAAF,KACA,MAAAgB,GAAAvzB,MAAAoQ,OAAAjT,OAAA8C,WAjBA,GAAAszB,GAAAnjB,OAAAjT,OAAAq2B,uBACApjB,OAAAjT,OAAAs2B,6BACArjB,OAAAjT,OAAAu2B,0BACAtjB,OAAAjT,OAAAw2B,wBACAvjB,OAAAjT,OAAAy2B,yBACA,SAAAnb,GACArI,OAAAjT,OAAA02B,WAAApb,EAAA,QAcArI,QAAA6G,KAAAqb,UACAliB,OAAA6G,KAAAsb,sBAKA,WAEA,QAAAuB,GAAA5X,EAAAlM,EAAApE,EAAAF,GAcA,MAbAwQ,GAAA7C,KAAAG,IAAAxJ,IACAkM,EAAAlM,EACAtE,EAAAE,EAAA,GAKAF,EADA,IAAAsE,GAAA,IAAAkM,EACAtQ,GAAA,EAAAyN,KAAAK,IAAAL,KAAA0a,KAAA,GAGAnoB,GAAA,EAAAyN,KAAAK,IAAAL,KAAA0a,KAAA/jB,EAAAkM,IAGYA,IAAAlM,IAAApE,IAAAF,KAGZ,QAAAsoB,GAAAC,EAAA5Y,EAAA0X,GACA,MAAAkB,GAAA/X,EACA7C,KAAAE,IAAA,MAAA8B,GAAA,IACAhC,KAAA2B,KAAAK,EAAA0X,EAAAkB,EAAAvoB,IAAA,EAAA2N,KAAAK,IAAAua,EAAAroB,GAOA,QAAAsoB,GAAA7Y,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,KAAAqL,IAAA0X,EAAA,GAAA1X,IAAA,GAAA2F,EAOA,QAAAmT,GAAA9Y,EAAA2F,EAAAhR,EAAA+iB,GAEA,MADA1X,IAAA0X,EAAA,EACA1X,EAAA,EACArL,EAAA,EAAAqL,MAAA2F,EAEAhR,EAAA,IAAAqL,GAAA,GAAAA,IAAA,GAAA2F,EAOA,QAAAoT,GAAA/Y,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,IAAAqL,GAAA0X,GAAA1X,MAAA2F,EAOA,QAAAqT,GAAAhZ,EAAA2F,EAAAhR,EAAA+iB,GACA,OAAA/iB,IAAAqL,IAAA0X,EAAA,GAAA1X,MAAA,GAAA2F,EAOA,QAAAsT,GAAAjZ,EAAA2F,EAAAhR,EAAA+iB,GAEA,MADA1X,IAAA0X,EAAA,EACA1X,EAAA,EACArL,EAAA,EAAAqL,QAAA2F,GAEAhR,EAAA,IAAAqL,GAAA,GAAAA,MAAA,GAAA2F,EAOA,QAAAuT,GAAAlZ,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,IAAAqL,GAAA0X,GAAA1X,QAAA2F,EAOA,QAAAwT,GAAAnZ,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,KAAAqL,IAAA0X,EAAA,GAAA1X,QAAA,GAAA2F,EAOA,QAAAyT,GAAApZ,EAAA2F,EAAAhR,EAAA+iB,GAEA,MADA1X,IAAA0X,EAAA,EACA1X,EAAA,EACArL,EAAA,EAAAqL,UAAA2F,EAEAhR,EAAA,IAAAqL,GAAA,GAAAA,QAAA,GAAA2F,EAOA,QAAA0T,GAAArZ,EAAA2F,EAAAhR,EAAA+iB,GACA,OAAA/iB,EAAAqJ,KAAA4B,IAAAI,EAAA0X,GAAA1Z,KAAAK,GAAA,IAAA1J,EAAAgR,EAOA,QAAA2T,GAAAtZ,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,GAAAqJ,KAAA2B,IAAAK,EAAA0X,GAAA1Z,KAAAK,GAAA,IAAAsH,EAOA,QAAA4T,GAAAvZ,EAAA2F,EAAAhR,EAAA+iB,GACA,OAAA/iB,EAAA,GAAAqJ,KAAA4B,IAAA5B,KAAAK,GAAA2B,EAAA0X,GAAA,GAAA/R,EAOA,QAAA6T,GAAAxZ,EAAA2F,EAAAhR,EAAA+iB,GACA,WAAA1X,EAAA2F,EAAAhR,EAAAqJ,KAAAE,IAAA,MAAA8B,EAAA0X,EAAA,IAAA/R,EAOA,QAAA8T,GAAAzZ,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA1X,KAAA0X,EAAA/R,EAAAhR,MAAAqJ,KAAAE,IAAA,MAAA8B,EAAA0X,GAAA,GAAA/R,EAOA,QAAA+T,GAAA1Z,EAAA2F,EAAAhR,EAAA+iB,GACA,WAAA1X,EACA2F,EAEA3F,IAAA0X,EACA/R,EAAAhR,GAEAqL,GAAA0X,EAAA,EACA1X,EAAA,EACArL,EAAA,EAAAqJ,KAAAE,IAAA,MAAA8B,EAAA,IAAA2F,EAEAhR,EAAA,IAAAqJ,KAAAE,IAAA,QAAA8B,GAAA,GAAA2F,GAOA,QAAAgU,GAAA3Z,EAAA2F,EAAAhR,EAAA+iB,GACA,OAAA/iB,GAAAqJ,KAAAD,KAAA,GAAAiC,GAAA0X,GAAA1X,GAAA,GAAA2F,EAOA,QAAAiU,GAAA5Z,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,GAAAqJ,KAAAD,KAAA,GAAAiC,IAAA0X,EAAA,GAAA1X,GAAA2F,EAOA,QAAAkU,GAAA7Z,EAAA2F,EAAAhR,EAAA+iB,GAEA,MADA1X,IAAA0X,EAAA,EACA1X,EAAA,GACArL,EAAA,GAAAqJ,KAAAD,KAAA,EAAAiC,KAAA,GAAA2F,EAEAhR,EAAA,GAAAqJ,KAAAD,KAAA,GAAAiC,GAAA,GAAAA,GAAA,GAAA2F,EAOA,QAAAmU,GAAA9Z,EAAA2F,EAAAhR,EAAA+iB,GACA,GAAArnB,GAAA,QAAAE,EAAA,EAAAsQ,EAAAlM,CACA,QAAAqL,EACA,MAAA2F,EAGA,IADA3F,GAAA0X,EACA,IAAA1X,EACA,MAAA2F,GAAAhR,CAEApE,KACAA,EAAA,GAAAmnB,EAEA,IAAAkB,GAAAH,EAAA5X,EAAAlM,EAAApE,EAAAF,EACA,QAAAsoB,EAAAC,EAAA5Y,EAAA0X,GAAA/R,EAOA,QAAAoU,GAAA/Z,EAAA2F,EAAAhR,EAAA+iB,GACA,GAAArnB,GAAA,QAAAE,EAAA,EAAAsQ,EAAAlM,CACA,QAAAqL,EACA,MAAA2F,EAGA,IADA3F,GAAA0X,EACA,IAAA1X,EACA,MAAA2F,GAAAhR,CAEApE,KACAA,EAAA,GAAAmnB,EAEA,IAAAkB,GAAAH,EAAA5X,EAAAlM,EAAApE,EAAAF,EACA,OAAAuoB,GAAA/X,EAAA7C,KAAAE,IAAA,MAAA8B,GAAAhC,KAAA2B,KAAAK,EAAA0X,EAAAkB,EAAAvoB,IAAA,EAAA2N,KAAAK,IAAAua,EAAAroB,GAAAqoB,EAAAjkB,EAAAgR,EAOA,QAAAqU,GAAAha,EAAA2F,EAAAhR,EAAA+iB,GACA,GAAArnB,GAAA,QAAAE,EAAA,EAAAsQ,EAAAlM,CACA,QAAAqL,EACA,MAAA2F,EAGA,IADA3F,GAAA0X,EAAA,EACA,IAAA1X,EACA,MAAA2F,GAAAhR,CAEApE,KACAA,EAAAmnB,GAAA,QAEA,IAAAkB,GAAAH,EAAA5X,EAAAlM,EAAApE,EAAAF,EACA,OAAA2P,GAAA,MACA2Y,EAAAC,EAAA5Y,EAAA0X,GAAA/R,EAEAiT,EAAA/X,EAAA7C,KAAAE,IAAA,OAAA8B,GAAA,IACAhC,KAAA2B,KAAAK,EAAA0X,EAAAkB,EAAAvoB,IAAA,EAAA2N,KAAAK,IAAAua,EAAAroB,GAAA,GAAAqoB,EAAAjkB,EAAAgR,EAOA,QAAAsU,GAAAja,EAAA2F,EAAAhR,EAAA+iB,EAAArnB,GAIA,MAHAmlB,UAAAnlB,IACAA,EAAA,SAEAsE,GAAAqL,GAAA0X,GAAA1X,IAAA3P,EAAA,GAAA2P,EAAA3P,GAAAsV,EAOA,QAAAuU,GAAAla,EAAA2F,EAAAhR,EAAA+iB,EAAArnB,GAIA,MAHAmlB,UAAAnlB,IACAA,EAAA,SAEAsE,IAAAqL,IAAA0X,EAAA,GAAA1X,IAAA3P,EAAA,GAAA2P,EAAA3P,GAAA,GAAAsV,EAOA,QAAAwU,GAAAna,EAAA2F,EAAAhR,EAAA+iB,EAAArnB,GAKA,MAJAmlB,UAAAnlB,IACAA,EAAA,SAEA2P,GAAA0X,EAAA,EACA1X,EAAA,EACArL,EAAA,GAAAqL,OAAA3P,GAAA,UAAA2P,EAAA3P,IAAAsV,EAEAhR,EAAA,IAAAqL,GAAA,GAAAA,KAAA3P,GAAA,UAAA2P,EAAA3P,GAAA,GAAAsV,EAOA,QAAAyU,GAAApa,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,GAAA0lB,EAAA3C,EAAA1X,EAAA,EAAArL,EAAA+iB,GAAA/R,EAOA,QAAA0U,GAAAra,EAAA2F,EAAAhR,EAAA+iB,GACA,OAAA1X,GAAA0X,GAAA,OACA/iB,GAAA,OAAAqL,KAAA2F,EAEA3F,EAAA,OACArL,GAAA,QAAAqL,GAAA,UAAAA,EAAA,KAAA2F,EAEA3F,EAAA,SACArL,GAAA,QAAAqL,GAAA,WAAAA,EAAA,OAAA2F,EAGAhR,GAAA,QAAAqL,GAAA,YAAAA,EAAA,SAAA2F,EAQA,QAAA2U,GAAAta,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA1X,GAAA0X,EAAA,EACA,GAAA0C,EAAA,EAAApa,EAAA,EAAArL,EAAA+iB,GAAA/R,EAEA,GAAA0U,EAAA,EAAAra,EAAA0X,EAAA,EAAA/iB,EAAA+iB,GAAA,GAAA/iB,EAAAgR,EAQA5Q,OAAA6G,KAAA2e,MAMAC,WAAA,SAAAxa,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,IAAAqL,GAAA0X,GAAA1X,EAAA2F,GAOA8U,YAAA,SAAAza,EAAA2F,EAAAhR,EAAA+iB,GACA,OAAA/iB,GAAAqL,GAAA0X,IAAA1X,EAAA,GAAA2F,GAOA+U,cAAA,SAAA1a,EAAA2F,EAAAhR,EAAA+iB,GAEA,MADA1X,IAAA0X,EAAA,EACA1X,EAAA,EACArL,EAAA,EAAAqL,IAAA2F,GAEAhR,EAAA,KAAAqL,KAAA,MAAA2F,GAOAgV,YAAA,SAAA3a,EAAA2F,EAAAhR,EAAA+iB,GACA,MAAA/iB,IAAAqL,GAAA0X,GAAA1X,IAAA2F,GAGAkT,eACAC,iBACAC,cACAC,eACAC,iBACAC,cACAC,eACAC,iBACAC,aACAC,cACAC,gBACAC,aACAC,cACAC,gBACAC,aACAC,cACAC,gBACAC,gBACAC,iBACAC,mBACAC,aACAC,cACAC,gBACAC,eACAC,gBACAC,sBAMA,SAAAxc,GAEA,YAqDA,SAAA8c,GAAAjG,GAEA,MAAAA,KAAAkG,GACAA,EAAAlG,GAEAA,EAGA,QAAAmG,GAAAnG,EAAApyB,EAAAw4B,EAAA1Z,GACA,GACA2Z,GADAC,EAAA,mBAAA54B,OAAA4J,UAAA6N,SAAA5N,KAAA3J,EAkCA,OA/BA,SAAAoyB,GAAA,WAAAA,GAAA,SAAApyB,EAGA,oBAAAoyB,EACApyB,IAAAuO,QAAA,UAAA3K,MAAA,OAAA1E,IAAA,SAAA6rB,GACA,MAAApM,YAAAoM,KAGA,oBAAAqH,EAEApyB,EADAw4B,KAAAG,gBACAxV,EACAqV,EAAAG,gBAAAnmB,EAAAomB,wBAAA54B,IAGAwS,EAAAomB,wBAAA54B,GAGA,YAAAoyB,GACApyB,EAAA,SAAAA,GAAA,WAAAA,EAEAw4B,KAAAK,WAAA,IACA74B,GAAA,IAGA,YAAAoyB,EACApyB,EAAA,UAAAA,EAAA,eAAAA,EAAA,iBAGAy4B,EAAAC,EAAA14B,EAAAd,IAAA2f,KAAA7e,EAAA8e,GA3BA9e,EAAA,IA8BA04B,GAAAI,MAAAL,GAAAz4B,EAAAy4B,EAOA,QAAAM,GAAAr5B,GACA,OAAA0yB,KAAA4G,GAEA,sBAAAt5B,GAAAs5B,EAAA5G,KAAA,KAAA1yB,EAAA0yB,GAAA,CAIA,sBAAA1yB,GAAA0yB,GAAA,CACA,IAAA5f,EAAA1S,OAAA4J,UAAA0oB,GACA,QAEA1yB,GAAA0yB,GAAA5f,EAAA1S,OAAA4J,UAAA0oB,GAGA,OAAA1yB,EAAA0yB,GAAA1lB,QAAA,SAIA,GAAAusB,GAAA,GAAAzmB,GAAA0mB,MAAAx5B,EAAA0yB,GACA1yB,GAAA0yB,GAAA6G,EAAAE,SAAA3a,EAAAya,EAAAG,WAAA15B,EAAAs5B,EAAA5G,IAAA,IAAAiH,UAEA,MAAA35B,GAMA,QAAA45B,GAAA3H,EAAA4H,GAEA,OADAC,GAAAC,EAAAC,KACAj1B,EAAA,EAAmBA,EAAA80B,EAAA70B,OAAsBD,IACzC+0B,EAAAD,EAAA90B,GACAg1B,EAAA9H,EAAA8B,qBAAA+F,GACAE,IAAAhvB,OAAAgf,MAAAhgB,UAAAmD,MAAAlD,KAAA8vB,GAEA,OAAAC,GAsKA,QAAAC,GAAArjB,EAAAsjB,GACA,GAAAxH,GAAApyB,CACAsW,GAAA/H,QAAA,QAAoB,IAAA3K,MAAA,KAAmBjC,QAAA,SAAAk4B,GACvC,GAAAC,GAAAD,EAAAj2B,MAAA,IAEAwuB,GAAAiG,EAAAyB,EAAA,GAAA7tB,OAAAI,eACArM,EAAAu4B,EAAAnG,EAAA0H,EAAA,GAAA7tB,QAEA2tB,EAAAxH,GAAApyB,IAOA,QAAA+5B,GAAAzjB,EAAAsjB,GACA,GAAAxH,GAAApyB,CACA,QAAAyZ,KAAAnD,GACA,mBAAAA,GAAAmD,KAIA2Y,EAAAiG,EAAA5e,EAAApN,eACArM,EAAAu4B,EAAAnG,EAAA9b,EAAAmD,IAEAmgB,EAAAxH,GAAApyB,GAOA,QAAAg6B,GAAAtM,EAAAuM,GACA,GAAA3K,KACA,QAAA4K,KAAA1nB,GAAA2nB,SAAAF,GACA,GAAAG,EAAA1M,EAAAwM,EAAAt2B,MAAA,MACA,OAAAgf,KAAApQ,GAAA2nB,SAAAF,GAAAC,GACA5K,EAAA1M,GAAApQ,EAAA2nB,SAAAF,GAAAC,GAAAtX,EAIA,OAAA0M,GAMA,QAAA8K,GAAA1M,EAAA2M,GACA,GAAAC,GAAAC,GAAA,CAMA,OAJAD,GAAAE,EAAA9M,EAAA2M,EAAAnrB,OACAorB,GAAAD,EAAA31B,SACA61B,EAAAE,EAAA/M,EAAA2M,IAEAC,GAAAC,GAAA,IAAAF,EAAA31B,OAGA,QAAA+1B,GAAA/M,EAAA2M,GAEA,IADA,GAAAK,GAAAH,GAAA,EACA7M,EAAAqD,YAAA,IAAArD,EAAAqD,WAAAO,UAAA+I,EAAA31B,QACA61B,IACAG,EAAAL,EAAAnrB,OAEAwe,IAAAqD,WACAwJ,EAAAC,EAAA9M,EAAAgN,EAEA,YAAAL,EAAA31B,OAMA,QAAA81B,GAAA9M,EAAAgN,GACA,GAEAC,GAFAnB,EAAA9L,EAAA8L,SACAoB,EAAAlN,EAAAmN,aAAA,SACAx6B,EAAAqtB,EAAAmN,aAAA,KASA,IANAF,EAAA,GAAAG,QAAA,IAAAtB,EAAA,KACAkB,IAAAnsB,QAAAosB,EAAA,IACAt6B,GAAAq6B,EAAAh2B,SACAi2B,EAAA,GAAAG,QAAA,IAAAz6B,EAAA,wBACAq6B,IAAAnsB,QAAAosB,EAAA,KAEAC,GAAAF,EAAAh2B,OAAA,CACAk2B,IAAAh3B,MAAA,IACA,QAAAa,GAAAm2B,EAAAl2B,OAAqCD,KACrCk2B,EAAA,GAAAG,QAAA,MAAAF,EAAAn2B,GAAA,wBACAi2B,IAAAnsB,QAAAosB,EAAA,IAGA,WAAAD,EAAAh2B,OAOA,QAAAq2B,GAAApJ,EAAAtxB,GACA,GAAAmwB,EAEA,IADAmB,EAAAtb,iBAAAma,EAAAmB,EAAAtb,eAAAhW,IACAmwB,EACA,MAAAA,EAEA,IAAAwK,GAAAv2B,EAAAw2B,EAAAtJ,EAAA8B,qBAAA,IACA,KAAAhvB,EAAA,EAAeA,EAAAw2B,EAAAv2B,OAAqBD,IAEpC,GADAu2B,EAAAC,EAAAx2B,GACApE,IAAA26B,EAAAH,aAAA,MACA,MAAAG,GAQA,QAAAE,GAAAvJ,GAGA,IAFA,GAAAsJ,GAAA3B,EAAA3H,GAAA,kBAAAltB,EAAA,EAEAw2B,EAAAv2B,QAAAD,EAAAw2B,EAAAv2B,QAAA,CACA,GAMAqsB,GAAAqB,EAAA/kB,EAAA8tB,EAAAjuB,EANAsjB,EAAAyK,EAAAx2B,GACA22B,EAAA5K,EAAAqK,aAAA,cAAAvuB,OAAA,GACA0Q,EAAAwT,EAAAqK,aAAA,QACA5d,EAAAuT,EAAAqK,aAAA,QACAQ,EAAAN,EAAApJ,EAAAyJ,GAAAE,WAAA,GACAC,GAAAF,EAAAR,aAAA,gCAAA7d,EAAA,KAAAC,EAAA,IACAue,EAAAP,EAAAv2B,MAGA,IADA+2B,EAAAJ,GACA,SAAA13B,KAAA03B,EAAA7B,UAAA,CACA,GAAAkC,GAAAL,EAAAzJ,cAAA1P,cAAA,IACA,KAAA7U,EAAA,EAAA8tB,EAAAE,EAAA37B,WAAAwN,EAAAiuB,EAAAz2B,OAA6D2I,EAAAH,EAAOG,IACpE+kB,EAAA+I,EAAApgB,KAAA1N,GACAquB,EAAA/K,aAAAyB,EAAAoH,SAAApH,EAAAuJ,UAGA,MAAAN,EAAAO,YACAF,EAAAzK,YAAAoK,EAAAO,WAEAP,GAAAK,EAGA,IAAAruB,EAAA,EAAA8tB,EAAA3K,EAAA9wB,WAAAwN,EAAAiuB,EAAAz2B,OAA0D2I,EAAAH,EAAOG,IACjE+kB,EAAA+I,EAAApgB,KAAA1N,GACA,MAAA+kB,EAAAoH,UAAA,MAAApH,EAAAoH,UAAA,eAAApH,EAAAoH,WAIA,cAAApH,EAAAoH,SACA+B,EAAAnJ,EAAAuJ,UAAA,IAAAJ,EAGAF,EAAA1K,aAAAyB,EAAAoH,SAAApH,EAAAuJ,WAIAN,GAAA1K,aAAA,YAAA4K,GACAF,EAAA1K,aAAA,2BACA0K,EAAAQ,gBAAA,MACA9K,EAAAP,EAAAO,WACAA,EAAAC,aAAAqK,EAAA7K,GAEAyK,EAAAv2B,SAAA82B,GACA/2B,KAmBA,QAAAg3B,GAAA/N,GAEA,GAKAoO,GAAAC,EAAAC,EAAAxL,EALAyL,EAAAvO,EAAAmN,aAAA,WACArX,EAAA,EACAC,EAAA,EACA3F,EAAA,EACAG,EAAA,EAEAie,EAAAxO,EAAAmN,aAAA,SACAsB,EAAAzO,EAAAmN,aAAA,UACA7d,EAAA0Q,EAAAmN,aAAA,QACA5d,EAAAyQ,EAAAmN,aAAA,QACAuB,EAAA1O,EAAAmN,aAAA,2BACAwB,GAAAJ,IAAAK,EAAA34B,KAAA+pB,EAAA8L,aACAyC,IAAA1vB,MAAAgwB,IACAC,GAAAN,IAAAC,GAAA,SAAAD,GAAA,SAAAC,EACAM,EAAAJ,GAAAG,EACAE,KAAuBC,EAAA,EAMvB,IAJAD,EAAAhqB,MAAA,EACAgqB,EAAA/pB,OAAA,EACA+pB,EAAAD,aAEAA,EACA,MAAAC,EAGA,IAAAL,EAGA,MAFAK,GAAAhqB,MAAAmM,EAAAqd,GACAQ,EAAA/pB,OAAAkM,EAAAsd,GACAO,CA0BA,IAvBA5e,GAAAa,WAAAsd,EAAA,IACAhe,GAAAU,WAAAsd,EAAA,IACAH,EAAAnd,WAAAsd,EAAA,IACAF,EAAApd,WAAAsd,EAAA,IAEAO,GAOAE,EAAAhqB,MAAAopB,EACAY,EAAA/pB,OAAAopB,IAPAW,EAAAhqB,MAAAmM,EAAAqd,GACAQ,EAAA/pB,OAAAkM,EAAAsd,GACA3Y,EAAAkZ,EAAAhqB,MAAAopB,EACArY,EAAAiZ,EAAA/pB,OAAAopB,GAQAK,EAAA5pB,EAAA6G,KAAAwL,kCAAAuX,GACA,SAAAA,EAAAnX,SAEAxB,EAAAD,IAAAC,IAAAD,GAGA,IAAAA,GAAA,IAAAC,GAAA,IAAA3F,GAAA,IAAAG,GAAA,IAAAjB,GAAA,IAAAC,EACA,MAAAyf,EAcA,KAXA1f,GAAAC,KACA0f,EAAA,cAAA9d,EAAA7B,GAAA,IAAA6B,EAAA5B,GAAA,MAGA+e,EAAAW,EAAA,WAAAnZ,EACA,QAEAC,EAAA,IACA3F,EAAA0F,EAAA,IACAvF,EAAAwF,EAAA,KAEA,QAAAiK,EAAA8L,SAAA,CAGA,IAFAhJ,EAAA9C,EAAAkE,cAAA1P,cAAA,KAEAwL,EAAAkO,YACApL,EAAAS,YAAAvD,EAAAkO,WAEAlO,GAAAuD,YAAAT,OAGAA,GAAA9C,EACAsO,EAAAxL,EAAAqK,aAAA,aAAAmB,CAIA,OADAxL,GAAAG,aAAA,YAAAqL,GACAU,EAmGA,QAAAE,GAAAC,GAEA,GAAAriB,GAAAqiB,EAAAriB,QACAjZ,EAAAs7B,EAAAt7B,OAMA,OAJAiZ,KAAAtb,IAAA,SAAA4b,GACA,MAAAtI,GAAAkZ,EAAA5Q,EAAAvF,OAAAgL,WAAAzF,MAGaN,UAAAjZ,WAMb,QAAAu7B,GAAAC,EAAAxqB,EAAAqQ,GACArQ,EAAAqQ,IAAArQ,EAAAqQ,GAAAoa,OACAD,EAAA38B,KACA,8BAAAwiB,EAAA,YACA,UAAArQ,EAAAqQ,GAAA/Y,OAAA6I,MACA,aAAAH,EAAAqQ,GAAA/Y,OAAA8I,OACA,qCACA,0BACA,UAAAJ,EAAAqQ,GAAA/Y,OAAA6I,MACA,aAAAH,EAAAqQ,GAAA/Y,OAAA8I,OACA,iBAAAJ,EAAAqQ,GAAA/Y,OAAAqJ,IACA,8BAhrBA,GAAAV,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACAI,EAAAlZ,EAAA6G,KAAAgG,OAAAqM,WACAF,EAAAhZ,EAAA6G,KAAAzJ,OAAA4b,MACAhN,EAAAhM,EAAA6G,KAAAmF,QACAK,EAAArM,EAAA6G,KAAAwF,UACAsE,EAAA3Q,EAAA6G,KAAA8J,0BAEA8Z,EAAA,iEACAX,EAAA,4CACAY,EAAA,sCACAC,EAAA,sBAEA7E,GACA1R,GAAA,OACA5J,EAAA,OACAuB,EAAA,SACAsI,GAAA,MACA5J,EAAA,MACA1G,QAAA,UACA6mB,WAAA,UACAC,UAAA,kBACAC,eAAA,cACAC,YAAA,WACAC,cAAA,aACAC,YAAA,WACAC,aAAA,YACAC,cAAA,aACAC,mBAAA,kBACAC,iBAAA,gBACAC,kBAAA,iBACAC,oBAAA,mBACAC,iBAAA,gBACAC,eAAA,cACAC,kBAAA,iBACAC,cAAA,WAGAnF,GACAoF,OAAA,gBACA7kB,KAAA,cAGA/G,GAAA2nB,YACA3nB,EAAA6rB,gBAiGA7rB,EAAAomB,wBAAA,WACA,QAAA0F,GAAAtC,EAAAxR,GACA,GAAAlX,GAAAkX,EAAA,GACAxN,EAAA,IAAAwN,EAAA9lB,OAAA8lB,EAAA,KACAvN,EAAA,IAAAuN,EAAA9lB,OAAA8lB,EAAA,IAEAwR,GAAA,GAAAvgB,KAAA4B,IAAA/J,GACA0oB,EAAA,GAAAvgB,KAAA2B,IAAA9J,GACA0oB,EAAA,IAAAvgB,KAAA2B,IAAA9J,GACA0oB,EAAA,GAAAvgB,KAAA4B,IAAA/J,GACA0oB,EAAA,GAAAhf,GAAAgf,EAAA,GAAAhf,EAAAgf,EAAA,GAAA/e,GACA+e,EAAA,GAAA/e,GAAA+e,EAAA,GAAAhf,EAAAgf,EAAA,GAAA/e,GAGA,QAAAgH,GAAA+X,EAAAxR,GACA,GAAA+T,GAAA/T,EAAA,GACAgU,EAAA,IAAAhU,EAAA9lB,OAAA8lB,EAAA,GAAAA,EAAA,EAEAwR,GAAA,GAAAuC,EACAvC,EAAA,GAAAwC,EAGA,QAAAC,GAAAzC,EAAAxR,GACAwR,EAAA,GAAAvgB,KAAAuI,IAAAxR,EAAA6G,KAAAgD,iBAAAmO,EAAA,KAGA,QAAAkU,GAAA1C,EAAAxR,GACAwR,EAAA,GAAAvgB,KAAAuI,IAAAxR,EAAA6G,KAAAgD,iBAAAmO,EAAA;CAGA,QAAAmS,GAAAX,EAAAxR,GACAwR,EAAA,GAAAxR,EAAA,GACA,IAAAA,EAAA9lB,SACAs3B,EAAA,GAAAxR,EAAA,IAKA,GAAAmU,IACA,EACA,EACA,EACA,EACA,EACA,GAIAlgB,EAAAjM,EAAAkG,MAEAkmB,EAAA,uBAEAlb,EAAA,yBAAAjF,EAAA,YAEAkF,EAAA,yBAAAlF,EAAA,YAEAqD,EAAA,0BAAArD,EAAA,OACAmgB,EAAA,IAAAngB,EAAA,IACAmgB,EAAA,IAAAngB,EAAA,cAEAogB,EAAA,yBAAApgB,EAAA,OACAmgB,EAAA,IAAAngB,EAAA,cAEAmD,EAAA,6BAAAnD,EAAA,OACAmgB,EAAA,IAAAngB,EAAA,cAEAud,EAAA,0BACAvd,EAAA,IAAAmgB,EACA,IAAAngB,EAAA,IAAAmgB,EACA,IAAAngB,EAAA,IAAAmgB,EACA,IAAAngB,EAAA,IAAAmgB,EACA,IAAAngB,EAAA,IAAAmgB,EACA,IAAAngB,EAAA,YAGA4e,EAAA,MACArB,EAAA,IACApa,EAAA,IACAid,EAAA,IACA/c,EAAA,IACA4B,EAAA,IACAC,EACA,IAEAmb,EAAA,MAAAzB,EAAA,MAAAuB,EAAA,IAAAvB,EAAA,MAEA0B,EAAA,WAAAD,EAAA,UAGAE,EAAA,GAAAlE,QAAAiE,GAGAE,EAAA,GAAAnE,QAAAuC,EAAA,IAEA,iBAAA6B,GAGA,GAAAlD,GAAA2C,EAAAj0B,SACAy0B,IAIA,KAAAD,OAAAF,EAAAr7B,KAAAu7B,GACA,MAAAlD,EAGAkD,GAAA3wB,QAAA0wB,EAAA,SAAA1yB,GAEA,GAAA6yB,GAAA,GAAAtE,QAAAuC,GAAAlxB,KAAAI,GAAAuN,OAAA,SAAAvN,GAEA,QAAAA,IAEA8yB,EAAAD,EAAA,GACA5U,EAAA4U,EAAAvyB,MAAA,GAAA3N,IAAAyf,WAEA,QAAA0gB,GACA,gBACA1C,EAAAX,EAAAxR,EACA,MACA,cACAA,EAAA,GAAAhY,EAAA6G,KAAAgD,iBAAAmO,EAAA,IACA8T,EAAAtC,EAAAxR,EACA,MACA,aACAvG,EAAA+X,EAAAxR,EACA,MACA,aACAiU,EAAAzC,EAAAxR,EACA,MACA,aACAkU,EAAA1C,EAAAxR,EACA,MACA,cACAwR,EAAAxR,EAKA2U,EAAA/+B,KAAA47B,EAAAtxB,UAEAsxB,EAAA2C,EAAAj0B,UAIA,KADA,GAAA40B,GAAAH,EAAA,GACAA,EAAAz6B,OAAA,GACAy6B,EAAAxwB,QACA2wB,EAAA9sB,EAAA6G,KAAA8J,0BAAAmc,EAAAH,EAAA,GAEA,OAAAG,MAiLA,IAAA/C,GAAA,GAAAzB,QACA,SACAtoB,EAAAkG,MAAA,gBACAlG,EAAAkG,MAAA,gBACAlG,EAAAkG,MAAA,gBACAlG,EAAAkG,MAAA,UAyGAlG,GAAA+sB,iBAAA,WAEA,QAAAC,GAAA9R,EAAA8L,GACA,KAAA9L,QAAAqD,aACA,GAAArD,EAAA8L,YAAA71B,KAAA+pB,EAAA8L,SAAAjrB,QAAA,cACAmf,EAAAmN,aAAA,uBACA,QAGA,UAGA,gBAAAlJ,EAAA9W,EAAAmF,GACA,GAAA2R,EAAA,CAIAuJ,EAAAvJ,EAEA,IAAA8N,GAAA,GAAAnoB,MACA2iB,EAAAznB,EAAA1S,OAAA4/B,QACAn+B,EAAAk6B,EAAA9J,GACAgO,EAAAntB,EAAA6G,KAAAqZ,QAAAf,EAAA8B,qBAAA,KAIA,IAFAlyB,EAAA04B,SAEA,IAAA0F,EAAAj7B,QAAA8N,EAAA+F,aAAA,CAGAonB,EAAAhO,EAAAiO,YAAA,sBAEA,QADA9M,MACAruB,EAAA,EAAAoV,EAAA8lB,EAAAj7B,OAAiDD,EAAAoV,EAASpV,IAC1DquB,EAAAruB,GAAAk7B,EAAAl7B,EAEAk7B,GAAA7M,EAGA,GAAApS,GAAAif,EAAA7lB,OAAA,SAAA0W,GAEA,MADAiL,GAAAjL,GACAyM,EAAAt5B,KAAA6sB,EAAAgJ,SAAAjrB,QAAA,cACAixB,EAAAhP,EAAA0M,IAGA,KAAAxc,SAAAhc,OAEA,YADAmW,YAIArI,GAAA6rB,aAAApE,GAAAznB,EAAAqtB,gBAAAlO,GACAnf,EAAA2nB,SAAAF,GAAAznB,EAAAstB,YAAAnO,GAEAnf,EAAAutB,cAAArf,EAAA,SAAAsf,GACAxtB,EAAAytB,oBAAA,GAAA3oB,MAAAmoB,EACA5kB,GACAA,EAAAmlB,EAAAz+B,IAEOiqB,EAAAjqB,GAAAye,OAQP,IAAAkgB,IAMAC,IAAA,SAAA39B,EAAAqY,GACAA,GAAA,IAGA7W,IAAA,aAIAqP,IAAA,cAuCA+sB,EAAA,GAAAtF,QACA,qHAEAtoB,EAAAkG,MACA,2CAAAlG,EAAAkG,MAAA,cAEA4S,GAAA9Y,GASA6tB,qBAAA,SAAArgC,EAAA45B,GACA,GAAArtB,GAAAvM,EAAAuM,MAAA6zB,EAEA,IAAA7zB,EAAA,CAGA,GAAA+zB,GAAA/zB,EAAA,GAGAg0B,EAAAh0B,EAAA,GACAuS,EAAAvS,EAAA,GACAi0B,EAAAj0B,EAAA,GACA8Y,EAAA9Y,EAAA,EAEA+zB,KACA1G,EAAA0G,aAEAC,IACA3G,EAAA2G,WAAAzH,MAAAna,WAAA4hB,MAAA5hB,WAAA4hB,IAEAzhB,IACA8a,EAAA9a,SAAAD,EAAAC,IAEAuG,IACAuU,EAAAvU,cAEAmb,IACA5G,EAAA4G,WAAA,WAAAA,EAAA,EAAAA,KAYAX,gBAAA,SAAAlO,GACA,GAMAnB,GAAAnwB,EAAA+6B,EANAqF,GACA,iBACA,iBACA,qBACA,sBACAC,EAAApH,EAAA3H,EAAA8O,GACApzB,EAAA,EACAgxB,KAA4BsC,IAI5B,KAFAtzB,EAAAqzB,EAAAh8B,OAEA2I,KACAmjB,EAAAkQ,EAAArzB,GACA+tB,EAAA5K,EAAAqK,aAAA,cACAx6B,EAAAmwB,EAAAqK,aAAA,MACAO,IACAuF,EAAAtgC,GAAA+6B,EAAA9uB,OAAA,IAEA+xB,EAAAh+B,GAAAmwB,CAGA,KAAAnwB,IAAAsgC,GAAA,CACA,GAAAtF,GAAAgD,EAAAsC,EAAAtgC,IAAAi7B,WAAA,EAEA,KADA9K,EAAA6N,EAAAh+B,GACAg7B,EAAAO,YACApL,EAAAS,YAAAoK,EAAAO,YAGA,MAAAyC,IAYAuC,gBAAA,SAAAlT,EAAAhuB,EAAAu6B,GAEA,GAAAvM,EAAA,CAIA,GAAA1tB,GAEA8e,EADA0Z,IAGA,oBAAAyB,KACAA,EAAAvM,EAAAmN,aAAA,WAGAnN,EAAAqD,YAAAoM,EAAAx5B,KAAA+pB,EAAAqD,WAAAyI,YACAhB,EAAAhmB,EAAAouB,gBAAAlT,EAAAqD,WAAArxB,EAAAu6B,IAEAnb,EAAA0Z,KAAA1Z,UACA4O,EAAAmN,aAAA,cAAAroB,EAAAwM,KAAAC,qBAEA,IAAA4hB,GAAAnhC,EAAA0b,OAAA,SAAAC,EAAA+W,GAQA,MAPApyB,GAAA0tB,EAAAmN,aAAAzI,GACApyB,IACAoyB,EAAAiG,EAAAjG,GACApyB,EAAAu4B,EAAAnG,EAAApyB,EAAAw4B,EAAA1Z,GAEAzD,EAAA+W,GAAApyB,GAEAqb,MAUA,OALAwlB,GAAAvV,EAAAuV,EACAvV,EAAA0O,EAAAtM,EAAAuM,GAAAznB,EAAAsuB,oBAAApT,KACAmT,EAAAE,MACAvuB,EAAA6tB,qBAAAQ,EAAAE,KAAAF,GAEA9H,EAAAzN,EAAAkN,EAAAqI,MAYAd,cAAA,SAAArf,EAAA7F,EAAAtZ,EAAAye,GACA,GAAAxN,GAAAwuB,eAAAtgB,EAAA7F,EAAAtZ,EAAAye,GAAAhhB,SAUA8hC,oBAAA,SAAApT,GACA,GAAAkM,MACAtjB,EAAAoX,EAAAmN,aAAA,QAEA,OAAAvkB,IAIA,gBAAAA,GACAqjB,EAAArjB,EAAAsjB,GAGAG,EAAAzjB,EAAAsjB,GAGAA,GAVAA,GAoBAqH,qBAAA,SAAArjB,GAGA,IAAAA,EACA,WAIAA,KAAArP,QAAA,UAAAtC,OAEA2R,IAAAha,MAAA,MACA,IAAAa,GAAAoV,EAAAqnB,IAIA,KAFAz8B,EAAA,EACAoV,EAAA+D,EAAAlZ,OACYD,EAAAoV,EAASpV,GAAA,EACrBy8B,EAAA9gC,MACA4c,EAAA2B,WAAAf,EAAAnZ,IACAwY,EAAA0B,WAAAf,EAAAnZ,EAAA,KASA,OAAAy8B,IAWApB,YAAA,SAAAnO,GAKA,OAHwBwP,GADxB7R,EAAAqC,EAAA8B,qBAAA,SACA2N,KAGA38B,EAAA,EAAAoV,EAAAyV,EAAA5qB,OAA0CD,EAAAoV,EAASpV,IAAA,CAEnD,GAAA48B,GAAA/R,EAAA7qB,GAAA68B,aAAAhS,EAAA7qB,GAAA88B,IAGAF,KAAA9yB,QAAA,wBACA,KAAA8yB,EAAAp1B,SAGAk1B,EAAAE,EAAA90B,MAAA,sBACA40B,IAAAjiC,IAAA,SAAAg7B,GAA0C,MAAAA,GAAAjuB,SAC1Ck1B,EAAAx/B,QAAA,SAAAu4B,GAMA,OAJA3tB,GAAA2tB,EAAA3tB,MAAA,4BACAi1B,KAA2BC,EAAAl1B,EAAA,GAAAN,OAC3By1B,EAAAD,EAAAlzB,QAAA,KAAyD,IAAA3K,MAAA,WAEzDa,EAAA,EAAAoV,EAAA6nB,EAAAh9B,OAA0DD,EAAAoV,EAASpV,IAAA,CACnE,GAAAq1B,GAAA4H,EAAAj9B,GAAAb,MAAA,WACAgf,EAAAyV,EAAAyB,EAAA,IACA95B,EAAAu4B,EAAA3V,EAAAkX,EAAA,GAAAA,EAAA,GACA0H,GAAA5e,GAAA5iB,EAEAk6B,EAAA3tB,EAAA,GACA2tB,EAAAt2B,MAAA,KAAAjC,QAAA,SAAAggC,GACAA,IAAApzB,QAAA,YAAAtC,OACA,KAAA01B,IAGAP,EAAAO,GACAnvB,EAAA6G,KAAAzJ,OAAA0b,OAAA8V,EAAAO,GAAAH,GAGAJ,EAAAO,GAAAnvB,EAAA6G,KAAAzJ,OAAA4b,MAAAgW,SAKA,MAAAJ,IAWAQ,eAAA,SAAA5+B,EAAA6X,EAAAmF,GAkBA,QAAAiU,GAAA1V,GAEA,GAAAsjB,GAAAtjB,EAAAujB,WACAD,OAAAvpB,iBAAA9F,EAAAjT,OAAAgF,eAAAga,EAAAwjB,eACAF,EAAA,GAAAt9B,eAAA,oBACAs9B,EAAAvhB,MAAA,QAEAuhB,EAAAG,QAAAzjB,EAAAwjB,aAAAxzB,QAAA,2CAEAszB,KAAAvpB,iBACAuC,KAAA,MAGArI,EAAA+sB,iBAAAsC,EAAAvpB,gBAAA,SAAA2pB,EAAA1gC,GACA2+B,EAAA7sB,IAAArQ,GACAwX,QAAAhI,EAAA6G,KAAAC,MAAAiR,OAAA0X,EAAA,YACA1gC,YAEAsZ,KAAAonB,EAAA1gC,IACSye,GAnCThd,IAAAuL,QAAA,aAAAtC,OACAi0B,EAAAC,IAAAn9B,EAAA,SAAAk/B,GACAA,EACAhC,EAAAl8B,IAAAhB,EAAA,SAAAhD,GACA,GAAAmiC,GAAAvF,EAAA58B,EACA6a,GAAAsnB,EAAA3nB,QAAA2nB,EAAA5gC,WAIA,GAAAiR,GAAA6G,KAAApW,QAAAD,GACAiB,OAAA,MACAgwB,kBAmCAmO,kBAAA,SAAA/iB,EAAAxE,EAAAmF,GACAX,IAAApT,MACA,IAAA0lB,EACA,uBAAA0Q,WAAA,CACA,GAAAC,GAAA,GAAAD,UACAC,MAAAC,kBACA5Q,EAAA2Q,EAAAC,gBAAAljB,EAAA,iBAGA7M,GAAAjT,OAAAgF,gBACAotB,EAAA,GAAAptB,eAAA,oBACAotB,EAAArR,MAAA,QAEAqR,EAAAqQ,QAAA3iB,EAAA9Q,QAAA,0CAGAiE,GAAA+sB,iBAAA5N,EAAArZ,gBAAA,SAAA2pB,EAAA1gC,GACAsZ,EAAAonB,EAAA1gC,IACOye,IAUPwiB,yBAAA,SAAAhoB,GAKA,OAJqCjR,GAAA8b,EACrC/O,EAAAmsB,EAAAC,EAAAC,EAAAC,EADA7F,EAAA,GAAA8F,KAEAlqB,EAAAnG,EAAAmG,UAEAlU,EAAA,EAAAoV,EAAAW,EAAA9V,OAA2CD,EAAAoV,EAASpV,IAGpD,GAFA8E,EAAAiR,EAAA/V,GACA4gB,EAAA9b,EAAA8b,WACA9b,EAAAgM,KAAA7I,QAAA,eAAAm2B,EAAAxd,IAAA1M,EAAA0M,KAGAwd,EAAAxd,IAAA,EACA9b,EAAA+lB,QAAA,CAGAhZ,EAAA/M,EAAA+lB,MACA,KAAAoT,IAAApsB,GAAA,CACAmsB,EAAAnsB,EAAAosB,EACA,KAAAE,IAAAH,GACAE,EAAAF,EAAAG,GACAvd,EAAAsd,EAAAtd,YACAwd,EAAAxd,IAAA1M,EAAA0M,KACAwd,EAAAxd,IAAA,IAMA,OAAAhY,KAAAw1B,GACA9F,IACA,qBACA,uBAAA1vB,EAAA,OACA,mBAAAsL,EAAAtL,GAAA,QACA,WACAzN,KAAA,GAaA,OAVAm9B,KACAA,GACA,4BACA,cACAA,EACA,MACA,cACAn9B,KAAA,KAGAm9B,GAQA+F,2BAAA,SAAAvwB,GACA,GAAAwqB,KAKA,OAHAD,GAAAC,EAAAxqB,EAAA,mBACAuqB,EAAAC,EAAAxqB,EAAA,gBAEAwqB,EAAAn9B,KAAA,QAICf,SAGD2T,OAAAwuB,eAAA,SAAAtgB,EAAA7F,EAAAtZ,EAAAye,GACAxX,KAAAkY,WACAlY,KAAAqS,WACArS,KAAAjH,UACAiH,KAAAwX,UACAxX,KAAAyxB,OAAA14B,KAAA04B,QAAA,GAGAznB,OAAAwuB,eAAAt3B,UAAA1K,MAAA,WACAwJ,KAAAw3B,UAAA,GAAAtW,OAAAlhB,KAAAkY,SAAAhc,QACA8D,KAAAu6B,YAAAv6B,KAAAkY,SAAAhc,OAEA8D,KAAAw6B,iBAGAxwB,OAAAwuB,eAAAt3B,UAAAs5B,cAAA,WACA,OAAAv+B,GAAA,EAAAoV,EAAArR,KAAAkY,SAAAhc,OAA6CD,EAAAoV,EAASpV,IACtD+D,KAAAkY,SAAAjc,GAAAksB,aAAA,SAAAnoB,KAAAyxB,QACA,SAAAgJ,EAAAx+B,GACAwxB,WAAA,WACAgN,EAAAC,aAAAD,EAAAviB,SAAAjc,OACO,IACF+D,KAAA/D,IAIL+N,OAAAwuB,eAAAt3B,UAAAw5B,aAAA,SAAA1S,EAAAta,GACA,GAAAmK,GAAA7N,cAAA6G,KAAAgG,OAAAqM,WAAA8E,EAAAD,QAAAhiB,QAAA,YACA,IAAA8R,KAAA8iB,YACA,IACA36B,KAAA46B,cAAA/iB,EAAAmQ,EAAAta,GAEA,MAAA2c,GACArgB,OAAA2B,IAAA0e,OAIArqB,MAAA66B,eAIA7wB,OAAAwuB,eAAAt3B,UAAA05B,cAAA,SAAA/iB,EAAAmQ,EAAAta,GACA,GAAAmK,EAAAC,MACAD,EAAA8iB,YAAA3S,EAAAhoB,KAAA86B,eAAAptB,EAAAsa,GAAAhoB,KAAAjH,aAEA,CACA,GAAAgI,GAAA8W,EAAA8iB,YAAA3S,EAAAhoB,KAAAjH,QACAiH,MAAA+6B,gBAAAh6B,EAAA,QACAf,KAAA+6B,gBAAAh6B,EAAA,UACAf,KAAAwX,SAAAxX,KAAAwX,QAAAwQ,EAAAjnB,GACAf,KAAAw3B,UAAA9pB,GAAA3M,EACAf,KAAA66B,gBAIA7wB,OAAAwuB,eAAAt3B,UAAA45B,eAAA,SAAAptB,EAAAsa,GACA,GAAAxE,GAAAxjB,IACA,iBAAAe,GACAyiB,EAAAuX,gBAAAh6B,EAAA,QACAyiB,EAAAuX,gBAAAh6B,EAAA,UACAyiB,EAAAhM,SAAAgM,EAAAhM,QAAAwQ,EAAAjnB,GACAyiB,EAAAgU,UAAA9pB,GAAA3M,EACAyiB,EAAAqX,gBAIA7wB,OAAAwuB,eAAAt3B,UAAA65B,gBAAA,SAAAh6B,EAAAqZ,GAEA,GAAA4gB,GAAAj6B,EAAAvF,IAAA4e,EACA,aAAAjf,KAAA6/B,GAAA,CAGA,GAAAC,GAAAD,EAAA32B,MAAA,EAAA22B,EAAA9+B,OAAA,EACA8N,QAAA6rB,aAAA71B,KAAAyxB,QAAAwJ,IACAl6B,EAAA8J,IAAAuP,EACApQ,OAAAkxB,SAAAP,YAAA3wB,OAAA6rB,aAAA71B,KAAAyxB,QAAAwJ,GAAAl6B,MAIAiJ,OAAAwuB,eAAAt3B,UAAA25B,YAAA,WACA,MAAA76B,KAAAu6B,cACAv6B,KAAAw3B,UAAAx3B,KAAAw3B,UAAAlmB,OAAA,SAAA0W,GAEA,aAAAA,IAEAhoB,KAAAqS,SAAArS,KAAAw3B,aAKA,SAAAzkB,GAEA,YAsBA,SAAAwB,GAAAC,EAAAC,GACAzU,KAAAwU,IACAxU,KAAAyU,IApBA,GAAAzK,GAAA+I,EAAA/I,SAAA+I,EAAA/I,UAEA,OAAAA,GAAAuK,UACAvK,GAAAiiB,KAAA,oCAIAjiB,EAAAuK,aAgBAA,EAAArT,WAEA6L,KAAA,QAEA6W,YAAArP,EAOArJ,IAAA,SAAAiwB,GACA,UAAA5mB,GAAAvU,KAAAwU,EAAA2mB,EAAA3mB,EAAAxU,KAAAyU,EAAA0mB,EAAA1mB,IASAC,UAAA,SAAAymB,GAGA,MAFAn7B,MAAAwU,GAAA2mB,EAAA3mB,EACAxU,KAAAyU,GAAA0mB,EAAA1mB,EACAzU,MAQAo7B,UAAA,SAAAC,GACA,UAAA9mB,GAAAvU,KAAAwU,EAAA6mB,EAAAr7B,KAAAyU,EAAA4mB,IASAC,gBAAA,SAAAD,GAGA,MAFAr7B,MAAAwU,GAAA6mB,EACAr7B,KAAAyU,GAAA4mB,EACAr7B,MAQAu7B,SAAA,SAAAJ,GACA,UAAA5mB,GAAAvU,KAAAwU,EAAA2mB,EAAA3mB,EAAAxU,KAAAyU,EAAA0mB,EAAA1mB,IASAL,eAAA,SAAA+mB,GAGA,MAFAn7B,MAAAwU,GAAA2mB,EAAA3mB,EACAxU,KAAAyU,GAAA0mB,EAAA1mB,EACAzU,MAQAw7B,eAAA,SAAAH,GACA,UAAA9mB,GAAAvU,KAAAwU,EAAA6mB,EAAAr7B,KAAAyU,EAAA4mB,IASAI,qBAAA,SAAAJ,GAGA,MAFAr7B,MAAAwU,GAAA6mB,EACAr7B,KAAAyU,GAAA4mB,EACAr7B,MASA07B,SAAA,SAAAL,GACA,UAAA9mB,GAAAvU,KAAAwU,EAAA6mB,EAAAr7B,KAAAyU,EAAA4mB,IAUAM,eAAA,SAAAN,GAGA,MAFAr7B,MAAAwU,GAAA6mB,EACAr7B,KAAAyU,GAAA4mB,EACAr7B,MASA47B,OAAA,SAAAP,GACA,UAAA9mB,GAAAvU,KAAAwU,EAAA6mB,EAAAr7B,KAAAyU,EAAA4mB,IAUAQ,aAAA,SAAAR,GAGA,MAFAr7B,MAAAwU,GAAA6mB,EACAr7B,KAAAyU,GAAA4mB,EACAr7B,MAQA87B,GAAA,SAAAX,GACA,MAAAn7B,MAAAwU,IAAA2mB,EAAA3mB,GAAAxU,KAAAyU,IAAA0mB,EAAA1mB,GAQAsnB,GAAA,SAAAZ,GACA,MAAAn7B,MAAAwU,EAAA2mB,EAAA3mB,GAAAxU,KAAAyU,EAAA0mB,EAAA1mB,GAQAunB,IAAA,SAAAb,GACA,MAAAn7B,MAAAwU,GAAA2mB,EAAA3mB,GAAAxU,KAAAyU,GAAA0mB,EAAA1mB,GASAwnB,GAAA,SAAAd,GACA,MAAAn7B,MAAAwU,EAAA2mB,EAAA3mB,GAAAxU,KAAAyU,EAAA0mB,EAAA1mB,GAQAynB,IAAA,SAAAf,GACA,MAAAn7B,MAAAwU,GAAA2mB,EAAA3mB,GAAAxU,KAAAyU,GAAA0mB,EAAA1mB,GASA0nB,KAAA,SAAAhB,EAAAlmB,GAKA,MAJA,mBAAAA,KACAA,EAAA,IAEAA,EAAAhC,KAAAS,IAAAT,KAAAQ,IAAA,EAAAwB,GAAA,GACA,GAAAV,GAAAvU,KAAAwU,GAAA2mB,EAAA3mB,EAAAxU,KAAAwU,GAAAS,EAAAjV,KAAAyU,GAAA0mB,EAAA1mB,EAAAzU,KAAAyU,GAAAQ,IAQAmnB,aAAA,SAAAjB,GACA,GAAAtiB,GAAA7Y,KAAAwU,EAAA2mB,EAAA3mB,EACAsE,EAAA9Y,KAAAyU,EAAA0mB,EAAA1mB,CACA,OAAAxB,MAAAD,KAAA6F,IAAAC,MAQAujB,aAAA,SAAAlB,GACA,MAAAn7B,MAAAm8B,KAAAhB,IAQA1nB,IAAA,SAAA0nB,GACA,UAAA5mB,GAAAtB,KAAAQ,IAAAzT,KAAAwU,EAAA2mB,EAAA3mB,GAAAvB,KAAAQ,IAAAzT,KAAAyU,EAAA0mB,EAAA1mB,KAQAf,IAAA,SAAAynB,GACA,UAAA5mB,GAAAtB,KAAAS,IAAA1T,KAAAwU,EAAA2mB,EAAA3mB,GAAAvB,KAAAS,IAAA1T,KAAAyU,EAAA0mB,EAAA1mB,KAOA1F,SAAA,WACA,MAAA/O,MAAAwU,EAAA,IAAAxU,KAAAyU,GASA6nB,MAAA,SAAA9nB,EAAAC,GAGA,MAFAzU,MAAAwU,IACAxU,KAAAyU,IACAzU,MAQAu8B,KAAA,SAAA/nB,GAEA,MADAxU,MAAAwU,IACAxU,MAQAw8B,KAAA,SAAA/nB,GAEA,MADAzU,MAAAyU,IACAzU,MAQAy8B,aAAA,SAAAtB,GAGA,MAFAn7B,MAAAwU,EAAA2mB,EAAA3mB,EACAxU,KAAAyU,EAAA0mB,EAAA1mB,EACAzU,MAOA08B,KAAA,SAAAvB,GACA,GAAA3mB,GAAAxU,KAAAwU,EACAC,EAAAzU,KAAAyU,CACAzU,MAAAwU,EAAA2mB,EAAA3mB,EACAxU,KAAAyU,EAAA0mB,EAAA1mB,EACA0mB,EAAA3mB,IACA2mB,EAAA1mB,KAOAuO,MAAA,WACA,UAAAzO,GAAAvU,KAAAwU,EAAAxU,KAAAyU,QAICpe,SAGD,SAAA0c,GAEA,YAgBA,SAAA4pB,GAAAC,GACA58B,KAAA48B,SACA58B,KAAAoV,UAfA,GAAApL,GAAA+I,EAAA/I,SAAA+I,EAAA/I,UAEA,OAAAA,GAAA2yB,iBACA3yB,GAAAiiB,KAAA,2CAeAjiB,EAAA2yB,eAEA3yB,EAAA2yB,aAAAz7B,WAEA0iB,YAAA+Y,EAQAE,YAAA,SAAA3oB,GAEA,MADAlU,MAAAoV,OAAAxd,KAAAsc,GACAlU,MASA88B,aAAA,SAAA1nB,GAEA,MADApV,MAAAoV,OAAApV,KAAAoV,OAAAlT,OAAAkT,GACApV,OAcAgK,EAAA2yB,aAAAI,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA1mC,GACA2mC,GAAAD,EAAA3oB,EAAA0oB,EAAA1oB,IAAAwoB,EAAAvoB,EAAAyoB,EAAAzoB,IAAA0oB,EAAA1oB,EAAAyoB,EAAAzoB,IAAAuoB,EAAAxoB,EAAA0oB,EAAA1oB,GACA6oB,GAAAJ,EAAAzoB,EAAAwoB,EAAAxoB,IAAAwoB,EAAAvoB,EAAAyoB,EAAAzoB,IAAAwoB,EAAAxoB,EAAAuoB,EAAAvoB,IAAAuoB,EAAAxoB,EAAA0oB,EAAA1oB,GACA8oB,GAAAH,EAAA1oB,EAAAyoB,EAAAzoB,IAAAwoB,EAAAzoB,EAAAwoB,EAAAxoB,IAAA2oB,EAAA3oB,EAAA0oB,EAAA1oB,IAAAyoB,EAAAxoB,EAAAuoB,EAAAvoB,EACA,QAAA6oB,EAAA,CACA,GAAAC,GAAAH,EAAAE,EACAE,EAAAH,EAAAC,CACA,IAAAC,MAAA,MAAAC,MAAA,GACA/mC,EAAA,GAAAkmC,GAAA,gBACAlmC,EAAAomC,YAAA,GAAA7yB,GAAAuK,MAAAyoB,EAAAxoB,EAAA+oB,GAAAN,EAAAzoB,EAAAwoB,EAAAxoB,GAAAwoB,EAAAvoB,EAAA8oB,GAAAN,EAAAxoB,EAAAuoB,EAAAvoB,MAGAhe,EAAA,GAAAkmC,OAKAlmC,GAAA,GAAAkmC,GADA,IAAAS,GAAA,IAAAC,EACA,aAGA,WAGA,OAAA5mC,IAaAuT,EAAA2yB,aAAAc,qBAAA,SAAAT,EAAAC,EAAA7nB,GAKA,OAFA8nB,GAAAC,EAAAO,EAFAjnC,EAAA,GAAAkmC,GACAzgC,EAAAkZ,EAAAlZ,OAGAD,EAAA,EAAmBA,EAAAC,EAAYD,IAC/BihC,EAAA9nB,EAAAnZ,GACAkhC,EAAA/nB,GAAAnZ,EAAA,GAAAC,GACAwhC,EAAAf,EAAAI,kBAAAC,EAAAC,EAAAC,EAAAC,GAEA1mC,EAAAqmC,aAAAY,EAAAtoB,OAKA,OAHA3e,GAAA2e,OAAAlZ,OAAA,IACAzF,EAAAmmC,OAAA,gBAEAnmC,GAUAuT,EAAA2yB,aAAAgB,wBAAA,SAAAC,EAAAC,GAIA,OAHApnC,GAAA,GAAAkmC,GACAzgC,EAAA0hC,EAAA1hC,OAEAD,EAAA,EAAmBA,EAAAC,EAAYD,IAAA,CAC/B,GAAA+gC,GAAAY,EAAA3hC,GACAghC,EAAAW,GAAA3hC,EAAA,GAAAC,GACAwhC,EAAAf,EAAAc,qBAAAT,EAAAC,EAAAY,EAEApnC,GAAAqmC,aAAAY,EAAAtoB,QAKA,MAHA3e,GAAA2e,OAAAlZ,OAAA,IACAzF,EAAAmmC,OAAA,gBAEAnmC,QAWAuT,EAAA2yB,aAAAmB,0BAAA,SAAA1oB,EAAA2oB,EAAAC,GACA,GAAAvqB,GAAAsqB,EAAAtqB,IAAAuqB,GACAtqB,EAAAqqB,EAAArqB,IAAAsqB,GACAC,EAAA,GAAAj0B,GAAAuK,MAAAb,EAAAc,EAAAf,EAAAgB,GACAypB,EAAA,GAAAl0B,GAAAuK,MAAAd,EAAAe,EAAAd,EAAAe,GACA0pB,EAAAxB,EAAAc,qBAAAhqB,EAAAwqB,EAAA7oB,GACAgpB,EAAAzB,EAAAc,qBAAAQ,EAAAvqB,EAAA0B,GACAipB,EAAA1B,EAAAc,qBAAA/pB,EAAAwqB,EAAA9oB,GACAkpB,EAAA3B,EAAAc,qBAAAS,EAAAzqB,EAAA2B,GACA3e,EAAA,GAAAkmC,EAUA,OARAlmC,GAAAqmC,aAAAqB,EAAA/oB,QACA3e,EAAAqmC,aAAAsB,EAAAhpB,QACA3e,EAAAqmC,aAAAuB,EAAAjpB,QACA3e,EAAAqmC,aAAAwB,EAAAlpB,QAEA3e,EAAA2e,OAAAlZ,OAAA,IACAzF,EAAAmmC,OAAA,gBAEAnmC,MAGCJ,SAGD,SAAA0c,GAEA,YAmBA,SAAA2d,GAAAD,GACAA,EAIAzwB,KAAAu+B,iBAAA9N,GAHAzwB,KAAAw+B,WAAA,UA0SA,QAAAC,GAAAj5B,EAAAk5B,EAAAzpB,GAOA,MANAA,GAAA,IACAA,GAAA,GAEAA,EAAA,IACAA,GAAA,GAEAA,EAAA,IACAzP,EAAA,GAAAk5B,EAAAl5B,GAAAyP,EAEAA,EAAA,GACAypB,EAEAzpB,EAAA,IACAzP,GAAAk5B,EAAAl5B,IAAA,IAAAyP,GAAA,EAEAzP,EA7UA,GAAAwE,GAAA+I,EAAA/I,SAAA+I,EAAA/I,UAEA,OAAAA,GAAA0mB,UACA1mB,GAAAiiB,KAAA,qCAuBAjiB,EAAA0mB,QAEA1mB,EAAA0mB,MAAAxvB,WAMAq9B,iBAAA,SAAA9N,GACA,GAAApvB,EAEAovB,KAAAC,GAAAiO,eACAlO,EAAAC,EAAAiO,aAAAlO,IAGA,gBAAAA,IACApvB,GAAA,gBAGAA,IACAA,EAAAqvB,EAAAkO,cAAAnO,IAEApvB,IACAA,EAAAqvB,EAAAmO,cAAApO,IAEApvB,IACAA,EAAAqvB,EAAAoO,cAAArO,IAEApvB,IAEAA,GAAA,UAEAA,GACArB,KAAAw+B,UAAAn9B,IAYA09B,UAAA,SAAAhpB,EAAAipB,EAAApkB,GACA7E,GAAA,IAAeipB,GAAA,IAAUpkB,GAAA,GAEzB,IAAAnV,GAAAH,EAAAZ,EACAgP,EAAA1J,EAAA6G,KAAAC,MAAA4C,KAAAqC,EAAAipB,EAAApkB,IACAnH,EAAAzJ,EAAA6G,KAAAC,MAAA2C,KAAAsC,EAAAipB,EAAApkB,GAIA,IAFAlW,GAAAgP,EAAAD,GAAA,EAEAC,IAAAD,EACAhO,EAAAH,EAAA,MAEA,CACA,GAAAqnB,GAAAjZ,EAAAD,CAEA,QADAnO,EAAAZ,EAAA,GAAAioB,GAAA,EAAAjZ,EAAAD,GAAAkZ,GAAAjZ,EAAAD,GACAC,GACA,IAAAqC,GACAtQ,GAAAu5B,EAAApkB,GAAA+R,GAAAqS,EAAApkB,EAAA,IACA,MACA,KAAAokB,GACAv5B,GAAAmV,EAAA7E,GAAA4W,EAAA,CACA,MACA,KAAA/R,GACAnV,GAAAsQ,EAAAipB,GAAArS,EAAA,EAGAlnB,GAAA,EAGA,OACAwN,KAAAgsB,MAAA,IAAAx5B,GACAwN,KAAAgsB,MAAA,IAAA35B,GACA2N,KAAAgsB,MAAA,IAAAv6B,KAQAw6B,UAAA,WACA,MAAAl/B,MAAAm/B,SAOAX,UAAA,SAAAn9B,GACArB,KAAAm/B,QAAA99B,GAOA+9B,MAAA,WACA,GAAA/9B,GAAArB,KAAAk/B,WACA,cAAA79B,EAAA,OAAAA,EAAA,OAAAA,EAAA,QAOAwvB,OAAA,WACA,GAAAxvB,GAAArB,KAAAk/B,WACA,eAAA79B,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QAOAg+B,MAAA,WACA,GAAAh+B,GAAArB,KAAAk/B,YACAI,EAAAt/B,KAAA++B,UAAA19B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,cAAAi+B,EAAA,OAAAA,EAAA,QAAAA,EAAA,SAOAC,OAAA,WACA,GAAAl+B,GAAArB,KAAAk/B,YACAI,EAAAt/B,KAAA++B,UAAA19B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,eAAAi+B,EAAA,OAAAA,EAAA,QAAAA,EAAA,QAAAj+B,EAAA,QAOAm+B,MAAA,WACA,GAAAzpB,GAAAipB,EAAApkB,EAAAvZ,EAAArB,KAAAk/B,WAWA,OATAnpB,GAAA1U,EAAA,GAAA0N,SAAA,IACAgH,EAAA,IAAAA,EAAA7Z,OAAA,IAAA6Z,IAEAipB,EAAA39B,EAAA,GAAA0N,SAAA,IACAiwB,EAAA,IAAAA,EAAA9iC,OAAA,IAAA8iC,IAEApkB,EAAAvZ,EAAA,GAAA0N,SAAA,IACA6L,EAAA,IAAAA,EAAA1e,OAAA,IAAA0e,IAEA7E,EAAAgB,cAAAioB,EAAAjoB,cAAA6D,EAAA7D,eAOA6Z,SAAA,WACA,MAAA5wB,MAAAk/B,YAAA,IAQAvO,SAAA,SAAA8O,GACA,GAAAp+B,GAAArB,KAAAk/B,WAGA,OAFA79B,GAAA,GAAAo+B,EACAz/B,KAAAw+B,UAAAn9B,GACArB,MAOA0/B,YAAA,WACA,GAAAr+B,GAAArB,KAAAk/B,YACAS,EAAA7kC,UAAA,GAAAuG,EAAA,OAAAA,EAAA,OAAAA,EAAA,IAAA2U,QAAA,OACA4pB,EAAAv+B,EAAA,EAEA,OADArB,MAAAw+B,WAAAmB,MAAAC,IACA5/B,MAQA6/B,aAAA,SAAAC,GACA,GAAAz+B,GAAArB,KAAAk/B,YACAS,GAAA,GAAAt+B,EAAA,OAAAA,EAAA,OAAAA,EAAA,IAAA2U,QAAA,GACA4pB,EAAAv+B,EAAA,EAMA,OAJAy+B,MAAA,IAEAH,EAAAvpB,OAAAupB,GAAAvpB,OAAA0pB,GAAA,MACA9/B,KAAAw+B,WAAAmB,MAAAC,IACA5/B,MAQA+/B,YAAA,SAAAC,GACAA,YAAAtP,KACAsP,EAAA,GAAAtP,GAAAsP,GASA,QANAvpC,MACAgpC,EAAAz/B,KAAA4wB,WACAqP,EAAA,GACA5+B,EAAArB,KAAAk/B,YACAgB,EAAAF,EAAAd,YAEAjjC,EAAA,EAAqBA,EAAA,EAAOA,IAC5BxF,EAAAmB,KAAAqb,KAAAgsB,MAAA59B,EAAApF,IAAA,EAAAgkC,GAAAC,EAAAjkC,GAAAgkC,GAKA,OAFAxpC,GAAA,GAAAgpC,EACAz/B,KAAAw+B,UAAA/nC,GACAuJ,OAWAgK,EAAA0mB,MAAAyP,OAAA,kIAQAn2B,EAAA0mB,MAAA0P,OAAA,+FAQAp2B,EAAA0mB,MAAA2P,MAAA,yDASAr2B,EAAA0mB,MAAAiO,cACA2B,KAAA,UACAC,MAAA,UACAC,KAAA,UACAC,QAAA,UACAC,KAAA,UACAC,KAAA,UACAC,MAAA,UACAC,KAAA,UACAC,OAAA,UACAC,KAAA,UACAC,MAAA,UACAC,OAAA,UACAC,OAAA,UACAC,IAAA,UACAC,OAAA,UACAC,KAAA,UACAC,MAAA,UACAC,OAAA,WAmCAv3B,EAAA0mB,MAAA8Q,QAAA,SAAA/Q,GACA,MAAAC,GAAA+Q,WAAA/Q,EAAAmO,cAAApO,KASAzmB,EAAA0mB,MAAAmO,cAAA,SAAApO,GACA,GAAA1sB,GAAA0sB,EAAA1sB,MAAA2sB,EAAAyP,OACA,IAAAp8B,EAAA,CACA,GAAAgS,GAAAjb,SAAAiJ,EAAA,aAAA5I,KAAA4I,EAAA,iBAAA5I,KAAA4I,EAAA,WACAi7B,EAAAlkC,SAAAiJ,EAAA,aAAA5I,KAAA4I,EAAA,iBAAA5I,KAAA4I,EAAA,WACA6W,EAAA9f,SAAAiJ,EAAA,aAAA5I,KAAA4I,EAAA,iBAAA5I,KAAA4I,EAAA,UAEA,QACAjJ,SAAAib,EAAA,IACAjb,SAAAkkC,EAAA,IACAlkC,SAAA8f,EAAA,IACA7W,EAAA,GAAAoS,WAAApS,EAAA,SAaAiG,EAAA0mB,MAAAgR,SAAAhR,EAAA8Q,QAQAx3B,EAAA0mB,MAAAiR,QAAA,SAAAlR,GACA,MAAAC,GAAA+Q,WAAA/Q,EAAAoO,cAAArO,KAWAzmB,EAAA0mB,MAAAoO,cAAA,SAAArO,GACA,GAAA1sB,GAAA0sB,EAAA1sB,MAAA2sB,EAAA0P,OACA,IAAAr8B,EAAA,CAIA,GAGAgS,GAAAipB,EAAApkB,EAHAnV,GAAA0Q,WAAApS,EAAA,qBACAuB,EAAA6Q,WAAApS,EAAA,UAAA5I,KAAA4I,EAAA,WACAW,EAAAyR,WAAApS,EAAA,UAAA5I,KAAA4I,EAAA,UAGA,QAAAuB,EACAyQ,EAAAipB,EAAApkB,EAAAlW,MAEA,CACA,GAAAg6B,GAAAh6B,GAAA,GAAAA,GAAAY,EAAA,GAAAZ,EAAAY,EAAAZ,EAAAY,EACAE,EAAA,EAAAd,EAAAg6B,CAEA3oB,GAAA0oB,EAAAj5B,EAAAk5B,EAAAj5B,EAAA,KACAu5B,EAAAP,EAAAj5B,EAAAk5B,EAAAj5B,GACAmV,EAAA6jB,EAAAj5B,EAAAk5B,EAAAj5B,EAAA,KAGA,OACAwN,KAAAgsB,MAAA,IAAAlpB,GACA9C,KAAAgsB,MAAA,IAAAD,GACA/rB,KAAAgsB,MAAA,IAAArkB,GACA7W,EAAA,GAAAoS,WAAApS,EAAA,SAYAiG,EAAA0mB,MAAAkR,SAAAlR,EAAAiR,QASA33B,EAAA0mB,MAAAmR,QAAA,SAAApR,GACA,MAAAC,GAAA+Q,WAAA/Q,EAAAkO,cAAAnO,KAUAzmB,EAAA0mB,MAAAkO,cAAA,SAAAnO,GACA,GAAAA,EAAA1sB,MAAA2sB,EAAA2P,OAAA,CACA,GAAA7oC,GAAAi5B,EAAApsB,MAAAosB,EAAAvsB,QAAA,QACA49B,EAAA,IAAAtqC,EAAA0E,QAAA,IAAA1E,EAAA0E,OACA6lC,EAAA,IAAAvqC,EAAA0E,QAAA,IAAA1E,EAAA0E,OACA6Z,EAAA+rB,EAAAtqC,EAAAwO,OAAA,GAAAxO,EAAAwO,OAAA,GAAAxO,EAAAwX,UAAA,KACAgwB,EAAA8C,EAAAtqC,EAAAwO,OAAA,GAAAxO,EAAAwO,OAAA,GAAAxO,EAAAwX,UAAA,KACA4L,EAAAknB,EAAAtqC,EAAAwO,OAAA,GAAAxO,EAAAwO,OAAA,GAAAxO,EAAAwX,UAAA,KACA8G,EAAAisB,EAAAD,EAAAtqC,EAAAwO,OAAA,GAAAxO,EAAAwO,OAAA,GAAAxO,EAAAwX,UAAA,SAEA,QACAlU,SAAAib,EAAA,IACAjb,SAAAkkC,EAAA,IACAlkC,SAAA8f,EAAA,IACAzE,YAAArb,SAAAgb,EAAA,SAAAE,QAAA,YAYAhM,EAAA0mB,MAAA+Q,WAAA,SAAApgC,GACA,GAAA2gC,GAAA,GAAAtR,EAEA,OADAsR,GAAAxD,UAAAn9B,GACA2gC,MAGC3rC,SAGD,WAGA,QAAA4rC,GAAAja,GACA,GAEAyI,GAAAyR,EAAA5a,EAFAxZ,EAAAka,EAAAqK,aAAA,SACA/I,EAAAtB,EAAAqK,aAAA,YAMA,IAFA/I,EAAAnT,WAAAmT,IAAA,KAAAnuB,KAAAmuB,GAAA,OACAA,IAAA,IAAAA,EAAA,IAAAA,EACAxb,EAAA,CACA,GAAAq0B,GAAAr0B,EAAA1S,MAAA,UAEA,MAAA+mC,IAAAjmC,OAAA,IACAimC,EAAAz7B,KAGA,QAAAzK,GAAAkmC,EAAAjmC,OAAwCD,KAAK,CAE7C,GAAAb,GAAA+mC,EAAAlmC,GAAAb,MAAA,WACAhC,EAAAgC,EAAA,GAAAqI,OACAjM,EAAA4D,EAAA,GAAAqI,MAEA,gBAAArK,EACAq3B,EAAAj5B,EAEA,iBAAA4B,IACAkuB,EAAA9vB,IAiBA,MAZAi5B,KACAA,EAAAzI,EAAAqK,aAAA,6BAEA/K,IACAA,EAAAU,EAAAqK,aAAA,iBAGA5B,EAAA,GAAAzmB,QAAA0mB,MAAAD,GACAyR,EAAAzR,EAAAG,WACAtJ,EAAAgJ,MAAAna,WAAAmR,IAAA,EAAAnR,WAAAmR,GACAA,GAAA4a,GAGA5Y,SACAmH,QAAA2O,QACA9X,WAIA,QAAA8a,GAAApa,GACA,OACA3H,GAAA2H,EAAAqK,aAAA,SACA/R,GAAA0H,EAAAqK,aAAA,SACA3Z,GAAAsP,EAAAqK,aAAA,cACA1Z,GAAAqP,EAAAqK,aAAA,UAIA,QAAAgQ,GAAAra,GACA,OACA3H,GAAA2H,EAAAqK,aAAA,OAAArK,EAAAqK,aAAA,aACA/R,GAAA0H,EAAAqK,aAAA,OAAArK,EAAAqK,aAAA,aACA0L,GAAA,EACArlB,GAAAsP,EAAAqK,aAAA,aACA1Z,GAAAqP,EAAAqK,aAAA,aACA2L,GAAAhW,EAAAqK,aAAA,aA8TA,QAAAiQ,GAAAl7B,EAAArO,EAAAwpC,GACA,GAAAC,GAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACA,QAAA1xB,KAAAlY,GACA,aAAAA,EAAAkY,GACAlY,EAAAkY,GAAA,EAEA,cAAAlY,EAAAkY,KACAlY,EAAAkY,GAAA,GAEAuxB,EAAArsB,WAAApd,EAAAkY,GAAA,IAEAyxB,EADA,gBAAA3pC,GAAAkY,IAAA,SAAA9V,KAAApC,EAAAkY,IACA,IAGA,EAEA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,GACAyxB,GAAA,sBAAAH,EAAAn7B,EAAA8C,MAAA,EACAu4B,EAAA,sBAAAF,EAAAn7B,EAAAuO,MAAA,KAEA,OAAA1E,GAAA,OAAAA,IACAyxB,GAAA,sBAAAH,EAAAn7B,EAAA+C,OAAA,EACAs4B,EAAA,sBAAAF,EAAAn7B,EAAAwO,KAAA,KAEA7c,EAAAkY,GAAAuxB,EAAAE,EAAAD,CAEA,gBAAAr7B,EAAA2F,MACA,OAAAhU,EAAAilC,IACA,sBAAAuE,GACAn7B,EAAA0N,KAAA1N,EAAA2N,GAAA,CAEA,GAAA6tB,GAAAx7B,EAAA2N,GAAA3N,EAAA0N,EACA6tB,GAAA,aAAAC,EAAA,IACA7pC,EAAAunB,KACAvnB,EAAAunB,IAAAsiB,GAEA7pC,EAAA4f,KACA5f,EAAA4f,IAAAiqB,GAGA,MAAAD,GA3VA34B,OAAAkxB,SAAAlxB,OAAA6G,KAAAiT,aAOA+e,QAAA,EAOAC,QAAA,EAOA/e,WAAA,SAAAhrB,GACAA,SAEA,IAAAuoB,KAEAthB,MAAAnI,GAAAmS,OAAA1S,OAAA4/B,QACAl3B,KAAA+M,KAAAhU,EAAAgU,MAAA,SAEAuU,GACAjB,GAAAtnB,EAAAuoB,OAAAjB,IAAA,EACAC,GAAAvnB,EAAAuoB,OAAAhB,IAAA,EACA5H,GAAA3f,EAAAuoB,OAAA5I,IAAA,EACAC,GAAA5f,EAAAuoB,OAAA3I,IAAA,GAGA,WAAA3Y,KAAA+M,OACAuU,EAAAyc,GAAAhlC,EAAAuoB,OAAAyc,IAAA,EACAzc,EAAA0c,GAAAjlC,EAAAuoB,OAAA0c,IAAA,GAEAh+B,KAAAshB,SACAthB,KAAA+iC,WAAAhqC,EAAAgqC,WAAA1+B,QACAtL,EAAAiqC,oBACAhjC,KAAAgjC,kBAAAjqC,EAAAiqC,mBAEAhjC,KAAA6iC,QAAA9pC,EAAA8pC,SAAA7iC,KAAA6iC,QACA7iC,KAAA8iC,QAAA/pC,EAAA+pC,SAAA9iC,KAAA8iC,SAQAG,aAAA,SAAAC,GACA,OAAAC,KAAAD,GAAA,CACA,GAAAzS,GAAA,GAAAzmB,QAAA0mB,MAAAwS,EAAAC,GACAnjC,MAAA+iC,WAAAnrC,MACA0xB,OAAA6Z,EACA1S,QAAA2O,QACA9X,QAAAmJ,EAAAG,aAGA,MAAA5wB,OAOAojC,SAAA,WACA,OACAr2B,KAAA/M,KAAA+M,KACAuU,OAAAthB,KAAAshB,OACAyhB,WAAA/iC,KAAA+iC,WACAF,QAAA7iC,KAAA6iC,QACAC,QAAA9iC,KAAA8iC,QACAE,kBAAAhjC,KAAAgjC,kBAAAhjC,KAAAgjC,kBAAA9gC,SAAAlC,KAAAgjC,oBAUAxO,MAAA,SAAAptB,GACA,GACAmtB,GAAA8O,EADA/hB,EAAAtX,OAAA6G,KAAAzJ,OAAA4b,MAAAhjB,KAAAshB,OAQA,IAJAthB,KAAA+iC,WAAAO,KAAA,SAAAxtB,EAAA8E,GACA,MAAA9E,GAAAwT,OAAA1O,EAAA0O,UAGAliB,EAAAm8B,OAAA,eAAAn8B,EAAAm8B,MAAAx2B,KACA,OAAAkE,KAAAqQ,GACA,OAAArQ,GAAA,OAAAA,GAAA,OAAAA,EACAqQ,EAAArQ,IAAAjR,KAAA6iC,QAAAz7B,EAAA8C,MAAA,EAEA,OAAA+G,GAAA,OAAAA,IACAqQ,EAAArQ,IAAAjR,KAAA8iC,QAAA17B,EAAA+C,OAAA,EAKAk5B,GAAA,aAAArjC,KAAAnI,GACA,mCACAmI,KAAAgjC,oBACAK,GAAA,8BAAArjC,KAAAgjC,kBAAA5rC,KAAA,YAEA,WAAA4I,KAAA+M,KACAwnB,GACA,mBACA8O,EACA,QAAA/hB,EAAAjB,GACA,SAAAiB,EAAAhB,GACA,SAAAgB,EAAA5I,GACA,SAAA4I,EAAA3I,GACA,QAGA,WAAA3Y,KAAA+M,OACAwnB,GACA,mBACA8O,EACA,QAAA/hB,EAAA5I,GACA,SAAA4I,EAAA3I,GACA,QAAA2I,EAAA0c,GACA,SAAA1c,EAAAjB,GACA,SAAAiB,EAAAhB,GACA,QAIA,QAAArkB,GAAA,EAAqBA,EAAA+D,KAAA+iC,WAAA7mC,OAA4BD,IACjDs4B,EAAA38B,KACA,SACA,eAAAoI,KAAA+iC,WAAA9mC,GAAAqtB,OAAA,IACA,uBAAAtpB,KAAA+iC,WAAA9mC,GAAAw0B,MACA,OAAAzwB,KAAA+iC,WAAA9mC,GAAAqrB,QAAA,kBAAqDtnB,KAAA+iC,WAAA9mC,GAAAqrB,QAAA,IACrD,QAMA,OAFAiN,GAAA38B,KAAA,WAAAoI,KAAA+M,KAAA,6CAEAwnB,EAAAn9B,KAAA,KAUAosC,OAAA,SAAA/qB,EAAArR,GACA,GAAAq8B,GAAAxyB,EAAAqQ,EAAAtX,OAAA6G,KAAAzJ,OAAA4b,MAAAhjB,KAAAshB,OAEA,IAAAthB,KAAA+M,KAAA,CAIA,GAAA3F,EAAAm8B,OAAA,eAAAn8B,EAAAm8B,MAAAx2B,KACA,IAAAkE,IAAAqQ,GACA,OAAArQ,GAAA,OAAAA,EACAqQ,EAAArQ,KAAAjR,KAAA6iC,QAAAz7B,EAAA8C,MAAA,EAEA,OAAA+G,GAAA,OAAAA,IACAqQ,EAAArQ,KAAAjR,KAAA8iC,QAAA17B,EAAA+C,OAAA,EAKA,YAAAnK,KAAA+M,KACA02B,EAAAhrB,EAAAirB,qBACApiB,EAAAjB,GAAAiB,EAAAhB,GAAAgB,EAAA5I,GAAA4I,EAAA3I,IAEA,WAAA3Y,KAAA+M,OACA02B,EAAAhrB,EAAAkrB,qBACAriB,EAAAjB,GAAAiB,EAAAhB,GAAAgB,EAAAyc,GAAAzc,EAAA5I,GAAA4I,EAAA3I,GAAA2I,EAAA0c,IAGA,QAAA/hC,GAAA,EAAAoV,EAAArR,KAAA+iC,WAAA7mC,OAAmDD,EAAAoV,EAASpV,IAAA,CAC5D,GAAAw0B,GAAAzwB,KAAA+iC,WAAA9mC,GAAAw0B,MACAnJ,EAAAtnB,KAAA+iC,WAAA9mC,GAAAqrB,QACAgC,EAAAtpB,KAAA+iC,WAAA9mC,GAAAqtB,MAEA,oBAAAhC,KACAmJ,EAAA,GAAAzmB,QAAA0mB,MAAAD,GAAAE,SAAArJ,GAAAuJ,UAEA4S,EAAAR,aAAA9sB,WAAAmT,GAAAmH,GAGA,MAAAgT,OAIAz5B,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAAkxB,UAaAP,YAAA,SAAA3S,EAAA4b,GAmCA,GACA72B,GAIAuU,EAAAqhB,EALAkB,EAAA7b,EAAAiD,qBAAA,QAEAsX,EAAAva,EAAAqK,aAAA,sCACA2Q,EAAAhb,EAAAqK,aAAA,qBACA0Q,IAIAh2B,GADA,mBAAAib,EAAAgJ,UAAA,mBAAAhJ,EAAAgJ,SACA,SAGA,SAGA,WAAAjkB,EACAuU,EAAA8gB,EAAApa,GAEA,WAAAjb,IACAuU,EAAA+gB,EAAAra,GAGA,QAAA/rB,GAAA4nC,EAAA3nC,OAAuCD,KACvC8mC,EAAAnrC,KAAAqqC,EAAA4B,EAAA5nC,IAGA0mC,GAAAL,EAAAsB,EAAAtiB,EAAAihB,EAEA,IAAAkB,GAAA,GAAAz5B,QAAAkxB,UACAnuB,OACAuU,SACAyhB,aACAF,SAAAe,EAAAjuB,KACAmtB,SAAAc,EAAAhuB,KAMA,QAHAotB,GAAA,KAAAL,KACAc,EAAAT,kBAAAh5B,OAAAomB,yBAAA4S,GAAA,IAAAL,IAEAc,GAWAK,UAAA,SAAA/iC,EAAAhI,GAGA,MAFAA,WACAupC,EAAAvhC,EAAAhI,EAAAuoB,OAAA,kBACA,GAAAtX,QAAAkxB,SAAAniC,SA2DAiR,OAAA+5B,QAAA/5B,OAAA6G,KAAAiT,aAOAkgB,OAAA,SAOAnB,QAAA,EAOAC,QAAA,EAOA/e,WAAA,SAAAhrB,GAKA,GAJAA,UAEAiH,KAAAnI,GAAAmS,OAAA1S,OAAA4/B,QAEAn+B,EAAAsI,OACA,mBAAAtI,GAAAsI,OAEA,sBAAA2I,QAAA6G,KAAAiL,gBAAA/iB,EAAAsI,QACArB,KAAAqB,OAAA,GAAAgZ,UAAArQ,OAAA6G,KAAAiL,gBAAA/iB,EAAAsI,aAEA,CAEA,GAAAmiB,GAAAxjB,IACAA,MAAAqB,OAAA2I,OAAA6G,KAAAwG,cACArN,OAAA6G,KAAAqG,UAAAne,EAAAsI,OAAA,SAAA+V,GACAoM,EAAAniB,OAAA+V,QAMApX,MAAAqB,OAAAtI,EAAAsI,MAGAtI,GAAAirC,SACAhkC,KAAAgkC,OAAAjrC,EAAAirC,QAEAjrC,EAAA8pC,UACA7iC,KAAA6iC,QAAA9pC,EAAA8pC,SAEA9pC,EAAA+pC,UACA9iC,KAAA8iC,QAAA/pC,EAAA+pC,UAQAM,SAAA,WAEA,GAAA/hC,EAeA,OAZA,kBAAArB,MAAAqB,OACAA,EAAA2G,OAAAhI,KAAAqB,QAGA,gBAAArB,MAAAqB,OAAAqJ,IACArJ,EAAArB,KAAAqB,OAAAqJ,IAGA,gBAAA1K,MAAAqB,QAAArB,KAAAqB,OAAA2K,YACA3K,EAAArB,KAAAqB,OAAA2K,cAIA3K,SACA2iC,OAAAhkC,KAAAgkC,OACAnB,QAAA7iC,KAAA6iC,QACAC,QAAA9iC,KAAA8iC,UAUAtO,MAAA,SAAAptB,GACA,GAAA68B,GAAA,kBAAAjkC,MAAAqB,OAAArB,KAAAqB,SAAArB,KAAAqB,OACA6iC,EAAAD,EAAA/5B,MAAA9C,EAAA+8B,WACAC,EAAAH,EAAA95B,OAAA/C,EAAAi9B,YACAC,EAAAtkC,KAAA6iC,QAAAz7B,EAAA+8B,WACAI,EAAAvkC,KAAA8iC,QAAA17B,EAAAi9B,YACAG,EAAA,EAcA,OAbA,aAAAxkC,KAAAgkC,QAAA,cAAAhkC,KAAAgkC,SACAI,EAAA,GAEA,aAAApkC,KAAAgkC,QAAA,cAAAhkC,KAAAgkC,SACAE,EAAA,GAEAD,EAAAv5B,IACA85B,EAAAP,EAAAv5B,IAEAu5B,EAAAj4B,YACAw4B,EAAAP,EAAAj4B,aAGA,sBAAAhM,KAAAnI,GACA,QAAAysC,EACA,QAAAC,EACA,YAAAL,EACA,aAAAE,EAAA,iCAEAH,EAAA/5B,MACA,aAAA+5B,EAAA95B,OACA,iBAAAq6B,EACA,4BAUAhB,OAAA,SAAA/qB,GACA,GAAApX,GAAA,kBAAArB,MAAAqB,OACArB,KAAAqB,SACArB,KAAAqB,MAGA,KAAAA,EACA,QAIA,uBAAAA,GAAAqJ,IAAA,CACA,IAAArJ,EAAAojC,SACA,QAEA,QAAApjC,EAAAqjC,cAAA,IAAArjC,EAAAsjC,cACA,SAGA,MAAAlsB,GAAAmsB,cAAAvjC,EAAArB,KAAAgkC,WAKA,SAAAjxB,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACAgM,EAAAhM,EAAA6G,KAAAmF,OAEA,OAAAhM,GAAA66B,WACA76B,GAAAiiB,KAAA,sCAUAjiB,EAAA66B,OAAA76B,EAAA6G,KAAAiT,aAOA2M,MAAA,aAMAqU,KAAA,EAOAjC,QAAA,EAOAC,QAAA,EAOAiC,cAAA,EAOAC,sBAAA,EAOAjhB,WAAA,SAAAhrB,GAEA,gBAAAA,KACAA,EAAAiH,KAAAilC,aAAAlsC,GAGA,QAAAkY,KAAAlY,GACAiH,KAAAiR,GAAAlY,EAAAkY,EAGAjR,MAAAnI,GAAAmS,EAAA1S,OAAA4/B,SAQA+N,aAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAzhC,OACA2hC,EAAAp7B,EAAA66B,OAAAQ,iBAAA1hC,KAAAwhC,OACA1U,EAAA0U,EAAAp/B,QAAAiE,EAAA66B,OAAAQ,iBAAA,iBAEA,QACA5U,QAAAhtB,OACAo/B,QAAA/nC,SAAAsqC,EAAA,UACAtC,QAAAhoC,SAAAsqC,EAAA,UACAN,KAAAhqC,SAAAsqC,EAAA,YASAr2B,SAAA,WACA,OAAA/O,KAAA6iC,QAAA7iC,KAAA8iC,QAAA9iC,KAAA8kC,KAAA9kC,KAAAywB,OAAAr5B,KAAA,QASAo9B,MAAA,SAAAptB,GACA,GAAAk+B,GAAA,GAAAC,EAAA,GAAAC,EAAAx7B,EAAA1S,OAAAkuC,oBACAlc,EAAAtf,EAAA6G,KAAAyD,cACaE,EAAAxU,KAAA6iC,QAAApuB,EAAAzU,KAAA8iC,SACb94B,EAAA6G,KAAAgD,kBAAAzM,EAAA0D,QACA26B,EAAA,EAcA,OAZAr+B,GAAA8C,OAAA9C,EAAA+C,SAGAm7B,EAAA,IAAAtvB,GAAA/C,KAAAG,IAAAkW,EAAA9U,GAAAxU,KAAA8kC,MAAA19B,EAAA8C,MAAAs7B,GAAAC,EACAF,EAAA,IAAAvvB,GAAA/C,KAAAG,IAAAkW,EAAA7U,GAAAzU,KAAA8kC,MAAA19B,EAAA+C,OAAAq7B,GAAAC,GAEAr+B,EAAAuU,QACA2N,EAAA9U,OAEApN,EAAAwU,QACA0N,EAAA7U,OAGA,qBAAAzU,KAAAnI,GAAA,SAAA0tC,EAAA,qBAAAA,GAAA,UACAD,EAAA,oBAAAA,GAAA,0DAEAtvB,EAAAhW,KAAA8kC,KAAA9kC,KAAA8kC,KAAA,IAAAU,GAAA,wCACAxvB,EAAAsT,EAAA9U,EAAAgxB,GACA,SAAAxvB,EAAAsT,EAAA7U,EAAA+wB,GAAA,0DACAxlC,KAAAywB,MAAA,iLAcA2S,SAAA,WACA,GAAApjC,KAAAglC,qBACA,OACAvU,MAAAzwB,KAAAywB,MACAqU,KAAA9kC,KAAA8kC,KACAjC,QAAA7iC,KAAA6iC,QACAC,QAAA9iC,KAAA8iC,QACAiC,aAAA/kC,KAAA+kC,aAGA,IAAAhkC,MAAmB2C,EAAAsG,EAAA66B,OAAA3jC,SAQnB,QANA,mDAAA/H,QAAA,SAAA8X,GACAjR,KAAAiR,KAAAvN,EAAAuN,KACAlQ,EAAAkQ,GAAAjR,KAAAiR,KAEOjR,MAEPe,UAWAiJ,EAAA66B,OAAAQ,iBAAA,4FAEChvC,SAGD,WAEA,YAEA,IAAA2T,OAAA07B,aAEA,WADA17B,QAAAiiB,KAAA,0CAKA,IAAAnJ,GAAA9Y,OAAA6G,KAAAzJ,OAAA0b,OACAkG,EAAAhf,OAAA6G,KAAAmY,iBACAzV,EAAAvJ,OAAA6G,KAAA0C,gBACAyC,EAAAhM,OAAA6G,KAAAmF,QAEA2vB,EAAA,GAAA9pC,OAAA,wCAeAmO,QAAA07B,aAAA17B,OAAA6G,KAAAiT,aAQAC,WAAA,SAAAiE,EAAAjvB,GACAA,UAEAiH,KAAA4lC,YAAA5d,EAAAjvB,IASA8sC,gBAAA,GAWAC,gBAAA,KASAC,aAAA,GAWAC,aAAA,KAOAhB,sBAAA,EAOAiB,UAAA,EASAp0B,mBAAA,EAQA4I,OAAA,KAOAyrB,sBAAA,EAOAC,qBAAA,EAOAC,uBAAA,EAOAC,mBAAA,aAQAC,eAAA,EAQAC,YAAA,EAKAC,oBAAA,aAOAC,qBAAA,EAOAb,YAAA,SAAA5d,EAAAjvB,GACA,GAAA4B,GAAAqP,OAAA07B,aAAAxkC,UAAAiK,UAAAmY,KAAAtjB,KACAA,MAAA2R,YACA3R,KAAA0mC,mBAAA1e,GACAhoB,KAAA2mC,aAAA5tC,GACAiH,KAAA4mC,qBAEA5mC,KAAA6mC,aACA7mC,KAAA8mC,qBAGA/tC,EAAAitC,cACAhmC,KAAA+mC,gBAAAhuC,EAAAitC,aAAArrC,GAEA5B,EAAA+sC,iBACA9lC,KAAAgnC,mBAAAjuC,EAAA+sC,gBAAAnrC,GAEA5B,EAAA8sC,iBACA7lC,KAAAinC,mBAAAluC,EAAA8sC,gBAAAlrC,GAEA5B,EAAAgtC,cACA/lC,KAAAknC,gBAAAnuC,EAAAgtC,aAAAprC,GAEAqF,KAAAmnC,cAMAC,iBAAA,WACA,WAAAp9B,OAAAqG,kBAAArQ,KAAAymC,qBAOAY,iBAAA,WACA,MAAArnC,MAAAonC,mBAAAp9B,OAAAqG,iBAAA,GAMAy2B,mBAAA,WACA9mC,KAAAonC,qBAGApnC,KAAAsnC,cAAAnf,aAAA,QAAAnoB,KAAAkK,MAAAF,OAAAqG,kBACArQ,KAAAsnC,cAAAnf,aAAA,SAAAnoB,KAAAmK,OAAAH,OAAAqG,kBAEArQ,KAAAunC,iBAAAlR,MAAArsB,OAAAqG,iBAAArG,OAAAqG,oBASA82B,WAAA,WAEA,MADAnnC,MAAAwnC,QAAAxe,EAAAhpB,KAAAsnC,eACAtnC,MAkDA+mC,gBAAA,SAAAn8B,EAAAyH,EAAAtZ,GACA,MAAAiH,MAAAynC,oBAAA,eAAA78B,EAAAyH,EAAAtZ,IAkDAiuC,mBAAA,SAAAp8B,EAAAyH,EAAAtZ,GACA,MAAAiH,MAAAynC,oBAAA,kBAAA78B,EAAAyH,EAAAtZ,IAwBAmuC,gBAAA,SAAAnB,EAAA1zB,GACA,MAAArS,MAAA0nC,oBAAA,eAAA3B,EAAA1zB,IAwBA40B,mBAAA,SAAApB,EAAAxzB,GACA,MAAArS,MAAA0nC,oBAAA,kBAAA7B,EAAAxzB,IAOAu0B,mBAAA,WACA,GAAAnuB,GAAAzY,KAAA2Z,YAEAlB,GAAA2tB,sBAAA3tB,EAAA2tB,uBAAA3tB,EAAAkvB,6BACAlvB,EAAAmvB,0BAAAnvB,EAAAovB,yBAAApvB,EAAAqvB,uBACArvB,EAAA2tB,sBAAApmC,KAAAomC,uBAWAqB,oBAAA,SAAArtB,EAAAxP,EAAAyH,EAAAtZ,GAaA,MAZA,gBAAA6R,GACAZ,OAAA6G,KAAAqG,UAAAtM,EAAA,SAAAwM,GACAA,IAAApX,KAAAoa,GAAA,GAAApQ,QAAAS,MAAA2M,EAAAre,IACAsZ,KAAA+E,IACSpX,KAAAjH,KAAAoe,cAGTpe,GAAA6R,EAAAm9B,WAAAhvC,GACAiH,KAAAoa,GAAAxP,EACAyH,KAAAzH,IAGA5K,MAUA0nC,oBAAA,SAAAttB,EAAAqW,EAAApe,GACA,GAAAoe,KAAApvB,OAAA,CACA,GAAAmiB,GAAAxjB,IACAgK,QAAA6G,KAAAqG,UAAAuZ,EAAApvB,OAAA,SAAA+V,GACAoM,EAAApJ,GAAA,GAAApQ,QAAA+5B,SACA1iC,OAAA+V,EACA4sB,OAAAvT,EAAAuT,OACAnB,QAAApS,EAAAoS,QACAC,QAAArS,EAAAqS,UAEAzwB,aAIArS,MAAAoa,GAAAqW,EACApe,MAGA,OAAArS,OAMAgoC,qBAAA,SAAAvuB,GACA,GAAAyL,GAAAlb,OAAA6G,KAAA2I,oBAAAC,EAIA,IAHAyL,EAAApX,QACAoX,EAAApX,WAEAoX,EACA,KAAAygB,EAEA,uBAAAzgB,GAAAvL,WACA,KAAAgsB,EAEA,OAAAzgB,IAOAyhB,aAAA,SAAA5tC,GACA,OAAAkY,KAAAlY,GACAiH,KAAAiR,GAAAlY,EAAAkY,EAGAjR,MAAAkK,MAAAlK,KAAAkK,OAAApP,SAAAkF,KAAAsnC,cAAAp9B,MAAA,OACAlK,KAAAmK,OAAAnK,KAAAmK,QAAArP,SAAAkF,KAAAsnC,cAAAn9B,OAAA,OAEAnK,KAAAsnC,cAAAx5B,QAIA9N,KAAAsnC,cAAAp9B,MAAAlK,KAAAkK,MACAlK,KAAAsnC,cAAAn9B,OAAAnK,KAAAmK,OAEAnK,KAAAsnC,cAAAx5B,MAAA5D,MAAAlK,KAAAkK,MAAA,KACAlK,KAAAsnC,cAAAx5B,MAAA3D,OAAAnK,KAAAmK,OAAA,KAEAnK,KAAAqmC,kBAAArmC,KAAAqmC,kBAAAhiC,UAQAqiC,mBAAA,SAAAjtB,GACAzZ,KAAAsnC,cAAAt9B,OAAA6G,KAAAgX,QAAApO,IAAAzZ,KAAAgoC,qBAAAvuB,GAEAzP,OAAA6G,KAAAuX,SAAApoB,KAAAsnC,cAAA,gBAEAtnC,KAAA6mC,aACA7mC,KAAAioC,kBAAAjoC,KAAAsnC,eAGAtnC,KAAAunC,iBAAAvnC,KAAAsnC,cAAA3tB,WAAA,OAOAwqB,SAAA,WACA,MAAAnkC,MAAAkK,OAOAm6B,UAAA,WACA,MAAArkC,MAAAmK,QAYA+9B,SAAA,SAAA1wC,EAAAuB,GACA,MAAAiH,MAAAmoC,eAAiCj+B,MAAA1S,GAAeuB,IAYhDqvC,UAAA,SAAA5wC,EAAAuB,GACA,MAAAiH,MAAAmoC,eAAiCh+B,OAAA3S,GAAgBuB,IAcjDovC,cAAA,SAAAE,EAAAtvC,GACA,GAAAuvC,EAEAvvC,QAEA,QAAAkY,KAAAo3B,GACAC,EAAAD,EAAAp3B,GAEAlY,EAAAwvC,UACAvoC,KAAAwoC,uBAAAv3B,EAAAo3B,EAAAp3B,IACAq3B,GAAA,MAGAvvC,EAAA0vC,eACAzoC,KAAA0oC,iBAAAz3B,EAAAq3B,EAWA,OARAtoC,MAAA8mC,qBACA9mC,KAAA4mC,qBACA5mC,KAAAmnC,aAEApuC,EAAAwvC,SACAvoC,KAAAmL,YAGAnL,MAWAwoC,uBAAA,SAAAv3B,EAAAzZ,GAaA,MAZAwI,MAAAsnC,cAAAr2B,GAAAzZ,EAEAwI,KAAA2oC,gBACA3oC,KAAA2oC,cAAA13B,GAAAzZ,GAGAwI,KAAA4oC,gBACA5oC,KAAA4oC,cAAA33B,GAAAzZ,GAGAwI,KAAAiR,GAAAzZ,EAEAwI,MAWA0oC,iBAAA,SAAAz3B,EAAAzZ,GAWA,MAVAwI,MAAAsnC,cAAAx5B,MAAAmD,GAAAzZ,EAEAwI,KAAA2oC,gBACA3oC,KAAA2oC,cAAA76B,MAAAmD,GAAAzZ,GAGAwI,KAAA6oC,YACA7oC,KAAA6oC,UAAA/6B,MAAAmD,GAAAzZ,GAGAwI,MAOA8oC,QAAA,WACA,MAAA71B,MAAAD,KAAAhT,KAAAqmC,kBAAA,GAAArmC,KAAAqmC,kBAAA,KASA0C,qBAAA,SAAAC,GACA,GAAA5hC,GAAA6hC,EAAAjpC,KAAAkpC,YACAlpC,MAAAqmC,kBAAA2C,CACA,QAAA/sC,GAAA,EAAAoV,EAAArR,KAAA2R,SAAAzV,OAAiDD,EAAAoV,EAASpV,IAC1DmL,EAAApH,KAAA2R,SAAA1V,GACAmL,EAAAm8B,OAAAn8B,EAAA+hC,WAMA,OAJAF,IACAA,EAAAE,YAEAnpC,KAAAmL,YACAnL,MAUAopC,YAAA,SAAAl1B,EAAA1c,GAEA,GAAA6xC,GAAAn1B,EAAA80B,EAAAhpC,KAAAqmC,kBAAAhiC,MAAA,EACA6P,GAAAlK,OAAA6G,KAAAmE,eAAAd,EAAAlK,OAAA6G,KAAAgF,gBAAA7V,KAAAqmC,oBACA2C,EAAA,GAAAxxC,EACAwxC,EAAA,GAAAxxC,CACA,IAAA8xC,GAAAt/B,OAAA6G,KAAAmE,eAAAd,EAAA80B,EAGA,OAFAA,GAAA,IAAAK,EAAA70B,EAAA80B,EAAA90B,EACAw0B,EAAA,IAAAK,EAAA50B,EAAA60B,EAAA70B,EACAzU,KAAA+oC,qBAAAC,IASAO,QAAA,SAAA/xC,GAEA,MADAwI,MAAAopC,YAAA,GAAAp/B,QAAAuK,MAAA,KAAA/c,GACAwI,MASAwpC,YAAA,SAAAt1B,GACA,GAAA80B,GAAAhpC,KAAAqmC,kBAAAhiC,MAAA,EAGA,OAFA2kC,GAAA,IAAA90B,EAAAM,EACAw0B,EAAA,IAAA90B,EAAAO,EACAzU,KAAA+oC,qBAAAC,IASAS,YAAA,SAAAv1B,GACA,MAAAlU,MAAAwpC,YAAA,GAAAx/B,QAAAuK,OACAL,EAAAM,EAAAxU,KAAAqmC,kBAAA,IACAnyB,EAAAO,EAAAzU,KAAAqmC,kBAAA,MAQAxhB,WAAA,WACA,MAAA7kB,MAAAsnC,eAOA11B,eAAA,SAAA7Q,GACAf,KAAAimC,UAAAllC,EAAA2oC,aACA3oC,EAAA4oC,KAAA,SAAA3pC,MACAe,EAAAooC,YACAnpC,KAAAmR,KAAA,gBAAiCxG,OAAA5J,IACjCA,EAAAoQ,KAAA,UAOAgB,iBAAA,SAAApR,GACAf,KAAAmR,KAAA,kBAAmCxG,OAAA5J,IACnCA,EAAAoQ,KAAA,iBACApQ,GAAAgJ,QASA6/B,aAAA,SAAAnxB,GAEA,MADAA,GAAAoxB,UAAA,IAAA7pC,KAAAkK,MAAAlK,KAAAmK,QACAnK,MAOA2Z,WAAA,WACA,MAAA3Z,MAAAunC,kBAQAuC,MAAA,WASA,MARA9pC,MAAA2R,SAAAzV,OAAA,EACA8D,KAAA8lC,gBAAA,KACA9lC,KAAAgmC,aAAA,KACAhmC,KAAA6lC,gBAAA,GACA7lC,KAAA+lC,aAAA,GACA/lC,KAAA4pC,aAAA5pC,KAAAunC,kBACAvnC,KAAAmR,KAAA,kBACAnR,KAAAmL,YACAnL,MAQAmL,UAAA,WACA,GAAA4+B,GAAA/pC,KAAAunC,gBAEA,OADAvnC,MAAAgqC,aAAAD,EAAA/pC,KAAA2R,UACA3R,MAUAgqC,aAAA,SAAAvxB,EAAAzG,GACAhS,KAAA4pC,aAAAnxB,GACAzY,KAAAmR,KAAA,iBACAnR,KAAAya,QACAzQ,OAAA6G,KAAAyJ,YAAAta,KAAAyY,GAEAzY,KAAAiqC,kBAAAxxB,GAEAA,EAAAU,OAEAV,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAqmC,mBACArmC,KAAAkqC,eAAAzxB,EAAAzG,GACAyG,EAAAc,WACAvZ,KAAAkmC,sBAAAlmC,KAAA6mC,aACA7mC,KAAAmqC,aAAA1xB,GAEAzY,KAAAya,QACAhC,EAAAc,UAEAvZ,KAAAoqC,eAAA3xB,GACAzY,KAAAkmC,sBAAAlmC,KAAA6mC,aACA7mC,KAAAmqC,aAAA1xB,GAEAzY,KAAAmR,KAAA,iBAQA+4B,eAAA,SAAAzxB,EAAAzG,GACA,OAAA/V,GAAA,EAAAC,EAAA8V,EAAA9V,OAA8CD,EAAAC,IAAYD,EAC1D+V,EAAA/V,IAAA+V,EAAA/V,GAAAouC,OAAA5xB,IASA6xB,2BAAA,SAAA7xB,EAAA2B,GACA,GAAAhT,GAAApH,KAAAoa,EAAA,QACAhT,KACAqR,EAAA8xB,UAAAnjC,EAAAo8B,OACAp8B,EAAAo8B,OAAA/qB,GACArR,EAEAqR,EAAA+xB,SACApjC,EAAAy7B,SAAA,EACAz7B,EAAA07B,SAAA,EACA9iC,KAAAkK,MACAlK,KAAAmK,SAEA/C,EAAApH,KAAAoa,EAAA,SACAhT,IACApH,KAAAoa,EAAA,SACA3B,EAAAU,OACAV,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAqmC,oBAEAj/B,EAAAijC,OAAA5xB,GACAzY,KAAAoa,EAAA,QAAA3B,EAAAc,YAQA0wB,kBAAA,SAAAxxB,GACAzY,KAAAsqC,2BAAA7xB,EAAA,eAOA2xB,eAAA,SAAA3xB,GACAzY,KAAAsqC,2BAAA7xB,EAAA,YAQAgyB,UAAA,WACA,OACA70B,IAAA5V,KAAAqkC,YAAA,EACA1uB,KAAA3V,KAAAmkC,WAAA,IAUAuG,cAAA,SAAAtjC,GACA,MAAApH,MAAA2qC,cAAAvjC,EAAA,GAAA4C,QAAAuK,MAAAvU,KAAAyqC,YAAA90B,KAAAvO,EAAAwjC,iBAAAn2B,KAUAo2B,cAAA,SAAAzjC,GACA,MAAApH,MAAA2qC,cAAAvjC,EAAA,GAAA4C,QAAAuK,MAAAnN,EAAAwjC,iBAAAp2B,EAAAxU,KAAAyqC,YAAA70B,OAUA3K,aAAA,SAAA7D,GACA,GAAA0jC,GAAA9qC,KAAAyqC,WAEA,OAAAzqC,MAAA2qC,cAAAvjC,EAAA,GAAA4C,QAAAuK,MAAAu2B,EAAAn1B,KAAAm1B,EAAAl1B,OAUAm1B,qBAAA,SAAA3jC,GACA,GAAA4jC,GAAAhrC,KAAAirC,aAEA,OAAAjrC,MAAA2qC,cAAAvjC,EAAA4jC,IAUAE,sBAAA,SAAA9jC,GACA,GAAA4jC,GAAAhrC,KAAAirC,aAEA,OADAjrC,MAAA2qC,cAAAvjC,EAAA,GAAA4C,QAAAuK,MAAAy2B,EAAAx2B,EAAApN,EAAAwjC,iBAAAn2B,IACAzU,MAUAmrC,sBAAA,SAAA/jC,GACA,GAAA4jC,GAAAhrC,KAAAirC,aAEA,OAAAjrC,MAAA2qC,cAAAvjC,EAAA,GAAA4C,QAAAuK,MAAAnN,EAAAwjC,iBAAAp2B,EAAAw2B,EAAAv2B,KAQAw2B,YAAA,WACA,GAAAH,GAAA9qC,KAAAyqC,YACAW,EAAAphC,OAAA6G,KAAAgF,gBAAA7V,KAAAqmC,kBACA,OAAAr8B,QAAA6G,KAAAmE,gBAAyCR,EAAAs2B,EAAAn1B,KAAAlB,EAAAq2B,EAAAl1B,KAAgCw1B,IAUzET,cAAA,SAAAvjC,EAAA0jC,GAGA,MAFA1jC,GAAAikC,oBAAAP,EAAA,mBACA9qC,KAAAmL,YACAnL,MAQAsrC,eAAA,SAAAC,GACA,MAAAvrC,MAAAwrC,iBAAAD;EAQAnI,SAAA,SAAAmI,GACA,MAAAvrC,MAAAyrC,gBAAA,WAAAF,IAQAC,iBAAA,SAAAD,GACA,MAAAvrC,MAAAyrC,gBAAA,mBAAAF,IAMAE,gBAAA,SAAA9nB,EAAA4nB,GAEA,GAAA3/B,IACAoG,QAAAhS,KAAA0rC,WAAA/nB,EAAA4nB,GAOA,OAJAzoB,GAAAlX,EAAA5L,KAAA2rC,qBAAAJ,IAEAvhC,OAAA6G,KAAAwH,uBAAArY,KAAA4L,EAAA2/B,GAEA3/B,GAMA8/B,WAAA,SAAA/nB,EAAA4nB,GACA,MAAAvrC,MAAA+L,aAAAuF,OAAA,SAAAlK,GACA,OAAAA,EAAAwkC,oBACOl1C,IAAA,SAAAktC,GACP,MAAA5jC,MAAA6rC,UAAAjI,EAAAjgB,EAAA4nB,IACOvrC,OAMP6rC,UAAA,SAAAjI,EAAAjgB,EAAA4nB,GACA,GAAAO,EAEA9rC,MAAAglC,uBACA8G,EAAAlI,EAAAoB,qBACApB,EAAAoB,sBAAA,EAGA,IAAA59B,GAAAw8B,EAAAjgB,GAAA4nB,EAIA,OAHAvrC,MAAAglC,uBACApB,EAAAoB,qBAAA8G,GAEA1kC,GAMAukC,qBAAA,SAAAJ,GACA,GAAA3/B,IACAmgC,WAAA/rC,KAAA6lC,iBAAA7lC,KAAA6lC,gBAAAzC,SACApjC,KAAA6lC,gBAAAzC,SAAAmI,GACAvrC,KAAA6lC,gBAeA,OAZA7lC,MAAA+lC,eACAn6B,EAAAogC,QAAAhsC,KAAA+lC,aAAA3C,SACApjC,KAAA+lC,aAAA3C,SAAAmI,GACAvrC,KAAA+lC,cAEA/lC,KAAA8lC,kBACAl6B,EAAAk6B,gBAAA9lC,KAAA8lC,gBAAA1C,SAAAmI,IAEAvrC,KAAAgmC,eACAp6B,EAAAo6B,aAAAhmC,KAAAgmC,aAAA5C,SAAAmI,IAGA3/B,GAUAqgC,2BAAA,EAuCAzX,MAAA,SAAAz7B,EAAAye,GACAze,SAEA,IAAAw7B,KAeA,OAbAv0B,MAAAksC,gBAAA3X,EAAAx7B,GACAiH,KAAAmsC,cAAA5X,EAAAx7B,GAEAiH,KAAAosC,sBAAA7X,EAAA,mBACAv0B,KAAAqsC,sBAAA9X,EAAA,kBAAA/c,GAEAxX,KAAAssC,eAAA/X,EAAA/c,GAEAxX,KAAAosC,sBAAA7X,EAAA,gBACAv0B,KAAAqsC,sBAAA9X,EAAA,eAAA/c,GAEA+c,EAAA38B,KAAA,UAEA28B,EAAAn9B,KAAA,KAMA80C,gBAAA,SAAA3X,EAAAx7B,GACAA,EAAAwzC,kBAGAhY,EAAA38B,KACA,iCAAAmB,EAAAyzC,UAAA,iCACA,kDACA,0DAOAL,cAAA,SAAA5X,EAAAx7B,GACA,GAEAiwC,GAFA9+B,EAAAnR,EAAAmR,OAAAlK,KAAAkK,MACAC,EAAApR,EAAAoR,QAAAnK,KAAAmK,OACAsiC,EAAA,gBAAAzsC,KAAAkK,MAAA,IAAAlK,KAAAmK,OAAA,KACAq7B,EAAAx7B,OAAA1S,OAAAkuC,mBAEAzsC,GAAA0zC,QACAA,EAAA,YACA1zC,EAAA0zC,QAAAj4B,EAAA,IACAzb,EAAA0zC,QAAAh4B,EAAA,IACA1b,EAAA0zC,QAAAviC,MAAA,IACAnR,EAAA0zC,QAAAtiC,OAAA,KAGAnK,KAAAisC,4BACAjD,EAAAhpC,KAAAqmC,kBACAoG,EAAA,YACAz2B,GAAAgzB,EAAA,GAAAA,EAAA,GAAAxD,GAAA,IACAxvB,GAAAgzB,EAAA,GAAAA,EAAA,GAAAxD,GAAA,IACAxvB,EAAAhW,KAAAkK,MAAA8+B,EAAA,GAAAxD,GAAA,IACAxvB,EAAAhW,KAAAmK,OAAA6+B,EAAA,GAAAxD,GAAA,MAIAjR,EAAA38B,KACA,QACA,sCACA,8CACA,iBACA,UAAAsS,EAAA,KACA,WAAAC,EAAA,KACAnK,KAAA6lC,kBAAA7lC,KAAA6lC,gBAAArC,OACA,4BAAAxjC,KAAA6lC,gBAAA,KACA,KACA4G,EACA,0BACA,gCAAAziC,OAAAlS,QAAA,YACA,SACAkS,OAAAgwB,yBAAAh6B,KAAA+L,cACA/B,OAAAswB,2BAAAt6B,MACA,cAOAssC,eAAA,SAAA/X,EAAA/c,GAEA,OADAosB,GACA3nC,EAAA,EAAA+V,EAAAhS,KAAA+L,aAAAsF,EAAAW,EAAA9V,OAAwED,EAAAoV,EAASpV,IACjF2nC,EAAA5xB,EAAA/V,GACA2nC,EAAAgI,mBAGA5rC,KAAA0sC,cAAAnY,EAAAqP,EAAApsB,IAQAk1B,cAAA,SAAAnY,EAAAqP,EAAApsB,GACA+c,EAAA38B,KAAAgsC,EAAApP,MAAAhd,KAMA60B,sBAAA,SAAA9X,EAAAna,EAAA5C,GACAxX,KAAAoa,IAAApa,KAAAoa,GAAAoa,OACAD,EAAA38B,KAAAoI,KAAAoa,GAAAoa,MAAAhd,KAOA40B,sBAAA,SAAA7X,EAAAna,GACApa,KAAAoa,IAAApa,KAAAoa,GAAA/Y,OACAkzB,EAAA38B,KACA,YAAAoI,KAAAoa,GAAAyoB,QAAA,QAAA7iC,KAAAoa,GAAA0oB,QAAA,KACA,UACA,aAAA9iC,KAAAoa,GAAA4pB,QAAA,cAAAhkC,KAAAoa,GAAA4pB,OACAhkC,KAAAoa,GAAA/Y,OAAA6I,MACAlK,KAAAkK,MACA,aACA,aAAAlK,KAAAoa,GAAA4pB,QAAA,cAAAhkC,KAAAoa,GAAA4pB,OACAhkC,KAAAoa,GAAA/Y,OAAA8I,OACAnK,KAAAmK,OACA,gBAAAiQ,EAAA,YACA,cAGApa,KAAAoa,IAAA,iBAAAA,GACAma,EAAA38B,KACA,qBACA,UAAAoI,KAAAkK,MACA,aAAAlK,KAAAmK,OACA,WAAAnK,KAAAoa,GAAA,IACA,eAaAuyB,WAAA,SAAAvlC,GACA,IAAAA,EACA,MAAApH,KAEA,IACA/D,GAAA8E,EAAA6rC,EADA3D,EAAAjpC,KAAAkpC,YAEA,IAAA9hC,IAAA6hC,EAEA,IADA2D,EAAA3D,EAAAt3B,SACA1V,EAAA2wC,EAAA1wC,OAA6BD,KAC7B8E,EAAA6rC,EAAA3wC,GACAsX,EAAAvT,KAAA2R,SAAA5Q,GACAf,KAAA2R,SAAAxM,QAAApE,OAIAwS,GAAAvT,KAAA2R,SAAAvK,GACApH,KAAA2R,SAAAxM,QAAAiC,EAEA,OAAApH,MAAAmL,WAAAnL,KAAAmL,aAUA0hC,aAAA,SAAAzlC,GACA,IAAAA,EACA,MAAApH,KAEA,IACA/D,GAAA8E,EAAA6rC,EADA3D,EAAAjpC,KAAAkpC,YAEA,IAAA9hC,IAAA6hC,EAEA,IADA2D,EAAA3D,EAAAt3B,SACA1V,EAAA,EAAmBA,EAAA2wC,EAAA1wC,OAAiBD,IACpC8E,EAAA6rC,EAAA3wC,GACAsX,EAAAvT,KAAA2R,SAAA5Q,GACAf,KAAA2R,SAAA/Z,KAAAmJ,OAIAwS,GAAAvT,KAAA2R,SAAAvK,GACApH,KAAA2R,SAAA/Z,KAAAwP,EAEA,OAAApH,MAAAmL,WAAAnL,KAAAmL,aAUA2hC,cAAA,SAAA1lC,EAAA2lC,GACA,IAAA3lC,EACA,MAAApH,KAEA,IACA/D,GAAA8E,EAAA2G,EAAAslC,EAAAJ,EADA3D,EAAAjpC,KAAAkpC,YAGA,IAAA9hC,IAAA6hC,EAEA,IADA2D,EAAA3D,EAAAt3B,SACA1V,EAAA,EAAmBA,EAAA2wC,EAAA1wC,OAAiBD,IACpC8E,EAAA6rC,EAAA3wC,GACAyL,EAAA1H,KAAA2R,SAAAzN,QAAAnD,GACA,IAAA2G,IACAslC,EAAAtlC,EAAA,EACA6L,EAAAvT,KAAA2R,SAAA5Q,GACAf,KAAA2R,SAAA5K,OAAAimC,EAAA,EAAAjsC,QAKA2G,GAAA1H,KAAA2R,SAAAzN,QAAAkD,GACA,IAAAM,IAEAslC,EAAAhtC,KAAAitC,mBAAA7lC,EAAAM,EAAAqlC,GACAx5B,EAAAvT,KAAA2R,SAAAvK,GACApH,KAAA2R,SAAA5K,OAAAimC,EAAA,EAAA5lC,GAIA,OADApH,MAAAmL,WAAAnL,KAAAmL,YACAnL,MAMAitC,mBAAA,SAAA7lC,EAAAM,EAAAqlC,GACA,GAAAC,EAEA,IAAAD,EAAA,CACAC,EAAAtlC,CAGA,QAAAzL,GAAAyL,EAAA,EAA6BzL,GAAA,IAAQA,EAAA,CAErC,GAAAixC,GAAA9lC,EAAA+lC,qBAAAntC,KAAA2R,SAAA1V,KACAmL,EAAAgmC,wBAAAptC,KAAA2R,SAAA1V,KACA+D,KAAA2R,SAAA1V,GAAAmxC,wBAAAhmC,EAEA,IAAA8lC,EAAA,CACAF,EAAA/wC,CACA,aAKA+wC,GAAAtlC,EAAA,CAGA,OAAAslC,IAUAK,aAAA,SAAAjmC,EAAA2lC,GACA,IAAA3lC,EACA,MAAApH,KAEA,IACA/D,GAAA8E,EAAA2G,EAAAslC,EAAAJ,EADA3D,EAAAjpC,KAAAkpC,YAGA,IAAA9hC,IAAA6hC,EAEA,IADA2D,EAAA3D,EAAAt3B,SACA1V,EAAA2wC,EAAA1wC,OAA6BD,KAC7B8E,EAAA6rC,EAAA3wC,GACAyL,EAAA1H,KAAA2R,SAAAzN,QAAAnD,GACA2G,IAAA1H,KAAA2R,SAAAzV,OAAA,IACA8wC,EAAAtlC,EAAA,EACA6L,EAAAvT,KAAA2R,SAAA5Q,GACAf,KAAA2R,SAAA5K,OAAAimC,EAAA,EAAAjsC,QAKA2G,GAAA1H,KAAA2R,SAAAzN,QAAAkD,GACAM,IAAA1H,KAAA2R,SAAAzV,OAAA,IAEA8wC,EAAAhtC,KAAAstC,mBAAAlmC,EAAAM,EAAAqlC,GACAx5B,EAAAvT,KAAA2R,SAAAvK,GACApH,KAAA2R,SAAA5K,OAAAimC,EAAA,EAAA5lC,GAIA,OADApH,MAAAmL,WAAAnL,KAAAmL,YACAnL,MAMAstC,mBAAA,SAAAlmC,EAAAM,EAAAqlC,GACA,GAAAC,EAEA,IAAAD,EAAA,CACAC,EAAAtlC,CAGA,QAAAzL,GAAAyL,EAAA,EAA6BzL,EAAA+D,KAAA2R,SAAAzV,SAA0BD,EAAA,CAEvD,GAAAixC,GAAA9lC,EAAA+lC,qBAAAntC,KAAA2R,SAAA1V,KACAmL,EAAAgmC,wBAAAptC,KAAA2R,SAAA1V,KACA+D,KAAA2R,SAAA1V,GAAAmxC,wBAAAhmC,EAEA,IAAA8lC,EAAA,CACAF,EAAA/wC,CACA,aAKA+wC,GAAAtlC,EAAA,CAGA,OAAAslC,IAUA3zB,OAAA,SAAAjS,EAAAsG,GAGA,MAFA6F,GAAAvT,KAAA2R,SAAAvK,GACApH,KAAA2R,SAAA5K,OAAA2G,EAAA,EAAAtG,GACApH,KAAAmL,WAAAnL,KAAAmL,aAQAoiC,QAAA,WAEA,MADAvtC,MAAA8pC,QACA9pC,MAOA+O,SAAA,WACA,0BAAA/O,KAAA2S,aAAA,iBACiB3S,KAAA+L,aAAA7P,OAAA,SAIjB4mB,EAAA9Y,OAAA07B,aAAAxkC,UAAA8I,OAAAuH,YACAuR,EAAA9Y,OAAA07B,aAAAxkC,UAAA8I,OAAA0H,YACAoR,EAAA9Y,OAAA07B,aAAAxkC,UAAA8I,OAAAwjC,iBAEA1qB,EAAA9Y,OAAA07B,cAOA+H,WAAA,yCAWAC,SAAA,SAAA/pB,GACA,GAAAqE,GAAAhe,OAAA6G,KAAA2I,qBAEA,KAAAwO,MAAArO,WACA,WAGA,IAAAlB,GAAAuP,EAAArO,WAAA,KACA,KAAAlB,EACA,WAGA,QAAAkL,GAEA,mBACA,yBAAAlL,GAAA2D,YAEA,mBACA,yBAAA3D,GAAAk1B,WAEA,iBACA,yBAAA3lB,GAAAhc,SAEA,4BACA,IAEA,MADAgc,GAAAhc,UAAA,iBACA,EAEA,MAAA3P,IACA,QAEA,SACA,gBAoBA2N,OAAA07B,aAAAxkC,UAAA0sC,OAAA5jC,OAAA07B,aAAAxkC,UAAAkiC,YAUAp5B,OAAA6jC,UAAA7jC,OAAA6G,KAAAiT,aAOA2M,MAAA,eAOAvmB,MAAA,EASAg7B,OAAA,KAOA4I,cAAA,QAOAC,eAAA,QAOAC,gBAAA,KAQAC,UAAA,SAAAl1C,GAEA,MADAiH,MAAAklC,OAAA,GAAAl7B,QAAA66B,OAAA9rC,GACAiH,MAOAkuC,gBAAA,WACA,GAAAz1B,GAAAzY,KAAA+J,OAAAokC,UAEA11B,GAAA21B,YAAApuC,KAAAywB,MACAhY,EAAA41B,UAAAruC,KAAAkK,MACAuO,EAAA61B,QAAAtuC,KAAA8tC,cACAr1B,EAAA81B,SAAAvuC,KAAA+tC,eACA/tC,KAAAguC,iBAAAhkC,OAAA07B,aAAAgI,SAAA,gBACAj1B,EAAAk1B,YAAA3tC,KAAAguC,kBAQAQ,WAAA,WACA,GAAAxuC,KAAAklC,OAAA,CAIA,GAAAzsB,GAAAzY,KAAA+J,OAAAokC,UAEA11B,GAAAg2B,YAAAzuC,KAAAklC,OAAAzU,MACAhY,EAAAi2B,WAAA1uC,KAAAklC,OAAAJ,KACArsB,EAAAk2B,cAAA3uC,KAAAklC,OAAArC,QACApqB,EAAAm2B,cAAA5uC,KAAAklC,OAAApC,UAOA+L,aAAA,WACA,GAAAp2B,GAAAzY,KAAA+J,OAAAokC,UAEA11B,GAAAg2B,YAAA,GACAh2B,EAAAi2B,WAAAj2B,EAAAk2B,cAAAl2B,EAAAm2B,cAAA,KAKA,WAOA5kC,OAAA8kC,YAAA9kC,OAAA6G,KAAAiT,YAAA9Z,OAAA6jC,WAOA9pB,WAAA,SAAAha,GACA/J,KAAA+J,SACA/J,KAAA+uC,YAOAC,YAAA,SAAAC,GACAjvC,KAAAkvC,mBAAAD,GAGAjvC,KAAAmvC,oBAAAF,GACAjvC,KAAAovC,WAOAC,YAAA,SAAAJ,GACAjvC,KAAAmvC,oBAAAF,GAGAjvC,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YACAnuC,KAAAovC,WAMAE,UAAA,WACAtvC,KAAAuvC,uBAOAL,mBAAA,SAAAD,GAEA,GAAAzpC,GAAA,GAAAwE,QAAAuK,MAAA06B,EAAAz6B,EAAAy6B,EAAAx6B,EAEAzU,MAAAwvC,SACAxvC,KAAAyvC,UAAAjqC,GAEAxF,KAAA+J,OAAAokC,WAAA90B,OAAA7T,EAAAgP,EAAAhP,EAAAiP,IAOAg7B,UAAA,SAAAv7B,GACAlU,KAAA+uC,QAAAn3C,KAAAsc,IAOAs7B,OAAA,WACAxvC,KAAA+uC,QAAA7yC,OAAA,EAEA8D,KAAAkuC,kBACAluC,KAAAwuC,cAOAW,oBAAA,SAAAF,GACA,GAAAS,GAAA,GAAA1lC,QAAAuK,MAAA06B,EAAAz6B,EAAAy6B,EAAAx6B,EACAzU,MAAAyvC,UAAAC,IAOAN,QAAA,WACA,GAAA32B,GAAAzY,KAAA+J,OAAAokC,WACA95B,EAAArU,KAAA+J,OAAAs8B,kBACAsJ,EAAA3vC,KAAA+uC,QAAA,GACAa,EAAA5vC,KAAA+uC,QAAA,EAEAt2B,GAAAU,OACAV,EAAAoc,UAAAxgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAoE,EAAA+B,YAMA,IAAAxa,KAAA+uC,QAAA7yC,QAAAyzC,EAAAn7B,IAAAo7B,EAAAp7B,GAAAm7B,EAAAl7B,IAAAm7B,EAAAn7B,IACAk7B,EAAAn7B,GAAA,GACAo7B,EAAAp7B,GAAA,IAEAiE,EAAAY,OAAAs2B,EAAAn7B,EAAAm7B,EAAAl7B,EAEA,QAAAxY,GAAA,EAAAoV,EAAArR,KAAA+uC,QAAA7yC,OAAgDD,EAAAoV,EAASpV,IAAA,CAGzD,GAAA4zC,GAAAF,EAAAtT,aAAAuT,EACAn3B,GAAAq3B,iBAAAH,EAAAn7B,EAAAm7B,EAAAl7B,EAAAo7B,EAAAr7B,EAAAq7B,EAAAp7B,GAEAk7B,EAAA3vC,KAAA+uC,QAAA9yC,GACA2zC,EAAA5vC,KAAA+uC,QAAA9yC,EAAA,GAKAwc,EAAAs3B,OAAAJ,EAAAn7B,EAAAm7B,EAAAl7B,GACAgE,EAAAmd,SACAnd,EAAAc,WAQAy2B,uBAAA,SAAA56B,GACA,GAAA7U,MACAovC,EAAA,GAAA3lC,QAAAuK,MAAAa,EAAA,GAAAZ,EAAAY,EAAA,GAAAX,GACAm7B,EAAA,GAAA5lC,QAAAuK,MAAAa,EAAA,GAAAZ,EAAAY,EAAA,GAAAX,EAEAlU,GAAA3I,KAAA,KAAAwd,EAAA,GAAAZ,EAAA,IAAAY,EAAA,GAAAX,EAAA,IACA,QAAAxY,GAAA,EAAAoV,EAAA+D,EAAAlZ,OAA0CD,EAAAoV,EAASpV,IAAA,CACnD,GAAA4zC,GAAAF,EAAAtT,aAAAuT,EAIArvC,GAAA3I,KAAA,KAAA+3C,EAAAn7B,EAAA,IAAAm7B,EAAAl7B,EAAA,IAAAo7B,EAAAr7B,EAAA,IAAAq7B,EAAAp7B,EAAA,KACAk7B,EAAA,GAAA3lC,QAAAuK,MAAAa,EAAAnZ,GAAAuY,EAAAY,EAAAnZ,GAAAwY,GACAxY,EAAA,EAAAmZ,EAAAlZ,SACA0zC,EAAA,GAAA5lC,QAAAuK,MAAAa,EAAAnZ,EAAA,GAAAuY,EAAAY,EAAAnZ,EAAA,GAAAwY,IAIA,MADAlU,GAAA3I,KAAA,KAAA+3C,EAAAn7B,EAAA,IAAAm7B,EAAAl7B,EAAA,KACAlU,GAQA0vC,WAAA,SAAAC,GACA,GAAA3vC,GAAA,GAAAyJ,QAAAmmC,KAAAD,GACAn/B,KAAA,KACA6kB,OAAA51B,KAAAywB,MACA2f,YAAApwC,KAAAkK,MACA4jC,cAAA9tC,KAAA8tC,cACAC,eAAA/tC,KAAA+tC,eACAC,gBAAAhuC,KAAAguC,gBACAqC,QAAA,SACAC,QAAA,UAQA,OALAtwC,MAAAklC,SACAllC,KAAAklC,OAAAH,cAAA,EACAxkC,EAAA0tC,UAAAjuC,KAAAklC,SAGA3kC,GAQAgvC,oBAAA,WACA,GAAA92B,GAAAzY,KAAA+J,OAAAokC,UACA11B,GAAA83B,WAEA,IAAAL,GAAAlwC,KAAAgwC,uBAAAhwC,KAAA+uC,SAAA33C,KAAA,GACA,8BAAA84C,EAMA,WADAlwC,MAAA+J,OAAAoB,WAIA,IAAA5K,GAAAP,KAAAiwC,WAAAC,EAEAlwC,MAAA+J,OAAAmB,IAAA3K,GACAA,EAAA4oC,YAEAnpC,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YACAnuC,KAAA6uC,eACA7uC,KAAA+J,OAAAoB,YAGAnL,KAAA+J,OAAAoH,KAAA,gBAAwC5Q,eAUxCyJ,OAAAwmC,YAAAxmC,OAAA6G,KAAAiT,YAAA9Z,OAAA6jC,WAOA3jC,MAAA,GAOA6Z,WAAA,SAAAha,GACA/J,KAAA+J,SACA/J,KAAAoV,WAOAq7B,QAAA,SAAAxB,GACA,GAAA/6B,GAAAlU,KAAA0wC,SAAAzB,GACAx2B,EAAAzY,KAAA+J,OAAAokC,WACA95B,EAAArU,KAAA+J,OAAAs8B,iBACA5tB,GAAAU,OACAV,EAAAoc,UAAAxgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAoE,EAAA8xB,UAAAr2B,EAAAnD,KACA0H,EAAA+B,YACA/B,EAAAk4B,IAAAz8B,EAAAM,EAAAN,EAAAO,EAAAP,EAAA08B,OAAA,IAAA39B,KAAAK,IAAA,GACAmF,EAAA83B,YACA93B,EAAA1H,OAEA0H,EAAAc,WAMAy1B,YAAA,SAAAC,GACAjvC,KAAAoV,OAAAlZ,OAAA,EACA8D,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YACAnuC,KAAAwuC,aACAxuC,KAAAywC,QAAAxB,IAOAI,YAAA,SAAAJ,GACAjvC,KAAAywC,QAAAxB,IAMAK,UAAA,WACA,GAAAuB,GAAA7wC,KAAA+J,OAAA8H,iBACA7R,MAAA+J,OAAA8H,mBAAA,CAIA,QAFAi/B,MAEA70C,EAAA,EAAAoV,EAAArR,KAAAoV,OAAAlZ,OAA6CD,EAAAoV,EAASpV,IAAA,CACtD,GAAAiY,GAAAlU,KAAAoV,OAAAnZ,GACA80C,EAAA,GAAA/mC,QAAAgnC,QACAJ,OAAA18B,EAAA08B,OACAj7B,KAAAzB,EAAAM,EACAoB,IAAA1B,EAAAO,EACA47B,QAAA,SACAC,QAAA,SACAv/B,KAAAmD,EAAAnD,MAGA/Q,MAAAklC,QAAA6L,EAAA9C,UAAAjuC,KAAAklC,QAEA4L,EAAAl5C,KAAAm5C,GAEA,GAAAxN,GAAA,GAAAv5B,QAAAinC,MAAAH,GAA2CT,QAAA,SAAAC,QAAA,UAC3C/M,GAAAx5B,OAAA/J,KAAA+J,OAEA/J,KAAA+J,OAAAmB,IAAAq4B,GACAvjC,KAAA+J,OAAAoH,KAAA,gBAAsC5Q,KAAAgjC,IAEtCvjC,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YACAnuC,KAAA6uC,eACA7uC,KAAA+J,OAAA8H,kBAAAg/B,EACA7wC,KAAA+J,OAAAoB,aAOAulC,SAAA,SAAAzB,GACA,GAAAS,GAAA,GAAA1lC,QAAAuK,MAAA06B,EAAAz6B,EAAAy6B,EAAAx6B,GAEAy8B,EAAAlnC,OAAA6G,KAAA2C,aACAP,KAAAS,IAAA,EAAA1T,KAAAkK,MAAA,IAAAlK,KAAAkK,MAAA,MAEAinC,EAAA,GAAAnnC,QAAA0mB,MAAA1wB,KAAAywB,OACAE,SAAA3mB,OAAA6G,KAAA2C,aAAA,YACAqd,QAOA,OALA6e,GAAAkB,OAAAM,EACAxB,EAAA3+B,KAAAogC,EAEAnxC,KAAAoV,OAAAxd,KAAA83C,GAEAA,KASA1lC,OAAAonC,WAAApnC,OAAA6G,KAAAiT,YAAA9Z,OAAA6jC,WAOA3jC,MAAA,GAOAmnC,QAAA,GAOAC,SAAA,EAOAC,iBAAA,EAOAC,eAAA,EAOAC,qBAAA,EAOA1tB,WAAA,SAAAha,GACA/J,KAAA+J,SACA/J,KAAA0xC,gBAOA1C,YAAA,SAAAC,GACAjvC,KAAA0xC,YAAAx1C,OAAA,EACA8D,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YACAnuC,KAAAwuC,aAEAxuC,KAAA2xC,cAAA1C,GACAjvC,KAAAqqC,UAOAgF,YAAA,SAAAJ,GACAjvC,KAAA2xC,cAAA1C,GACAjvC,KAAAqqC,UAMAiF,UAAA,WACA,GAAAuB,GAAA7wC,KAAA+J,OAAA8H,iBACA7R,MAAA+J,OAAA8H,mBAAA,CAIA,QAFA+/B,MAEA31C,EAAA,EAAA41C,EAAA7xC,KAAA0xC,YAAAx1C,OAAmDD,EAAA41C,EAAU51C,IAG7D,OAFA61C,GAAA9xC,KAAA0xC,YAAAz1C,GAEA4I,EAAA,EAAAoc,EAAA6wB,EAAA51C,OAA+C2I,EAAAoc,EAAUpc,IAAA,CAEzD,GAAAktC,GAAA,GAAA/nC,QAAAgoC,MACA9nC,MAAA4nC,EAAAjtC,GAAAqF,MACAC,OAAA2nC,EAAAjtC,GAAAqF,MACAyL,KAAAm8B,EAAAjtC,GAAA2P,EAAA,EACAoB,IAAAk8B,EAAAjtC,GAAA4P,EAAA,EACA47B,QAAA,SACAC,QAAA,SACAv/B,KAAA/Q,KAAAywB,OAGAzwB,MAAAklC,QAAA6M,EAAA9D,UAAAjuC,KAAAklC,QACA0M,EAAAh6C,KAAAm6C,GAIA/xC,KAAAyxC,sBACAG,EAAA5xC,KAAAiyC,mBAAAL,GAGA,IAAArO,GAAA,GAAAv5B,QAAAinC,MAAAW,GAAyCvB,QAAA,SAAAC,QAAA,UACzC/M,GAAAx5B,OAAA/J,KAAA+J,OAEA/J,KAAA+J,OAAAmB,IAAAq4B,GACAvjC,KAAA+J,OAAAoH,KAAA,gBAAsC5Q,KAAAgjC,IAEtCvjC,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YACAnuC,KAAA6uC,eACA7uC,KAAA+J,OAAA8H,kBAAAg/B,EACA7wC,KAAA+J,OAAAoB,aAOA8mC,mBAAA,SAAAL,GAKA,OAFyBx4C,GAAzB84C,KAEAj2C,EAAA,EAAAoV,EAAAugC,EAAA11C,OAAuCD,EAAAoV,EAASpV,IAChD7C,EAAAw4C,EAAA31C,GAAA0Z,KAAA,GAAAi8B,EAAA31C,GAAA2Z,IACAs8B,EAAA94C,KACA84C,EAAA94C,GAAAw4C,EAAA31C,GAGA,IAAAk2C,KACA,KAAA/4C,IAAA84C,GACAC,EAAAv6C,KAAAs6C,EAAA94C,GAGA,OAAA+4C,IAMA9H,OAAA,WACA,GAAA5xB,GAAAzY,KAAA+J,OAAAokC,UACA11B,GAAA8xB,UAAAvqC,KAAAywB,KAEA,IAAApc,GAAArU,KAAA+J,OAAAs8B,iBACA5tB,GAAAU,OACAV,EAAAoc,UAAAxgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,QAAApY,GAAA,EAAAoV,EAAArR,KAAAoyC,iBAAAl2C,OAAuDD,EAAAoV,EAASpV,IAAA,CAChE,GAAAiY,GAAAlU,KAAAoyC,iBAAAn2C,EACA,oBAAAiY,GAAAoT,UACA7O,EAAA45B,YAAAn+B,EAAAoT,SAEA7O,EAAA+xB,SAAAt2B,EAAAM,EAAAN,EAAAO,EAAAP,EAAAhK,MAAAgK,EAAAhK,OAEAuO,EAAAc,WAMAo4B,cAAA,SAAA1C,GACAjvC,KAAAoyC,mBAIA,QAFA59B,GAAAC,EAAAvK,EAAA0mC,EAAA5wC,KAAAkK,MAAA,EAEAjO,EAAA,EAAmBA,EAAA+D,KAAAqxC,QAAkBp1C,IAAA,CAErCuY,EAAAxK,OAAA6G,KAAA2C,aAAAy7B,EAAAz6B,EAAAo8B,EAAA3B,EAAAz6B,EAAAo8B,GACAn8B,EAAAzK,OAAA6G,KAAA2C,aAAAy7B,EAAAx6B,EAAAm8B,EAAA3B,EAAAx6B,EAAAm8B,GAGA1mC,EADAlK,KAAAuxC,iBACAvnC,OAAA6G,KAAA2C,aAEAP,KAAAS,IAAA,EAAA1T,KAAAsxC,SAAAtxC,KAAAuxC,kBACAvxC,KAAAsxC,SAAAtxC,KAAAuxC,kBAGAvxC,KAAAsxC,QAGA,IAAAp9B,GAAA,GAAAlK,QAAAuK,MAAAC,EAAAC,EACAP,GAAAhK,QAEAlK,KAAAwxC,gBACAt9B,EAAAoT,QAAAtd,OAAA6G,KAAA2C,aAAA,YAGAxT,KAAAoyC,iBAAAx6C,KAAAsc,GAGAlU,KAAA0xC,YAAA95C,KAAAoI,KAAAoyC,qBAUApoC,OAAAsoC,aAAAtoC,OAAA6G,KAAAiT,YAAA9Z,OAAA8kC,aAEAyD,cAAA,WAEA,GAAAjB,GAAA,GACAkB,EAAA,EACAC,EAAAzoC,OAAA4D,SAAA8L,cAAA,UACAg5B,EAAAD,EAAA94B,WAAA,KAUA,OARA84B,GAAAvoC,MAAAuoC,EAAAtoC,OAAAmnC,EAAAkB,EAEAE,EAAAnI,UAAAvqC,KAAAywB,MACAiiB,EAAAl4B,YACAk4B,EAAA/B,IAAAW,EAAA,EAAAA,EAAA,EAAAA,EAAA,MAAAr+B,KAAAK,IAAA,GACAo/B,EAAAnC,YACAmC,EAAA3hC,OAEA0hC,GAGAE,sBAAA,WACA,MAAA3qC,QAAAhI,KAAAuyC,eAAAxsC,QAAA,iBAAA/F,KAAAywB,MAAA,MAMAmiB,WAAA,WACA,MAAA5yC,MAAA+J,OAAAokC,WAAAvJ,cAAA5kC,KAAAqB,QAAArB,KAAAuyC,gBAAA,WAMArE,gBAAA,WACAluC,KAAA0jB,UAAA,mBACA1jB,KAAA+J,OAAAokC,WAAAC,YAAApuC,KAAA4yC,cAMA3C,WAAA,SAAAC,GACA,GAAA3vC,GAAAP,KAAA0jB,UAAA,aAAAwsB,GACA2C,EAAAtyC,EAAAuyC,oBAAA1X,UAAA76B,EAAA6vC,YAAA,EAOA,OALA7vC,GAAAq1B,OAAA,GAAA5rB,QAAA+5B,SACA1iC,OAAArB,KAAAqB,QAAArB,KAAA2yC,wBACA9P,SAAAgQ,EAAAr+B,EACAsuB,SAAA+P,EAAAp+B,IAEAlU,KAKA,WAEA,GAAA0kB,GAAAjb,OAAA6G,KAAAoU,WACApR,EAAA7J,OAAA6G,KAAAgD,iBACAE,EAAA/J,OAAA6G,KAAAkD,iBACAb,EAAAD,KAAAC,MACAE,EAAAH,KAAAG,IACA2/B,EAAA/oC,OAAA07B,aAAAgI,SAAA,eAEAsF,EAAA,EA4BAhpC,QAAAC,OAAAD,OAAA6G,KAAAiT,YAAA9Z,OAAA07B,cAQA3hB,WAAA,SAAAiE,EAAAjvB,GACAA,UAEAiH,KAAA4lC,YAAA5d,EAAAjvB,GACAiH,KAAAizC,mBACAjzC,KAAAkzC,sBAQAC,mBAAA,EASAC,YAAA,WASAC,iBAAA,EASAC,kBAAA,EASAC,YAAA,SASAC,aAAA,WAOA3M,aAAA,EAOA4M,WAAA,EASAC,aAAA,WAUAC,gBAAA,KAOAC,eAAA,2BAOAC,sBAOAC,qBAAA,2BAOAC,mBAAA,EAOAC,YAAA,OAOAC,WAAA,OAOAC,cAAA,UAOAC,kBAAA,YAOAC,eAAA,YAOAC,eAAA,mBAOAC,oBAAA,EAOAC,oBAAA,EAOAC,gBAAA,EAUAC,eAAA,EAQAC,wBAAA,EAQAC,iBAAA,EAQAC,gBAAA,EAKA3B,iBAAA,WACAjzC,KAAA60C,kBAAA,KACA70C,KAAA80C,eAAA,KACA90C,KAAA+0C,sBACA/0C,KAAAg1C,qBACAh1C,KAAAi1C,sBAEAj1C,KAAA8mC,qBAEA9mC,KAAAk1C,iBAAAlrC,OAAA8kC,aAAA,GAAA9kC,QAAA8kC,YAAA9uC,MAEAA,KAAAmnC,cAQAgO,uBAAA,WACA,GAEA/tC,GAFA6hC,EAAAjpC,KAAAo1C,iBACAC,EAAAr1C,KAAAs1C,kBACAC,KAAAC,IAEA,KAAAvM,IAAAoM,GAAAr1C,KAAA00C,uBAiBAa,EAAAv1C,KAAA2R,aAjBA,CACA,OAAA1V,GAAA,EAAAC,EAAA8D,KAAA2R,SAAAzV,OAAsDD,EAAAC,EAAYD,IAClEmL,EAAApH,KAAA2R,SAAA1V,GACAgtC,KAAAv2B,SAAAtL,QAAAiuC,EAIAG,EAAA59C,KAAAwP,GAHAmuC,EAAA39C,KAAAwP,EAMA6hC,KACAA,EAAAU,KAAA,WAAA6L,GACAD,EAAA39C,KAAAqxC,IAEAoM,GAAAE,EAAA39C,KAAAy9C,GAKA,MAAAE,IAQApqC,UAAA,YACAnL,KAAAyzC,WAAAzzC,KAAA80C,gBAAA90C,KAAAy0C,eACAz0C,KAAA4pC,aAAA5pC,KAAAmuC,WAEA,IAAApE,GAAA/pC,KAAAunC,gBAEA,OADAvnC,MAAAgqC,aAAAD,EAAA/pC,KAAAm1C,0BACAn1C,MASAy1C,UAAA,WACA,GAAAh9B,GAAAzY,KAAAmuC,UAUA,OATAnuC,MAAA4pC,aAAAnxB,GAGAzY,KAAAyzC,WAAAzzC,KAAA80C,gBACA90C,KAAA01C,eAAAj9B,GAGAzY,KAAAmR,KAAA,gBAEAnR,MAOA21C,uBAAA,WACA,GAAA1gC,GAAAjV,KAAA60C,iBAEA5/B,GAAAtK,OAAAE,KACAmQ,OAAA/F,EAAA2gC,SAAA56B,OACAC,OAAAhG,EAAA2gC,SAAA36B,OACAC,MAAAjG,EAAA2gC,SAAA16B,MACAC,MAAAlG,EAAA2gC,SAAAz6B,MACAxF,KAAAV,EAAA2gC,SAAAjgC,KACAC,IAAAX,EAAA2gC,SAAAhgC,MAGA5V,KAAA61C,uBAAA5gC,EAAAtK,QACA,WAAAsK,EAAA6gC,OACA91C,KAAA+1C,mBAAA9gC,EAAAtK,SAGA,WAAAsK,EAAAo7B,UACA,UAAAp7B,EAAAo7B,QACAp7B,EAAA+gC,cAGA/gC,EAAA+gC,WAAA,GAGA,WAAA/gC,EAAAq7B,UACA,WAAAr7B,EAAAq7B,QACAr7B,EAAAghC,cAGAhhC,EAAAghC,WAAA,GAIAhhC,EAAAo7B,QAAA,SACAp7B,EAAAq7B,QAAA,WAIAr7B,EAAAo7B,QAAAp7B,EAAA2gC,SAAAvF,QACAp7B,EAAAq7B,QAAAr7B,EAAA2gC,SAAAtF,UAWA4F,cAAA,SAAA75C,EAAAsO,EAAAuJ,GACA,GAEAiiC,GAFAC,GAAA,EACAnH,EAAA/6B,GAAAlU,KAAAilB,WAAA5oB,EAAA+5C,EAWA,OAPAD,GADAxrC,EAAA44B,OAAA54B,EAAA44B,QAAAvjC,KAAAo1C,iBACAp1C,KAAAq2C,kBAAA1rC,EAAA44B,MAAA0L,IAGcz6B,EAAAy6B,EAAAz6B,EAAAC,EAAAw6B,EAAAx6B,GAId9J,EAAAurC,cAAAC,IAAAxrC,EAAA2rC,kBAAArH,IAMAoH,kBAAA,SAAAjvC,EAAA6nC,GACA,GAAArY,GAAAxvB,EAAAmvC,sBACAC,EAAAxsC,OAAA6G,KAAAgF,gBAAA+gB,GACAoS,EAAAhpC,KAAAqmC,kBACAoQ,EAAAz2C,KAAA02C,kBAAAzH,GACAzpC,EAAAwE,OAAA6G,KAAAmE,eAAAyhC,EAAAD,EACA,OAAAxsC,QAAA6G,KAAAmE,eAAAxP,EAAAwjC,IAUA2N,oBAAA,SAAAhsC,EAAA6J,EAAAC,GACA,GAAAmiC,GAAAjsC,EAAAisC,WACAC,EAAAlsC,EAAAksC,mBACAp+B,EAAAzY,KAAA82C,aACAC,EAAApsC,EAAAqsC,wBAEArsC,GAAAisC,WAAAjsC,EAAAksC,oBAAA,EACAlsC,EAAAqsC,yBAAA,GAEAv+B,EAAAU,OACAV,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAqmC,mBACA17B,EAAA0/B,OAAA5xB,GACAA,EAAAc,UAEA5O,EAAAssC,QAAAtsC,EAAAusC,gBAAAz+B,GAEA9N,EAAAisC,aACAjsC,EAAAksC,qBACAlsC,EAAAqsC,yBAAAD,CAEA,IAAA/6B,GAAAhS,OAAA6G,KAAAmL,cACAvD,EAAAjE,EAAAC,EAAAzU,KAAAu0C,oBAIA,OAFAv0C,MAAA4pC,aAAAnxB,GAEAuD,GAQAm7B,sBAAA,SAAA96C,EAAAsO,GACA,GAAAs+B,GAAAjpC,KAAAo1C,iBACAC,EAAAr1C,KAAAs1C,iBAEA,QACA3qC,GAEAA,GACAs+B,IACAA,EAAAv2B,SAAA/H,IACAs+B,IAAAt+B,IACAtO,EAAA2D,KAAA0zC,eAEA/oC,MAAAysC,SAEAzsC,IACAA,EAAA0sC,YACAhC,GACAA,IAAA1qC,GAQAkrC,uBAAA,SAAAlrC,GACA,GAAAA,EAAA,CAIA,GACA2sC,GADAriC,EAAAjV,KAAA60C,iBAUA,OAPA,UAAA5/B,EAAA6gC,QAAA,WAAA7gC,EAAA6gC,QAAA,WAAA7gC,EAAA6gC,OACAwB,EAAAt3C,KAAAqzC,iBAAA1oC,EAAA0oC,gBAEA,WAAAp+B,EAAA6gC,SACAwB,EAAAt3C,KAAAszC,kBAAA3oC,EAAA2oC,kBAGAgE,GAAAriC,EAAAsiC,OAAAtiC,EAAAsiC,SAMAC,qBAAA,SAAA7sC,EAAA8sC,GACA,GAAAtjC,IACAK,EAAA7J,EAAA0lC,QACA57B,EAAA9J,EAAA2lC,QAiBA,OAdA,OAAAmH,GAAA,OAAAA,GAAA,OAAAA,EACAtjC,EAAAK,EAAA,QAEA,OAAAijC,GAAA,OAAAA,GAAA,OAAAA,IACAtjC,EAAAK,EAAA,QAGA,OAAAijC,GAAA,OAAAA,GAAA,OAAAA,EACAtjC,EAAAM,EAAA,SAEA,OAAAgjC,GAAA,OAAAA,GAAA,OAAAA,IACAtjC,EAAAM,EAAA,OAGAN,GAMAujC,qBAAA,SAAA/sC,EAAA8sC,EAAAp7C,GACA,IAAAo7C,EACA,YAGA,QAAAA,GACA,UACA,cACA,UACA,SACA,MAAAp7C,GAAA2D,KAAAwzC,cAAA,gBACA,UACA,SACA,MAAAn3C,GAAA2D,KAAAwzC,cAAA,gBACA,SACA,gBASAmE,uBAAA,SAAAt7C,EAAAsO,GACA,GAAAA,EAAA,CAIA,GAAAskC,GAAAjvC,KAAAilB,WAAA5oB,GACAo7C,EAAA9sC,EAAA2rC,kBAAAt2C,KAAAilB,WAAA5oB,GAAA,IACAy5C,EAAA91C,KAAA03C,qBAAA/sC,EAAA8sC,EAAAp7C,GACA8X,EAAAnU,KAAAw3C,qBAAA7sC,EAAA8sC,EAEAz3C,MAAA60C,mBACAlqC,SACAmrC,SACA2B,SACAz8B,OAAArQ,EAAAqQ,OACAC,OAAAtQ,EAAAsQ,OACAC,MAAAvQ,EAAAuQ,MACAC,MAAAxQ,EAAAwQ,MACA0nB,QAAAoM,EAAAz6B,EAAA7J,EAAAgL,KACAmtB,QAAAmM,EAAAx6B,EAAA9J,EAAAiL,IACAy6B,QAAAl8B,EAAAK,EACA87B,QAAAn8B,EAAAM,EACAmjC,GAAA3I,EAAAz6B,EACAqjC,GAAA5I,EAAAx6B,EACAqjC,MAAA7I,EAAAz6B,EACAujC,MAAA9I,EAAAx6B,EACAkB,KAAAhL,EAAAgL,KACAC,IAAAjL,EAAAiL,IACAoiC,MAAAnkC,EAAAlJ,EAAAG,OACAZ,MAAAS,EAAAT,MAAAS,EAAAqQ,OACAg7B,WAAA,EACAC,WAAA,EACAgC,SAAA57C,EAAA47C,SACAV,OAAAl7C,EAAA2D,KAAAuzC,cAGAvzC,KAAA60C,kBAAAe,UACAjgC,KAAAhL,EAAAgL,KACAC,IAAAjL,EAAAiL,IACAoF,OAAArQ,EAAAqQ,OACAC,OAAAtQ,EAAAsQ,OACAC,MAAAvQ,EAAAuQ,MACAC,MAAAxQ,EAAAwQ,MACAk1B,QAAAl8B,EAAAK,EACA87B,QAAAn8B,EAAAM,GAGAzU,KAAA21C,2BAUAuC,iBAAA,SAAA1jC,EAAAC,GACA,GAAAogB,GAAA70B,KAAA60C,kBACAlqC,EAAAkqB,EAAAlqB,OACAwtC,EAAA3jC,EAAAqgB,EAAAgO,QACAuV,EAAA3jC,EAAAogB,EAAAiO,QACAuV,GAAA1tC,EAAAnP,IAAA,kBAAAmP,EAAAgL,OAAAwiC,EACAG,GAAA3tC,EAAAnP,IAAA,kBAAAmP,EAAAiL,MAAAwiC,CAIA,OAFAC,IAAA1tC,EAAAE,IAAA,OAAAstC,GACAG,GAAA3tC,EAAAE,IAAA,MAAAutC,GACAC,GAAAC,GAQAC,2BAAA,SAAAC,EAAAvjC,EAAAwjC,GACA,GAAAr+B,GAAA,UAAAs+B,GAA2CC,EAAA,UAC3CC,EAAA3jC,EAAAtK,OAAAuQ,MAAA29B,EAAA,OAAAC,EAAA,QACArB,EAAA,OAAAxiC,EAAAwiC,QAAA,OAAAxiC,EAAAwiC,OAAA,KACAsB,EAAA,CAEAP,KAAA,OACA,MAAAC,IACAG,EAAA3jC,EAAAtK,OAAAwQ,MACA09B,EAAA,MACAC,EAAA,SACA1+B,EAAA,WAEAs+B,MAAAG,EACAH,EAAA,GAAAI,EAEA7jC,EAAAtK,OAAAgR,QAAAo9B,OACA9jC,EAAAtK,OAAAiR,QAAAm9B,OAEA,IAAAH,GACA3jC,EAAA+jC,UAAAvB,EAAAe,EAAAO,EACA9jC,EAAAmF,GAAAs+B,GAAAF,KAGAI,IAAA,OACA3jC,EAAA+jC,SAAAJ,EACA3jC,EAAAmF,GAAAs+B,EAAAE,EAAAnB,EAAAsB,KAYAE,YAAA,SAAAzkC,EAAAC,EAAAgkC,GACA,GAAAxjC,GAAAjV,KAAA60C,kBACAlqC,EAAAsK,EAAAtK,OAAAuuC,GAAA,EACAC,EAAAxuC,EAAAnP,IAAA,gBACA49C,EAAAzuC,EAAAnP,IAAA,eAEA,IAAA29C,GAAA,MAAAV,GAAAW,GAAA,MAAAX,EACA,QAIA,IAGAY,GAAAC,EAHAxO,EAAAngC,EAAAigC,iBACA2O,EAAA5uC,EAAA6uC,aAAA,GAAAxvC,QAAAuK,MAAAC,EAAAC,GAAA,mBAAAgkC,GACAgB,EAAA9uC,EAAA6uC,aAAA,GAAAxvC,QAAAuK,MAAAU,EAAA6iC,MAAA7iC,EAAA8iC,OAAA,mBAAAU,GACAiB,EAAA/uC,EAAAgvC,2BAWA,OATA35C,MAAAu4C,2BAAAgB,EAAAE,EAAAxkC,EAAAwjC,GACAY,EAAA1uC,EAAA6uC,aAAA,GAAAxvC,QAAAuK,MAAAC,EAAAC,GAAAQ,EAAAo7B,QAAAp7B,EAAAq7B,SAAAmI,GACAa,EAAA3uC,EAAAivC,uBAAA9O,EAAA71B,EAAAo7B,QAAAp7B,EAAAq7B,SAEA4I,EAAAl5C,KAAA65C,eAAAR,EAAApkC,EAAAwjC,EAAAiB,GACAzkC,EAAA6iC,MAAAtjC,EACAS,EAAA8iC,MAAAtjC,EAEA9J,EAAA0gC,oBAAAiO,EAAArkC,EAAAo7B,QAAAp7B,EAAAq7B,SACA4I,GAQAW,eAAA,SAAAC,EAAAjlB,EAAA4jB,EAAAsB,GACA,GAAAC,GACAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAp/B,EAAAC,EAFAxQ,EAAAkqB,EAAAlqB,OAAAuuC,GAAA,EACAF,EAAAnkB,EAAAmkB,QAmCA,OAhCA,MAAAP,GACA0B,EAAA,IACAC,EAAA,IACAC,EAAA,IACAn/B,EAAA,EACAC,EAAAxQ,EAAAwQ,QAGAg/B,EAAA,IACAC,EAAA,IACAC,EAAA,IACAn/B,EAAAvQ,EAAAuQ,MACAC,EAAA,GAGA++B,EAAAvvC,EAAAgvC,0BAAAz+B,EAAAC,GACAm/B,EAAA,EAAArnC,KAAAG,IAAA0mC,GAAAI,EAAAzB,GACA6B,GAAA,EACAN,EAAA,GAGAA,EAAAhB,EAAA/lC,KAAAsnC,KAAAD,EAAA3vC,EAAA,QAAA0vC,IACAH,EAAAC,GAAAxvC,EAAA,QAAAyvC,KACAJ,EAAAhwC,OAAA6G,KAAAkD,iBAAAimC,IAEAd,EAAAvuC,EAAA,OAAA0vC,KAAAL,EACArvC,EAAAE,IAAA,OAAAwvC,EAAAL,GACA,IAAArvC,EAAA,OAAAyvC,KACAH,EAAAtvC,EAAAgvC,4BACAK,EAAAD,EAAAI,GAAAF,EAAAE,GAAAxvC,EAAA,QAAAyvC,GACAzvC,EAAAE,IAAA,QAAAuvC,EAAAJ,IAEAd,GAYAsB,aAAA,SAAAhmC,EAAAC,EAAAgkC,GACA,GAAAxjC,GAAAjV,KAAA60C,kBACAlqC,EAAAsK,EAAAtK,OACA8vC,EAAA9vC,EAAAnP,IAAA,gBACAk/C,EAAA/vC,EAAAnP,IAAA,gBACAm/C,EAAAhwC,EAAAnP,IAAA,kBAEA,IAAAi/C,GAAAC,EACA,QAIA,IAAApB,GAAA3uC,EAAAivC,uBAAAjvC,EAAAigC,iBAAA31B,EAAAo7B,QAAAp7B,EAAAq7B,SACAwJ,EAAAnvC,EAAA6uC,aAAA,GAAAxvC,QAAAuK,MAAAC,EAAAC,GAAAQ,EAAAo7B,QAAAp7B,EAAAq7B,SACAoJ,EAAA/uC,EAAAgvC,4BAAAiB,GAAA,CASA,OAPA56C,MAAA66C,eAAAf,EAAA7kC,GAGA2lC,EAAA56C,KAAA86C,gBAAAhB,EAAA7kC,EAAAwlC,EAAAC,EAAAjC,EAAAkC,EAAAjB,GAGA/uC,EAAA0gC,oBAAAiO,EAAArkC,EAAAo7B,QAAAp7B,EAAAq7B,SACAsK,GAOAE,gBAAA,SAAAhB,EAAAjlB,EAAA4lB,EAAAC,EAAAjC,EAAAkC,EAAAZ,GACA,GACAgB,GAAAC,EAAAhgC,EAAAC,EADAtQ,EAAAkqB,EAAAlqB,OAAAswC,GAAA,EAAAC,GAAA,EAAAN,GAAA,CAgCA,OA7BA5/B,GAAA8+B,EAAAtlC,EAAA7J,EAAAqQ,OAAA++B,EAAAvlC,EACAyG,EAAA6+B,EAAArlC,EAAA9J,EAAAsQ,OAAA8+B,EAAAtlC,EACAsmC,EAAApwC,EAAAqQ,WACAggC,EAAArwC,EAAAsQ,WAEA0/B,GAAA3/B,GAAA,GAAAA,EAAArQ,EAAAqQ,SACAigC,GAAA,GAGAN,GAAA1/B,GAAA,GAAAA,EAAAtQ,EAAAsQ,SACAigC,GAAA,GAGA,YAAAzC,GAAAgC,GAAAC,EAGAjC,EAIA,MAAAA,GAAA9tC,EAAAnP,IAAA,kBAGA,MAAAi9C,GAAA9tC,EAAAnP,IAAA,mBACA0/C,GAAAR,GAAA/vC,EAAAE,IAAA,SAAAoQ,KAAA2/B,KAAAI,GAHAC,GAAAR,GAAA9vC,EAAAE,IAAA,SAAAmQ,KAAA4/B,KAAAG,IAJAE,GAAAR,GAAA9vC,EAAAE,IAAA,SAAAmQ,KAAA4/B,KAAAG,GACAG,GAAAR,GAAA/vC,EAAAE,IAAA,SAAAoQ,KAAA2/B,KAAAI,IAJAC,GAAAC,IAAAN,EAAA56C,KAAAm7C,oBAAArB,EAAAnvC,EAAAkqB,EAAAklB,IAYAllB,EAAAumB,UAAApgC,EACA6Z,EAAAwmB,UAAApgC,EACAggC,GAAAC,GAAAl7C,KAAAs7C,YAAAzmB,EAAA4jB,GACAmC,GAOAO,oBAAA,SAAArB,EAAAnvC,EAAAkqB,EAAAklB,GAEA,GAGAa,GAHAW,EAAAzB,EAAArlC,EAAAqlC,EAAAtlC,EACAgnC,EAAAzB,EAAAtlC,EAAAogB,EAAA+gB,SAAA36B,OAAAtQ,EAAAsQ,OACA8+B,EAAAvlC,EAAAqgB,EAAA+gB,SAAA56B,OAAArQ,EAAAqQ,MAUA,OALA6Z,GAAAumB,UAAAvmB,EAAA+gB,SAAA56B,OAAAugC,EAAAC,EACA3mB,EAAAwmB,UAAAxmB,EAAA+gB,SAAA36B,OAAAsgC,EAAAC,EACAZ,EAAA/lB,EAAAumB,YAAAzwC,EAAAqQ,QAAA6Z,EAAAwmB,YAAA1wC,EAAAsQ,OACAtQ,EAAAE,IAAA,SAAAgqB,EAAAumB,WACAzwC,EAAAE,IAAA,SAAAgqB,EAAAwmB,WACAT,GAMAU,YAAA,SAAAzmB,EAAA4jB,GACA5jB,EAAAumB,UAAA,SAAA3C,IACA,SAAA5jB,EAAAwb,QACAxb,EAAAwb,QAAA,QAEA,UAAAxb,EAAAwb,UACAxb,EAAAwb,QAAA,SAIAxb,EAAAwmB,UAAA,SAAA5C,IACA,QAAA5jB,EAAAyb,QACAzb,EAAAyb,QAAA,SAEA,WAAAzb,EAAAyb,UACAzb,EAAAyb,QAAA,SAQAuK,eAAA,SAAAf,EAAA7kC,GACA,GAAAtK,GAAAsK,EAAAtK,MAEA,WAAAsK,EAAAo7B,QACAyJ,EAAAtlC,MAEA,WAAAS,EAAAo7B,UACAyJ,EAAAtlC,GAAA,EAAAS,EAAA+gC,WACA8D,EAAAtlC,EAAA,IACAS,EAAA+gC,YAAA/gC,EAAA+gC,aAIA,WAAA/gC,EAAAq7B,QACAwJ,EAAArlC,MAEA,WAAAQ,EAAAq7B,UACAwJ,EAAArlC,GAAA,EAAAQ,EAAAghC,WACA6D,EAAArlC,EAAA,IACAQ,EAAAghC,YAAAhhC,EAAAghC,aAKA7iC,EAAA0mC,EAAAtlC,GAAA7J,EAAAI,QACA+uC,EAAAtlC,EAAA,EACAslC,EAAAtlC,GAAA7J,EAAAI,QAGA+uC,EAAAtlC,GAAA7J,EAAAI,QAIA+uC,EAAAtlC,EAAA,EAGApB,EAAA0mC,EAAArlC,GAAA9J,EAAAI,QACA+uC,EAAArlC,EAAA,EACAqlC,EAAArlC,GAAA9J,EAAAI,QAGA+uC,EAAArlC,GAAA9J,EAAAI,QAIA+uC,EAAArlC,EAAA,GAWAgnC,cAAA,SAAAjnC,EAAAC,GAEA,GAAAQ,GAAAjV,KAAA60C,iBAEA,IAAA5/B,EAAAtK,OAAAnP,IAAA,gBACA,QAGA,IAAAkgD,GAAAxoC,EAAA+B,EAAA4iC,GAAA5iC,EAAAW,IAAAX,EAAA2iC,GAAA3iC,EAAAU,MACAgmC,EAAAzoC,EAAAuB,EAAAQ,EAAAW,IAAApB,EAAAS,EAAAU,MACA7K,EAAAiJ,EAAA4nC,EAAAD,EAAAzmC,EAAA+iC,MAQA,OALAltC,GAAA,IACAA,EAAA,IAAAA,GAGAmK,EAAAtK,OAAAG,QAAA,KACA,GAQA8wC,UAAA,SAAApkD,GACAwI,KAAA2oC,cAAA76B,MAAA+tC,OAAArkD,GAOAskD,sBAAA,SAAAnxC,GACAA,EAAAqQ,OAAA,EACArQ,EAAAsQ,OAAA,EACAtQ,EAAAuQ,MAAA,EACAvQ,EAAAwQ,MAAA,EACAxQ,EAAAkR,SAAA,IAOA65B,eAAA,SAAAj9B,GACA,GAAAsjC,GAAA/7C,KAAA80C,eACAn/B,EAAAomC,EAAApmC,KACAC,EAAAmmC,EAAAnmC,IACAomC,EAAA5oC,EAAAuC,GACAsmC,EAAA7oC,EAAAwC,EAaA,IAXA5V,KAAA4zC,iBACAn7B,EAAA8xB,UAAAvqC,KAAA4zC,eAEAn7B,EAAA+xB,SACAuR,EAAAnE,IAAAjiC,EAAA,KAAAA,GACAomC,EAAAlE,IAAAjiC,EAAA,KAAAA,GACAomC,EACAC,IAIAj8C,KAAA+zC,oBAAA/zC,KAAA8zC,qBAOA,GAJAr7B,EAAA41B,UAAAruC,KAAA+zC,mBACAt7B,EAAA21B,YAAApuC,KAAA8zC,qBAGA9zC,KAAA6zC,mBAAA33C,OAAA,IAAA62C,EAAA,CAEA,GAAAn1B,GAAAm+B,EAAAnE,GAAA5E,GAAAr9B,EAAA,IAAAqmC,GACAn+B,EAAAk+B,EAAAlE,GAAA7E,GAAAp9B,EAAA,IAAAqmC,EAEAxjC,GAAA+B,YAEAxQ,OAAA6G,KAAA2H,eAAAC,EAAAmF,EAAAC,EAAAD,EAAAo+B,EAAAn+B,EAAA7d,KAAA6zC,oBACA7pC,OAAA6G,KAAA2H,eAAAC,EAAAmF,EAAAC,EAAAo+B,EAAA,EAAAr+B,EAAAo+B,EAAAn+B,EAAAo+B,EAAA,EAAAj8C,KAAA6zC,oBACA7pC,OAAA6G,KAAA2H,eAAAC,EAAAmF,EAAAC,EAAAD,EAAAC,EAAAo+B,EAAAj8C,KAAA6zC,oBACA7pC,OAAA6G,KAAA2H,eAAAC,EAAAmF,EAAAo+B,EAAA,EAAAn+B,EAAAD,EAAAo+B,EAAA,EAAAn+B,EAAAo+B,EAAAj8C,KAAA6zC,oBAEAp7B,EAAA83B,YACA93B,EAAAmd,aAGA5rB,QAAA1S,OAAA4J,UAAAg7C,aAAA/6C,KAAAnB,KAAAyY,EAAAzY,KAAA6zC,oBACAp7B,EAAA0jC,WACAJ,EAAAnE,GAAA5E,GAAAr9B,EAAA,IAAAqmC,GACAD,EAAAlE,GAAA7E,GAAAp9B,EAAA,IAAAqmC,GACAD,EACAC,IAUAG,WAAA,SAAA//C,EAAAggD,GACA,IAAAr8C,KAAAw0C,eAAA,CAIA,GAIA8H,GAJAlG,GAAA,EACAnH,EAAAjvC,KAAAilB,WAAA5oB,EAAA+5C,GACAnN,EAAAjpC,KAAAo1C,iBACAC,EAAAr1C,KAAAs1C,iBAMA,IAAArM,IAAAoT,GAAAr8C,KAAAu8C,aAAAtN,EAAAhG,GAEA,MADAjpC,MAAAw8C,mBAAAvT,EAAA5sC,GACA4sC,CAGA,IAAAoM,KAAAiB,kBAAArH,GAEA,MADAjvC,MAAAw8C,mBAAAnH,EAAAh5C,GACAg5C,CAEA,IAAAA,GAAAr1C,KAAAu8C,aAAAtN,EAAAoG,GAAA,CACA,IAAAr1C,KAAA00C,uBAEA,MADA10C,MAAAw8C,mBAAAnH,EAAAh5C,GACAg5C,CAGAiH,GAAAjH,EAIAr1C,KAAAy8C,UAEA,IAAA9xC,GAAA3K,KAAA08C,uBAAA18C,KAAA2R,SAAAs9B,EAKA,OAJA5yC,GAAA2D,KAAA2zC,kBAAAhpC,GAAA2xC,GAAA3xC,IAAA2xC,IACA3xC,EAAA2xC,GAEAt8C,KAAAw8C,mBAAA7xC,EAAAtO,GACAsO,IAMA6xC,mBAAA,SAAA7xC,EAAAtO,GACAsO,EACA3K,KAAA28C,iBAAAhyC,IACA3K,KAAA28C,iBACA38C,KAAAmR,KAAA,aAAoCxG,OAAA3K,KAAA28C,eAAAtgD,MACpC2D,KAAA28C,eAAAxrC,KAAA,aAEAnR,KAAAmR,KAAA,cAAmCxG,SAAAtO,MACnCsO,EAAAwG,KAAA,aACAnR,KAAA28C,eAAAhyC,GAGA3K,KAAA28C,iBACA38C,KAAAmR,KAAA,aAAgCxG,OAAA3K,KAAA28C,eAAAtgD,MAChC2D,KAAA28C,eAAAxrC,KAAA,YACAnR,KAAA28C,eAAA,OAOAJ,aAAA,SAAAtN,EAAAluC,GACA,GAAAA,GACAA,EAAAsvB,SACAtvB,EAAAq2C,SACAp3C,KAAAk2C,cAAA,KAAAn1C,EAAAkuC,GAAA,CACA,IAAAjvC,KAAAs0C,qBAAAvzC,EAAAuzC,oBAAAvzC,EAAA67C,UAOA,QANA,IAAA5gC,GAAAhc,KAAA22C,oBAAA51C,EAAAkuC,EAAAz6B,EAAAy6B,EAAAx6B,EACA,KAAAuH,EACA,WAYA0gC,uBAAA,SAAA1qC,EAAAi9B,GAMA,IAHA,GAAAtkC,GAAAkyC,EAAAC,EAAA7gD,EAAA+V,EAAA9V,OAGAD,KACA,GAAA+D,KAAAu8C,aAAAtN,EAAAj9B,EAAA/V,IAAA,CACA0O,EAAAqH,EAAA/V,GACA,UAAA0O,EAAAoC,MAAApC,EAAAoyC,iBACAF,EAAA78C,KAAAq2C,kBAAA1rC,EAAAskC,GACA6N,EAAA98C,KAAA08C,uBAAA/xC,EAAAgH,SAAAkrC,GACAC,GAAA98C,KAAAy8C,QAAA7kD,KAAAklD,GAEA,OAGA,MAAAnyC,IAQA+rC,kBAAA,SAAAzH,GACA,MAAAjlC,QAAA6G,KAAAmE,eACAi6B,EACAjlC,OAAA6G,KAAAgF,gBAAA7V,KAAAqmC,qBAUAphB,WAAA,SAAA5oB,EAAA+5C,EAAAzN,GACAA,IACAA,EAAA3oC,KAAA2oC,cAEA,IAIAqU,GAJA/N,EAAAhqB,EAAA5oB,GACA0kB,EAAA4nB,EAAA9e,wBACAozB,EAAAl8B,EAAA7W,OAAA,EACAgzC,EAAAn8B,EAAA5W,QAAA,CA+BA,OA5BA8yC,IAAAC,IACA,OAAAn8B,IAAA,UAAAA,KACAm8B,EAAAjqC,KAAAG,IAAA2N,EAAAnL,IAAAmL,EAAAo8B,SAEA,SAAAp8B,IAAA,QAAAA,KACAk8B,EAAAhqC,KAAAG,IAAA2N,EAAAq8B,MAAAr8B,EAAApL,QAIA3V,KAAAmnC,aAEA8H,EAAAz6B,EAAAy6B,EAAAz6B,EAAAxU,KAAAwnC,QAAA7xB,KACAs5B,EAAAx6B,EAAAw6B,EAAAx6B,EAAAzU,KAAAwnC,QAAA5xB,IACAwgC,IACAnH,EAAAjvC,KAAA02C,kBAAAzH,IAKA+N,EAFA,IAAAC,GAAA,IAAAC,GAEoBhzC,MAAA,EAAAC,OAAA,IAIpBD,MAAAy+B,EAAAz+B,MAAA+yC,EACA9yC,OAAAw+B,EAAAx+B,OAAA+yC,IAKA1oC,EAAAy6B,EAAAz6B,EAAAwoC,EAAA9yC,MACAuK,EAAAw6B,EAAAx6B,EAAAuoC,EAAA7yC,SAQA6qC,mBAAA,WACA,GAAAqI,GAAAr9C,KAAAsnC,cAAArf,UAAAliB,QAAA,wBAEA/F,MAAA2oC,cAAA3oC,KAAAgoC,uBACAh+B,OAAA6G,KAAAuX,SAAApoB,KAAA2oC,cAAA,gBAAA0U,GAEAr9C,KAAA6oC,UAAApgB,YAAAzoB,KAAA2oC,eAEA3oC,KAAAs9C,iBAAAt9C,KAAAsnC,cAAAtnC,KAAA2oC,eACA3oC,KAAAioC,kBAAAjoC,KAAA2oC,eACA3oC,KAAAmuC,WAAAnuC,KAAA2oC,cAAAhvB,WAAA,OAMAu5B,mBAAA,WACAlzC,KAAA4oC,cAAA5oC,KAAAgoC,uBACAhoC,KAAA4oC,cAAAzgB,aAAA,QAAAnoB,KAAAkK,OACAlK,KAAA4oC,cAAAzgB,aAAA,SAAAnoB,KAAAmK,QACAnK,KAAA82C,aAAA92C,KAAA4oC,cAAAjvB,WAAA,OAMAo7B,oBAAA,WACA/0C,KAAA6oC,UAAA7+B,OAAA6G,KAAAwX,YAAAroB,KAAAsnC,cAAA,OACAiW,QAAAv9C,KAAAq0C,iBAEArqC,OAAA6G,KAAAgW,SAAA7mB,KAAA6oC,WACA3+B,MAAAlK,KAAAmkC,WAAA,KACAh6B,OAAAnK,KAAAqkC,YAAA,KACAlB,SAAA,aAEAn5B,OAAA6G,KAAA6Z,wBAAA1qB,KAAA6oC,YAOAZ,kBAAA,SAAA/iB,GACA,GAAAhb,GAAAlK,KAAAmkC,YAAAjf,EAAAhb,MACAC,EAAAnK,KAAAqkC,aAAAnf,EAAA/a,MAEAH,QAAA6G,KAAAgW,SAAA3B,GACAie,SAAA,WACAj5B,QAAA,KACAC,SAAA,KACAwL,KAAA,EACAC,IAAA,IAEAsP,EAAAhb,QACAgb,EAAA/a,SACAH,OAAA6G,KAAA6Z,wBAAAxF,IASAo4B,iBAAA,SAAAE,EAAAC,GACAA,EAAA3vC,MAAAkZ,QAAAw2B,EAAA1vC,MAAAkZ,SAOA02B,oBAAA,WACA,MAAA19C,MAAAmuC,YAOAwP,oBAAA,WACA,MAAA39C,MAAA2oC,eAOAiV,iBAAA,SAAAx2C,GACApH,KAAA69C,eACA79C,KAAA69C,cAAAhzC,IAAA,aAEA7K,KAAA69C,cAAAz2C,EACAA,EAAAyD,IAAA,cAUAizC,gBAAA,SAAA12C,EAAA/K,GAKA,MAJA2D,MAAA49C,iBAAAx2C,GACApH,KAAAmL,YACAnL,KAAAmR,KAAA,mBAAoCxG,OAAAvD,EAAA/K,MACpC+K,EAAA+J,KAAA,YAA+B9U,MAC/B2D,MAOAs1C,gBAAA,WACA,MAAAt1C,MAAA69C,eAOA1rC,iBAAA,SAAApR,GAEAf,KAAAs1C,oBAAAv0C,IACAf,KAAAmR,KAAA,4BAA+CxG,OAAA5J,IAC/Cf,KAAA+9C,uBACA/9C,KAAAmR,KAAA,qBAAwCxG,OAAA5J,IACxCA,EAAAoQ,KAAA,eAEAnR,KAAA0jB,UAAA,mBAAA3iB,IAMAg9C,qBAAA,WACA/9C,KAAA69C,eACA79C,KAAA69C,cAAAhzC,IAAA,aAEA7K,KAAA69C,cAAA,MASAG,oBAAA,SAAA3hD,GACA,GAAAg5C,GAAAr1C,KAAA69C,aAKA,OAJA79C,MAAAmR,KAAA,4BAA6CxG,OAAA0qC,EAAAh5C,MAC7C2D,KAAA+9C,uBACA/9C,KAAAmR,KAAA,qBAAsC9U,MACtCg5C,KAAAlkC,KAAA,cAAuD9U,MACvD2D,MAOAi+C,gBAAA,SAAA1a,GACAvjC,KAAAkpC,aAAA3F,EACAA,GACAA,EAAA14B,IAAA,cAWAqzC,eAAA,SAAA3a,EAAAlnC,GAMA,MALA2D,MAAAi+C,gBAAA1a,GACAA,IACAvjC,KAAAmR,KAAA,mBAAsCxG,OAAA44B,EAAAlnC,MACtCknC,EAAApyB,KAAA,YAAgC9U,OAEhC2D,MAOAo1C,eAAA,WACA,MAAAp1C,MAAAkpC,cAMAiV,oBAAA,WACA,GAAAnf,GAAAh/B,KAAAo1C,gBACApW,IACAA,EAAAof,UAEAp+C,KAAAk+C,eAAA,OAQAG,mBAAA,SAAAhiD,GACA,GAAA2iC,GAAAh/B,KAAAo1C,gBAIA,OAHAp1C,MAAAmR,KAAA,4BAA6C9U,IAAAsO,OAAAq0B,IAC7Ch/B,KAAAm+C,sBACAn+C,KAAAmR,KAAA,qBAAsC9U,MACtC2D,MAQAs+C,cAAA,WAIA,IAHA,GAAAC,GAAAv+C,KAAA+L,aACA9P,EAAA,EACAoV,EAAAktC,EAAAriD,OACaD,EAAAoV,EAASpV,IACtBsiD,EAAAtiD,GAAA4O,IAAA,YAIA,OAFA7K,MAAAm+C,sBACAn+C,KAAA+9C,uBACA/9C,MAQAw+C,0BAAA,SAAAniD,GACA,GAAA4sC,GAAAjpC,KAAAo1C,iBACAC,EAAAr1C,KAAAs1C,iBASA,QARAD,GAAApM,IACAjpC,KAAAmR,KAAA,4BAA+CxG,OAAA0qC,GAAApM,EAAA5sC,MAE/C2D,KAAAs+C,iBACAjJ,GAAApM,KACAjpC,KAAAmR,KAAA,qBAAwC9U,IAAAsO,OAAA0qC,IACxCA,KAAAlkC,KAAA,eAEAnR,MAQAutC,QAAA,WACAvtC,KAAA0jB,UAAA,UACA,IAAA4E,GAAAtoB,KAAA6oC,SASA,OARA7oC,MAAAy+C,kBACAn2B,EAAAo2B,YAAA1+C,KAAA2oC,eACArgB,EAAAo2B,YAAA1+C,KAAAsnC,qBACAtnC,MAAA2oC,cACArgB,EAAAC,YACAD,EAAAC,WAAAC,aAAAxoB,KAAAsnC,cAAAtnC,KAAA6oC,iBAEA7oC,MAAA6oC,UACA7oC,MAQA8pC,MAAA,WAIA,MAHA9pC,MAAAq+C,qBACAr+C,KAAAg+C,sBACAh+C,KAAA4pC,aAAA5pC,KAAAmuC,YACAnuC,KAAA0jB,UAAA,UAOAymB,aAAA,SAAA1xB,GACA,GAAAwwB,GAAAjpC,KAAAo1C,gBAEAnM,GACAA,EAAAiO,gBAAAz+B,GAGAzY,KAAA2+C,qBAAAlmC,IAOAkmC,qBAAA,SAAAlmC,GACA,OAAAxc,GAAA,EAAAoV,EAAArR,KAAA2R,SAAAzV,OAAiDD,EAAAoV,IAASpV,EAC1D+D,KAAA2R,SAAA1V,IAAA+D,KAAA2R,SAAA1V,GAAAg7C,QAGAj3C,KAAA2R,SAAA1V,GAAAi7C,gBAAAz+B,IAOAozB,UAAA,SAAAjI,EAAAjgB,EAAA4nB,GAKA,GAAAqT,GAAA5+C,KAAA6+C,+BAAAjb,GACAx8B,EAAApH,KAAA0jB,UAAA,YAAAkgB,EAAAjgB,EAAA4nB,EAGA,OADAvrC,MAAA8+C,8BAAAlb,EAAAgb,GACAx3C,GASAy3C,+BAAA,SAAAjb,GACA,GAAAmb,IAAA,wEACA,IAAAnb,EAAAL,OAAAK,EAAAL,QAAAvjC,KAAAo1C,iBAAA,CAEA,GAAA4J,KAKA,OAJAD,GAAA5lD,QAAA,SAAA8X,GACA+tC,EAAA/tC,GAAA2yB,EAAA3yB,KAEAjR,KAAAo1C,iBAAA6J,iBAAArb,GACAob,EAGA,aAUAF,8BAAA,SAAAlb,EAAAob,GACAA,GACApb,EAAA/4B,IAAAm0C,IAOAtS,cAAA,SAAAnY,EAAAqP,EAAApsB,GACA,GAAAonC,EAGAA,GAAA5+C,KAAA6+C,+BAAAjb,GACA5jC,KAAA0jB,UAAA,gBAAA6Q,EAAAqP,EAAApsB,GACAxX,KAAA8+C,8BAAAlb,EAAAgb,KAMA,QAAA3tC,KAAAjH,QAAA07B,aACA,cAAAz0B,IACAjH,OAAAC,OAAAgH,GAAAjH,OAAA07B,aAAAz0B,GAIAjH,QAAA6F,mBAEA7F,OAAAC,OAAA/I,UAAAg+C,oBAAA,cAUAl1C,OAAAm1C,QAAAn1C,OAAAC,UAIA,WAEA,GAAAm1C,IACAp+B,GAAA,EACAq+B,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEA35B,EAAAhc,OAAA6G,KAAAmV,YACAC,EAAAjc,OAAA6G,KAAAoV,cAEAjc,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAAC,OAAA/I,WAMA0+C,WACA,WACA,YACA,WACA,YACA,WACA,YACA,WACA,aAOA3K,oBAAA,WAEAj1C,KAAA6/C,cAEA75B,EAAAhc,OAAAjT,OAAA,SAAAiJ,KAAA8/C,WAGA95B,EAAAhmB,KAAA2oC,cAAA,YAAA3oC,KAAA+/C,cACA/5B,EAAAhmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cACAh6B,EAAAhmB,KAAA2oC,cAAA,WAAA3oC,KAAAigD,aACAj6B,EAAAhmB,KAAA2oC,cAAA,QAAA3oC,KAAAkgD,eACAl6B,EAAAhmB,KAAA2oC,cAAA,cAAA3oC,KAAAmgD,gBAGAn6B,EAAAhmB,KAAA2oC,cAAA,aAAA3oC,KAAA+/C,cACA/5B,EAAAhmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cAEA,mBAAAI,UAAA,OAAAA,WACAA,QAAAl1C,IAAAlL,KAAA2oC,cAAA,UAAA3oC,KAAAqgD,YACAD,QAAAl1C,IAAAlL,KAAA2oC,cAAA,OAAA3oC,KAAAsgD,SACAF,QAAAl1C,IAAAlL,KAAA2oC,cAAA,cAAA3oC,KAAAugD,sBACAH,QAAAl1C,IAAAlL,KAAA2oC,cAAA,QAAA3oC,KAAAwgD,UACAJ,QAAAl1C,IAAAlL,KAAA2oC,cAAA,YAAA3oC,KAAAygD,gBAOAZ,YAAA,WACA7/C,KAAA+/C,aAAA//C,KAAA+/C,aAAAz8B,KAAAtjB,MACAA,KAAAggD,aAAAhgD,KAAAggD,aAAA18B,KAAAtjB,MACAA,KAAA0gD,WAAA1gD,KAAA0gD,WAAAp9B,KAAAtjB,MACAA,KAAA8/C,UAAA9/C,KAAA8/C,UAAAx8B,KAAAtjB,MACAA,KAAAqgD,WAAArgD,KAAAqgD,WAAA/8B,KAAAtjB,MACAA,KAAAsgD,QAAAtgD,KAAAsgD,QAAAh9B,KAAAtjB,MACAA,KAAAwgD,SAAAxgD,KAAAwgD,SAAAl9B,KAAAtjB,MACAA,KAAAygD,aAAAzgD,KAAAygD,aAAAn9B,KAAAtjB,MACAA,KAAAugD,qBAAAvgD,KAAAugD,qBAAAj9B,KAAAtjB,MACAA,KAAAkgD,cAAAlgD,KAAAkgD,cAAA58B,KAAAtjB,MACAA,KAAAigD,YAAAjgD,KAAAigD,YAAA38B,KAAAtjB,MACAA,KAAAmgD,eAAAngD,KAAAmgD,eAAA78B,KAAAtjB,OAMAy+C,gBAAA,WACAx4B,EAAAjc,OAAAjT,OAAA,SAAAiJ,KAAA8/C,WAEA75B,EAAAjmB,KAAA2oC,cAAA,YAAA3oC,KAAA+/C,cACA95B,EAAAjmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD;AACA/5B,EAAAjmB,KAAA2oC,cAAA,WAAA3oC,KAAAigD,aACAh6B,EAAAjmB,KAAA2oC,cAAA,QAAA3oC,KAAAkgD,eACAj6B,EAAAjmB,KAAA2oC,cAAA,cAAA3oC,KAAAmgD,gBAEAl6B,EAAAjmB,KAAA2oC,cAAA,aAAA3oC,KAAA+/C,cACA95B,EAAAjmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cAEA,mBAAAI,UAAA,UAAAA,WACAA,QAAAnuC,OAAAjS,KAAA2oC,cAAA,UAAA3oC,KAAAqgD,YACAD,QAAAnuC,OAAAjS,KAAA2oC,cAAA,OAAA3oC,KAAAsgD,SACAF,QAAAnuC,OAAAjS,KAAA2oC,cAAA,cAAA3oC,KAAAugD,sBACAH,QAAAnuC,OAAAjS,KAAA2oC,cAAA,QAAA3oC,KAAAwgD,UACAJ,QAAAnuC,OAAAjS,KAAA2oC,cAAA,YAAA3oC,KAAAygD,gBASAJ,WAAA,SAAAhkD,EAAAskD,GACA3gD,KAAA4gD,sBAAA5gD,KAAA4gD,qBAAAvkD,EAAAskD,IAQAL,QAAA,SAAAjkD,EAAAskD,GACA3gD,KAAA6gD,UAAA7gD,KAAA6gD,SAAAxkD,EAAAskD,IAOAT,cAAA,SAAA7jD,GACA2D,KAAA8gD,eAAAzkD,IAOA4jD,YAAA,SAAA5jD,GACA,GAAAsO,GAAA3K,KAAA28C,cACA38C,MAAAmR,KAAA,aAA8BxG,SAAAtO,MAC9B2D,KAAA28C,eAAA,KACAhyC,KAAAwG,KAAA,YAAyC9U,OAQzCkkD,qBAAA,SAAAlkD,EAAAskD,GACA3gD,KAAA+gD,uBAAA/gD,KAAA+gD,sBAAA1kD,EAAAskD,IAQAH,SAAA,SAAAnkD,EAAAskD,GACA3gD,KAAAghD,WAAAhhD,KAAAghD,UAAA3kD,EAAAskD,IAQAF,aAAA,SAAApkD,EAAAskD,GACA3gD,KAAAihD,eAAAjhD,KAAAihD,cAAA5kD,EAAAskD,IAOAR,eAAA,SAAA9jD,GAKA,MAJA2D,MAAA20C,kBACAt4C,EAAA6kD,kBACA7kD,EAAA8kD,mBAEA,GAOApB,aAAA,SAAA1jD,GACA2D,KAAAohD,cAAA/kD,GAEA2pB,EAAAhc,OAAA4D,SAAA,WAAA5N,KAAA0gD,YACA16B,EAAAhc,OAAA4D,SAAA,YAAA5N,KAAAggD,cAEA/5B,EAAAjmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cACA/5B,EAAAjmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cAEA,eAAA3jD,EAAA0Q,KAEAkZ,EAAAjmB,KAAA2oC,cAAA,YAAA3oC,KAAA+/C,eAGA/5B,EAAAhc,OAAA4D,SAAA,UAAA5N,KAAA0gD,YACA16B,EAAAhc,OAAA4D,SAAA,YAAA5N,KAAAggD,gBAQAU,WAAA,SAAArkD,GAYA,GAXA2D,KAAAqhD,YAAAhlD,GAEA4pB,EAAAjc,OAAA4D,SAAA,UAAA5N,KAAA0gD,YACAz6B,EAAAjc,OAAA4D,SAAA,WAAA5N,KAAA0gD,YAEAz6B,EAAAjc,OAAA4D,SAAA,YAAA5N,KAAAggD,cACA/5B,EAAAjc,OAAA4D,SAAA,YAAA5N,KAAAggD,cAEAh6B,EAAAhmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cACAh6B,EAAAhmB,KAAA2oC,cAAA,YAAA3oC,KAAAggD,cAEA,aAAA3jD,EAAA0Q,KAAA,CAGA,GAAAyW,GAAAxjB,IACAytB,YAAA,WACAzH,EAAAxC,EAAAmlB,cAAA,YAAAnlB,EAAAu8B,eACS,OAQTC,aAAA,SAAA3jD,IACA2D,KAAAmmC,qBAAA9pC,EAAA8kD,gBAAA9kD,EAAA8kD,iBACAnhD,KAAAshD,cAAAjlD,IAMAyjD,UAAA,WACA9/C,KAAAmnC,cASAoa,cAAA,SAAA52C,EAAAskC,GACA,GAAAoG,GAAAr1C,KAAAo1C,kBAAAp1C,KAAAs1C,iBAEA,UACA3qC,IACAA,EAAA62C,UACA72C,IAAA0qC,KAEA1qC,GAAA0qC,IAEA1qC,IAAA0qC,IAAAr1C,KAAA80C,gBAEA7F,GACAjvC,KAAAyhD,kBACAzhD,KAAAyzC,YACAxE,EAAAz6B,IAAAxU,KAAAyhD,iBAAAjtC,GACAy6B,EAAAx6B,IAAAzU,KAAAyhD,iBAAAhtC,KAWA4sC,YAAA,SAAAhlD,GACA,GAAAsO,GAAA+2C,GAAA,EAAA7sB,EAAA70B,KAAA60C,kBACAkH,EAAA/7C,KAAA80C,eACA6M,GAAA5F,GAAA,IAAAA,EAAApmC,MAAA,IAAAomC,EAAAnmC,GAEA,IAAA5V,KAAAy0C,eAAAz0C,KAAA4hD,oBAEA,WADA5hD,MAAA6hD,wBAAAxlD,EAIAw4B,KACA70B,KAAA8hD,4BACAJ,GAAA7sB,EAAAktB,iBAGAp3C,EAAA+2C,EAAA1hD,KAAAo8C,WAAA//C,GAAA,GAAAw4B,EAAAlqB,MAEA,IAAAq3C,GAAAhiD,KAAAuhD,cAAA52C,EAAA3K,KAAAilB,WAAA5oB,GAEAsO,KAAAg3C,EACA3hD,KAAAiiD,mBAAA5lD,IAKA2D,KAAA80C,eAAA,KACA90C,KAAA60C,kBAAA,MAGAlqC,IACAA,EAAA62C,UAAA,GAGAxhD,KAAAkiD,sBAAA7lD,EAAAsO,EAAA,MACAA,MAAAw3C,SAAA,GACAH,GAAAhiD,KAAAmL,aASA+2C,sBAAA,SAAA7lD,EAAAsO,EAAAy3C,GACApiD,KAAAk/C,oBAAA7iD,EAAAsO,GACA3K,KAAAqiD,aAAAhmD,EAAA+lD,EAAAz3C,IAAA,OASA03C,aAAA,SAAAhmD,EAAA+lD,EAAAE,GACA,GAAA33C,GAAA8f,eAAA63B,GAAAtiD,KAAAo8C,WAAA//C,GAAAimD,EACA7F,EAAAz8C,KAAAy8C,YACA1jD,GAAqBsD,IAAAsO,SAAA43C,WAAA9F,EAErBz8C,MAAAmR,KAAA,SAAAixC,EAAArpD,GACA4R,KAAAwG,KAAA,QAAAixC,EAAArpD,EACA,QAAAkD,GAAA,EAAqBA,EAAAwgD,EAAAvgD,OAAoBD,IACzCwgD,EAAAxgD,GAAAkV,KAAA,QAAAixC,EAAArpD,IAOA+oD,0BAAA,WAEA,GAAAjtB,GAAA70B,KAAA60C,kBACAlqC,EAAAkqB,EAAAlqB,MAEAA,GAAA63C,WACA73C,EAAA63C,UAAA,GAGA73C,EAAAw+B,YACAnpC,KAAAyiD,iBAAA93C,IAEAkqB,EAAAktB,iBAAA/hD,KAAAimC,UAAAt7B,EAAA+3C,qBACA1iD,KAAAmR,KAAA,mBAAsCxG,WACtCA,EAAAwG,KAAA,cAQAsxC,iBAAA,SAAA93C,GACA,GAAA3K,KAAA2iD,kBAAA3iD,KAAA4iD,iBAAA,CAEA,GAAAC,GAAAl4C,EAAAivC,uBACAjvC,EAAAigC,iBACA5qC,KAAA2iD,iBACA3iD,KAAA4iD,iBAEAj4C,GAAA0lC,QAAArwC,KAAA2iD,iBACAh4C,EAAA2lC,QAAAtwC,KAAA4iD,iBAEAj4C,EAAAgL,KAAAktC,EAAAruC,EACA7J,EAAAiL,IAAAitC,EAAApuC,EAEAzU,KAAA2iD,iBAAA,KACA3iD,KAAA4iD,iBAAA,OAQAE,0BAAA,SAAAzmD,GACA2D,KAAA4hD,qBAAA,EACA5hD,KAAAg+C,oBAAA3hD,GAAA8O,YACAnL,KAAAya,QACAzQ,OAAA6G,KAAAyJ,YAAAta,UAAAmuC,WAEA,IAAAc,GAAAjvC,KAAAilB,WAAA5oB,EACA2D,MAAAk1C,iBAAAlG,YAAAC,GACAjvC,KAAAqiD,aAAAhmD,EAAA,SAOA0mD,0BAAA,SAAA1mD,GACA,GAAA2D,KAAA4hD,oBAAA,CACA,GAAA3S,GAAAjvC,KAAAilB,WAAA5oB,EACA2D,MAAAk1C,iBAAA7F,YAAAJ,GAEAjvC,KAAA47C,UAAA57C,KAAAm0C,mBACAn0C,KAAAqiD,aAAAhmD,EAAA,SAOAwlD,wBAAA,SAAAxlD,GACA2D,KAAA4hD,qBAAA,EACA5hD,KAAAya,QACAza,KAAAmuC,WAAA50B,UAEAvZ,KAAAk1C,iBAAA5F,YACAtvC,KAAAqiD,aAAAhmD,EAAA,OAWA+kD,cAAA,SAAA/kD,GAGA,GAAA2mD,GAAA,SAAA3mD,GAAA,IAAAA,EAAA4mD,MAAA,IAAA5mD,EAAA6mD,MACA,IAAAF,EAIA,YAHAhjD,KAAA40C,gBACA50C,KAAAqiD,aAAAhmD,EAAA,OAAAsO,IAAA,MAKA,IAAA3K,KAAAy0C,cAEA,WADAz0C,MAAA8iD,0BAAAzmD,EAKA,KAAA2D,KAAA60C,kBAAA,CAIA,GAAAlqC,GAAA3K,KAAAo8C,WAAA//C,GACA4yC,EAAAjvC,KAAAilB,WAAA5oB,GAAA,EAGA2D,MAAAyhD,iBAAAxS,CAEA,IAAA+S,GAAAhiD,KAAAuhD,cAAA52C,EAAAskC,GACAkU,EAAAnjD,KAAAojD,aAAA/mD,EAAAsO,EAEA3K,MAAAm3C,sBAAA96C,EAAAsO,GACA3K,KAAAqjD,gBAAAhnD,EAAAsO,EAAAskC,GAEAkU,IACAnjD,KAAAsjD,gBAAAjnD,EAAAsO,GACAA,EAAA3K,KAAAo1C,kBAGAzqC,KACAA,EAAA0sC,aAAA1sC,EAAAw3C,UAAAgB,IACAnjD,KAAAujD,iBAAAlnD,EAAAsO,GACA3K,KAAA23C,uBAAAt7C,EAAAsO,IAGAA,IAAA3K,KAAAo1C,kBAAAzqC,IAAA3K,KAAAs1C,oBACAt1C,KAAAs+C,gBACA3zC,EAAA0sC,YAAAr3C,KAAA89C,gBAAAnzC,EAAAtO,KAGA2D,KAAAqiD,aAAAhmD,EAAA,OAAAsO,IAAA,MAEAq3C,GAAAhiD,KAAAmL,cAMAo4C,iBAAA,SAAAlnD,EAAAsO,GACA3K,KAAAimC,UAAAt7B,EAAA64C,YAGA74C,EAAA2rC,kBAAAt2C,KAAAilB,WAAA5oB,KACA2D,KAAAwmC,oBAAA77B,IAQA04C,gBAAA,SAAAhnD,EAAAsO,EAAAskC,GACAjvC,KAAAw+C,0BAAAniD,GAEAsO,KAAA0sC,WACAr3C,KAAA89C,gBAAAnzC,EAAAtO,GAEA2D,KAAAyzC,YACAzzC,KAAA80C,gBACA8C,GAAA3I,EAAAz6B,EACAqjC,GAAA5I,EAAAx6B,EACAmB,IAAA,EACAD,KAAA,KASAogC,mBAAA,SAAAprC,GACA3K,KAAA2iD,iBAAA3iD,KAAA60C,kBAAAlqC,OAAA0lC,QACArwC,KAAA4iD,iBAAA5iD,KAAA60C,kBAAAlqC,OAAA2lC,OAEA,IAAAxF,GAAAngC,EAAAigC,gBAEAjgC,GAAA0lC,QAAA,SACA1lC,EAAA2lC,QAAA,SAEA3lC,EAAAgL,KAAAm1B,EAAAt2B,EACA7J,EAAAiL,IAAAk1B,EAAAr2B,EAEAzU,KAAA60C,kBAAAl/B,KAAAhL,EAAAgL,KACA3V,KAAA60C,kBAAAj/B,IAAAjL,EAAAiL,KAOA6tC,mBAAA,SAAA94C,GACA,GAAAk4C,GAAAl4C,EAAAivC,uBACAjvC,EAAAigC,iBACA5qC,KAAA2iD,iBACA3iD,KAAA4iD,iBAEAj4C,GAAA0lC,QAAArwC,KAAA2iD,iBACAh4C,EAAA2lC,QAAAtwC,KAAA4iD,iBAEAj4C,EAAAgL,KAAAktC,EAAAruC,EACA7J,EAAAiL,IAAAitC,EAAApuC,EAEAzU,KAAA2iD,iBAAA,KACA3iD,KAAA4iD,iBAAA,MAYAtB,cAAA,SAAAjlD,GAEA,GAAAsO,GAAAskC,CAEA,IAAAjvC,KAAAy0C,cAEA,WADAz0C,MAAA+iD,0BAAA1mD,EAGA,yBAAAA,GAAAqnD,SAAArnD,EAAAqnD,QAAAxnD,OAAA,IAIA,GAAA6/C,GAAA/7C,KAAA80C,cAGAiH,IACA9M,EAAAjvC,KAAAilB,WAAA5oB,GAAA,GAEA0/C,EAAApmC,KAAAs5B,EAAAz6B,EAAAunC,EAAAnE,GACAmE,EAAAnmC,IAAAq5B,EAAAx6B,EAAAsnC,EAAAlE,GAEA73C,KAAAy1C,aAEAz1C,KAAA60C,kBAKA70C,KAAA2jD,iBAAAtnD,IAJAsO,EAAA3K,KAAAo8C,WAAA//C,GACA2D,KAAAk/C,oBAAA7iD,EAAAsO,IAKA3K,KAAAqiD,aAAAhmD,EAAA,OAAAsO,IAAA,QAOAm2C,eAAA,SAAAzkD,GACA2D,KAAAmR,KAAA,eACA9U,OAQAsnD,iBAAA,SAAAtnD,GACA,GAAA4yC,GAAAjvC,KAAAilB,WAAA5oB,GACAw4B,EAAA70B,KAAA60C,iBAEAhgB,GAAA+uB,OAAA,EACA/uB,EAAAlqB,OAAA62C,UAAA,EAEAxhD,KAAA6jD,sBAAAxnD,EAAAw4B,GACA70B,KAAA8jD,wBAAAznD,EAAAw4B,EAAAoa,GAEApa,EAAAktB,iBAAA/hD,KAAAmL,aAMA24C,wBAAA,SAAAznD,EAAAw4B,EAAAoa,GACA,GAAAz6B,GAAAy6B,EAAAz6B,EACAC,EAAAw6B,EAAAx6B,EACA9J,EAAAkqB,EAAAlqB,OACAmrC,EAAAjhB,EAAAihB,OACAiM,GAAA,CAEA,YAAAjM,GACAiM,EAAA/hD,KAAAy7C,cAAAjnC,EAAAC,KAAAzU,KAAA+jD,MAAA,WAAAp5C,EAAAtO,GAEA,UAAAy5C,GACAiM,EAAA/hD,KAAAgkD,SAAA3nD,EAAAw4B,EAAArgB,EAAAC,KAAAzU,KAAA+jD,MAAA,UAAAp5C,EAAAtO,GAEA,WAAAy5C,GACAiM,EAAA/hD,KAAAw6C,aAAAhmC,EAAAC,EAAA,OAAAzU,KAAA+jD,MAAA,UAAAp5C,EAAAtO,GAEA,WAAAy5C,GACAiM,EAAA/hD,KAAAw6C,aAAAhmC,EAAAC,EAAA,OAAAzU,KAAA+jD,MAAA,UAAAp5C,EAAAtO,GAEA,UAAAy5C,GACAiM,EAAA/hD,KAAAi5C,YAAAzkC,EAAAC,EAAA,OAAAzU,KAAA+jD,MAAA,UAAAp5C,EAAAtO,GAEA,UAAAy5C,GACAiM,EAAA/hD,KAAAi5C,YAAAzkC,EAAAC,EAAA,OAAAzU,KAAA+jD,MAAA,UAAAp5C,EAAAtO,IAGA0lD,EAAA/hD,KAAAk4C,iBAAA1jC,EAAAC,GACAstC,IACA/hD,KAAA+jD,MAAA,SAAAp5C,EAAAtO,GACA2D,KAAA47C,UAAAjxC,EAAAspC,YAAAj0C,KAAAi0C,cAGApf,EAAAktB,mBAMAgC,MAAA,SAAAtzC,EAAA9F,EAAAtO,GACA2D,KAAAmR,KAAA,UAAAV,GAAwC9F,SAAAtO,MACxCsO,EAAAwG,KAAAV,GAA8BpU,OAM9BwnD,sBAAA,SAAAxnD,EAAAw4B,GACA,aAAAA,EAAAihB,QAAA,WAAAjhB,EAAAihB,QAAA,WAAAjhB,EAAAihB,OAAA,CACA,GAAAwB,GAAAt3C,KAAA61C,uBAAAhhB,EAAAlqB,SAGA2sC,IAAA,WAAAziB,EAAAwb,SAAA,WAAAxb,EAAAyb,WAEAgH,GAAA,WAAAziB,EAAAwb,SAAA,WAAAxb,EAAAyb,WAEAtwC,KAAA21C,yBACA9gB,EAAA+uB,OAAA,KAaAI,SAAA,SAAA3nD,EAAAw4B,EAAArgB,EAAAC,GACA,OAAApY,EAAA2D,KAAAozC,eAAApzC,KAAAmzC,mBAAAte,EAAAlqB,OAAAnP,IAAA,mBAMAq5B,EAAA+uB,OAAA,UAAA/uB,EAAAovB,eACAjkD,KAAA21C,yBAGA9gB,EAAAovB,cAAA,eACAjkD,KAAAw6C,aAAAhmC,EAAAC,EAAA,aAVAogB,EAAAovB,cAAA,QACAjkD,KAAAw6C,aAAAhmC,EAAAC,KAmBAyqC,oBAAA,SAAA7iD,EAAAsO,GACA,IAAAA,EAEA,MADA3K,MAAA47C,UAAA57C,KAAAk0C,gBACA,CAGA,IAAAF,GAAArpC,EAAAqpC,aAAAh0C,KAAAg0C,WACA,IAAArpC,EAAA0sC,WAIA,CACA,GAAApO,GAAAjpC,KAAAo1C,iBAEAqC,EAAA9sC,EAAA2rC,qBACArN,MAAAv2B,SAAA/H,KACAA,EAAA2rC,kBAAAt2C,KAAAilB,WAAA5oB,GAAA,GAEAo7C,GAIAz3C,KAAAkkD,iBAAAzM,EAAA9sC,EAAAtO,GAHA2D,KAAA47C,UAAA5H,OAVAh0C,MAAA47C,UAAA5H,EAkBA,WAMAkQ,iBAAA,SAAAzM,EAAA9sC,EAAAtO,GACA,GAAAo7C,IAAA2H,GACAp/C,KAAA47C,UAAA57C,KAAAmkD,wBAAA1M,EAAA9sC,EAAAtO,QAEA,YAAAo7C,IAAA9sC,EAAAy5C,iBAKA,MADApkD,MAAA47C,UAAA57C,KAAAk0C,gBACA,CAJAl0C,MAAA47C,UAAA57C,KAAAo0C,kBAWA+P,wBAAA,SAAA1M,EAAA9sC,EAAAtO,GACA,GAAAkmB,GAAAtP,KAAAgsB,MAAAt0B,EAAA05C,WAAA,OAaA,OAXA9hC,GAAA,IACAA,GAAA,GAEAA,GAAA68B,EAAA3H,GACAp7C,EAAA2D,KAAAwzC,eAAA4L,EAAA3H,GAAA,QAEAl1B,GAAA,GAGAA,GAAA,EAEAviB,KAAA4/C,UAAAr9B,SAMA,WAEA,GAAA9O,GAAAR,KAAAQ,IACAC,EAAAT,KAAAS,GAEA1J,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAAC,OAAA/I,WAQAkiD,aAAA,SAAA/mD,EAAAsO,GACA,GAAA0qC,GAAAr1C,KAAAs1C,iBACA,OAAAj5C,GAAA2D,KAAA0zC,eAAA/oC,KAAA0sC,aACAr3C,KAAAo1C,kBAAAC,OAAA1qC,IACA3K,KAAAyzC,WAQA6P,gBAAA,SAAAjnD,EAAAsO,GACA,GAAAs+B,GAAAjpC,KAAAo1C,kBAEAzqC,IAAAs+B,IAEAt+B,EAAA3K,KAAAo8C,WAAA//C,GAAA,OAMA4sC,EACAjpC,KAAAskD,mBAAA35C,EAAAtO,GAGA2D,KAAAukD,mBAAA55C,EAAAtO,GAGA2D,KAAAkpC,cACAlpC,KAAAkpC,aAAAsb,eAOAF,mBAAA,SAAA35C,EAAAtO,GACA,GAAA4sC,GAAAjpC,KAAAo1C,gBAEA,IAAAnM,EAAAv2B,SAAA/H,IAKA,GAHAs+B,EAAAwb,iBAAA95C,GACAA,EAAAE,IAAA,aAEA,IAAAo+B,EAAAx2B,OAKA,MAHAzS,MAAAq+C,mBAAAhiD,OAEA2D,MAAA89C,gBAAA7U,EAAA12B,KAAA,QAKA02B,GAAAyb,cAAA/5C,EAEA3K,MAAAmR,KAAA,qBAAsCxG,OAAAs+B,EAAA5sC,MACtC4sC,EAAAp+B,IAAA,cAMA05C,mBAAA,SAAA55C,EAAAtO,GAEA,GAAA2D,KAAA69C,eAAAlzC,IAAA3K,KAAA69C,cAAA,CAEA,GAAAta,GAAAvjC,KAAA2kD,aAAAh6C,EACA44B,GAAAmhB,gBAEA1kD,KAAAk+C,eAAA3a,GACAvjC,KAAA69C,cAAA,KAEA79C,KAAAmR,KAAA,qBAAwCxG,OAAA44B,EAAAlnC,MAGxCsO,EAAAE,IAAA,cAOA85C,aAAA,SAAAh6C,GAEA,GAAAqH,GAAAhS,KAAA+L,aACA64C,EAAA5yC,EAAA9N,QAAAlE,KAAA69C,eAAA7rC,EAAA9N,QAAAyG,GACAk6C,EAAAD,GACA5kD,KAAA69C,cAAAlzC,IACAA,EAAA3K,KAAA69C,cAEA,OADA79C,MAAA69C,cAAAjB,WAAA58C,KAAA69C,cAAAiH,cACA,GAAA96C,QAAAinC,MAAA4T,GACA96C,OAAA/J,QAQA+kD,sBAAA,SAAA1oD,GAEA,GAAAknC,GAAAvjC,KAAAglD,iBAGA,KAAAzhB,EAAArnC,OACA8D,KAAA89C,gBAAAva,EAAA,GAAAlnC,GAEAknC,EAAArnC,OAAA,IACAqnC,EAAA,GAAAv5B,QAAAinC,MAAA1N,EAAA0hB,WACAl7C,OAAA/J,OAEAujC,EAAAmhB,gBACA1kD,KAAAk+C,eAAA3a,EAAAlnC,GACAknC,EAAAihB,aACAxkD,KAAAmR,KAAA,qBAAwCxG,OAAA44B,IACxCvjC,KAAAmL,cAOA65C,gBAAA,WAWA,OATAE,GADA3hB,KAEAljB,EAAArgB,KAAA80C,eAAA8C,GACAt3B,EAAAtgB,KAAA80C,eAAA+C,GACAn/B,EAAA2H,EAAArgB,KAAA80C,eAAAn/B,KACAgD,EAAA2H,EAAAtgB,KAAA80C,eAAAl/B,IACAuvC,EAAA,GAAAn7C,QAAAuK,MAAAd,EAAA4M,EAAA3H,GAAAjF,EAAA6M,EAAA3H,IACAysC,EAAA,GAAAp7C,QAAAuK,MAAAb,EAAA2M,EAAA3H,GAAAhF,EAAA4M,EAAA3H,IACAgpC,EAAAthC,IAAA3H,GAAA4H,IAAA3H,EAEA1c,EAAA+D,KAAA2R,SAAAzV,OAAwCD,MACxCipD,EAAAllD,KAAA2R,SAAA1V,KAEAipD,KAAA7N,YAAA6N,EAAA70B,UAIA60B,EAAAG,mBAAAF,EAAAC,IACAF,EAAAI,sBAAAH,EAAAC,IACAF,EAAAhP,cAAAiP,IACAD,EAAAhP,cAAAkP,MAEAF,EAAAr6C,IAAA,aACA04B,EAAA3rC,KAAAstD,GAGAvD,OAMA,MAAApe,IAMA0e,mBAAA,SAAA5lD,GACA2D,KAAAyzC,WAAAzzC,KAAA80C,gBACA90C,KAAA+kD,sBAAA1oD,EAGA,IAAA4sC,GAAAjpC,KAAAo1C,gBACAnM,KACAA,EAAAsc,mBAAApc,YACAF,EAAAuY,UAAA,EACAxhD,KAAA47C,UAAA57C,KAAAk0C,gBAIAl0C,KAAA80C,eAAA,KACA90C,KAAA60C,kBAAA,WAOA,WAEA,GAAA2Q,GAAAx7C,OAAA07B,aAAAgI,SAAA,uBAEA1jC,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA07B,aAAAxkC,WAiCA8K,UAAA,SAAAjT,GACAA,SAEA,IAAAkI,GAAAlI,EAAAkI,QAAA,MACAwkD,EAAA1sD,EAAA0sD,SAAA,EACAC,EAAA3sD,EAAA2sD,YAAA,EACAC,GACAhwC,KAAA5c,EAAA4c,MAAA,EACAC,IAAA7c,EAAA6c,KAAA,EACA1L,MAAAnR,EAAAmR,OAAA,EACAC,OAAApR,EAAAoR,QAAA,EAEA,OAAAnK,MAAA4lD,0BAAA3kD,EAAAwkD,EAAAE,EAAAD,IAMAE,0BAAA,SAAA3kD,EAAAwkD,EAAAE,EAAAD,GAEA,GAAAG,GAAA7lD,KAAAmkC,WACA2hB,EAAA9lD,KAAAqkC,YACA0hB,GAAAJ,EAAAz7C,OAAAlK,KAAAmkC,YAAAuhB,EACAM,GAAAL,EAAAz7C,OAAAlK,KAAAqkC,aAAAqhB,EACA99B,EAAA5nB,KAAA8oC,UACAmd,EAAAr+B,EAAA89B,EACAQ,EAAAlmD,KAAAqmC,kBACAjrB,GAAA8qC,EAAA,GAAAP,EAAAhwC,MAAA+vC,EACArqC,GAAA6qC,EAAA,GAAAP,EAAA/vC,KAAA8vC,EACAS,GAAAF,EAAA,IAAAA,EAAA7qC,EAAAC,GACA+qC,EAAApmD,KAAA6mC,WAEA7mC,MAAAqmC,kBAAA8f,EAEAnmD,KAAA6mC,cAAA7mC,KAAA6mC,aAAA,GACAgf,IAAAE,GAAAD,IAAAE,EAEAhmD,KAAAmoC,eAA4Bj+B,MAAA67C,EAAA57C,OAAA67C,IAG5BhmD,KAAAmL,WAEA,IAAAS,GAAA5L,KAAAqmD,YAAAplD,EAAAwkD,EAAAE,EAMA,OALAS,KAAApmD,KAAA6mC,YAAAuf,GACApmD,KAAAqmC,kBAAA6f,EAGAlmD,KAAAmoC,eAA0Bj+B,MAAA27C,EAAA17C,OAAA27C,IAC1Bl6C,GAMAy6C,YAAA,SAAAplD,EAAAwkD,GAEA,GAAAhsC,GAAAzZ,KAAAunC,iBAAAx9B,MAEA,SAAA9I,IACAA,EAAA,OAGA,IAAA2K,GAAA45C,EACA/rC,EAAAzN,UAAA,SAAA/K,EAAAwkD,GACAhsC,EAAAzN,UAAA,SAAA/K,EAEA,OAAA2K,IAWA06C,wBAAA,SAAArlD,EAAAykD,EAAAD,GACA,MAAAzlD,MAAAgM,WACA/K,SACAykD,aACAD,kBAQAz7C,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA07B,aAAAxkC,WAeAqlD,qBAAA,SAAAC,EAAAn0C,EAAAmF,GACA,MAAAxX,MAAAymD,aAAAD,EAAAn0C,EAAAmF,IAwBAivC,aAAA,SAAAD,EAAAn0C,EAAAmF,GACA,GAAAgvC,EAAA,CAKA,GAAAE,GAAA,gBAAAF,GACAjwD,KAAAC,MAAAgwD,GACAx8C,OAAA6G,KAAAzJ,OAAA4b,MAAAwjC,EAEAxmD,MAAA8pC,OAEA,IAAAtmB,GAAAxjB,IAmBA,OAlBAA,MAAA2mD,gBAAAD,EAAA10C,QAAA,WACAwR,EAAAojC,cAAAF,EAAA,iBAEAA,GAAA10C,cACA00C,GAAA5gB,sBACA4gB,GAAA1gB,mBACA0gB,GAAA3a,iBACA2a,GAAA1a,OAKA,QAAA/6B,KAAAy1C,GACAljC,EAAAvS,GAAAy1C,EAAAz1C,EAEAoB,WAEKmF,GACLxX,OAQA4mD,cAAA,SAAAF,EAAAr0C,GACA,GAAAmR,GAAAxjB,KACA6mD,GACAhhB,iBAAA,EACAE,cAAA,EACAD,iBAAA,EACAE,cAAA,EAGA,MAAA0gB,EAAA5gB,iBAAA4gB,EAAA1gB,cAAA0gB,EAAA3a,YAAA2a,EAAA1a,SAEA,YADA35B,OAIA,IAAAy0C,GAAA,WACAD,EAAA/gB,iBAAA+gB,EAAA7gB,cAAA6gB,EAAAhhB,iBAAAghB,EAAA9gB,eACAviB,EAAArY,YACAkH,QAIArS,MAAA+mD,eAAA,kBAAAL,EAAA5gB,gBAAA+gB,EAAAC,GACA9mD,KAAA+mD,eAAA,eAAAL,EAAA1gB,aAAA6gB,EAAAC,GACA9mD,KAAA+mD,eAAA,kBAAAL,EAAA3a,WAAA8a,EAAAC,GACA9mD,KAAA+mD,eAAA,eAAAL,EAAA1a,QAAA6a,EAAAC,GAEAA,KAUAC,eAAA,SAAA3sC,EAAA5iB,EAAAqvD,EAAAx0C,GACA,GAAAmR,GAAAxjB,IAEA,OAAAxI,QAKA,oBAAA4iB,GAAA,iBAAAA,EACApQ,OAAAS,MAAAsN,WAAAvgB,EAAA,SAAA4f,GACAoM,EAAApJ,GAAAhD,EACAyvC,EAAAzsC,IAAA,EACA/H,SAIArS,KAAA,MAAAgK,OAAA6G,KAAAgG,OAAAqM,WAAA9I,GAAA,IAAA5iB,EAAA,WACAqvD,EAAAzsC,IAAA,EACA/H,eAdAw0C,EAAAzsC,IAAA,IAyBAusC,gBAAA,SAAA30C,EAAAK,EAAAmF,GACA,GAAAgM,GAAAxjB,IAEA,KAAAgS,GAAA,IAAAA,EAAA9V,OAEA,YADAmW,OAIA,IAAAR,GAAA7R,KAAA6R,iBACA7R,MAAA6R,mBAAA,EAEA7H,OAAA6G,KAAA0G,eAAAvF,EAAA,SAAA4F,GACAA,EAAAze,QAAA,SAAA4H,EAAA2M,GAGA8V,EAAA1R,SAAA/Q,EAAA2M,KAGA8V,EAAA3R,oBACAQ,QACK,KAAAmF,IAQLwvC,WAAA,SAAA/lD,EAAAoR,GACArS,KAAAgjB,MAAA,SAAAA,GACA3Q,EAAA2Q,EAAAhX,UAAA/K,OAUAgmD,yBAAA,SAAAhmD,EAAAykD,EAAArzC,GACArS,KAAAgjB,MAAA,SAAAA,GACA3Q,EAAA2Q,EAAAsjC,wBAAArlD,EAAAykD,OASA1iC,MAAA,SAAA3Q,EAAAkG,GACA,GAAA3M,GAAArV,KAAAmD,UAAAsG,KAAA4tC,OAAAr1B,GACAvY,MAAAknD,iBAAA,SAAAlkC,GACAA,EAAAyjC,aAAA76C,EAAA,WACAyG,KAAA2Q,QAWAkkC,iBAAA,SAAA70C,GACA,GAAA2V,GAAAhe,OAAA4D,SAAA8L,cAAA,SAEAsO,GAAA9d,MAAAlK,KAAAmkC,WACAnc,EAAA7d,OAAAnK,KAAAqkC,WAEA,IAAArhB,GAAA,GAAAhZ,QAAAC,OAAA+d,EACAhF,GAAAvI,OAAAza,KAAAya,OACAza,KAAA8lC,iBACA9iB,EAAAgkB,mBAAAhnC,KAAA8lC,gBAAAp7B,IAAA,WACAsY,EAAA7X,YACAkH,KAAA2Q,KAEAA,EAAAmkC,uBAAAnnD,KAAAmnD,uBACAnkC,EAAAokC,uBAAApnD,KAAAonD,wBAGA/0C,KAAA2Q,MAMA,SAAAjQ,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACA9M,EAAAhM,EAAA6G,KAAAmF,QACAkN,EAAAlZ,EAAA6G,KAAAgG,OAAAqM,WACArP,EAAA7J,EAAA6G,KAAAgD,iBACAwzC,EAAAr9C,EAAA07B,aAAAgI,SAAA,cAEA1jC,GAAA1S,SA0BA0S,EAAA1S,OAAA0S,EAAA6G,KAAAiT,aAuQA/W,KAAA,SAQAsjC,QAAA,OAQAC,QAAA,MAOA16B,IAAA,EAOAD,KAAA,EAOAzL,MAAA,EAOAC,OAAA,EAOA6Q,OAAA,EAOAC,OAAA,EAOAU,OAAA,EAOAC,OAAA,EAOA0L,QAAA,EAOAxc,MAAA,EAOAoQ,MAAA,EAOAC,MAAA,EAOAmsC,WAAA,GAOAzQ,oBAAA,EAOA7C,YAAA,KAOAC,WAAA,KAOAlpC,QAAA,EAOAw8C,YAAA,yBAOAC,gBAAA,KAOAC,YAAA,wBAQAC,kBAAA,KAOAC,YAAA,OAOAC,gBAAA,KAUAvU,iBAAA,EAUAC,kBAAA,EAOAviC,KAAA,aASA82C,SAAA,UAOAC,yBAAA,cAOAjiB,gBAAA,GAQAmR,yBAAA,GAOAphB,OAAA,KAOAwa,YAAA,EAMApC,gBAAA,KAOAF,cAAA,OAOAC,eAAA,QAOAga,iBAAA,GAOA7iB,OAAA,KAOA8iB,wBAAA,GAOAC,kBAAA,EAMA93B,gBAAA,KAOA+3B,cAAA,IAQA7Q,YAAA,EAOAD,SAAA,EAOA/mB,SAAA,EAOA83B,aAAA,EAOAvR,YAAA,EAOAwN,kBAAA,EAOAgE,oBAAA,GAOA9T,oBAAA,EAOAtP,sBAAA,EAOAvqB,OAAA,KAOA4tC,eAAA,EAOAC,eAAA,EAOAC,cAAA,EAOA9N,cAAA,EAOAC,cAAA,EAOA8N,gBAAA,EAOArP,cAAA,EAOAC,cAAA,EAQAuB,iBAAA,EASA/O,mBAAA,EAQAzxB,gBAAA,0QAKA/e,MAAA,KAMA2oB,WAAA,SAAAhrB,GACAA,GACAiH,KAAA+nC,WAAAhvC,IAQA0vD,cAAA,SAAA1vD,IACAA,EAAAgY,OAAAhY,EAAAgY,KAAAgyB,YAAAhqC,EAAAgY,eAAA/G,GAAAkxB,UACAl7B,KAAA6K,IAAA,UAAAb,GAAAkxB,SAAAniC,EAAAgY,QAEAhY,EAAA68B,SAAA78B,EAAA68B,OAAAmN,YAAAhqC,EAAA68B,iBAAA5rB,GAAAkxB,UACAl7B,KAAA6K,IAAA,YAAAb,GAAAkxB,SAAAniC,EAAA68B,UAQA8yB,aAAA,SAAA3vD,IACAA,EAAAgY,OAAAhY,EAAAgY,KAAA1P,QAAAtI,EAAAgY,eAAA/G,GAAA+5B,SACA/jC,KAAA6K,IAAA,UAAAb,GAAA+5B,QAAAhrC,EAAAgY,QAEAhY,EAAA68B,SAAA78B,EAAA68B,OAAAv0B,QAAAtI,EAAA68B,iBAAA5rB,GAAA+5B,SACA/jC,KAAA6K,IAAA,YAAAb,GAAA+5B,QAAAhrC,EAAA68B,UAQA+yB,cAAA,SAAA5vD,GACA,GAAAA,EAAA0hB,QAAA,gBAAA1hB,GAAA0hB,OAAA,CAIA,GAAAmuC,GAAA5+C,EAAA6G,KAAAiL,gBAAA/iB,EAAA0hB,OACA,oBAAAmuC,KACA5oD,KAAAya,OAAA,GAAAJ,UAAA,MAAAuuC,MAQA7gB,WAAA,SAAAhvC,GACA,OAAAkY,KAAAlY,GACAiH,KAAA6K,IAAAoG,EAAAlY,EAAAkY,GAEAjR,MAAAyoD,cAAA1vD,GACAiH,KAAA0oD,aAAA3vD,GACAiH,KAAA2oD,cAAA5vD,IAQA87B,UAAA,SAAApc,EAAAowC,GACA7oD,KAAAujC,QAAAvjC,KAAAujC,MAAAulB,gBAAA9oD,KAAAujC,QAAAvjC,KAAA+J,OAAAm/B,cACAlpC,KAAAujC,MAAA1O,UAAApc,EAEA,IAAAqyB,GAAA+d,EAAA7oD,KAAA8yC,oBAAA9yC,KAAA4qC,gBACAnyB,GAAAW,UAAA0xB,EAAAt2B,EAAAs2B,EAAAr2B,GACAgE,EAAAa,OAAAzF,EAAA7T,KAAA8K,QACA2N,EAAA4d,MACAr2B,KAAAgb,QAAAhb,KAAA2b,SAAA,GACA3b,KAAAib,QAAAjb,KAAA4b,SAAA,IAEAnD,EAAAoc,UAAA,IAAA5hB,KAAAuI,IAAA3H,EAAA7T,KAAAkb,QAAA,OACAzC,EAAAoc,UAAA,EAAA5hB,KAAAuI,IAAA3H,EAAA7T,KAAAmb,QAAA,UAQAioB,SAAA,SAAAmI,GACA,GAAA/F,GAAAx7B,EAAA1S,OAAAkuC,oBAEAp+B,GACA2F,KAAA/M,KAAA+M,KACAsjC,QAAArwC,KAAAqwC,QACAC,QAAAtwC,KAAAswC,QACA36B,KAAAK,EAAAhW,KAAA2V,KAAA6vB,GACA5vB,IAAAI,EAAAhW,KAAA4V,IAAA4vB,GACAt7B,MAAA8L,EAAAhW,KAAAkK,MAAAs7B,GACAr7B,OAAA6L,EAAAhW,KAAAmK,OAAAq7B,GACAz0B,KAAA/Q,KAAA+Q,MAAA/Q,KAAA+Q,KAAAqyB,SAAApjC,KAAA+Q,KAAAqyB,WAAApjC,KAAA+Q,KACA6kB,OAAA51B,KAAA41B,QAAA51B,KAAA41B,OAAAwN,SAAApjC,KAAA41B,OAAAwN,WAAApjC,KAAA41B,OACAwa,YAAAp6B,EAAAhW,KAAAowC,YAAA5K,GACAwI,gBAAAhuC,KAAAguC,gBAAAhuC,KAAAguC,gBAAA9rC,SAAAlC,KAAAguC,gBACAF,cAAA9tC,KAAA8tC,cACAC,eAAA/tC,KAAA+tC,eACAga,iBAAA/xC,EAAAhW,KAAA+nD,iBAAAviB,GACAxqB,OAAAhF,EAAAhW,KAAAgb,OAAAwqB,GACAvqB,OAAAjF,EAAAhW,KAAAib,OAAAuqB,GACA16B,MAAAkL,EAAAhW,KAAAqkD,WAAA7e,GACA7pB,MAAA3b,KAAA2b,MACAC,MAAA5b,KAAA4b,MACA0L,QAAAtR,EAAAhW,KAAAsnB,QAAAke,GACAN,OAAAllC,KAAAklC,QAAAllC,KAAAklC,OAAA9B,SAAApjC,KAAAklC,OAAA9B,WAAApjC,KAAAklC,OACA7U,QAAArwB,KAAAqwB,QACA5V,OAAAza,KAAAya,QAAAzS,OAAAhI,KAAAya,QACAorB,gBAAA7lC,KAAA6lC,gBACAgiB,SAAA7nD,KAAA6nD,SACAC,yBAAA9nD,KAAA8nD,yBACA33B,gBAAAnwB,KAAAmwB,gBAAAnwB,KAAAmwB,gBAAAjuB,SAAAlC,KAAAmwB,gBACAjV,MAAAlF,EAAAhW,KAAAkb,MAAAsqB,GACArqB,MAAAnF,EAAAhW,KAAAmb,MAAAqqB,GASA,OANAxlC,MAAAglC,uBACA59B,EAAApH,KAAA+oD,qBAAA3hD,IAGA4C,EAAA6G,KAAAwH,uBAAArY,KAAAoH,EAAAmkC,GAEAnkC,GAQAokC,iBAAA,SAAAD,GAEA,MAAAvrC,MAAAojC,SAAAmI,IAOAwd,qBAAA,SAAA3hD,GACA,GAAAlG,GAAA8I,EAAA6G,KAAA8F,SAAAvP,EAAA2F,MAAA7L,UACAiZ,EAAAjZ,EAAAiZ,eAeA,OAbAA,GAAAhhB,QAAA,SAAA8X,GACA7J,EAAA6J,KAAA/P,EAAA+P,UACA7J,GAAA6J,EAEA,IAAAif,GAAA,mBAAA54B,OAAA4J,UAAA6N,SAAA5N,KAAAiG,EAAA6J,KACA,mBAAA3Z,OAAA4J,UAAA6N,SAAA5N,KAAAD,EAAA+P,GAGAif,IAAA,IAAA9oB,EAAA6J,GAAA/U,QAAA,IAAAgF,EAAA+P,GAAA/U,cACAkL,GAAA6J,KAIA7J,GAOA2H,SAAA,WACA,kBAAAmU,EAAAljB,KAAA+M,MAAA,KAQAvR,IAAA,SAAA4e,GACA,MAAApa,MAAAoa,IAOA4uC,iBAAA,WACA,GAAAhuC,GAAAhb,KAAAgb,OAAAC,EAAAjb,KAAAib,MACA,IAAAjb,KAAAujC,MAAA,CACA,GAAA0lB,GAAAjpD,KAAAujC,MAAAylB,kBACAhuC,IAAAiuC,EAAAjuC,OACAC,GAAAguC,EAAAhuC,OAEA,OAAcD,SAAAC,WAMdiuC,WAAA,SAAAnoD,GACA,OAAAkQ,KAAAlQ,GACAf,KAAA2pC,KAAA14B,EAAAlQ,EAAAkQ,KAWApG,IAAA,SAAAzR,EAAA5B,GAYA,MAXA,gBAAA4B,GACA4G,KAAAkpD,WAAA9vD,GAGA,kBAAA5B,IAAA,WAAA4B,EACA4G,KAAA2pC,KAAAvwC,EAAA5B,EAAAwI,KAAAxE,IAAApC,KAGA4G,KAAA2pC,KAAAvwC,EAAA5B,GAGAwI,MASA2pC,KAAA,SAAAvwC,EAAA5B,GACA,GAAA2xD,GAAA,WAAA/vD,GAAA,WAAAA,CAuBA,OArBA+vD,KACA3xD,EAAAwI,KAAAopD,gBAAA5xD,IAEA,WAAA4B,GAAA5B,EAAA,GACAwI,KAAA2b,OAAA3b,KAAA2b,MACAnkB,OAEA,WAAA4B,GAAA5B,EAAA,GACAwI,KAAA4b,OAAA5b,KAAA4b,MACApkB,OAEA,WAAA4B,IAAA5B,eAAAwS,GAAA66B,SACArtC,EAAA,GAAAwS,GAAA66B,OAAArtC,IAGAwI,KAAA5G,GAAA5B,EAEA,UAAA4B,GAAA,WAAAA,IACA4G,KAAAkoD,cAAAj1C,KAAAQ,IAAA,KAAAR,KAAAS,IAAA1T,KAAAkK,MAAAlK,KAAAmK,UAGAnK,MASAqpD,WAAA,aAUAC,OAAA,SAAAlvC,GACA,GAAA5iB,GAAAwI,KAAAxE,IAAA4e,EAIA,OAHA,iBAAA5iB,IACAwI,KAAA6K,IAAAuP,GAAA5iB,GAEAwI,MASAoY,cAAA,SAAA5gB,GAEA,MADAwI,MAAAupD,WAAA/xD,EACAwI,MASAwpD,qBAAA,WACA,MAAAxpD,MAAA+J,QAAA/J,KAAA+J,OAAAs8B,kBACArmC,KAAA+J,OAAAs8B,mBAEA,cAQAgE,OAAA,SAAA5xB,EAAAgxC,GAEA,IAAAzpD,KAAAkK,OAAA,IAAAlK,KAAAmK,SAAAnK,KAAAqwB,UAIA5X,EAAAU,OAGAnZ,KAAA0pD,yBAAAjxC,GACAzY,KAAA2pD,wBAAAlxC,GACAgxC,GACAzpD,KAAA60B,UAAApc,GAEAzY,KAAA4pD,YAAAnxC,GACAzY,KAAAwuC,WAAA/1B,GACAzY,KAAAiqC,kBAAAxxB,GACAzY,KAAA6pD,iBAAApxC,GACAzY,KAAA8pD,eAAArxC,GACAzY,KAAAmwB,iBACA1X,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAmwB,iBAEAnwB,KAAAya,QAAAzQ,EAAA6G,KAAAyJ,YAAAta,KAAAyY,GACAzY,KAAAovC,QAAA32B,EAAAgxC,GACAzpD,KAAAya,QAAAhC,EAAAc,UAEAd,EAAAc,YAQA0wB,kBAAA,SAAAxxB,GACAzY,KAAA6lC,kBAIAptB,EAAA8xB,UAAAvqC,KAAA6lC,gBAEAptB,EAAA+xB,UACAxqC,KAAAkK,MAAA,GACAlK,KAAAmK,OAAA,EACAnK,KAAAkK,MACAlK,KAAAmK,QAIAnK,KAAA+pD,cAAAtxC,KAOAmxC,YAAA,SAAAnxC,GACAzY,KAAAujC,OACAvjC,KAAAujC,MAAAqmB,YAAAnxC,GAEAA,EAAA45B,aAAAryC,KAAAsnB,SAGAuiC,iBAAA,SAAApxC,GACAzY,KAAA41B,SACAnd,EAAA41B,UAAAruC,KAAAowC,YACA33B,EAAA61B,QAAAtuC,KAAA8tC,cACAr1B,EAAA81B,SAAAvuC,KAAA+tC,eACAt1B,EAAAuxC,WAAAhqD,KAAA+nD,iBACAtvC,EAAA21B,YAAApuC,KAAA41B,OAAA4N,OACAxjC,KAAA41B,OAAA4N,OAAA/qB,EAAAzY,MACAA,KAAA41B,SAIAk0B,eAAA,SAAArxC,GACAzY,KAAA+Q,OACA0H,EAAA8xB,UAAAvqC,KAAA+Q,KAAAyyB,OACAxjC,KAAA+Q,KAAAyyB,OAAA/qB,EAAAzY,MACAA,KAAA+Q,OAWAmrC,aAAA,SAAAzjC,EAAAwxC,EAAAC,GACAD,IAIA,EAAAA,EAAA/tD,QACA+tD,EAAAryD,KAAAgC,MAAAqwD,KAEA5C,EACA5uC,EAAAk1B,YAAAsc,GAGAC,KAAAzxC,KASAy+B,gBAAA,SAAAz+B,EAAAgxC,GACA,MAAAzpD,KAAAi3C,QAAAwS,GACAzpD,KAAAujC,OAAAvjC,KAAAujC,QAAAvjC,KAAA+J,OAAAqrC,kBADA,CAKA,GAEAr8C,GAFAiwC,EAAAhpC,KAAAwpD,uBACAh2B,EAAAxzB,KAAAu2C,qBAEA/iB,GAAAxpB,EAAA6G,KAAA8J,0BAAAquB,EAAAxV,GACAz6B,EAAAiR,EAAA6G,KAAAiK,YAAA0Y,GAEA/a,EAAAU,OACAV,EAAAW,UAAArgB,EAAAqiB,WAAAriB,EAAAsiB,YACA5C,EAAA41B,UAAA,EAAAruC,KAAAioD,kBACAxvC,EAAA45B,YAAAryC,KAAAwhD,SAAAxhD,KAAAgoD,wBAAA,EAEAhoD,KAAAujC,OAAAvjC,KAAAujC,QAAAvjC,KAAA+J,OAAAqrC,kBACA38B,EAAAa,OAAAzF,EAAA9a,EAAA+R,QACA9K,KAAAmqD,mBAAA1xC,EAAA1f,KAGA0f,EAAAa,OAAAzF,EAAA7T,KAAA8K,QACA9K,KAAAoqD,YAAA3xC,IAEAzY,KAAAmqC,aAAA1xB,GACAA,EAAAc,YAOAi1B,WAAA,SAAA/1B,GACA,GAAAzY,KAAAklC,OAAA,CAIA,GAAAmlB,GAAArqD,KAAA+J,QAAA/J,KAAA+J,OAAAs8B,kBAAA,MACAikB,EAAAtqD,KAAA+J,QAAA/J,KAAA+J,OAAAs8B,kBAAA,MACA4iB,EAAAjpD,KAAAgpD,kBACAhpD,MAAA+J,QAAA/J,KAAA+J,OAAAq9B,qBACAijB,GAAArgD,EAAAqG,iBACAi6C,GAAAtgD,EAAAqG,kBAEAoI,EAAAg2B,YAAAzuC,KAAAklC,OAAAzU,MACAhY,EAAAi2B,WAAA1uC,KAAAklC,OAAAJ,MAAAulB,EAAAC,IAAArB,EAAAjuC,OAAAiuC,EAAAhuC,QAAA,EACAxC,EAAAk2B,cAAA3uC,KAAAklC,OAAArC,QAAAwnB,EAAApB,EAAAjuC,OACAvC,EAAAm2B,cAAA5uC,KAAAklC,OAAApC,QAAAwnB,EAAArB,EAAAhuC,SAOA8uC,cAAA,SAAAtxC,GACAzY,KAAAklC,SAIAzsB,EAAAg2B,YAAA,GACAh2B,EAAAi2B,WAAAj2B,EAAAk2B,cAAAl2B,EAAAm2B,cAAA,IAOA2b,YAAA,SAAA9xC,GACA,GAAAzY,KAAA+Q,KAAA,CAKA,GADA0H,EAAAU,OACAnZ,KAAA+Q,KAAAiyB,kBAAA,CACA,GAAAhE,GAAAh/B,KAAA+Q,KAAAiyB,iBACAvqB,GAAAoc,UAAAj7B,MAAA6e,EAAAumB,GAEAh/B,KAAA+Q,KAAAyyB,QACA/qB,EAAAW,WACApZ,KAAAkK,MAAA,EAAAlK,KAAA+Q,KAAA8xB,SAAA,GACA7iC,KAAAmK,OAAA,EAAAnK,KAAA+Q,KAAA+xB,SAAA,GAEA,YAAA9iC,KAAA6nD,SACApvC,EAAA1H,KAAA,WAGA0H,EAAA1H,OAEA0H,EAAAc,YAOAixC,cAAA,SAAA/xC,GACA,GAAAzY,KAAA41B,QAAA,IAAA51B,KAAAowC,YAAA,CAWA,GAPApwC,KAAAklC,SAAAllC,KAAAklC,OAAAH,cACA/kC,KAAA+pD,cAAAtxC,GAGAA,EAAAU,OAEAnZ,KAAAk8C,aAAAzjC,EAAAzY,KAAAguC,gBAAAhuC,KAAAyqD,qBACAzqD,KAAA41B,OAAAoN,kBAAA,CACA,GAAAhE,GAAAh/B,KAAA41B,OAAAoN,iBACAvqB,GAAAoc,UAAAj7B,MAAA6e,EAAAumB,GAEAh/B,KAAA41B,OAAA4N,QACA/qB,EAAAW,WACApZ,KAAAkK,MAAA,EAAAlK,KAAA41B,OAAAiN,SAAA,GACA7iC,KAAAmK,OAAA,EAAAnK,KAAA41B,OAAAkN,SAAA,GAEArqB,EAAAmd,SACAnd,EAAAc,YAUAyJ,MAAA,SAAA3Q,EAAAk5B,GACA,MAAAvrC,MAAA4jB,YAAA7L,WACA/X,KAAA4jB,YAAA7L,WAAA/X,KAAAojC,SAAAmI,GAAAl5B,GAEA,GAAArI,GAAA1S,OAAA0I,KAAAojC,SAAAmI,KAUAmf,aAAA,SAAAr4C,EAAAtZ,GACA,GAAA4xD,GAAA3qD,KAAAgM,UAAAjT,EAMA,OALAiR,GAAA6G,KAAAqG,UAAAyzC,EAAA,SAAAvzC,GACA/E,GACAA,EAAA,GAAArI,GAAAS,MAAA2M,MAGApX,MAgBAgM,UAAA,SAAAjT,GACAA,SAEA,IAAAivB,GAAAhe,EAAA6G,KAAA2I,sBACAoxC,EAAA5qD,KAAA6qD,iBAEA7iC,GAAA9d,MAAA0gD,EAAA1gD,MACA8d,EAAA7d,OAAAygD,EAAAzgD,OACAH,EAAA6G,KAAAwX,YAAAL,EAAA,MACA,IAAAje,GAAA,GAAAC,GAAA07B,aAAA1d,GAAgDye,oBAAA1tC,EAAA0tC,qBAEhD,SAAA1tC,EAAAkI,SACAlI,EAAAkI,OAAA,QAGA,SAAAlI,EAAAkI,SACA8I,EAAA87B,gBAAA,OAGA,IAAAilB,IACA7T,OAAAj3C,KAAAxE,IAAA,UACAma,KAAA3V,KAAA+qD,UACAn1C,IAAA5V,KAAAgrD,SAGAhrD,MAAA6K,IAAA,aACA7K,KAAAqrC,oBAAA,GAAArhC,GAAAuK,MAAAxK,EAAAo6B,WAAA,EAAAp6B,EAAAs6B,YAAA,qBAEA,IAAA4mB,GAAAjrD,KAAA+J,MACAA,GAAAmB,IAAAlL,KACA,IAAA4L,GAAA7B,EAAAiC,UAAAjT,EAQA,OANAiH,MAAA6K,IAAAigD,GAAA3hB,YACAnpC,KAAA+J,OAAAkhD,EAEAlhD,EAAAwjC,UACAxjC,EAAA,KAEA6B,GAQAs/C,OAAA,SAAAn+C,GACA,MAAA/M,MAAA+M,UAOA4F,WAAA,WACA,UAQAi7B,OAAA,SAAArC,GAEA,MAAAvrC,MAAAojC,SAAAmI,IAmDA4f,YAAA,SAAA/wC,EAAArhB,GACAA,SAEA,IAAA0qC,IAAsBV,cAEtBU,GAAA12B,KAAAhU,EAAAgU,OAAAhU,EAAAglC,IAAAhlC,EAAAilC,GAAA,mBACAyF,EAAAniB,QACAjB,GAAAtnB,EAAAsnB,GACAC,GAAAvnB,EAAAunB,GACA5H,GAAA3f,EAAA2f,GACAC,GAAA5f,EAAA4f,KAGA5f,EAAAglC,IAAAhlC,EAAAilC,MACAyF,EAAAniB,OAAAyc,GAAAhlC,EAAAglC,GACA0F,EAAAniB,OAAA0c,GAAAjlC,EAAAilC,IAGAjlC,EAAAiqC,oBAAAS,EAAAT,kBAAAjqC,EAAAiqC,kBAEA,QAAAG,KAAApqC,GAAAgqC,WAAA,CACA,GAAAtS,GAAA,GAAAzmB,GAAA0mB,MAAA33B,EAAAgqC,WAAAI,GACAM,GAAAV,WAAAnrC,MACA0xB,OAAA6Z,EACA1S,QAAA2O,QACA9X,QAAAmJ,EAAAG,aAIA,MAAA5wB,MAAA6K,IAAAuP,EAAApQ,EAAAkxB,SAAA4I,UAAA9jC,KAAAyjC,KAsBA2nB,eAAA,SAAAryD,GACA,MAAAiH,MAAA6K,IAAA,UAAAb,GAAA+5B,QAAAhrC,KAyBAk1C,UAAA,SAAAl1C,GACA,MAAAiH,MAAA6K,IAAA,SAAA9R,EAAA,GAAAiR,GAAA66B,OAAA9rC,GAAA,OASAsyD,SAAA,SAAA56B,GAEA,MADAzwB,MAAA6K,IAAA,OAAA4lB,GACAzwB,MASA6b,SAAA,SAAA/Q,GACA,GAAAwgD,IAAA,WAAAtrD,KAAAqwC,SAAA,WAAArwC,KAAAswC,UAAAtwC,KAAAszC,gBAYA,OAVAgY,IACAtrD,KAAA+1C,qBAGA/1C,KAAA6K,IAAA,QAAAC,GAEAwgD,GACAtrD,KAAAurD,eAGAvrD,MASAwrD,QAAA,WAEA,MADAxrD,MAAA+J,QAAA/J,KAAA+J,OAAA2gC,cAAA1qC,MACAA,MASAyrD,gBAAA,WAEA,MADAzrD,MAAA+J,QAAA/J,KAAA+J,OAAAmhC,sBAAAlrC,MACAA,MASA0rD,QAAA,WAEA,MADA1rD,MAAA+J,QAAA/J,KAAA+J,OAAA8gC,cAAA7qC,MACAA,MASA2rD,gBAAA,WAEA,MADA3rD,MAAA+J,QAAA/J,KAAA+J,OAAAohC,sBAAAnrC,MACAA,MASA8qC,OAAA,WAEA,MADA9qC,MAAA+J,QAAA/J,KAAA+J,OAAAkB,aAAAjL,MACAA,MASA4rD,eAAA,WAEA,MADA5rD,MAAA+J,QAAA/J,KAAA+J,OAAAghC,qBAAA/qC,MACAA,MAQAiS,OAAA,WAEA,MADAjS,MAAA+J,QAAA/J,KAAA+J,OAAAkI,OAAAjS,MACAA,MASA6rD,gBAAA,SAAAxvD,EAAA4yC,GACAA,KAAAjvC,KAAA+J,OAAAkb,WAAA5oB,EACA,IAAAyvD,GAAA,GAAA9hD,GAAAuK,MAAA06B,EAAAz6B,EAAAy6B,EAAAx6B,GACAs3C,EAAA/rD,KAAA8yC,mBAKA,OAJA9yC,MAAA8K,QACAghD,EAAA9hD,EAAA6G,KAAAoD,YACA63C,EAAAC,EAAA/hD,EAAA6G,KAAAgD,kBAAA7T,KAAA8K,UAGA0J,EAAAs3C,EAAAt3C,EAAAu3C,EAAAv3C,EACAC,EAAAq3C,EAAAr3C,EAAAs3C,EAAAt3C,IASAi1C,yBAAA,SAAAjxC,GACAzY,KAAA8nD,2BACArvC,EAAAqvC,yBAAA9nD,KAAA8nD,6BAKA99C,EAAA6G,KAAAiJ,gBAAA9P,EAAA1S,QAOA0S,EAAA1S,OAAA4J,UAAAoY,OAAAtP,EAAA1S,OAAA4J,UAAA2a,SAEAiH,EAAA9Y,EAAA1S,OAAA4J,UAAA8I,EAAAuH,YAUAvH,EAAA1S,OAAAkuC,oBAAA,EAQAx7B,EAAA1S,OAAA4/B,MAAA,IAEC7gC,SAGD,WAEA,GAAAwd,GAAA7J,OAAA6G,KAAAgD,iBACAm4C,GACAr2C,SACAm1B,OAAA,EACAsS,MAAA,IAEA6O,GACAr2C,QACAk1B,OAAA,EACAqS,OAAA,GAGAnzC,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAWAgrD,uBAAA,SAAAh4C,EAAAi4C,EAAAC,EAAAC,EAAAC,GACA,GAEAzpB,GAAAC,EAAA4W,EAFAllC,EAAAN,EAAAM,EACAC,EAAAP,EAAAO,CAyCA,OAtCA,gBAAA03C,GACAA,EAAAH,EAAAG,GAGAA,GAAA,GAGA,gBAAAE,GACAA,EAAAL,EAAAK,GAGAA,GAAA,GAGAxpB,EAAAwpB,EAAAF,EAEA,gBAAAC,GACAA,EAAAH,EAAAG,GAGAA,GAAA,GAGA,gBAAAE,GACAA,EAAAL,EAAAK,GAGAA,GAAA,GAGAxpB,EAAAwpB,EAAAF,GAEAvpB,GAAAC,KACA4W,EAAA15C,KAAA25C,4BACAnlC,EAAAN,EAAAM,EAAAquB,EAAA6W,EAAAllC,EACAC,EAAAP,EAAAO,EAAAquB,EAAA4W,EAAAjlC,GAGA,GAAAzK,QAAAuK,MAAAC,EAAAC,IAUA83C,uBAAA,SAAAr4C,EAAAm8B,EAAAC,GACA,GAAA9qC,GAAAxF,KAAAksD,uBAAAh4C,EAAAm8B,EAAAC,EAAA,kBACA,OAAAtwC,MAAA8K,MACAd,OAAA6G,KAAAoD,YAAAzO,EAAA0O,EAAAL,EAAA7T,KAAA8K,QAEAtF,GAUAo0C,uBAAA,SAAA9O,EAAAuF,EAAAC,GACA,GAAA9qC,GAAAxF,KAAAksD,uBAAAphB,EAAA,kBAAAuF,EAAAC,EACA,OAAAtwC,MAAA8K,MACAd,OAAA6G,KAAAoD,YAAAzO,EAAAslC,EAAAj3B,EAAA7T,KAAA8K,QAEAtF,GAOAolC,eAAA,WACA,GAAA4hB,GAAA,GAAAxiD,QAAAuK,MAAAvU,KAAA2V,KAAA3V,KAAA4V,IACA,OAAA5V,MAAAusD,uBAAAC,EAAAxsD,KAAAqwC,QAAArwC,KAAAswC,UAkBAmc,iBAAA,SAAApc,EAAAC,GACA,GAAAxF,GAAA9qC,KAAA4qC,gBACA,OAAA5qC,MAAA45C,uBAAA9O,EAAAuF,EAAAC,IAUAkJ,aAAA,SAAAtlC,EAAAm8B,EAAAC,GACA,GACA9qC,GAAAoqC,EADA9E,EAAA9qC,KAAA4qC,gBAcA,OAVAplC,GADA,mBAAA6qC,IAAA,mBAAAC,GACAtwC,KAAAksD,uBAAAphB,EAAA,kBAAAuF,EAAAC,GAGA,GAAAtmC,QAAAuK,MAAAvU,KAAA2V,KAAA3V,KAAA4V,KAGAg6B,EAAA,GAAA5lC,QAAAuK,MAAAL,EAAAM,EAAAN,EAAAO,GACAzU,KAAA8K,QACA8kC,EAAA5lC,OAAA6G,KAAAoD,YAAA27B,EAAA9E,GAAAj3B,EAAA7T,KAAA8K,SAEA8kC,EAAAx7B,eAAA5O,IAmBA6lC,oBAAA,SAAAqhB,EAAArc,EAAAC,GACA,GAAAxF,GAAA9qC,KAAAusD,uBAAAG,EAAArc,EAAAC,GACAnN,EAAAnjC,KAAA45C,uBAAA9O,EAAA9qC,KAAAqwC,QAAArwC,KAAAswC,QAEAtwC,MAAA6K,IAAA,OAAAs4B,EAAA3uB,GACAxU,KAAA6K,IAAA,MAAAs4B,EAAA1uB,IAMAk4C,eAAA,SAAAC,GACA,GAIAC,GAAAC,EAJAhiD,EAAA+I,EAAA7T,KAAA8K,OACAiiD,EAAA/sD,KAAAmkC,WACA6oB,EAAA/5C,KAAA4B,IAAA/J,GAAAiiD,EACAE,EAAAh6C,KAAA2B,IAAA9J,GAAAiiD,CAKAF,GADA,gBAAA7sD,MAAAqwC,QACA2b,EAAAhsD,KAAAqwC,SAGArwC,KAAAqwC,QAAA,GAGAyc,EADA,gBAAAF,GACAZ,EAAAY,GAGAA,EAAA,GAEA5sD,KAAA2V,MAAAq3C,GAAAF,EAAAD,GACA7sD,KAAA4V,KAAAq3C,GAAAH,EAAAD,GACA7sD,KAAAmpC,YACAnpC,KAAAqwC,QAAAuc,GAQA7W,mBAAA,WACA/1C,KAAAktD,iBAAAltD,KAAAqwC,QACArwC,KAAAmtD,iBAAAntD,KAAAswC,OAEA,IAAAxF,GAAA9qC,KAAA4qC,gBAEA5qC,MAAAqwC,QAAA,SACArwC,KAAAswC,QAAA,SAEAtwC,KAAA2V,KAAAm1B,EAAAt2B,EACAxU,KAAA4V,IAAAk1B,EAAAr2B,GAQA82C,aAAA,WACA,GAAA1I,GAAA7iD,KAAA45C,uBACA55C,KAAA4qC,iBACA5qC,KAAAktD,iBACAltD,KAAAmtD,iBAEAntD,MAAAqwC,QAAArwC,KAAAktD,iBACAltD,KAAAswC,QAAAtwC,KAAAmtD,iBAEAntD,KAAA2V,KAAAktC,EAAAruC,EACAxU,KAAA4V,IAAAitC,EAAApuC,EAEAzU,KAAAktD,iBAAA,KACAltD,KAAAmtD,iBAAA,MAMAra,kBAAA,WACA,MAAA9yC,MAAA45C,uBAAA55C,KAAA4qC,iBAAA,oBAOA,WAEA,QAAAwiB,GAAAC,GACA,OACA,GAAArjD,QAAAuK,MAAA84C,EAAA1N,GAAAnrC,EAAA64C,EAAA1N,GAAAlrC,GACA,GAAAzK,QAAAuK,MAAA84C,EAAAhO,GAAA7qC,EAAA64C,EAAAhO,GAAA5qC,GACA,GAAAzK,QAAAuK,MAAA84C,EAAA9N,GAAA/qC,EAAA64C,EAAA9N,GAAA9qC,GACA,GAAAzK,QAAAuK,MAAA84C,EAAA5N,GAAAjrC,EAAA64C,EAAA5N,GAAAhrC,IAIA,GAAAZ,GAAA7J,OAAA6G,KAAAgD,iBACAy5C,EAAAtjD,OAAA6G,KAAA8J,yBAEA3Q,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAOAmsD,QAAA,KAQAhI,mBAAA,SAAAkI,EAAAC,GACA,GAAAH,GAAAD,EAAAptD,KAAAqtD,SACAI,EAAAzjD,OAAA2yB,aAAAmB,0BACAuvB,EACAE,EACAC,EAEA,wBAAAC,EAAA7wB,QAQAuQ,qBAAA,SAAAugB,GACA,GAAAD,GAAAzjD,OAAA2yB,aAAAgB,wBACAyvB,EAAAptD,KAAAqtD,SACAD,EAAAM,EAAAL,SAGA,wBAAAI,EAAA7wB,QACA8wB,EAAAtgB,wBAAAptC,OACAA,KAAAotC,wBAAAsgB,IAQAtgB,wBAAA,SAAAsgB,GAGA,IAFA,GAAAt4C,GAAAg4C,EAAAptD,KAAAqtD,SACApxD,EAAA,EACYA,EAAA,EAAOA,IACnB,IAAAyxD,EAAAxX,cAAA9gC,EAAAnZ,IACA,QAGA,WASAqpD,sBAAA,SAAAiI,EAAAC,GACA,GAAA5C,GAAA5qD,KAAA6qD,iBAEA,OACAD,GAAAj1C,MAAA43C,EAAA/4C,GACAo2C,EAAAj1C,KAAAi1C,EAAA1gD,OAAAsjD,EAAAh5C,GACAo2C,EAAAh1C,KAAA23C,EAAA94C,GACAm2C,EAAAh1C,IAAAg1C,EAAAzgD,QAAAqjD,EAAA/4C,GASAyhC,cAAA,SAAAhiC,GACAlU,KAAAqtD,SACArtD,KAAAmpC,WAEA,IAAAwkB,GAAA3tD,KAAA4tD,eAAA5tD,KAAAqtD,SACAh4C,EAAArV,KAAA6tD,iBAAA35C,EAAAy5C,EAGA,YAAAt4C,KAAA,OAQAu4C,eAAA,SAAAP,GACA,OACAS,SACAx7C,EAAA+6C,EAAA1N,GACAhzB,EAAA0gC,EAAAhO,IAEA0O,WACAz7C,EAAA+6C,EAAAhO,GACA1yB,EAAA0gC,EAAA9N,IAEAyO,YACA17C,EAAA+6C,EAAA9N,GACA5yB,EAAA0gC,EAAA5N,IAEAwO,UACA37C,EAAA+6C,EAAA5N,GACA9yB,EAAA0gC,EAAA1N,MAaAkO,iBAAA,SAAA35C,EAAAm5C,GACA,GAAAnwB,GAAAC,EAAAH,EAAAC,EAAAixB,EAEAC,EADAC,EAAA,CAGA,QAAAC,KAAAhB,GAGA,GAFAc,EAAAd,EAAAgB,KAEAF,EAAA77C,EAAAmC,EAAAP,EAAAO,GAAA05C,EAAAxhC,EAAAlY,EAAAP,EAAAO,GAIA05C,EAAA77C,EAAAmC,GAAAP,EAAAO,GAAA05C,EAAAxhC,EAAAlY,GAAAP,EAAAO,IAIA05C,EAAA77C,EAAAkC,IAAA25C,EAAAxhC,EAAAnY,GAAA25C,EAAA77C,EAAAkC,GAAAN,EAAAM,EACA05C,EAAAC,EAAA77C,EAAAkC,GAKA0oB,EAAA,EACAC,GAAAgxB,EAAAxhC,EAAAlY,EAAA05C,EAAA77C,EAAAmC,IAAA05C,EAAAxhC,EAAAnY,EAAA25C,EAAA77C,EAAAkC,GACAwoB,EAAA9oB,EAAAO,EAAAyoB,EAAAhpB,EAAAM,EACAyoB,EAAAkxB,EAAA77C,EAAAmC,EAAA0oB,EAAAgxB,EAAA77C,EAAAkC,EAEA05C,IAAAlxB,EAAAC,IAAAC,EAAAC,IAIA+wB,GAAAh6C,EAAAM,IACA45C,GAAA,GAGA,IAAAA,IACA,KAGA,OAAAA,IAQAE,qBAAA,WACA,MAAAtuD,MAAA6qD,kBAAA3gD,OAQAqkD,sBAAA,WACA,MAAAvuD,MAAA6qD,kBAAA1gD,QAOA0gD,gBAAA,WAEA,MADA7qD,MAAAqtD,SAAArtD,KAAAmpC,YACAn/B,OAAA6G,KAAAsE,2BACAnV,KAAAqtD,QAAA1N,GACA3/C,KAAAqtD,QAAAhO,GACAr/C,KAAAqtD,QAAA9N,GACAv/C,KAAAqtD,QAAA5N,MAQAtb,SAAA,WACA,MAAAnkC,MAAA25C,4BAAAnlC,GAQA6vB,UAAA,WACA,MAAArkC,MAAA25C,4BAAAllC,GASA20C,gBAAA,SAAA5xD,GACA,MAAAyb,MAAAG,IAAA5b,GAAAwI,KAAAkoD,cACA1wD,EAAA,GACAwI,KAAAkoD,cAGAloD,KAAAkoD,cAGA1wD,GASA6+B,MAAA,SAAA7+B,GAYA,MAXAA,GAAAwI,KAAAopD,gBAAA5xD,GAEAA,EAAA,IACAwI,KAAA2b,OAAA3b,KAAA2b,MACA3b,KAAA4b,OAAA5b,KAAA4b,MACApkB,OAGAwI,KAAAgb,OAAAxjB,EACAwI,KAAAib,OAAAzjB,EACAwI,KAAAmpC,YACAnpC,MASAwuD,aAAA,SAAAh3D,GAEA,GAAAi3D,GAAAzuD,KAAA6qD,kBAAA3gD,MAAAlK,KAAAmkC,UACA,OAAAnkC,MAAAq2B,MAAA7+B,EAAAwI,KAAAkK,MAAAukD,IASAC,cAAA,SAAAl3D,GAEA,GAAAi3D,GAAAzuD,KAAA6qD,kBAAA1gD,OAAAnK,KAAAqkC,WACA,OAAArkC,MAAAq2B,MAAA7+B,EAAAwI,KAAAmK,OAAAskD,IASAtlB,UAAA,WACA,GAAA6O,GAAAnkC,EAAA7T,KAAA8K,OACAk+B,EAAAhpC,KAAAwpD,uBACA9P,EAAA15C,KAAA2uD,8BACAC,EAAAlV,EAAAllC,EAAAq6C,EAAAnV,EAAAjlC,CAGAm6C,GAAA,IACAA,EAAA37C,KAAAG,IAAAw7C,GAGA,IAAApxC,GAAAvK,KAAA2B,IAAAojC,GACAv6B,EAAAxK,KAAA4B,IAAAmjC,GACA8W,EAAAF,EAAA,EAAA37C,KAAAsnC,KAAAsU,EAAAD,GAAA,EACAG,EAAAH,EAAA37C,KAAA4B,IAAAi6C,GAAA,EACAjsB,EAAA5vB,KAAA4B,IAAAi6C,EAAA9W,GAAA+W,EACAjsB,EAAA7vB,KAAA2B,IAAAk6C,EAAA9W,GAAA+W,EAGAztC,EAAAtX,OAAA6G,KAAAmE,eAAAhV,KAAA4qC,iBAAA5B,GACA2W,EAAA,GAAA31C,QAAAuK,MAAA+M,EAAA9M,EAAAquB,EAAAvhB,EAAA7M,EAAAquB,GACAuc,EAAA,GAAAr1C,QAAAuK,MAAAorC,EAAAnrC,EAAAo6C,EAAAnxC,EAAAkiC,EAAAlrC,EAAAm6C,EAAApxC,GACAiiC,EAAA,GAAAz1C,QAAAuK,MAAAorC,EAAAnrC,EAAAq6C,EAAArxC,EAAAmiC,EAAAlrC,EAAAo6C,EAAApxC,GACA8hC,EAAA,GAAAv1C,QAAAuK,MAAA+M,EAAA9M,EAAAquB,EAAAvhB,EAAA7M,EAAAquB,GACA4c,EAAA,GAAA11C,QAAAuK,OAAAorC,EAAAnrC,EAAAirC,EAAAjrC,GAAA,GAAAmrC,EAAAlrC,EAAAgrC,EAAAhrC,GAAA,GACAuM,EAAA,GAAAhX,QAAAuK,OAAA8qC,EAAA7qC,EAAAmrC,EAAAnrC,GAAA,GAAA6qC,EAAA5qC,EAAAkrC,EAAAlrC,GAAA,GACA6qC,EAAA,GAAAt1C,QAAAuK,OAAAgrC,EAAA/qC,EAAA6qC,EAAA7qC,GAAA,GAAA+qC,EAAA9qC,EAAA4qC,EAAA5qC,GAAA,GACA+qC,EAAA,GAAAx1C,QAAAuK,OAAAgrC,EAAA/qC,EAAAirC,EAAAjrC,GAAA,GAAA+qC,EAAA9qC,EAAAgrC,EAAAhrC,GAAA,GACAu6C,EAAA,GAAAhlD,QAAAuK,MAAAyM,EAAAxM,EAAAgJ,EAAAxd,KAAAooD,oBAAApnC,EAAAvM,EAAAgJ,EAAAzd,KAAAooD,oBA4BA,OAZApoD,MAAAqtD,SAEA1N,KAAAN,KAAAE,KAAAE,KAEAC,KAAA1+B,KAAAs+B,KAAAE,KAEAwP,OAIAhvD,KAAAivD,kBAAAjvD,KAAAivD,mBAEAjvD,MAOAkvD,kBAAA,WACA,GAAAlvD,KAAA8K,MAAA,CACA,GAAAktC,GAAAnkC,EAAA7T,KAAA8K,OAAA+J,EAAA5B,KAAA4B,IAAAmjC,GAAApjC,EAAA3B,KAAA2B,IAAAojC,EACA,QAAAnjC,EAAAD,KAAAC,EAAA,KAEA,qBAQA0hC,oBAAA,WACA,GAAAzL,GAAA9qC,KAAA4qC,iBACAzW,GAAA,QAAA2W,EAAAt2B,EAAAs2B,EAAAr2B,GACAqhB,EAAA91B,KAAAkvD,oBACAC,EAAAnvD,KAAAovD,+BAAApvD,KAAAkb,MAAAlb,KAAAmb,OAAA,GACAqY,EAAAxzB,KAAAujC,MAAAvjC,KAAAujC,MAAAgT,uBAAA,YAIA,OAHA/iB,GAAA85B,EAAA95B,EAAAW,GACAX,EAAA85B,EAAA95B,EAAAsC,GACAtC,EAAA85B,EAAA95B,EAAA27B,IAIAC,+BAAA,SAAAl0C,EAAAC,EAAAk0C,GACA,GAAA9zC,IAAA,IAAAtI,KAAAuI,IAAA3H,EAAAqH,IAAA,GACAo0C,GAAA,EAAAr8C,KAAAuI,IAAA3H,EAAAsH,IAAA,KACAH,EAAAhb,KAAAgb,QAAAq0C,GAAArvD,KAAA2b,SAAA,GACAV,EAAAjb,KAAAib,QAAAo0C,GAAArvD,KAAA4b,SAAA,GACAH,GAAAT,EAAA,IAAAC,GACA2b,EAAA02B,EAAA7xC,EAAAF,GAAA;AACA,MAAA+xC,GAAA12B,EAAA04B,GAAA,SAMAtlD,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAOAyrC,WAAA,WAOA,MANA3sC,MAAAujC,MACAv5B,OAAA07B,aAAAxkC,UAAAyrC,WAAAxrC,KAAAnB,KAAAujC,MAAAvjC,MAGAA,KAAA+J,OAAA4iC,WAAA3sC,MAEAA,MAQA6sC,aAAA,WAOA,MANA7sC,MAAAujC,MACAv5B,OAAA07B,aAAAxkC,UAAA2rC,aAAA1rC,KAAAnB,KAAAujC,MAAAvjC,MAGAA,KAAA+J,OAAA8iC,aAAA7sC,MAEAA,MASA8sC,cAAA,SAAAC,GAOA,MANA/sC,MAAAujC,MACAv5B,OAAA07B,aAAAxkC,UAAA4rC,cAAA3rC,KAAAnB,KAAAujC,MAAAvjC,KAAA+sC,GAGA/sC,KAAA+J,OAAA+iC,cAAA9sC,KAAA+sC,GAEA/sC,MASAqtC,aAAA,SAAAN,GAOA,MANA/sC,MAAAujC,MACAv5B,OAAA07B,aAAAxkC,UAAAmsC,aAAAlsC,KAAAnB,KAAAujC,MAAAvjC,KAAA+sC,GAGA/sC,KAAA+J,OAAAsjC,aAAArtC,KAAA+sC,GAEA/sC,MASAqZ,OAAA,SAAA3L,GAOA,MANA1N,MAAAujC,MACAv5B,OAAA07B,aAAAxkC,UAAAmY,OAAAlY,KAAAnB,KAAAujC,MAAAvjC,KAAA0N,GAGA1N,KAAA+J,OAAAsP,OAAArZ,KAAA0N,GAEA1N,QAMA,WAEA,QAAAuvD,GAAAt+C,EAAAzZ,GACA,GAAAA,EAGA,IAAAA,EAAAgsC,OACA,MAAAvyB,GAAA,gBAAAzZ,EAAAK,GAAA,KAGA,IAAA44B,GAAA,GAAAzmB,QAAA0mB,MAAAl5B,GACAg4D,EAAAv+C,EAAA,KAAAwf,EAAA2O,QAAA,KACA9X,EAAAmJ,EAAAG,UAKA,OAJA,KAAAtJ,IAEAkoC,GAAAv+C,EAAA,aAAAqW,EAAAvY,WAAA,MAEAygD,EAbA,MAAAv+C,GAAA,WAiBAjH,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAMAuuD,aAAA,SAAAC,GAEA,GAAA7H,GAAA7nD,KAAA6nD,SACAzX,EAAApwC,KAAAowC,YAAApwC,KAAAowC,YAAA,IACApC,EAAAhuC,KAAAguC,gBAAAhuC,KAAAguC,gBAAA52C,KAAA,YACA02C,EAAA9tC,KAAA8tC,cAAA9tC,KAAA8tC,cAAA,OACAC,EAAA/tC,KAAA+tC,eAAA/tC,KAAA+tC,eAAA,QACAga,EAAA/nD,KAAA+nD,iBAAA/nD,KAAA+nD,iBAAA,IACAzgC,EAAA,mBAAAtnB,MAAAsnB,QAAAtnB,KAAAsnB,QAAA,IACAsN,EAAA50B,KAAAqwB,QAAA,0BACA/e,EAAAo+C,EAAA,GAAA1vD,KAAA2vD,eACA5+C,EAAAw+C,EAAA,OAAAvvD,KAAA+Q,MACA6kB,EAAA25B,EAAA,SAAAvvD,KAAA41B,OAEA,QACAA,EACA,iBAAAwa,EAAA,KACA,qBAAApC,EAAA,KACA,mBAAAF,EAAA,KACA,oBAAAC,EAAA,KACA,sBAAAga,EAAA,KACAh3C,EACA,cAAA82C,EAAA,KACA,YAAAvgC,EAAA,IACAhW,EACAsjB,GACAx9B,KAAA,KAOAu4D,aAAA,WACA,MAAA3vD,MAAAklC,OAAA,sBAAAllC,KAAAklC,OAAArtC,GAAA,KAAuE,IAOvE+3D,SAAA,WACA,MAAA5vD,MAAAnI,GAAA,OAAAmI,KAAAnI,GAAA,SAOAg4D,gBAAA,WACA,GAAA7vD,KAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,KACA,QAEA,IAAAiJ,GAAAhM,OAAA6G,KAAAmF,QACAlL,EAAA9K,KAAAqkD,WACAnpC,EAAAlb,KAAA8vD,WAAA,IACA30C,EAAAnb,KAAA+vD,WAAA,IACAjlB,EAAA9qC,KAAA4qC,iBAEApF,EAAAx7B,OAAA1S,OAAAkuC,oBAEAwqB,EAAA,eAAAhwD,KAAA+M,KAAA,gBACAiJ,EAAA80B,EAAAt2B,EAAAgxB,GACA,IACAxvB,EAAA80B,EAAAr2B,EAAA+wB,GACA,IAEAyqB,EAAA,IAAAnlD,EACA,WAAAkL,EAAAlL,EAAA06B,GAAA,IACA,GAEA0qB,EAAA,IAAAlwD,KAAAgb,QAAA,IAAAhb,KAAAib,OACA,GACA,UACAjF,EAAAhW,KAAAgb,OAAAwqB,GACA,IACAxvB,EAAAhW,KAAAib,OAAAuqB,GACA,IAEA2qB,EAAA,IAAAj1C,EAAA,UAAAlF,EAAAkF,EAAAsqB,GAAA,OAEA4qB,EAAA,IAAAj1C,EAAA,UAAAnF,EAAAmF,EAAAqqB,GAAA,OAEA6qB,EAAA,eAAArwD,KAAA+M,KAAA/M,KAAAkK,MAAA,EAEAomD,EAAAtwD,KAAA2b,MAAA,oBAAA00C,EAAA,UAEAE,EAAA,eAAAvwD,KAAA+M,KAAA/M,KAAAmK,OAAA,EAEAqmD,EAAAxwD,KAAA4b,MAAA,sBAAA20C,EAAA,MAEA,QACAP,EAAAC,EAAAC,EAAAI,EAAAE,EAAAL,EAAAC,GACAh5D,KAAA,KAOAq5D,sBAAA,WACA,MAAAzwD,MAAAmwB,gBAAA,WAAAnwB,KAAAmwB,gBAAA/4B,KAAA,cAMAs5D,qBAAA,WACA,GAAAn8B,KAWA,OATAv0B,MAAA+Q,MAAA/Q,KAAA+Q,KAAAyyB,QACAjP,EAAA38B,KAAAoI,KAAA+Q,KAAAyjB,MAAAx0B,MAAA,IAEAA,KAAA41B,QAAA51B,KAAA41B,OAAA4N,QACAjP,EAAA38B,KAAAoI,KAAA41B,OAAApB,MAAAx0B,MAAA,IAEAA,KAAAklC,QACA3Q,EAAA38B,KAAAoI,KAAAklC,OAAA1Q,MAAAx0B,OAEAu0B,QAOA,WAOA,QAAAo8B,GAAAx8C,EAAAmE,EAAA7gB,GACA,GAAAm5D,MAAoB7tC,GAAA,CACpBtrB,GAAA0B,QAAA,SAAA8X,GACA2/C,EAAA3/C,GAAAkD,EAAAlD,KAEA6R,EAAA3O,EAAAmE,GAAAs4C,EAAA7tC,GAGA,QAAA8tC,GAAAC,EAAAC,GACA,GAAAD,YAAA5vC,OAAA,CACA,GAAA4vC,EAAA50D,SAAA60D,EAAA70D,OACA,QAEA,IAAA80D,GAAAD,EAAA7uD,SAAAohC,OACA2tB,EAAAH,EAAA5uD,SAAAohC,MACA,QAAA2tB,EAAAtuC,KAAA,SAAAtO,EAAApY,GACA,OAAA40D,EAAAG,EAAA/0D,GAAAoY,KAGA,GAAAy8C,YAAAx5D,QAAA,CACA,OAAA8B,KAAA03D,GACA,IAAAD,EAAAC,EAAA13D,GAAA23D,EAAA33D,IACA,QAGA,UAGA,MAAA03D,KAAAC,EAjCA,GAAAjuC,GAAA9Y,OAAA6G,KAAAzJ,OAAA0b,MAsCA9Y,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAMAwhD,gBAAA,WACA,OAAAmO,EAAA7wD,KAAAkxD,cAAAlxD,OAQAwjD,UAAA,SAAAzqD,GAKA,MAJA43D,GAAA3wD,KAAA,gBAAAA,KAAAma,iBACAphB,KAAAohB,iBACAw2C,EAAA3wD,KAAA,gBAAAjH,EAAAohB,iBAEAna,MAQA0pC,WAAA,SAAA3wC,GAGA,MAFAiH,MAAAkxD,iBACAlxD,KAAAwjD,UAAAzqD,GACAiH,WAMA,WAEA,GAAA6T,GAAA7J,OAAA6G,KAAAgD,iBAEAs9C,EAAA,WAA0B,yBAAAv3C,oBAE1B5P,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAMAkwD,oBAAA,KAQA9a,kBAAA,SAAArH,GACA,IAAAjvC,KAAAmoD,cAAAnoD,KAAAi3C,OACA,QAGA,IAEA5hC,GACAs4C,EAHA/V,EAAA3I,EAAAz6B,EACAqjC,EAAA5I,EAAAx6B,CAGAzU,MAAAmiD,SAAA,CACA,QAAAlmD,KAAA+D,MAAAqtD,QAEA,GAAArtD,KAAAqxD,iBAAAp1D,KAIA,QAAAA,GAAA+D,KAAAokD,qBAIApkD,KAAAxE,IAAA,mBACA,OAAAS,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,KAIA0xD,EAAA3tD,KAAA4tD,eAAA5tD,KAAAqtD,QAAApxD,GAAAw7C,QAgBApiC,EAAArV,KAAA6tD,kBAAyCr5C,EAAAojC,EAAAnjC,EAAAojC,GAAe8V,GACxD,IAAAt4C,KAAA,OAEA,MADArV,MAAAmiD,SAAAlmD,EACAA,CAGA,WAQAgzD,iBAAA,WACA,GAOAz6C,GAAAC,EAPA6M,EAAAthB,KAAAqtD,QACAiE,EAAAz9C,EAAA,GAAA7T,KAAA8K,OAGAymD,EAAA,QAAAvxD,KAAAsnD,WACAkK,EAAAD,EAAAt+C,KAAA4B,IAAAy8C,GACAG,EAAAF,EAAAt+C,KAAA2B,IAAA08C,EAGA,QAAAp9C,KAAAoN,GACA9M,EAAA8M,EAAApN,GAAAM,EACAC,EAAA6M,EAAApN,GAAAO,EACA6M,EAAApN,GAAAujC,QACAkI,IACAnrC,IAAAi9C,EACAh9C,IAAA+8C,GAEAnS,IACA7qC,IAAAg9C,EACA/8C,IAAAg9C,GAEAhS,IACAjrC,IAAAg9C,EACA/8C,IAAAg9C,GAEAlS,IACA/qC,IAAAi9C,EACAh9C,IAAA+8C,KAUAE,6BAAA,WACA,GAAAthB,GAAApwC,KAAAowC,YACAuhB,EAAA3xD,KAAAkK,MACAzE,EAAAzF,KAAAmK,OACAynD,GAAA,EACAC,GAAA,CAeA,OAbA,SAAA7xD,KAAA+M,MAAA,SAAA/M,KAAA8tC,gBACA+jB,EAAAF,EACAC,EAAAnsD,GAGAosD,IACApsD,KAAA,GAAA2qC,KAGAwhB,IACAD,KAAA,GAAAvhB,MAGc57B,EAAAm9C,EAAAl9C,EAAAhP,IAMdk0C,0BAAA,SAAAz+B,EAAAC,GACA,mBAAAD,KACAA,EAAAlb,KAAAkb,OAEA,mBAAAC,KACAA,EAAAnb,KAAAmb,MAEA,IAmBAlf,GACA61D,EApBAzpB,EAAAroC,KAAA0xD,+BACAK,EAAA1pB,EAAA7zB,EAAA,EAAAw9C,EAAA3pB,EAAA5zB,EAAA,EACAW,IAEAZ,GAAAu9C,EACAt9C,GAAAu9C,IAGAx9C,EAAAu9C,EACAt9C,GAAAu9C,IAGAx9C,GAAAu9C,EACAt9C,EAAAu9C,IAGAx9C,EAAAu9C,EACAt9C,EAAAu9C,IAEA7hC,EAAAnwB,KAAAovD,+BAAAl0C,EAAAC,GAAA,EAEA,KAAAlf,EAAA,EAAiBA,EAAAmZ,EAAAlZ,OAAmBD,IACpCmZ,EAAAnZ,GAAA+N,OAAA6G,KAAAmE,eAAAI,EAAAnZ,GAAAk0B,EAGA,OADA2hC,GAAA9nD,OAAA6G,KAAAsE,0BAAAC,IACcZ,EAAAs9C,EAAA5nD,MAAAuK,EAAAq9C,EAAA3nD,SAMdwkD,4BAAA,WACA,GAAA3lB,GAAAhpC,KAAAwpD,uBACA9P,EAAA15C,KAAA25C,4BACAgY,EAAAjY,EAAAllC,EAAA/O,EAAAi0C,EAAAjlC,EACAjP,EAAAwE,OAAA6G,KAAAmE,eAAA,GAAAhL,QAAAuK,MAAAo9C,EAAAlsD,GAAAujC,GAAA,EAEA,OAAAxjC,GAAA41B,UAAA,EAAAp7B,KAAA+K,UAWA4+C,wBAAA,SAAAlxC,GACA,IAAAzY,KAAAg3C,0BAAAh3C,KAAAujC,QAAAvjC,KAAAi3C,OACA,MAAAj3C,KAEAyY,GAAAU,MACA,IAAA2xB,GAAA9qC,KAAA4qC,iBAAAqnB,EAAAjyD,KAAA2uD,8BACA3lB,EAAAhpC,KAAA+J,OAAAs8B,iBAOA,OANA5tB,GAAAW,UAAA0xB,EAAAt2B,EAAAs2B,EAAAr2B,GACAgE,EAAA4d,MAAA,EAAA2S,EAAA,KAAAA,EAAA,IACAvwB,EAAAa,OAAAzF,EAAA7T,KAAA8K,QACA2N,EAAA8xB,UAAAvqC,KAAAg3C,yBACAv+B,EAAA+xB,UAAAynB,EAAAz9C,EAAA,GAAAy9C,EAAAx9C,EAAA,EAAAw9C,EAAAz9C,EAAAy9C,EAAAx9C,GACAgE,EAAAc,UACAvZ,MAWAoqD,YAAA,SAAA3xC,GACA,IAAAzY,KAAA42C,WACA,MAAA52C,KAGA,IAAAiyD,GAAAjyD,KAAA2uD,8BACAve,EAAA,EAAApwC,KAAAioD,kBACA/9C,EAAA+nD,EAAAz9C,EAAA47B,EACAjmC,EAAA8nD,EAAAx9C,EAAA27B,CAaA,IAXA33B,EAAAU,OACAV,EAAA21B,YAAApuC,KAAAunD,YACAvnD,KAAAk8C,aAAAzjC,EAAAzY,KAAAwnD,gBAAA,MAEA/uC,EAAA0jC,YACAjyC,EAAA,GACAC,EAAA,EACAD,EACAC,GAGAnK,KAAAokD,kBAAApkD,KAAAqxD,iBAAA,SAAArxD,KAAAxE,IAAA,iBAAAwE,KAAAmoD,YAAA,CAEA,GAAA+J,IAAA/nD,EAAA,CAEAsO,GAAA+B,YACA/B,EAAAY,OAAA,EAAA64C,GACAz5C,EAAAs3B,OAAA,EAAAmiB,EAAAlyD,KAAAooD,qBACA3vC,EAAA83B,YACA93B,EAAAmd,SAIA,MADAnd,GAAAc,UACAvZ,MAYAmqD,mBAAA,SAAA1xC,EAAA1f,GACA,IAAAiH,KAAA42C,WACA,MAAA52C,KAGA,IAAAwF,GAAAxF,KAAA0xD,+BACAl+B,EAAAxpB,OAAA6G,KAAAyK,sBAAAviB,EAAAiiB,OAAAjiB,EAAAkiB,OAAAliB,EAAAmiB,OACA+2C,EAAAjoD,OAAA6G,KAAAmE,eAAAxP,EAAAguB,GACA4c,EAAA,EAAApwC,KAAAioD,kBACA/9C,EAAA+nD,EAAAz9C,EAAA47B,EAAA,EAAApwC,KAAA+K,QACAZ,EAAA8nD,EAAAx9C,EAAA27B,EAAA,EAAApwC,KAAA+K,OAcA,OAZA0N,GAAAU,OACAnZ,KAAAk8C,aAAAzjC,EAAAzY,KAAAwnD,gBAAA,MACA/uC,EAAA21B,YAAApuC,KAAAunD,YAEA9uC,EAAA0jC,YACAjyC,EAAA,GACAC,EAAA,EACAD,EACAC,GAGAsO,EAAAc,UACAvZ,MAWAmqC,aAAA,SAAA1xB,GACA,IAAAzY,KAAAmoD,YACA,MAAAnoD,KAGA,IAAAiyD,GAAAjyD,KAAA2uD,8BACAzkD,EAAA+nD,EAAAz9C,EACArK,EAAA8nD,EAAAx9C,EACA09C,EAAAnyD,KAAAsnD,WACA3xC,IAAAzL,EAAAioD,GAAA,EACAv8C,IAAAzL,EAAAgoD,GAAA,EACAxuC,EAAA3jB,KAAA62C,mBAAA,eA6DA,OA3DAp+B,GAAAU,OACAV,EAAA21B,YAAA31B,EAAA8xB,UAAAvqC,KAAAynD,YACAznD,KAAA62C,qBACAp+B,EAAA21B,YAAApuC,KAAA0nD,mBAEA1nD,KAAAk8C,aAAAzjC,EAAAzY,KAAA4nD,gBAAA,MAGA5nD,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EACAC,GAGA5V,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EAAAzL,EACA0L,GAGA5V,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EACAC,EAAAzL,GAGAnK,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EAAAzL,EACA0L,EAAAzL,GAEAnK,KAAAxE,IAAA,oBAGAwE,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EAAAzL,EAAA,EACA0L,GAGA5V,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EAAAzL,EAAA,EACA0L,EAAAzL,GAGAnK,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EAAAzL,EACA0L,EAAAzL,EAAA,GAGAnK,KAAAoyD,aAAA,KAAA35C,EAAAkL,EACAhO,EACAC,EAAAzL,EAAA,IAIAnK,KAAAokD,kBACApkD,KAAAoyD,aAAA,MAAA35C,EAAAkL,EACAhO,EAAAzL,EAAA,EACA0L,EAAA5V,KAAAooD,qBAGA3vC,EAAAc,UAEAvZ,MAMAoyD,aAAA,SAAAC,EAAA55C,EAAAkL,EAAAhO,EAAAC,GACA,GAAA5V,KAAAqxD,iBAAAgB,GAAA,CAGA,GAAA5/C,GAAAzS,KAAAsnD,WAAA1xB,GAAA51B,KAAA62C,oBAAA72C,KAAA0nD,iBACA,QAAA1nD,KAAA2nD,aACA,aACAlvC,EAAA+B,YACA/B,EAAAk4B,IAAAh7B,EAAAlD,EAAA,EAAAmD,EAAAnD,EAAA,EAAAA,EAAA,MAAAQ,KAAAK,IAAA,GACAmF,EAAAkL,KACAiS,GACAnd,EAAAmd,QAEA,MACA,SACAu7B,KAAAnxD,KAAA62C,oBAAAp+B,EAAAoxB,UAAAl0B,EAAAC,EAAAnD,KACAgG,EAAAkL,EAAA,QAAAhO,EAAAC,EAAAnD,KACAmjB,GACAnd,EAAA0jC,WAAAxmC,EAAAC,EAAAnD,QAUA4+C,iBAAA,SAAAiB,GACA,MAAAtyD,MAAAuyD,yBAAAD,IAUAE,kBAAA,SAAAF,EAAAjiC,GAEA,MADArwB,MAAAuyD,yBAAAD,GAAAjiC,EACArwB,MAkBAyyD,sBAAA,SAAA15D,GACAA,SAEA,QAAAyM,KAAAzM,GACAiH,KAAAwyD,kBAAAhtD,EAAAzM,EAAAyM,GAEA,OAAAxF,OAQAuyD,uBAAA,WAcA,MAbAvyD,MAAAoxD,sBACApxD,KAAAoxD,qBACAzR,IAAA,EACAN,IAAA,EACAE,IAAA,EACAE,IAAA,EACAC,IAAA,EACA1+B,IAAA,EACAs+B,IAAA,EACAE,IAAA,EACAwP,KAAA,IAGAhvD,KAAAoxD,0BAMApnD,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA07B,aAAAxkC,WAOAwxD,YAAA,IAWAC,gBAAA,SAAAvrD,EAAAwrD,GACAA,OAEA,IAAAC,GAAA,aACApnC,EAAAmnC,EAAAnnC,YAAAonC,EACArmC,EAAAomC,EAAApmC,UAAAqmC,EACArvC,EAAAxjB,IAiBA,OAfAgK,QAAA6G,KAAAqb,SACAU,WAAAxlB,EAAA5L,IAAA,QACAqxB,SAAA7sB,KAAAyqC,YAAA90B,KACA2W,SAAAtsB,KAAA0yD,YACAlmC,SAAA,SAAAh1B,GACA4P,EAAAyD,IAAA,OAAArT,GACAgsB,EAAArY,YACAqhB,KAEAf,WAAA,WACArkB,EAAA+hC,YACA1d,OAIAzrB,MAYA8yD,gBAAA,SAAA1rD,EAAAwrD,GACAA,OAEA,IAAAC,GAAA,aACApnC,EAAAmnC,EAAAnnC,YAAAonC,EACArmC,EAAAomC,EAAApmC,UAAAqmC,EACArvC,EAAAxjB,IAiBA,OAfAgK,QAAA6G,KAAAqb,SACAU,WAAAxlB,EAAA5L,IAAA,OACAqxB,SAAA7sB,KAAAyqC,YAAA70B,IACA0W,SAAAtsB,KAAA0yD,YACAlmC,SAAA,SAAAh1B,GACA4P,EAAAyD,IAAA,MAAArT,GACAgsB,EAAArY,YACAqhB,KAEAf,WAAA,WACArkB,EAAA+hC,YACA1d,OAIAzrB,MAYA+yD,SAAA,SAAA3rD,EAAAwrD,GACAA,OAEA,IAAAC,GAAA,aACApnC,EAAAmnC,EAAAnnC,YAAAonC,EACArmC,EAAAomC,EAAApmC,UAAAqmC,EACArvC,EAAAxjB,IAoBA,OAlBAgK,QAAA6G,KAAAqb,SACAU,WAAAxlB,EAAA5L,IAAA,WACAqxB,SAAA,EACAP,SAAAtsB,KAAA0yD,YACA3lC,QAAA,WACA3lB,EAAAyD,IAAA,cAEA2hB,SAAA,SAAAh1B,GACA4P,EAAAyD,IAAA,UAAArT,GACAgsB,EAAArY,YACAqhB,KAEAf,WAAA,WACAjI,EAAAvR,OAAA7K,GACAqkB,OAIAzrB,QAIAgK,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAoBAgrB,QAAA,WACA,GAAAryB,UAAA,oBAAAA,WAAA,IACA,GAAAoX,GAAA+hD,EAAAC,IACA,KAAAhiD,IAAApX,WAAA,GACAo5D,EAAAr7D,KAAAqZ,EAEA,QAAAhV,GAAA,EAAAoV,EAAA4hD,EAAA/2D,OAAkDD,EAAAoV,EAASpV,IAC3DgV,EAAAgiD,EAAAh3D,GACA+2D,EAAA/2D,IAAAoV,EAAA,EACArR,KAAAkzD,SAAAjiD,EAAApX,UAAA,GAAAoX,GAAApX,UAAA,GAAAm5D,OAIAhzD,MAAAkzD,SAAAt5D,MAAAoG,KAAAnG,UAEA,OAAAmG,OAUAkzD,SAAA,SAAA94C,EAAAwyC,EAAA7zD,EAAAi6D,GACA,GAAAG,GAAA3vC,EAAAxjB,IAEA4sD,KAAA79C,WAMAhW,EAJAA,EAIAiR,OAAA6G,KAAAzJ,OAAA4b,MAAAjqB,OAGAqhB,EAAAlW,QAAA,OACAivD,EAAA/4C,EAAAhf,MAAA,KAGA,IAAA21D,GAAAoC,EACAnzD,KAAAxE,IAAA23D,EAAA,IAAAA,EAAA,IACAnzD,KAAAxE,IAAA4e,EAEA,SAAArhB,KACAA,EAAAq6D,KAAArC,GAIAnE,GADAA,EAAA1oD,QAAA,KACA6sD,EAAA56C,WAAAy2C,EAAA7mD,QAAA,SAGAoQ,WAAAy2C,GAGA5iD,OAAA6G,KAAAqb,SACAU,WAAA7zB,EAAAq6D,KACAvmC,SAAA+/B,EACA9/B,QAAA/zB,EAAA0/C,GACA/rB,OAAA3zB,EAAA2zB,OACAJ,SAAAvzB,EAAAuzB,SACAG,MAAA1zB,EAAA0zB,OAAA,WACA,MAAA1zB,GAAA0zB,MAAAtrB,KAAAqiB,IAEAgJ,SAAA,SAAAh1B,GACA27D,EACA3vC,EAAA2vC,EAAA,IAAAA,EAAA,IAAA37D,EAGAgsB,EAAA3Y,IAAAuP,EAAA5iB,GAEAw7D,GAGAj6D,EAAAyzB,UAAAzzB,EAAAyzB,YAEAf,WAAA,WACAunC,IAIAxvC,EAAA2lB,YACApwC,EAAA0yB,YAAA1yB,EAAA0yB,oBAOA,SAAA1Y,GAEA,YAuTA,SAAAsgD,GAAAC,EAAAC,GACA,GAAAp/C,GAAAm/C,EAAAn/C,OACAq/C,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,UACAC,EAAAJ,EAAAI,QACA7oB,EAAAyoB,EAAAzoB,OACA8oB,EAAAL,EAAAK,QAEA,mBACA,OAAA5zD,KAAAxE,IAAA2Y,IACA,IAAAw/C,GACA,MAAA1gD,MAAAQ,IAAAzT,KAAAxE,IAAAg4D,GAAAxzD,KAAAxE,IAAAi4D,GACA,KAAA3oB,GACA,MAAA73B,MAAAQ,IAAAzT,KAAAxE,IAAAg4D,GAAAxzD,KAAAxE,IAAAi4D,IAAA,GAAAzzD,KAAAxE,IAAAk4D,EACA,KAAAE,GACA,MAAA3gD,MAAAS,IAAA1T,KAAAxE,IAAAg4D,GAAAxzD,KAAAxE,IAAAi4D,MArUA,GAAAzpD,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACA+wC,GAAoBxzC,GAAA,EAAA3H,GAAA,EAAA4H,GAAA,EAAA3H,GAAA,GACpB0uC,EAAAr9C,EAAA07B,aAAAgI,SAAA,cAEA,OAAA1jC,GAAA8pD,SACA9pD,GAAAiiB,KAAA,mCAUAjiB,EAAA8pD,KAAA9pD,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,OAOAsT,GAAA,EAOAC,GAAA,EAOA5H,GAAA,EAOAC,GAAA,EAQAoL,WAAA,SAAA3O,EAAArc,GACAA,QAEAqc,IACAA,GAAA,UAGApV,KAAA0jB,UAAA,aAAA3qB,GAEAiH,KAAA6K,IAAA,KAAAuK,EAAA,IACApV,KAAA6K,IAAA,KAAAuK,EAAA,IACApV,KAAA6K,IAAA,KAAAuK,EAAA,IACApV,KAAA6K,IAAA,KAAAuK,EAAA,IAEApV,KAAA+zD,gBAAAh7D,IAOAg7D,gBAAA,SAAAh7D,GACAA,UAEAiH,KAAAkK,MAAA+I,KAAAG,IAAApT,KAAA0Y,GAAA1Y,KAAAqgB,IACArgB,KAAAmK,OAAA8I,KAAAG,IAAApT,KAAA2Y,GAAA3Y,KAAAsgB,IAEAtgB,KAAA2V,KAAA,QAAA5c,GACAA,EAAA4c,KACA3V,KAAAg0D,oBAEAh0D,KAAA4V,IAAA,OAAA7c,GACAA,EAAA6c,IACA5V,KAAAi0D,oBAQAtqB,KAAA,SAAAvwC,EAAA5B,GAKA,MAJAwI,MAAA0jB,UAAA,OAAAtqB,EAAA5B,GACA,mBAAAq8D,GAAAz6D,IACA4G,KAAA+zD,kBAEA/zD,MAOAg0D,kBAAAX,GAEAl/C,OAAA,UACAq/C,MAAA,KACAC,MAAA,KACAC,UAAA,UAGAC,QAAA,OACA7oB,OAAA,SACA8oB,SAAA,UAQAK,iBAAAZ,GAEAl/C,OAAA,UACAq/C,MAAA,KACAC,MAAA,KACAC,UAAA,WAGAC,QAAA,MACA7oB,OAAA,SACA8oB,SAAA,WASAxkB,QAAA,SAAA32B,EAAAgxC,GAGA,GAFAhxC,EAAA+B,YAEAivC,EAAA,CAIA,GAAAyK,GAAAl0D,KAAA4qC,gBACAnyB,GAAAW,UACA86C,EAAA1/C,EAAAxU,KAAAowC,YAAA,EACA8jB,EAAAz/C,EAAAzU,KAAAowC,YAAA,GAIA,IAAApwC,KAAAguC,iBAAAhuC,KAAAguC,iBAAAqZ,EAAA,CAGA,GAAA7hD,GAAAxF,KAAAm0D,gBACA17C,GAAAY,OAAA7T,EAAA6a,GAAA7a,EAAA8a,IACA7H,EAAAs3B,OAAAvqC,EAAAkT,GAAAlT,EAAAmT,IAGAF,EAAA41B,UAAAruC,KAAAowC,WAKA,IAAAgkB,GAAA37C,EAAA21B,WACA31B,GAAA21B,YAAApuC,KAAA41B,QAAAnd,EAAA8xB,UACAvqC,KAAA41B,QAAA51B,KAAAwqD,cAAA/xC,GACAA,EAAA21B,YAAAgmB,GAOA3J,oBAAA,SAAAhyC,GACA,GAAAjT,GAAAxF,KAAAm0D,gBAEA17C,GAAA+B,YACAxQ,EAAA6G,KAAA2H,eAAAC,EAAAjT,EAAA6a,GAAA7a,EAAA8a,GAAA9a,EAAAkT,GAAAlT,EAAAmT,GAAA3Y,KAAAguC,iBACAv1B,EAAA83B,aASAnN,SAAA,SAAAmI,GACA,MAAAzoB,GAAA9iB,KAAA0jB,UAAA,WAAA6nB,GAAAvrC,KAAAm0D,mBAOAA,eAAA,WACA,GAAAE,GAAAr0D,KAAAqgB,IAAArgB,KAAA0Y,MAAA,EACA47C,EAAAt0D,KAAAsgB,IAAAtgB,KAAA2Y,MAAA,EACA0H,EAAAg0C,EAAAr0D,KAAAkK,MAAA,GACAoW,EAAAg0C,EAAAt0D,KAAAmK,OAAA,GACAuO,EAAA27C,EAAAr0D,KAAAkK,UACAyO,EAAA27C,EAAAt0D,KAAAmK,UAEA,QACAkW,KACA3H,KACA4H,KACA3H,OAUA6b,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,uBACAlrD,GAAe6a,GAAArgB,KAAAqgB,GAAA3H,GAAA1Y,KAAA0Y,GAAA4H,GAAAtgB,KAAAsgB,GAAA3H,GAAA3Y,KAAA2Y,GAiBf,OAfA3Y,MAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAvH,EAAAxF,KAAAm0D,kBAEA5/B,EAAA38B,KACA,SAAAoI,KAAA4vD,WACA,OAAApqD,EAAA6a,GACA,SAAA7a,EAAA8a,GACA,SAAA9a,EAAAkT,GACA,SAAAlT,EAAAmT,GACA,YAAA3Y,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBACA7vD,KAAAywD,wBACA,SAGAj5C,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KAQAub,WAAA,WACA,YAWA3I,EAAA8pD,KAAAS,gBAAAvqD,EAAAgG,kBAAA9N,OAAA,cAAA9G,MAAA,MAUA4O,EAAA8pD,KAAAn5B,YAAA,SAAAzV,EAAAnsB,GACA,GAAAy7D,GAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAA8pD,KAAAS,iBACAn/C,GACAo/C,EAAAn0C,IAAA,EACAm0C,EAAAl0C,IAAA,EACAk0C,EAAA97C,IAAA,EACA87C,EAAA77C,IAAA,EAEA,WAAA3O,GAAA8pD,KAAA1+C,EAAA0N,EAAA0xC,EAAAz7D,UAYAiR,EAAA8pD,KAAA/7C,WAAA,SAAA3Q,EAAAiL,GACA,GAAA+C,IAAAhO,EAAAiZ,GAAAjZ,EAAAkZ,GAAAlZ,EAAAsR,GAAAtR,EAAAuR,IACA87C,EAAA,GAAAzqD,GAAA8pD,KAAA1+C,EAAAhO,EAEA,OADAiL,MAAAoiD,GACAA,MA4BCp+D,SAGD,SAAA0c,GAEA,YAoOA,SAAA2hD,GAAAx9D,GACA,gBAAAA,MAAA05C,QAAA,EAnOA,GAAA5mC,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA2qD,EAAA1hD,KAAAK,GACAwP,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,MAEA,OAAA9Y,GAAAgnC,WACAhnC,GAAAiiB,KAAA,sCAUAjiB,EAAAgnC,OAAAhnC,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,SAOA6jC,OAAA,EAOAgkB,WAAA,EAOAC,SAAA,EAAAF,EAOA5wC,WAAA,SAAAhrB,GACAA,QAEAiH,KAAA0jB,UAAA,aAAA3qB,GACAiH,KAAA6K,IAAA,SAAA9R,EAAA63C,QAAA,GAEA5wC,KAAA40D,WAAA77D,EAAA67D,YAAA50D,KAAA40D,WACA50D,KAAA60D,SAAA97D,EAAA87D,UAAA70D,KAAA60D,UASAlrB,KAAA,SAAAvwC,EAAA5B,GAOA,MANAwI,MAAA0jB,UAAA,OAAAtqB,EAAA5B,GAEA,WAAA4B,GACA4G,KAAA80D,UAAAt9D,GAGAwI,MAQAojC,SAAA,SAAAmI,GACA,MAAAzoB,GAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAqF,OAAA5wC,KAAAxE,IAAA,UACAo5D,WAAA50D,KAAA40D,WACAC,SAAA70D,KAAA60D,YAUArgC,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,uBAAAl8C,EAAA,EAAAC,EAAA,EACA3J,GAAA9K,KAAA60D,SAAA70D,KAAA40D,aAAA,EAAAD,EAEA,QAAA7pD,EACA9K,KAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAyH,EAAAxU,KAAA2V,KAAA3V,KAAA4wC,OACAn8B,EAAAzU,KAAA4V,IAAA5V,KAAA4wC,QAEArc,EAAA38B,KACA,WAAAoI,KAAA4vD,WACA,OAAAp7C,EAAA,SAAAC,EAAA,KACA,MAAAzU,KAAA4wC,OACA,YAAA5wC,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBACA,IAAA7vD,KAAAywD,wBACA,aAGA,CACA,GAAAsE,GAAA9hD,KAAA4B,IAAA7U,KAAA40D,YAAA50D,KAAA4wC,OACAokB,EAAA/hD,KAAA2B,IAAA5U,KAAA40D,YAAA50D,KAAA4wC,OACAqkB,EAAAhiD,KAAA4B,IAAA7U,KAAA60D,UAAA70D,KAAA4wC,OACAskB,EAAAjiD,KAAA2B,IAAA5U,KAAA60D,UAAA70D,KAAA4wC,OACAukB,EAAArqD,EAAA6pD,EAAA,OAEApgC,GAAA38B,KACA,cAAAm9D,EAAA,IAAAC,EACA,MAAAh1D,KAAA4wC,OAAA,IAAA5wC,KAAA4wC,OACA,OAAAukB,EAAA,SAAAF,EAAA,IAAAC,EACA,YAAAl1D,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBACA,IAAA7vD,KAAAywD,wBACA,SAIA,MAAAj5C,KAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KASAg4C,QAAA,SAAA32B,EAAAgxC,GACAhxC,EAAA+B,YACA/B,EAAAk4B,IAAA8Y,EAAAzpD,KAAA2V,KAAA3V,KAAA4wC,OAAA,EACA6Y,EAAAzpD,KAAA4V,IAAA5V,KAAA4wC,OAAA,EACA5wC,KAAA4wC,OACA5wC,KAAA40D,WACA50D,KAAA60D,UAAA,GACA70D,KAAAuqD,YAAA9xC,GACAzY,KAAAwqD,cAAA/xC,IAOA28C,WAAA,WACA,MAAAp1D,MAAAxE,IAAA,UAAAwE,KAAAxE,IAAA,WAOA65D,WAAA,WACA,MAAAr1D,MAAAxE,IAAA,UAAAwE,KAAAxE,IAAA,WAOAs5D,UAAA,SAAAt9D,GAEA,MADAwI,MAAA4wC,OAAAp5C,EACAwI,KAAA6K,IAAA,UAAArT,GAAAqT,IAAA,WAAArT,IAOAmb,WAAA,WACA,YAWA3I,EAAAgnC,OAAAujB,gBAAAvqD,EAAAgG,kBAAA9N,OAAA,UAAA9G,MAAA,MAWA4O,EAAAgnC,OAAArW,YAAA,SAAAzV,EAAAnsB,GACAA,SAEA,IAAAy7D,GAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAAgnC,OAAAujB,gBAEA,KAAAG,EAAAF,GACA,SAAA34D,OAAA,6DAGA24D,GAAA7+C,KAAA6+C,EAAA7+C,MAAA,EACA6+C,EAAA5+C,IAAA4+C,EAAA5+C,KAAA,CAEA,IAAA7U,GAAA,GAAAiJ,GAAAgnC,OAAAluB,EAAA0xC,EAAAz7D,GAIA,OAFAgI,GAAA4U,MAAA5U,EAAA6vC,OACA7vC,EAAA6U,KAAA7U,EAAA6vC,OACA7vC,QAmBAiJ,EAAAgnC,OAAAj5B,WAAA,SAAA3Q,EAAAiL,GACA,GAAA0+B,GAAA,GAAA/mC,GAAAgnC,OAAA5pC,EAEA,OADAiL,MAAA0+B,GACAA,MAGC16C,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,UAEA,OAAAA,GAAAsrD,aACAtrD,GAAAiiB,KAAA,uCAWAjiB,EAAAsrD,SAAAtrD,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,WAOAgX,WAAA,SAAAhrB,GACAA,QAEAiH,KAAA0jB,UAAA,aAAA3qB,GAEAiH,KAAA6K,IAAA,QAAA9R,EAAAmR,OAAA,KACAW,IAAA,SAAA9R,EAAAoR,QAAA,MAOAilC,QAAA,SAAA32B,GACA,GAAA88C,GAAAv1D,KAAAkK,MAAA,EACAsrD,EAAAx1D,KAAAmK,OAAA,CAEAsO,GAAA+B,YACA/B,EAAAY,QAAAk8C,EAAAC,GACA/8C,EAAAs3B,OAAA,GAAAylB,GACA/8C,EAAAs3B,OAAAwlB,EAAAC,GACA/8C,EAAA83B,YAEAvwC,KAAAuqD,YAAA9xC,GACAzY,KAAAwqD,cAAA/xC,IAOAgyC,oBAAA,SAAAhyC,GACA,GAAA88C,GAAAv1D,KAAAkK,MAAA,EACAsrD,EAAAx1D,KAAAmK,OAAA,CAEAsO,GAAA+B,YACAxQ,EAAA6G,KAAA2H,eAAAC,GAAA88C,EAAAC,EAAA,GAAAA,EAAAx1D,KAAAguC,iBACAhkC,EAAA6G,KAAA2H,eAAAC,EAAA,GAAA+8C,EAAAD,EAAAC,EAAAx1D,KAAAguC,iBACAhkC,EAAA6G,KAAA2H,eAAAC,EAAA88C,EAAAC,GAAAD,EAAAC,EAAAx1D,KAAAguC,iBACAv1B,EAAA83B,aASA/b,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,uBACA6E,EAAAv1D,KAAAkK,MAAA,EACAsrD,EAAAx1D,KAAAmK,OAAA,EACAiL,IACAmgD,EAAA,IAAAC,EACA,MAAAA,EACAD,EAAA,IAAAC,GAEAp+D,KAAA,IAUA,OARAm9B,GAAA38B,KACA,YAAAoI,KAAA4vD,WACA,WAAAx6C,EACA,YAAApV,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBACA,OAGAr4C,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KAQAub,WAAA,WACA,iBAYA3I,EAAAsrD,SAAAv9C,WAAA,SAAA3Q,EAAAiL,GACA,GAAAojD,GAAA,GAAAzrD,GAAAsrD,SAAAluD,EAEA,OADAiL,MAAAojD,GACAA,MAGCp/D,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA0rD,EAAA,EAAAziD,KAAAK,GACAwP,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,MAEA,OAAA9Y,GAAA2rD,YACA3rD,GAAAiiB,KAAA,uCAWAjiB,EAAA2rD,QAAA3rD,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,UAOA+H,GAAA,EAOAC,GAAA,EAOAgP,WAAA,SAAAhrB,GACAA,QAEAiH,KAAA0jB,UAAA,aAAA3qB,GAEAiH,KAAA6K,IAAA,KAAA9R,EAAA+b,IAAA,GACA9U,KAAA6K,IAAA,KAAA9R,EAAAgc,IAAA,IASA40B,KAAA,SAAAvwC,EAAA5B,GAEA,OADAwI,KAAA0jB,UAAA,OAAAtqB,EAAA5B,GACA4B,GAEA,SACA4G,KAAA8U,GAAAtd,EACAwI,KAAA6K,IAAA,UAAArT,EACA,MAEA,UACAwI,KAAA+U,GAAAvd,EACAwI,KAAA6K,IAAA,WAAArT,GAIA,MAAAwI,OAOA41D,MAAA,WACA,MAAA51D,MAAAxE,IAAA,MAAAwE,KAAAxE,IAAA,WAOAq6D,MAAA,WACA,MAAA71D,MAAAxE,IAAA,MAAAwE,KAAAxE,IAAA,WAQA4nC,SAAA,SAAAmI,GACA,MAAAzoB,GAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAz2B,GAAA9U,KAAAxE,IAAA,MACAuZ,GAAA/U,KAAAxE,IAAA,SAUAg5B,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,uBAAAl8C,EAAA,EAAAC,EAAA,CAgBA,OAfAzU,MAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAyH,EAAAxU,KAAA2V,KAAA3V,KAAA8U,GACAL,EAAAzU,KAAA4V,IAAA5V,KAAA+U,IAEAwf,EAAA38B,KACA,YAAAoI,KAAA4vD,WACA,OAAAp7C,EAAA,SAAAC,EAAA,KACA,OAAAzU,KAAA8U,GACA,SAAA9U,KAAA+U,GACA,YAAA/U,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBACA7vD,KAAAywD,wBACA,SAGAj5C,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KASAg4C,QAAA,SAAA32B,EAAAgxC,GACAhxC,EAAA+B,YACA/B,EAAAU,OACAV,EAAAoc,UAAA,MAAA70B,KAAA+U,GAAA/U,KAAA8U,GAAA,KACA2D,EAAAk4B,IACA8Y,EAAAzpD,KAAA2V,KAAA3V,KAAA8U,GAAA,EACA20C,GAAAzpD,KAAA4V,IAAA5V,KAAA+U,IAAA/U,KAAA8U,GAAA9U,KAAA+U,GAAA,EACA/U,KAAA8U,GACA,EACA4gD,GACA,GACAj9C,EAAAc,UACAvZ,KAAAuqD,YAAA9xC,GACAzY,KAAAwqD,cAAA/xC,IAOA9F,WAAA,WACA,YAWA3I,EAAA2rD,QAAApB,gBAAAvqD,EAAAgG,kBAAA9N,OAAA,cAAA9G,MAAA,MAUA4O,EAAA2rD,QAAAh7B,YAAA,SAAAzV,EAAAnsB,GACAA,SAEA,IAAAy7D,GAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAA2rD,QAAApB,gBAEAC,GAAA7+C,KAAA6+C,EAAA7+C,MAAA,EACA6+C,EAAA5+C,IAAA4+C,EAAA5+C,KAAA,CAEA,IAAAkgD,GAAA,GAAA9rD,GAAA2rD,QAAA7yC,EAAA0xC,EAAAz7D,GAIA,OAFA+8D,GAAAlgD,KAAAkgD,EAAA/gD,GACA+gD,EAAAngD,MAAAmgD,EAAAhhD,GACAghD,QAYA9rD,EAAA2rD,QAAA59C,WAAA,SAAA3Q,EAAAiL,GACA,GAAAyjD,GAAA,GAAA9rD,GAAA2rD,QAAAvuD,EAEA,OADAiL,MAAAyjD,GACAA,MAGCz/D,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,MAEA,IAAA9Y,EAAAgoC,KAEA,WADAhoC,GAAAiiB,KAAA,iCAIA,IAAA9R,GAAAnQ,EAAA1S,OAAA4J,UAAAiZ,gBAAAjY,QACAiY,GAAAviB,KAAA,mBASAoS,EAAAgoC,KAAAhoC,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOA6iB,kBAOApN,KAAA,OAOA+H,GAAA,EAOAC,GAAA,EAMAi5B,gBAAA,KAOAjqB,WAAA,SAAAhrB,GACAA,QAEAiH,KAAA0jB,UAAA,aAAA3qB,GACAiH,KAAA+1D,aAQAA,UAAA,WACA/1D,KAAA8U,KAAA9U,KAAA+U,GACA/U,KAAA+U,GAAA/U,KAAA8U,GAEA9U,KAAA+U,KAAA/U,KAAA8U,KACA9U,KAAA8U,GAAA9U,KAAA+U,KASAq6B,QAAA,SAAA32B,EAAAgxC,GAGA,OAAAzpD,KAAAkK,OAAA,IAAAlK,KAAAmK,OAEA,WADAsO,GAAA+xB,iBAAA,IAIA,IAAA11B,GAAA9U,KAAA8U,GAAA7B,KAAAQ,IAAAzT,KAAA8U,GAAA9U,KAAAkK,MAAA,KACA6K,EAAA/U,KAAA+U,GAAA9B,KAAAQ,IAAAzT,KAAA+U,GAAA/U,KAAAmK,OAAA,KACAwnD,EAAA3xD,KAAAkK,MACAzE,EAAAzF,KAAAmK,OACAqK,EAAAi1C,EAAAzpD,KAAA2V,MAAA3V,KAAAkK,MAAA,EACAuK,EAAAg1C,EAAAzpD,KAAA4V,KAAA5V,KAAAmK,OAAA,EACA6rD,EAAA,IAAAlhD,GAAA,IAAAC,EAEAjQ,EAAA,WACA2T,GAAA+B,YAEA/B,EAAAY,OAAA7E,EAAAM,EAAAL,GAEAgE,EAAAs3B,OAAAv7B,EAAAm9C,EAAA78C,EAAAL,GACAuhD,GAAAv9C,EAAAkJ,cAAAnN,EAAAm9C,EAAA7sD,EAAAgQ,EAAAL,EAAAD,EAAAm9C,EAAAl9C,EAAA3P,EAAAiQ,EAAAP,EAAAm9C,EAAAl9C,EAAAM,GAEA0D,EAAAs3B,OAAAv7B,EAAAm9C,EAAAl9C,EAAAhP,EAAAsP,GACAihD,GAAAv9C,EAAAkJ,cAAAnN,EAAAm9C,EAAAl9C,EAAAhP,EAAAX,EAAAiQ,EAAAP,EAAAm9C,EAAA7sD,EAAAgQ,EAAAL,EAAAhP,EAAA+O,EAAAm9C,EAAA78C,EAAAL,EAAAhP,GAEAgT,EAAAs3B,OAAAv7B,EAAAM,EAAAL,EAAAhP,GACAuwD,GAAAv9C,EAAAkJ,cAAAnN,EAAA1P,EAAAgQ,EAAAL,EAAAhP,EAAA+O,EAAAC,EAAAhP,EAAAX,EAAAiQ,EAAAP,EAAAC,EAAAhP,EAAAsP,GAEA0D,EAAAs3B,OAAAv7B,EAAAC,EAAAM,GACAihD,GAAAv9C,EAAAkJ,cAAAnN,EAAAC,EAAA3P,EAAAiQ,EAAAP,EAAA1P,EAAAgQ,EAAAL,EAAAD,EAAAM,EAAAL,GAEAgE,EAAA83B,YAEAvwC,KAAAuqD,YAAA9xC,GACAzY,KAAAwqD,cAAA/xC,IAOAgyC,oBAAA,SAAAhyC,GACA,GAAAjE,IAAAxU,KAAAkK,MAAA,EACAuK,GAAAzU,KAAAmK,OAAA,EACAwnD,EAAA3xD,KAAAkK,MACAzE,EAAAzF,KAAAmK,MAEAsO,GAAA+B,YACAxQ,EAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAC,EAAAD,EAAAm9C,EAAAl9C,EAAAzU,KAAAguC,iBACAhkC,EAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAm9C,EAAAl9C,EAAAD,EAAAm9C,EAAAl9C,EAAAhP,EAAAzF,KAAAguC,iBACAhkC,EAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAm9C,EAAAl9C,EAAAhP,EAAA+O,EAAAC,EAAAhP,EAAAzF,KAAAguC,iBACAhkC,EAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAC,EAAAhP,EAAA+O,EAAAC,EAAAzU,KAAAguC,iBACAv1B,EAAA83B,aAQAnN,SAAA,SAAAmI,GACA,GAAAnkC,GAAA0b,EAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAz2B,GAAA9U,KAAAxE,IAAA,SACAuZ,GAAA/U,KAAAxE,IAAA,UAKA,OAHAwE,MAAAglC,sBACAhlC,KAAA+oD,qBAAA3hD,GAEAA,GASAotB,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,uBAAAl8C,EAAAxU,KAAA2V,KAAAlB,EAAAzU,KAAA4V,GAeA,OAdA5V,MAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAyH,GAAAxU,KAAAkK,MAAA,EACAuK,GAAAzU,KAAAmK,OAAA,GAEAoqB,EAAA38B,KACA,SAAAoI,KAAA4vD,WACA,MAAAp7C,EAAA,QAAAC,EACA,SAAAzU,KAAAxE,IAAA,eAAAwE,KAAAxE,IAAA,MACA,YAAAwE,KAAAkK,MAAA,aAAAlK,KAAAmK,OACA,YAAAnK,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBACA7vD,KAAAywD,wBACA,SAEAj5C,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KAQAub,WAAA,WACA,YAWA3I,EAAAgoC,KAAAuiB,gBAAAvqD,EAAAgG,kBAAA9N,OAAA,yBAAA9G,MAAA,MAUA4O,EAAAgoC,KAAArX,YAAA,SAAAzV,EAAAnsB,GACA,IAAAmsB,EACA,WAEAnsB,QAEA,IAAAy7D,GAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAAgoC,KAAAuiB,gBAEAC,GAAA7+C,KAAA6+C,EAAA7+C,MAAA,EACA6+C,EAAA5+C,IAAA4+C,EAAA5+C,KAAA,CACA,IAAAm8B,GAAA,GAAA/nC,GAAAgoC,KAAAlvB,EAAA/pB,EAAAiR,EAAA6G,KAAAzJ,OAAA4b,MAAAjqB,MAAwFy7D,GAExF,OADAziB,GAAA1hB,QAAA0hB,EAAA1hB,SAAA0hB,EAAA7nC,MAAA,GAAA6nC,EAAA5nC,OAAA,EACA4nC,GAYA/nC,EAAAgoC,KAAAj6B,WAAA,SAAA3Q,EAAAiL,GACA,GAAA0/B,GAAA,GAAA/nC,GAAAgoC,KAAA5qC,EAEA,OADAiL,MAAA0/B,GACAA,IAGC17C,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,UAEA,OAAAA,GAAAisD,aACAjsD,GAAAiiB,KAAA,uCAUAjiB,EAAAisD,SAAAjsD,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,WAOAqI,OAAA,KAOAE,KAAA,EAOAG,KAAA,EAqBAsO,WAAA,SAAA3O,EAAArc,GACA,MAAAiR,GAAAksD,QAAAh1D,UAAA6iB,WAAA5iB,KAAAnB,KAAAoV,EAAArc,IAMAo9D,gBAAA,WACA,MAAAnsD,GAAAksD,QAAAh1D,UAAAi1D,gBAAAh1D,KAAAnB,OAQAojC,SAAA,SAAAmI,GACA,MAAAvhC,GAAAksD,QAAAh1D,UAAAkiC,SAAAjiC,KAAAnB,KAAAurC,IASA/W,MAAA,SAAAhd,GACA,MAAAxN,GAAAksD,QAAAh1D,UAAAszB,MAAArzB,KAAAnB,KAAAwX,IASA43B,QAAA,SAAA32B,EAAAgxC,GACAz/C,EAAAksD,QAAAh1D,UAAAk1D,aAAAj1D,KAAAnB,KAAAyY,EAAAgxC,KAGAzpD,KAAAuqD,YAAA9xC,GACAzY,KAAAwqD,cAAA/xC,KAOAgyC,oBAAA,SAAAhyC,GACA,GAAAk3B,GAAAC,CAEAn3B,GAAA+B,WACA,QAAAve,GAAA,EAAAoV,EAAArR,KAAAoV,OAAAlZ,OAA+CD,EAAAoV,EAASpV,IACxD0zC,EAAA3vC,KAAAoV,OAAAnZ,GACA2zC,EAAA5vC,KAAAoV,OAAAnZ,EAAA,IAAA0zC,EACA3lC,EAAA6G,KAAA2H,eAAAC,EAAAk3B,EAAAn7B,EAAAm7B,EAAAl7B,EAAAm7B,EAAAp7B,EAAAo7B,EAAAn7B,EAAAzU,KAAAguC,kBAQAr7B,WAAA,WACA,MAAA3S,MAAAxE,IAAA,UAAAU,UAWA8N,EAAAisD,SAAA1B,gBAAAvqD,EAAAgG,kBAAA9N,SAUA8H,EAAAisD,SAAAt7B,YAAA,SAAAzV,EAAAnsB,GACA,IAAAmsB,EACA,WAEAnsB,UAEA,IAAAqc,GAAApL,EAAAyuB,qBAAAvT,EAAAmN,aAAA,WACAmiC,EAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAAisD,SAAA1B,gBAEA,WAAAvqD,GAAAisD,SAAA7gD,EAAApL,EAAA6G,KAAAzJ,OAAA0b,OAAA0xC,EAAAz7D,UAYAiR,EAAAisD,SAAAl+C,WAAA,SAAA3Q,EAAAiL,GACA,GAAAgkD,GAAA,GAAArsD,GAAAisD,SAAA7uD,EAAAgO,OAAAhO,EAEA,OADAiL,MAAAgkD,GACAA,MAGChgE,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACArP,EAAAzJ,EAAA6G,KAAAC,MAAA2C,IACAC,EAAA1J,EAAA6G,KAAAC,MAAA4C,IACAsC,EAAAhM,EAAA6G,KAAAmF,OAEA,OAAAhM,GAAAksD,YACAlsD,GAAAiiB,KAAA,sCAUAjiB,EAAAksD,QAAAlsD,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,UAOAqI,OAAA,KAOAE,KAAA,EAOAG,KAAA,EAQAsO,WAAA,SAAA3O,EAAArc,GACAA,QACAiH,KAAAoV,aACApV,KAAA0jB,UAAA,aAAA3qB,GACAiH,KAAAm2D,kBACA,OAAAp9D,KACAiH,KAAA4V,IAAA5V,KAAAyV,MAEA,QAAA1c,KACAiH,KAAA2V,KAAA3V,KAAAsV,MAEAtV,KAAAs2D,YACA9hD,EAAAxU,KAAAsV,KAAAtV,KAAAkK,MAAA,EACAuK,EAAAzU,KAAAyV,KAAAzV,KAAAmK,OAAA,IAOAgsD,gBAAA,WAEA,GAAA/gD,GAAApV,KAAAoV,OACAE,EAAA7B,EAAA2B,EAAA,KACAK,EAAAhC,EAAA2B,EAAA,KACAG,EAAA7B,EAAA0B,EAAA,KACAM,EAAAhC,EAAA0B,EAAA,IAEApV,MAAAkK,MAAAqL,EAAAD,GAAA,EACAtV,KAAAmK,OAAAuL,EAAAD,GAAA,EACAzV,KAAAsV,QAAA,EACAtV,KAAAyV,QAAA,GAQA2tB,SAAA,SAAAmI,GACA,MAAAzoB,GAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAn2B,OAAApV,KAAAoV,OAAAlT,YAUAsyB,MAAA,SAAAhd,GAIA,OAHA++C,GAAAnhD,KACAmf,EAAAv0B,KAAA0wD,uBAEAz0D,EAAA,EAAAoV,EAAArR,KAAAoV,OAAAlZ,OAA+CD,EAAAoV,EAASpV,IACxDmZ,EAAAxd,KAAAoe,EAAAhW,KAAAoV,OAAAnZ,GAAAuY,EAAA,OAAAwB,EAAAhW,KAAAoV,OAAAnZ,GAAAwY,EAAA,OAcA,OAZAzU,MAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAwpD,EAAA,eAAAv2D,KAAAs2D,WAAA9hD,EAAA,MAAAxU,KAAAs2D,WAAA7hD,EAAA,MAEA8f,EAAA38B,KACA,IAAAoI,KAAA+M,KAAA,IAAA/M,KAAA4vD,WACA,WAAAx6C,EAAAhe,KAAA,IACA,YAAA4I,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBAAA0G,EACA,IAAAv2D,KAAAywD,wBACA,SAGAj5C,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KASAg4C,QAAA,SAAA32B,EAAAgxC,GACAzpD,KAAAo2D,aAAA39C,EAAAgxC,KAGAzpD,KAAAuqD,YAAA9xC,IACAzY,KAAA41B,QAAA51B,KAAAguC,mBACAv1B,EAAA83B,YACAvwC,KAAAwqD,cAAA/xC,MASA29C,aAAA,SAAA39C,EAAAgxC,GACA,GAAAv1C,GAAA7C,EAAArR,KAAAoV,OAAAlZ,MAEA,KAAAmV,GAAAif,MAAAtwB,KAAAoV,OAAA/D,EAAA,GAAAoD,GAGA,QAGAg1C,IAAAhxC,EAAAW,WAAApZ,KAAAs2D,WAAA9hD,GAAAxU,KAAAs2D,WAAA7hD,GACAgE,EAAA+B,YACA/B,EAAAY,OAAArZ,KAAAoV,OAAA,GAAAZ,EAAAxU,KAAAoV,OAAA,GAAAX,EACA,QAAAxY,GAAA,EAAqBA,EAAAoV,EAASpV,IAC9BiY,EAAAlU,KAAAoV,OAAAnZ,GACAwc,EAAAs3B,OAAA77B,EAAAM,EAAAN,EAAAO,EAEA,WAOAg2C,oBAAA,SAAAhyC,GACAzO,EAAAisD,SAAA/0D,UAAAupD,oBAAAtpD,KAAAnB,KAAAyY,GACAA,EAAA83B,aAOA59B,WAAA,WACA,MAAA3S,MAAAoV,OAAAlZ,UAWA8N,EAAAksD,QAAA3B,gBAAAvqD,EAAAgG,kBAAA9N,SAUA8H,EAAAksD,QAAAv7B,YAAA,SAAAzV,EAAAnsB,GACA,IAAAmsB,EACA,WAGAnsB,UAEA,IAAAqc,GAAApL,EAAAyuB,qBAAAvT,EAAAmN,aAAA,WACAmiC,EAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAAksD,QAAA3B,gBAEA,WAAAvqD,GAAAksD,QAAA9gD,EAAA0N,EAAA0xC,EAAAz7D,UAYAiR,EAAAksD,QAAAn+C,WAAA,SAAA3Q,EAAAiL,GACA,GAAAmkD,GAAA,GAAAxsD,GAAAksD,QAAA9uD,EAAAgO,OAAAhO,EAEA,OADAiL,MAAAmkD,GACAA,MAGCngE,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACAyJ,EAAAzJ,EAAA6G,KAAAC,MAAA2C,IACAC,EAAA1J,EAAA6G,KAAAC,MAAA4C,IACAoP,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACA2zC,EAAAn/D,OAAA4J,UAAA6N,SACAoS,EAAAnX,EAAA6G,KAAAsQ,QACAu1C,GACA9/B,EAAA,EACAlyB,EAAA,EACAe,EAAA,EACA4O,EAAA,EACAzK,EAAA,EACAtE,EAAA,EACAo5B,EAAA,EACAzpB,EAAA,EACAa,EAAA,GAEA6gD,GACA//B,EAAA,IACAggC,EAAA,IAGA,OAAA5sD,GAAAmmC,SACAnmC,GAAAiiB,KAAA,mCAWAjiB,EAAAmmC,KAAAnmC,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAyV,KAAA,OAOAxM,KAAA,KAOA+U,KAAA,EAOAG,KAAA,EAQAsO,WAAA,SAAAxjB,EAAAxH,GACAA,QAEAiH,KAAA+nC,WAAAhvC,GAEAwH,IACAA,KAGA,IAAAs2D,GAAA,mBAAAJ,EAAAt1D,KAAAZ,EAEAP,MAAAO,KAAAs2D,EACAt2D,EAEAA,EAAAwD,OAAAxD,EAAAwD,MAAA,gCAEA/D,KAAAO,OAIAs2D,IACA72D,KAAAO,KAAAP,KAAA82D,cAGA92D,KAAA+2D,uBAAAh+D,GAEAA,EAAAwwD,YACAvpD,KAAAoY,cAAArf,EAAAwwD,cAQAwN,uBAAA,SAAAh+D,GACA,GAAAi+D,GAAAh3D,KAAAi3D,kBAEAj3D,MAAAsV,KAAA0hD,EAAArhD,KACA3V,KAAAyV,KAAAuhD,EAAAphD,IACA5V,KAAAkK,MAAA8sD,EAAA9sD,MACAlK,KAAAmK,OAAA6sD,EAAA7sD,OAEA,mBAAApR,GAAA4c,OACA3V,KAAA2V,KAAAqhD,EAAArhD,MAAA,WAAA3V,KAAAqwC,QACArwC,KAAAkK,MAAA,EACA,UAAAlK,KAAAqwC,QACArwC,KAAAkK,MACA,IAGA,mBAAAnR,GAAA6c,MACA5V,KAAA4V,IAAAohD,EAAAphD,KAAA,WAAA5V,KAAAswC,QACAtwC,KAAAmK,OAAA,EACA,WAAAnK,KAAAswC,QACAtwC,KAAAmK,OACA,IAGAnK,KAAAs2D,WAAAt2D,KAAAs2D,aACA9hD,EAAAxU,KAAAsV,KAAAtV,KAAAkK,MAAA,EACAuK,EAAAzU,KAAAyV,KAAAzV,KAAAmK,OAAA,IAQA+sD,oBAAA,SAAAz+C,GACA,GAAA3F,GAQAqkD,EACAC,EARAC,EAAA,KACAC,EAAA,EACAC,EAAA,EACA/iD,EAAA,EACAC,EAAA,EACA+iD,EAAA,EACAC,EAAA,EAGA/yD,GAAA1E,KAAAs2D,WAAA9hD,EACAS,GAAAjV,KAAAs2D,WAAA7hD,CAEAzU,MAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACArI,EAAA,EACAuQ,EAAA,GAGAwD,EAAA+B,WAEA,QAAAve,GAAA,EAAAoV,EAAArR,KAAAO,KAAArE,OAA6CD,EAAAoV,IAASpV,EAAA,CAItD,OAFA6W,EAAA9S,KAAAO,KAAAtE,GAEA6W,EAAA,IAEA,QACA0B,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,GACA2F,EAAAs3B,OAAAv7B,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAT,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACA2F,EAAAs3B,OAAAv7B,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAT,GAAA1B,EAAA,GACA2F,EAAAs3B,OAAAv7B,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAT,EAAA1B,EAAA,GACA2F,EAAAs3B,OAAAv7B,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAR,GAAA3B,EAAA,GACA2F,EAAAs3B,OAAAv7B,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAR,EAAA3B,EAAA,GACA2F,EAAAs3B,OAAAv7B,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAT,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,GACAwkD,EAAA9iD,EACA+iD,EAAA9iD,EACAgE,EAAAY,OAAA7E,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAT,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACAwkD,EAAA9iD,EACA+iD,EAAA9iD,EACAgE,EAAAY,OAAA7E,EAAA9P,EAAA+P,EAAAQ,EACA,MAEA,SACAkiD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GACA0kD,EAAAhjD,EAAA1B,EAAA,GACA2kD,EAAAhjD,EAAA3B,EAAA,GACA2F,EAAAkJ,cACAnN,EAAA1B,EAAA,GAAApO,EACA+P,EAAA3B,EAAA,GAAAmC,EACAuiD,EAAA9yD,EACA+yD,EAAAxiD,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAEAT,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SACA5iD,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACA0kD,EAAA1kD,EAAA,GACA2kD,EAAA3kD,EAAA,GACA2F,EAAAkJ,cACA7O,EAAA,GAAApO,EACAoO,EAAA,GAAAmC,EACAuiD,EAAA9yD,EACA+yD,EAAAxiD,EACAT,EAAA9P,EACA+P,EAAAQ,EAEA,MAEA,SAGAkiD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GAEA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAGAh/C,EAAAkJ,cACA61C,EAAA9yD,EACA+yD,EAAAxiD,EACAT,EAAA1B,EAAA,GAAApO,EACA+P,EAAA3B,EAAA,GAAAmC,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAMAuiD,EAAAhjD,EAAA1B,EAAA,GACA2kD,EAAAhjD,EAAA3B,EAAA,GAEA0B,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SACAD,EAAArkD,EAAA,GACAskD,EAAAtkD,EAAA,GACA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAEAh/C,EAAAkJ,cACA61C,EAAA9yD,EACA+yD,EAAAxiD,EACAnC,EAAA,GAAApO,EACAoO,EAAA,GAAAmC,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAEAT,EAAA2iD,EACA1iD,EAAA2iD,EAMAI,EAAA1kD,EAAA,GACA2kD,EAAA3kD,EAAA,EAEA,MAEA,SAEAqkD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GAEA0kD,EAAAhjD,EAAA1B,EAAA,GACA2kD,EAAAhjD,EAAA3B,EAAA,GAEA2F,EAAAq3B,iBACA0nB,EAAA9yD,EACA+yD,EAAAxiD,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAEAT,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SACAD,EAAArkD,EAAA,GACAskD,EAAAtkD,EAAA,GAEA2F,EAAAq3B,iBACAh9B,EAAA,GAAApO,EACAoO,EAAA,GAAAmC,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAEAT,EAAA2iD,EACA1iD,EAAA2iD,EACAI,EAAA1kD,EAAA,GACA2kD,EAAA3kD,EAAA,EACA,MAEA,SAGAqkD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GAEA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAGAh/C,EAAAq3B,iBACA0nB,EAAA9yD,EACA+yD,EAAAxiD,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAEAT,EAAA2iD,EACA1iD,EAAA2iD,CAEA,MAEA,SACAD,EAAArkD,EAAA,GACAskD,EAAAtkD,EAAA,GAEA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAEAh/C,EAAAq3B,iBACA0nB,EAAA9yD,EACA+yD,EAAAxiD,EACAkiD,EAAAzyD,EACA0yD,EAAAniD,GAEAT,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SAEAj2C,EAAA1I,EAAAjE,EAAA9P,EAAA+P,EAAAQ,GACAnC,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAA0B,EAAA9P,EACAoO,EAAA,GAAA2B,EAAAQ,IAEAT,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,EACA,MAEA,SAEAqO,EAAA1I,EAAAjE,EAAA9P,EAAA+P,EAAAQ,GACAnC,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAApO,EACAoO,EAAA,GAAAmC,IAEAT,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,EACA,MAEA,SACA,QACA0B,EAAA8iD,EACA7iD,EAAA8iD,EACA9+C,EAAA83B,YAGA8mB,EAAAvkD,IAQAs8B,QAAA,SAAA32B,GACAzY,KAAAk3D,oBAAAz+C,GACAzY,KAAAuqD,YAAA9xC,GACAzY,KAAAwqD,cAAA/xC,IAOA1J,SAAA,WACA,wBAAA/O,KAAA2S,aACA,eAAa3S,KAAA4V,IAAA,aAAA5V,KAAA2V,KAAA,OAQbytB,SAAA,SAAAmI,GACA,GAAAj5B,GAAAwQ,EAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAhrC,KAAAP,KAAAO,KAAA7J,IAAA,SAAA6b,GAA4C,MAAAA,GAAAlO,UAC5CiyD,WAAAt2D,KAAAs2D,YAQA,OANAt2D,MAAAupD,aACAj3C,EAAAi3C,WAAAvpD,KAAAupD,YAEAvpD,KAAAmwB,kBACA7d,EAAA6d,gBAAAnwB,KAAAmwB,iBAEA7d,GAQAk5B,iBAAA,SAAAD,GACA,GAAAj5B,GAAAtS,KAAAojC,SAAAmI,EAKA,OAJAvrC,MAAAupD,aACAj3C,EAAA/R,KAAAP,KAAAupD,kBAEAj3C,GAAAi3C,WACAj3C,GASAkiB,MAAA,SAAAhd,GAIA,OAHAkgD,MACAnjC,EAAAv0B,KAAA0wD,uBAAA6F,EAAA,GAEAt6D,EAAA,EAAAoV,EAAArR,KAAAO,KAAArE,OAA6CD,EAAAoV,EAASpV,IACtDy7D,EAAA9/D,KAAAoI,KAAAO,KAAAtE,GAAA7E,KAAA,KAEA,IAAAmJ,GAAAm3D,EAAAtgE,KAAA,IAaA,OAZA4I,MAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAwpD,EAAA,eAAAv2D,KAAAs2D,WAAA9hD,EAAA,MAAAxU,KAAAs2D,WAAA7hD,EAAA,MAEA8f,EAAA38B,KACA,SAAAoI,KAAA4vD,WACA,MAAArvD,EACA,YAAAP,KAAAyvD,eACA,gBAAAzvD,KAAA6vD,kBAAA0G,EACAv2D,KAAAywD,wBAAA,4BACA,QAGAj5C,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KAQAub,WAAA,WACA,MAAA3S,MAAAO,KAAArE,QAMA46D,WAAA,WASA,OANAa,GACA1nC,EAEAlsB,EACA6zD,EAEAC,EARAphE,KACA6qB,KAGAw2C,EAAA,sDAIA77D,EAAA,EAAAoV,EAAArR,KAAAO,KAAArE,OAA2DD,EAAAoV,EAASpV,IAAA,CAMpE,IALA07D,EAAA33D,KAAAO,KAAAtE,GAEA27D,EAAAD,EAAAtzD,MAAA,GAAAZ,OACA6d,EAAAplB,OAAA,EAEA6H,EAAA+zD,EAAAn0D,KAAAi0D,IACAt2C,EAAA1pB,KAAAmM,EAAA,GAGA8zD,IAAAF,EAAA3xD,OAAA,GAEA,QAAAnB,GAAA,EAAAoc,EAAAK,EAAAplB,OAA6C2I,EAAAoc,EAAUpc,IACvDorB,EAAA9Z,WAAAmL,EAAAzc,IACAyrB,MAAAL,IACA4nC,EAAAjgE,KAAAq4B,EAIA,IAAA8nC,GAAAF,EAAA,GACAG,EAAAtB,EAAAqB,EAAAl0D,eACAo0D,EAAAtB,EAAAoB,KAEA,IAAAF,EAAA37D,OAAA,EAAA87D,EACA,OAAAlzD,GAAA,EAAAozD,EAAAL,EAAA37D,OAAqD4I,EAAAozD,EAAUpzD,GAAAkzD,EAC/DvhE,EAAAmB,MAAAmgE,GAAA71D,OAAA21D,EAAAxzD,MAAAS,IAAAkzD,KACAD,EAAAE,MAIAxhE,GAAAmB,KAAAigE,GAIA,MAAAphE,IAMAwgE,iBAAA,WAgBA,OAZAnkD,GAQAqkD,EACAC,EACAr2C,EAZAo3C,KACAC,KAEAf,EAAA,KACAC,EAAA,EACAC,EAAA,EACA/iD,EAAA,EACAC,EAAA,EACA+iD,EAAA,EACAC,EAAA,EAKAx7D,EAAA,EAAAoV,EAAArR,KAAAO,KAAArE,OAA6CD,EAAAoV,IAASpV,EAAA,CAItD,OAFA6W,EAAA9S,KAAAO,KAAAtE,GAEA6W,EAAA,IAEA,QACA0B,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,GACAiO,IACA,MAEA,SACAvM,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACAiO,IACA,MAEA,SACAvM,GAAA1B,EAAA,GACAiO,IACA,MAEA,SACAvM,EAAA1B,EAAA,GACAiO,IACA,MAEA,SACAtM,GAAA3B,EAAA,GACAiO,IACA,MAEA,SACAtM,EAAA3B,EAAA,GACAiO,IACA,MAEA,SACAvM,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,GACAwkD,EAAA9iD,EACA+iD,EAAA9iD,EACAsM,IACA,MAEA,SACAvM,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACAwkD,EAAA9iD,EACA+iD,EAAA9iD,EACAsM,IACA,MAEA,SACAo2C,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GACA0kD,EAAAhjD,EAAA1B,EAAA,GACA2kD,EAAAhjD,EAAA3B,EAAA,GACAiO,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACAD,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACA0kD,EACAC,EACAN,EACAC,GAEA5iD,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SACA5iD,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACA0kD,EAAA1kD,EAAA,GACA2kD,EAAA3kD,EAAA,GACAiO,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA3B,EAAA,GACAA,EAAA,GACA0kD,EACAC,EACAjjD,EACAC,EAEA,MAEA,SAGA0iD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GAEA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAGA12C,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA+iD,EACAC,EACAjjD,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,GACAqkD,EACAC,GAMAI,EAAAhjD,EAAA1B,EAAA,GACA2kD,EAAAhjD,EAAA3B,EAAA,GACA0B,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SACAD,EAAArkD,EAAA,GACAskD,EAAAtkD,EAAA,GACA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAEA12C,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA+iD,EACAC,EACA3kD,EAAA,GACAA,EAAA,GACAqkD,EACAC,GAEA5iD,EAAA2iD,EACA1iD,EAAA2iD,EAKAI,EAAA1kD,EAAA,GACA2kD,EAAA3kD,EAAA,EACA,MAEA,SAEAqkD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GACA0kD,EAAAhjD,EAAA1B,EAAA,GACA2kD,EAAAhjD,EAAA3B,EAAA,GACAiO,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA+iD,EACAC,EACAD,EACAC,EACAN,EACAC,GAEA5iD,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SACAI,EAAA1kD,EAAA,GACA2kD,EAAA3kD,EAAA,GACAiO,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA+iD,EACAC,EACAD,EACAC,EACA3kD,EAAA,GACAA,EAAA,IAEA0B,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,EACA,MAEA,SAEAqkD,EAAA3iD,EAAA1B,EAAA,GACAskD,EAAA3iD,EAAA3B,EAAA,GACA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAGA12C,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA+iD,EACAC,EACAD,EACAC,EACAN,EACAC,GAEA5iD,EAAA2iD,EACA1iD,EAAA2iD,CAEA,MAEA,SACAD,EAAArkD,EAAA,GACAskD,EAAAtkD,EAAA,GAEA,OAAAukD,EAAA,GAAAtzD,MAAA,WAGAyzD,EAAAhjD,EACAijD,EAAAhjD,IAIA+iD,EAAA,EAAAhjD,EAAAgjD,EACAC,EAAA,EAAAhjD,EAAAgjD,GAEA12C,EAAA/W,EAAA6G,KAAAqP,iBAAA1L,EAAAC,EACA+iD,EACAC,EACAD,EACAC,EACAN,EACAC,GAEA5iD,EAAA2iD,EACA1iD,EAAA2iD,CACA,MAEA,SAEAr2C,EAAA/W,EAAA6G,KAAA+Q,eAAApN,EAAAC,EACA3B,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAAA0B,EACA1B,EAAA,GAAA2B,GAEAD,GAAA1B,EAAA,GACA2B,GAAA3B,EAAA,EACA,MAEA,SAEAiO,EAAA/W,EAAA6G,KAAA+Q,eAAApN,EAAAC,EACA3B,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IAEA0B,EAAA1B,EAAA,GACA2B,EAAA3B,EAAA,EACA,MAEA,SACA,QACA0B,EAAA8iD,EACA7iD,EAAA8iD,EAGAF,EAAAvkD,EACAiO,EAAA5nB,QAAA,SAAA+a,GACAikD,EAAAvgE,KAAAsc,EAAAM,GACA4jD,EAAAxgE,KAAAsc,EAAAO,KAEA0jD,EAAAvgE,KAAA4c,GACA4jD,EAAAxgE,KAAA6c,GAGA,GAAAa,GAAA7B,EAAA0kD,IAAA,EACA1iD,EAAAhC,EAAA2kD,IAAA,EACA7iD,EAAA7B,EAAAykD,IAAA,EACAziD,EAAAhC,EAAA0kD,IAAA,EACAC,EAAA9iD,EAAAD,EACAgjD,EAAA5iD,EAAAD,EAEAnD,GACAqD,KAAAL,EACAM,IAAAH,EACAvL,MAAAmuD,EACAluD,OAAAmuD,EAGA,OAAAhmD,MAWAtI,EAAAmmC,KAAAp4B,WAAA,SAAA3Q,EAAAiL,GAEA,GAAA9R,EACA,uBAAA6G,GAAA7G,MAaAA,EAAA,GAAAyJ,GAAAmmC,KAAA/oC,EAAA7G,KAAA6G,GACAiL,KAAA9R,GACAA,OAdAyJ,GAAAovB,eAAAhyB,EAAA7G,KAAA,SAAA2X,GACA,GAAAqgD,GAAAnxD,EAAA7G,IACAA,GAAA2X,EAAA,SACA9Q,GAAA7G,KAEAyJ,EAAA6G,KAAAzJ,OAAA0b,OAAAviB,EAAA6G,GACA7G,EAAA6X,cAAAmgD,GAEAlmD,KAAA9R,MAiBAyJ,EAAAmmC,KAAAokB,gBAAAvqD,EAAAgG,kBAAA9N,QAAA,MAUA8H,EAAAmmC,KAAAxV,YAAA,SAAAzV,EAAA7S,EAAAtZ,GACA,GAAAy7D,GAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAAmmC,KAAAokB,gBACAliD,MAAA,GAAArI,GAAAmmC,KAAAqkB,EAAA7nC,EAAA7J,EAAA0xC,EAAAz7D,WAWAiR,EAAAmmC,KAAAr4B,OAAA,KAECzhB,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACAf,EAAA/X,EAAA6G,KAAAC,MAAAiR,OACAy2C,EAAAxuD,EAAA1S,OAAA4J,UAAAkiC,QAEA,OAAAp5B,GAAAmO,cACAnO,GAAAiiB,KAAA,wCAWAjiB,EAAAmO,UAAAnO,EAAA6G,KAAAiT,YAAA9Z,EAAAmmC,MAOApjC,KAAA,aAOAgE,KAAA,GAQAgT,WAAA,SAAA00C,EAAA1/D,GAEAA,QACAiH,KAAAy4D,WAEA,QAAAx8D,GAAA+D,KAAAy4D,MAAAv8D,OAAqCD,KACrC+D,KAAAy4D,MAAAx8D,GAAAsnC,MAAAvjC,IAGAjH,GAAAk7B,aACAj0B,KAAA04D,yBAAA3/D,SACAA,GAAAk7B,YAEAj0B,KAAA+nC,WAAAhvC,GACAiH,KAAAmpC,YAEApwC,EAAAwwD,YACAvpD,KAAAoY,cAAArf,EAAAwwD,aAOAmP,yBAAA,SAAA3/D,GAGA,OAFAqc,GAAA5P,EAAAjF,EAAA4J,EAAAD,EACA0sB,EADA+hC,KAAAC,KAEA/zD,EAAA7E,KAAAy4D,MAAAv8D,OAAqC2I,KAAK,CAC1CtE,EAAAP,KAAAy4D,MAAA5zD,GACAsF,EAAA5J,EAAA4J,OAAA5J,EAAA6vC,YACAlmC,EAAA3J,EAAA2J,MAAA3J,EAAA6vC,YACAh7B,IACWZ,EAAAjU,EAAAoV,KAAAlB,EAAAlU,EAAAqV,MACApB,EAAAjU,EAAAoV,KAAAzL,EAAAuK,EAAAlU,EAAAqV,MACApB,EAAAjU,EAAAoV,KAAAlB,EAAAlU,EAAAqV,IAAAzL,IACAqK,EAAAjU,EAAAoV,KAAAzL,EAAAuK,EAAAlU,EAAAqV,IAAAzL,IAEXysB,EAAA52B,KAAAy4D,MAAA5zD,GAAAsrB,eACA,QAAAl0B,GAAA,EAAuBA,EAAAmZ,EAAAlZ,OAAmBD,IAC1CuJ,EAAA4P,EAAAnZ,GACA26B,IACApxB,EAAAwE,EAAA6G,KAAAmE,eAAAxP,EAAAoxB,GAAA,IAEA+hC,EAAA/gE,KAAA4N,EAAAgP,GACAokD,EAAAhhE,KAAA4N,EAAAiP,GAGA1b,EAAAmR,MAAA+I,KAAAS,IAAA9Z,MAAA,KAAA++D,GACA5/D,EAAAoR,OAAA8I,KAAAS,IAAA9Z,MAAA,KAAAg/D,IAOAvuB,OAAA,SAAA5xB,GAEA,GAAAzY,KAAAqwB,QAAA,CAIA5X,EAAAU,OAEAnZ,KAAAmwB,iBACA1X,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAmwB,iBAEAnwB,KAAA60B,UAAApc,GAEAzY,KAAAwuC,WAAA/1B,GACAzY,KAAAya,QAAAzQ,EAAA6G,KAAAyJ,YAAAta,KAAAyY,GACAA,EAAAW,WAAApZ,KAAAkK,MAAA,GAAAlK,KAAAmK,OAAA;AACA,OAAAlO,GAAA,EAAAyI,EAAA1E,KAAAy4D,MAAAv8D,OAA4CD,EAAAyI,IAAOzI,EACnD+D,KAAAy4D,MAAAx8D,GAAAouC,OAAA5xB,GAAA,EAEAzY,MAAAya,QAAAhC,EAAAc,UACAd,EAAAc,YASAowB,KAAA,SAAA14B,EAAAzZ,GAEA,YAAAyZ,GAAAzZ,GAAAwI,KAAA64D,cAEA,IADA,GAAA58D,GAAA+D,KAAAy4D,MAAAv8D,OACAD,KACA+D,KAAAy4D,MAAAx8D,GAAA0tC,KAAA14B,EAAAzZ,EAIA,OAAAwI,MAAA0jB,UAAA,OAAAzS,EAAAzZ,IAQA4rC,SAAA,SAAAmI,GACA,GAAAj5B,GAAAwQ,EAAA01C,EAAAr3D,KAAAnB,KAAAurC,IACAktB,MAAA12C,EAAA/hB,KAAA+L,aAAA,WAAAw/B,IAKA,OAHAvrC,MAAAupD,aACAj3C,EAAAi3C,WAAAvpD,KAAAupD,YAEAj3C,GAQAk5B,iBAAA,SAAAD,GACA,GAAAj5B,GAAAtS,KAAAojC,SAAAmI,EAIA,OAHAvrC,MAAAupD,aACAj3C,EAAAmmD,MAAAz4D,KAAAupD,YAEAj3C,GASAkiB,MAAA,SAAAhd,GACA,GAAAxF,GAAAhS,KAAA+L,aACAvG,EAAAxF,KAAAysD,iBAAA,cACAuD,EAAA,aAAAxqD,EAAAgP,EAAA,IAAAhP,EAAAiP,EAAA,IACA8f,EAAAv0B,KAAA0wD,sBACAn8B,GAAA38B,KACA,MAAAoI,KAAA4vD,WACA,UAAA5vD,KAAAyvD,eAAA,KACA,cAAAzvD,KAAAywD,wBAAAT,EAAAhwD,KAAA6vD,kBAAA,KACA,MAGA,QAAA5zD,GAAA,EAAAoV,EAAAW,EAAA9V,OAA2CD,EAAAoV,EAASpV,IACpDs4B,EAAA38B,KAAA,KAAAoa,EAAA/V,GAAAu4B,MAAAhd,GAIA,OAFA+c,GAAA38B,KAAA,UAEA4f,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KAQA2X,SAAA,WACA,6BAAA/O,KAAA2S,aACA,aAAa3S,KAAA4V,IAAA,WAAA5V,KAAA2V,KAAA,OAObkjD,YAAA,WACA,GAAAC,GAAA94D,KAAA+L,aAAA,GAAAvQ,IAAA,WACA,uBAAAs9D,KAGAA,IAAAj1D,cACA7D,KAAA+L,aAAA2W,MAAA,SAAAniB,GACA,GAAAw4D,GAAAx4D,EAAA/E,IAAA,WACA,uBAAAu9D,IAAA,EAAAl1D,gBAAAi1D,MAQAnmD,WAAA,WACA,MAAA3S,MAAAy4D,MAAA7lD,OAAA,SAAAomD,EAAAz4D,GACA,MAAAy4D,IAAAz4D,KAAAoS,WAAApS,EAAAoS,aAAA,IACO,IAOP5G,WAAA,WACA,MAAA/L,MAAAy4D,SAWAzuD,EAAAmO,UAAAJ,WAAA,SAAA3Q,EAAAiL,GAEA,gBAAAjL,GAAAqxD,MACAzuD,EAAAovB,eAAAhyB,EAAAqxD,MAAA,SAAAvgD,GAEA,GAAAqgD,GAAAnxD,EAAAqxD,YACArxD,GAAAqxD,KAEA,IAAAQ,GAAAjvD,EAAA6G,KAAAoH,iBAAAC,EAAA9Q,EAAAmxD,EAEAlmD,GAAA4mD,KAIAjvD,EAAA6G,KAAA0G,eAAAnQ,EAAAqxD,MAAA,SAAA7gD,SACAxQ,GAAAqxD,MACApmD,EAAA,GAAArI,GAAAmO,UAAAP,EAAAxQ,YAYA4C,EAAAmO,UAAAL,OAAA,KAECzhB,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACArP,EAAAzJ,EAAA6G,KAAAC,MAAA2C,IACAC,EAAA1J,EAAA6G,KAAAC,MAAA4C,IACAqO,EAAA/X,EAAA6G,KAAAC,MAAAiR,MAEA,KAAA/X,EAAAinC,MAAA,CAOA,GAAAioB,IACA7Q,eAAA,EACAC,eAAA,EACAC,cAAA,EACA9N,cAAA,EACAC,cAAA,EACA8N,gBAAA,EAWAx+C,GAAAinC,MAAAjnC,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,OAAA0S,EAAA0H,YAOA3E,KAAA,QAOAqjC,YAAA,EAOA2M,gBAAA,EASAh5B,WAAA,SAAA/R,EAAAjZ,EAAAogE,GACApgE,QAEAiH,KAAA2R,YAKAwnD,GAAAn5D,KAAA0jB,UAAA,aAAA3qB,GAEAiH,KAAA2R,SAAAK,KACA,QAAA/V,GAAA+D,KAAA2R,SAAAzV,OAAwCD,KACxC+D,KAAA2R,SAAA1V,GAAAsnC,MAAAvjC,IAGAA,MAAAkxD,iBAEAn4D,EAAAs3C,UACArwC,KAAAqwC,QAAAt3C,EAAAs3C,SAEAt3C,EAAAu3C,UACAtwC,KAAAswC,QAAAv3C,EAAAu3C,SAGA6oB,EAGAn5D,KAAAo5D,sBAAA,IAGAp5D,KAAAq5D,cACAr5D,KAAAo5D,uBACAp5D,KAAA0jB,UAAA,aAAA3qB,IAGAiH,KAAAmpC,YACAnpC,KAAAwkD,cAOA4U,qBAAA,SAAAE,GACA,OAAAr9D,GAAA+D,KAAA2R,SAAAzV,OAAwCD,KACxC+D,KAAAu5D,oBAAAv5D,KAAA2R,SAAA1V,GAAAq9D,IASAC,oBAAA,SAAAnyD,EAAAkyD,GAKA,GAHAlyD,EAAAoyD,kBAAApyD,EAAA+gD,YACA/gD,EAAA+gD,aAAA,GAEAmR,EAAA,CAIA,GAAAG,GAAAryD,EAAA2jD,UACA2O,EAAAtyD,EAAA4jD,SACAlgB,EAAA9qC,KAAA4qC,gBAEAxjC,GAAAyD,KACA8uD,aAAAF,EACAG,YAAAF,EACA/jD,KAAA8jD,EAAA3uB,EAAAt2B,EACAoB,IAAA8jD,EAAA5uB,EAAAr2B,IAEArN,EAAA+hC,cAOAp6B,SAAA,WACA,0BAAA/O,KAAA2S,aAAA,MASA+xC,cAAA,SAAAt9C,GAYA,MAXApH,MAAA65D,uBACA7vD,EAAA6G,KAAA6K,qBAAA1b,MACAoH,IACApH,KAAA2R,SAAA/Z,KAAAwP,GACAA,EAAAm8B,MAAAvjC,KACAoH,EAAAuiC,KAAA,SAAA3pC,KAAA+J,SAGA/J,KAAAoS,cAAApS,KAAA85D,iBAAA95D,MACAA,KAAAq5D,cACAr5D,KAAAo5D,uBACAp5D,MAMA85D,iBAAA,SAAA1yD,GACAA,EAAAyD,IAAA,aACAzD,EAAAm8B,MAAAvjC,MASAykD,iBAAA,SAAAr9C,GAUA,MATApH,MAAA65D,uBACA7vD,EAAA6G,KAAA6K,qBAAA1b,MAEAA,KAAAoS,cAAApS,KAAA85D,iBAAA95D,MAEAA,KAAAiS,OAAA7K,GACApH,KAAAq5D,cACAr5D,KAAAo5D,uBAEAp5D,MAMA4R,eAAA,SAAAxK,GACAA,EAAAm8B,MAAAvjC,KACAoH,EAAAuiC,KAAA,SAAA3pC,KAAA+J,SAMAoI,iBAAA,SAAA/K,SACAA,GAAAm8B,MACAn8B,EAAAyD,IAAA,cAOAkvD,qBACAhpD,MAAA,EACA6kB,QAAA,EACAwa,aAAA,EACAvzB,YAAA,EACAkb,YAAA,EACAzhB,UAAA,EACAwhB,WAAA,EACAE,YAAA,EACAgiC,gBAAA,EACAC,WAAA,EACAp0B,iBAAA,GAMA8D,KAAA,SAAAvwC,EAAA5B,GACA,GAAAyE,GAAA+D,KAAA2R,SAAAzV,MAEA,IAAA8D,KAAA+5D,oBAAA3gE,IAAA,WAAAA,EACA,KAAA6C,KACA+D,KAAA2R,SAAA1V,GAAA4O,IAAAzR,EAAA5B,OAIA,MAAAyE,KACA+D,KAAA2R,SAAA1V,GAAAotD,WAAAjwD,EAAA5B,EAIAwI,MAAA0jB,UAAA,OAAAtqB,EAAA5B,IAQA4rC,SAAA,SAAAmI,GACA,MAAAzoB,GAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAv5B,QAAA+P,EAAA/hB,KAAA2R,SAAA,WAAA45B,MAQAlB,OAAA,SAAA5xB,GAEA,GAAAzY,KAAAqwB,QAAA,CAIA5X,EAAAU,OACAnZ,KAAAmwB,iBACA1X,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAmwB,iBAEAnwB,KAAA60B,UAAApc,GACAzY,KAAAwuC,WAAA/1B,GACAzY,KAAAya,QAAAzQ,EAAA6G,KAAAyJ,YAAAta,KAAAyY,GACAzY,KAAA8oD,gBAAA,CAEA,QAAA7sD,GAAA,EAAAoV,EAAArR,KAAA2R,SAAAzV,OAAiDD,EAAAoV,EAASpV,IAC1D+D,KAAAk6D,cAAAl6D,KAAA2R,SAAA1V,GAAAwc,EAGAzY,MAAAya,QAAAhC,EAAAc,UACAd,EAAAc,UACAvZ,KAAA8oD,gBAAA,IAQA5R,gBAAA,SAAAz+B,EAAAgxC,GACAzpD,KAAA0jB,UAAA,kBAAAjL,EAAAgxC,EACA,QAAAxtD,GAAA,EAAAoV,EAAArR,KAAA2R,SAAAzV,OAAiDD,EAAAoV,EAASpV,IAC1D+D,KAAA2R,SAAA1V,GAAAi7C,gBAAAz+B,IAOAyhD,cAAA,SAAA9yD,EAAAqR,GAEA,GAAArR,EAAAipB,QAAA,CAIA,GAAA8pC,GAAA/yD,EAAAg9C,gBACAh9C,GAAAg9C,kBAAA,EACAh9C,EAAAijC,OAAA5xB,GACArR,EAAAg9C,iBAAA+V,IASAN,qBAAA,WAEA,MADA75D,MAAA2R,SAAAxY,QAAA6G,KAAAo6D,oBAAAp6D,MACAA,MAWAi/C,iBAAA,SAAA73C,GACA,GAAAosB,GAAApsB,EAAAmvC,sBACAx9C,EAAAiR,EAAA6G,KAAAiK,YAAA0Y,GACAsX,EAAA,GAAA9gC,GAAAuK,MAAAxb,EAAAqiB,WAAAriB,EAAAsiB,WASA,OARAjU,GAAA4T,OAAAjiB,EAAAiiB,OACA5T,EAAA6T,OAAAliB,EAAAkiB,OACA7T,EAAA8T,MAAAniB,EAAAmiB,MACA9T,EAAA+T,MAAApiB,EAAAoiB,MACA/T,EAAA0D,MAAA/R,EAAA+R,MACA1D,EAAAuU,OAAA,EACAvU,EAAAwU,OAAA,EACAxU,EAAAikC,oBAAAP,EAAA,mBACA1jC,GASAgzD,oBAAA,SAAAhzD,GAQA,MAPApH,MAAAi/C,iBAAA73C,GACAA,EAAA+hC,YACA/hC,EAAA+gD,YAAA/gD,EAAAoyD,wBACApyD,GAAAoyD,kBACApyD,EAAAyD,IAAA,mBACAzD,GAAAm8B,MAEAvjC,MAQAo+C,QAAA,WACA,MAAAp+C,MAAA65D,wBASArV,WAAA,WAGA,MAFAxkD,MAAAq6D,cAAAr6D,KAAAxE,IAAA,QACAwE,KAAAs6D,aAAAt6D,KAAAxE,IAAA,OACAwE,MAOAu6D,SAAA,WACA,MAAAv6D,MAAAq6D,gBAAAr6D,KAAAxE,IAAA,SACAwE,KAAAs6D,eAAAt6D,KAAAxE,IAAA,QAQA+pD,iBAAA,WAIA,MAHAvlD,MAAAoS,cAAA,SAAAhL,GACAA,EAAA+hC,cAEAnpC,MAMAq5D,YAAA,SAAAmB,GAQA,IAPA,GAEAloD,GAAArB,EAGApM,EALAszD,KACAC,KAEA3gE,GAAA,qBACAwE,EAAA,EAAAw+D,EAAAz6D,KAAA2R,SAAAzV,OACAw+D,EAAAjjE,EAAAyE,OAEaD,EAAAw+D,IAAUx+D,EAGvB,IAFAqW,EAAAtS,KAAA2R,SAAA1V,GACAqW,EAAA62B,YACAtkC,EAAA,EAAmBA,EAAA61D,EAAU71D,IAC7BoM,EAAAxZ,EAAAoN,GACAszD,EAAAvgE,KAAA0a,EAAA+6C,QAAAp8C,GAAAuD,GACA4jD,EAAAxgE,KAAA0a,EAAA+6C,QAAAp8C,GAAAwD,EAIAzU,MAAA6K,IAAA7K,KAAA26D,WAAAxC,EAAAC,EAAAoC,KAMAG,WAAA,SAAAxC,EAAAC,EAAAoC,GACA,GAAAI,GAAA5wD,EAAA6G,KAAAgF,gBAAA7V,KAAAwpD,wBACAqR,EAAA7wD,EAAA6G,KAAAmE,eAAA,GAAAhL,GAAAuK,MAAAd,EAAA0kD,GAAA1kD,EAAA2kD,IAAAwC,GACAE,EAAA9wD,EAAA6G,KAAAmE,eAAA,GAAAhL,GAAAuK,MAAAb,EAAAykD,GAAAzkD,EAAA0kD,IAAAwC,GACA75D,GACAmJ,MAAA4wD,EAAAtmD,EAAAqmD,EAAArmD,GAAA,EACArK,OAAA2wD,EAAArmD,EAAAomD,EAAApmD,GAAA,EAmBA,OAhBA+lD,KACAz5D,EAAA4U,KAAAklD,EAAArmD,GAAA,EACAzT,EAAA6U,IAAAilD,EAAApmD,GAAA,EACA,WAAAzU,KAAAqwC,UACAtvC,EAAA4U,MAAA5U,EAAAmJ,MAAA,GAEA,UAAAlK,KAAAqwC,UACAtvC,EAAA4U,MAAA5U,EAAAmJ,OAEA,WAAAlK,KAAAswC,UACAvvC,EAAA6U,KAAA7U,EAAAoJ,OAAA,GAEA,WAAAnK,KAAAswC,UACAvvC,EAAA6U,KAAA7U,EAAAoJ,SAGApJ,GASAyzB,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,sBACAn8B,GAAA38B,KACA,MAAAoI,KAAA4vD,WAAA,cAEA5vD,KAAA6vD,kBACA7vD,KAAAywD,wBACA,YACAzwD,KAAA2vD,eACA,OAGA,QAAA1zD,GAAA,EAAAoV,EAAArR,KAAA2R,SAAAzV,OAAiDD,EAAAoV,EAASpV,IAC1Ds4B,EAAA38B,KAAA,KAAAoI,KAAA2R,SAAA1V,GAAAu4B,MAAAhd,GAKA,OAFA+c,GAAA38B,KAAA,UAEA4f,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KASAoE,IAAA,SAAAyV,GACA,GAAAA,IAAAioD,GAAA,CACA,GAAAl5D,KAAAiR,GACA,MAAAjR,MAAAiR,EAGA,QAAAhV,GAAA,EAAAoV,EAAArR,KAAA2R,SAAAzV,OAAqDD,EAAAoV,EAASpV,IAC9D,GAAA+D,KAAA2R,SAAA1V,GAAAgV,GACA,QAGA,UAIA,MAAAA,KAAAjR,MAAA+5D,oBACA/5D,KAAA2R,SAAA,IAAA3R,KAAA2R,SAAA,GAAAnW,IAAAyV,GAEAjR,KAAAiR,MAYAjH,EAAAinC,MAAAl5B,WAAA,SAAA3Q,EAAAiL,GACArI,EAAA6G,KAAA0G,eAAAnQ,EAAA4K,QAAA,SAAA4F,SACAxQ,GAAA4K,QACAK,KAAA,GAAArI,GAAAinC,MAAAr5B,EAAAxQ,IAAA,QAWA4C,EAAAinC,MAAAn5B,OAAA,IAECzhB,SAGD,SAAA0c,GAEA,YAEA,IAAA+P,GAAA9Y,OAAA6G,KAAAzJ,OAAA0b,MAMA,IAJA/P,EAAA/I,SACA+I,EAAA/I,WAGA+I,EAAA/I,OAAAS,MAEA,WADAT,QAAAiiB,KAAA,mCAIA,IAAA9R,GAAAnQ,OAAA1S,OAAA4J,UAAAiZ,gBAAAjY,QACAiY,GAAAviB,KACA,SACA,SACA,eAUAoS,OAAAS,MAAAT,OAAA6G,KAAAiT,YAAA9Z,OAAA1S,QAOAyV,KAAA,QAQAoK,YAAA,GASAsF,OAAA,OASAC,OAAA,OASAF,YAAA,OAQA4zB,YAAA,EAQA2qB,YAAA,EAQAC,YAAA,EASAC,oBAAA,GAQA9gD,kBASA4J,WAAA,SAAAmB,EAAAnsB,EAAAsZ,GACAtZ,UACAiH,KAAA0O,WACA1O,KAAAk7D,iBACAl7D,KAAA0jB,UAAA,aAAA3qB,GACAiH,KAAAm7D,aAAAj2C,EAAAnsB,EAAAsZ,IAOAwS,WAAA,WACA,MAAA7kB,MAAAo7D,UAaAv1C,WAAA,SAAAX,EAAA7S,EAAAtZ,GAEA,GAAAsiE,GAAA73C,CAuBA,OArBAxjB,MAAAo7D,SAAAl2C,EACAllB,KAAAs7D,iBAAAp2C,EACAllB,KAAAu7D,YAAAxiE,GAEA,IAAAiH,KAAAk7D,cAAAh/D,OACAm/D,EAAAhpD,GAGAmR,EAAAxjB,KACAq7D,EAAA,WACA73C,EAAAg4C,aAAAnpD,EAAAmR,EAAA03C,cAAA13C,EAAAi4C,aAAAj4C,EAAA83C,kBAAA,KAIA,IAAAt7D,KAAA0O,QAAAxS,OACA8D,KAAAw7D,aAAAH,GAEAA,GACAA,EAAAr7D,MAGAA,MAQA07D,eAAA,SAAAlkE,GAIA,MAHAwI,MAAAmX,YAAA3f,EACAwI,KAAAo7D,SAAAjkD,YAAA3f,EAEAwI,MAOA27D,gBAAA,WACA,GAAAz2C,GAAAllB,KAAA6kB,YACA,QACA3a,MAAAgb,EAAAhb,MACAC,OAAA+a,EAAA/a,SAQAyxD,QAAA,SAAAnjD,GACA,GAAAzY,KAAA41B,QAAA,IAAA51B,KAAAowC,YAAA,CAGA,GAAAuhB,GAAA3xD,KAAAkK,MAAA,EAAAzE,EAAAzF,KAAAmK,OAAA,CACAsO,GAAA+B,YACA/B,EAAAY,QAAAs4C,GAAAlsD,GACAgT,EAAAs3B,OAAA4hB,GAAAlsD,GACAgT,EAAAs3B,OAAA4hB,EAAAlsD,GACAgT,EAAAs3B,QAAA4hB,EAAAlsD,GACAgT,EAAAs3B,QAAA4hB,GAAAlsD,GACAgT,EAAA83B,cAOAka,oBAAA,SAAAhyC,GACA,GAAAjE,IAAAxU,KAAAkK,MAAA,EACAuK,GAAAzU,KAAAmK,OAAA,EACAwnD,EAAA3xD,KAAAkK,MACAzE,EAAAzF,KAAAmK,MAEAsO,GAAAU,OACAnZ,KAAA6pD,iBAAApxC,GAEAA,EAAA+B,YACAxQ,OAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAC,EAAAD,EAAAm9C,EAAAl9C,EAAAzU,KAAAguC,iBACAhkC,OAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAm9C,EAAAl9C,EAAAD,EAAAm9C,EAAAl9C,EAAAhP,EAAAzF,KAAAguC,iBACAhkC,OAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAm9C,EAAAl9C,EAAAhP,EAAA+O,EAAAC,EAAAhP,EAAAzF,KAAAguC,iBACAhkC,OAAA6G,KAAA2H,eAAAC,EAAAjE,EAAAC,EAAAhP,EAAA+O,EAAAC,EAAAzU,KAAAguC,iBACAv1B,EAAA83B,YACA93B,EAAAc,WAQA6pB,SAAA,SAAAmI,GACA,GAAA78B,MAAAwsD,KACAlgD,EAAA,EAAAC,EAAA,CAEAjb,MAAA0O,QAAAvV,QAAA,SAAA0iE,GACAA,IACA,WAAAA,EAAA9uD,OACAiO,GAAA6gD,EAAA7gD,OACAC,GAAA4gD,EAAA5gD,QAEAvM,EAAA9W,KAAAikE,EAAAz4B,eAIApjC,KAAAk7D,cAAA/hE,QAAA,SAAA0iE,GACAA,GAAAX,EAAAtjE,KAAAikE,EAAAz4B,aAGA,IAAAh8B,GAAA0b,EAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACA7gC,IAAA1K,KAAA87D,SACAptD,UACAwsD,gBACA/jD,YAAAnX,KAAAmX,YACAsF,OAAAzc,KAAAyc,OACAC,OAAA1c,KAAA0c,OACAF,YAAAxc,KAAAwc,aAUA,OAPApV,GAAA8C,OAAA8Q,EACA5T,EAAA+C,QAAA8Q,EAEAjb,KAAAglC,sBACAhlC,KAAA+oD,qBAAA3hD,GAGAA,GASAotB,MAAA,SAAAhd,GACA,GAAA+c,GAAAv0B,KAAA0wD,uBAAAl8C,GAAAxU,KAAAkK,MAAA,EAAAuK,GAAAzU,KAAAmK,OAAA,EACAypB,EAAA,OAAAmoC,GAAA,CAsBA,IArBA/7D,KAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,OACAyH,EAAAxU,KAAA2V,KACAlB,EAAAzU,KAAA4V,KAEA,SAAA5V,KAAAyc,QAAA,SAAAzc,KAAA0c,SACAkX,EAAA,IAAA5zB,KAAAyc,OAAA,IAAAzc,KAAA0c,OAAA,IAAA1c,KAAAwc,aAEA+X,EAAA38B,KACA,iBAAAoI,KAAA6vD,kBAAA7vD,KAAAywD,wBAAA,OACA,UAAAzwD,KAAA4vD,WAAA,eAAA5vD,KAAAg8D,UAAAD,GACA,QAAAvnD,EAAA,QAAAC,EACA,YAAAzU,KAAAyvD,eAIA,YAAAzvD,KAAAkK,MACA,aAAAlK,KAAAmK,OACA,0BAAAypB,EAAA,IACA,eAGA5zB,KAAA41B,QAAA51B,KAAAguC,gBAAA,CACA,GAAAiuB,GAAAj8D,KAAA+Q,IACA/Q,MAAA+Q,KAAA,KACAwjB,EAAA38B,KACA,SACA,MAAA4c,EAAA,QAAAC,EACA,YAAAzU,KAAAkK,MAAA,aAAAlK,KAAAmK,OACA,YAAAnK,KAAAyvD,eACA,SAEAzvD,KAAA+Q,KAAAkrD,EAKA,MAFA1nC,GAAA38B,KAAA,UAEA4f,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KASA0kE,OAAA,SAAAC,GACA,GAAA72C,GAAA62C,EAAA/7D,KAAAo7D,SAAAp7D,KAAAs7D,gBACA,OAAAp2C,GACAlb,OAAA+F,aAAAmV,EAAAg3C,KAAAh3C,EAAAxa,IAGA1K,KAAA0K,KAAA,IAYAyxD,OAAA,SAAAzxD,EAAA2H,EAAAtZ,GACAiR,OAAA6G,KAAAqG,UAAAxM,EAAA,SAAA0M,GACA,MAAApX,MAAA6lB,WAAAzO,EAAA/E,EAAAtZ,IACOiH,KAAAjH,KAAAoe,cAOPpI,SAAA,WACA,iCAA+B/O,KAAA87D,SAAA,QAa/BN,aAAA,SAAAnpD,EAAA3D,EAAA0tD,EAAAC,GAKA,GAHA3tD,KAAA1O,KAAA0O,QACA0tD,KAAAp8D,KAAAs7D,iBAEA,CAIA,GAGAtgD,GAAAC,EAHAqhD,EAAAtyD,OAAA6G,KAAAwG,cACAklD,EAAAv8D,KAAA+J,OAAA/J,KAAA+J,OAAAs9B,mBAAAr9B,OAAAqG,iBACAmsD,EAAAx8D,KAAAi7D,oBAAAsB,EACA/4C,EAAAxjB,IAEA,QAAA0O,EAAAxS,OAGA,MAFA8D,MAAAo7D,SAAAgB,EACA/pD,KAAArS,MACAo8D,CAGA,IAAA3iD,GAAAzP,OAAA6G,KAAA2I,qBAiDA,OAhDAC,GAAAvP,MAAAkyD,EAAAlyD,MACAuP,EAAAtP,OAAAiyD,EAAAjyD,OACAsP,EAAAE,WAAA,MAAA8iD,UAAAL,EAAA,IAAAA,EAAAlyD,MAAAkyD,EAAAjyD,QAEAuE,EAAAvV,QAAA,SAAAmY,GACAA,IAGA+qD,GACArhD,EAAAwI,EAAAxI,OAAAwhD,EAAAh5C,EAAAxI,OAAA,EACAC,EAAAuI,EAAAvI,OAAAuhD,EAAAh5C,EAAAvI,OAAA,EACAD,EAAAuhD,EAAA,IACAvhD,GAAAuhD,GAEAthD,EAAAshD,EAAA,IACAthD,GAAAshD,KAIAvhD,EAAA1J,EAAA0J,OACAC,EAAA3J,EAAA2J,QAEA3J,EAAAorD,QAAAjjD,EAAAuB,EAAAC,GACAohD,GAAA,WAAA/qD,EAAAvE,OACAyW,EAAAtZ,OAAAoH,EAAA0J,OACAwI,EAAArZ,QAAAmH,EAAA2J,WAKAqhD,EAAApyD,MAAAuP,EAAAvP,MACAoyD,EAAAnyD,OAAAsP,EAAAtP,OACAH,OAAA+F,cACAusD,EAAA5xD,IAAA+O,EAAAkjD,SAAAlyC,OAAAzgB,OAAAS,MAAAmyD,gBAEAp5C,EAAA43C,SAAAkB,GACAD,IAAA74C,EAAAi4C,YAAAa,GACAjqD,KAAAmR,KAGA84C,EAAAhyD,OAAA,WACAkZ,EAAA43C,SAAAkB,GACAD,IAAA74C,EAAAi4C,YAAAa,GACAjqD,KAAAmR,GACA84C,EAAAhyD,OAAAmP,EAAA,MAEA6iD,EAAA5xD,IAAA+O,EAAAzN,UAAA,cAEAyN,IAQA21B,QAAA,SAAA32B,EAAAgxC,GACA,GAAAj1C,GAAAC,EAAAooD,EAAAC,EAAA98D,KAAA+8D,cAEAvoD,GAAAi1C,EAAAzpD,KAAA2V,MAAA3V,KAAAkK,MAAA,EACAuK,EAAAg1C,EAAAzpD,KAAA4V,KAAA5V,KAAAmK,OAAA,EAEA,UAAAnK,KAAAwc,cACA/D,EAAA+B,YACA/B,EAAAs5B,KAAAv9B,EAAAC,EAAAzU,KAAAkK,MAAAlK,KAAAmK,QACAsO,EAAAiC,QAGA1a,KAAAwhD,YAAA,GAAAxhD,KAAAk7D,cAAAh/D,QAAA8D,KAAAg9D,gBACAh9D,KAAA+6D,YAAA/6D,KAAAgb,OACAhb,KAAAg7D,YAAAh7D,KAAAib,OACA4hD,EAAA78D,KAAAw7D,aAAA,KAAAx7D,KAAAk7D,cAAAl7D,KAAAy7D,aAAAz7D,KAAAs7D,kBAAA,IAGAuB,EAAA78D,KAAAo7D,SAEAyB,GAAApkD,EAAAgkD,UAAAI,EACAroD,EAAAsoD,EAAAG,QACAxoD,EAAAqoD,EAAAI,QACAJ,EAAA5yD,MACA4yD,EAAA3yD,QAGAnK,KAAA47D,QAAAnjD,GACAzY,KAAAwqD,cAAA/xC,IAMAukD,aAAA,WACA,MAAAh9D,MAAAgb,SAAAhb,KAAA+6D,aAAA/6D,KAAAib,SAAAjb,KAAAg7D,aAMA+B,aAAA,WACA,GAAAI,GACA9mC,EADAnsB,EAAAlK,KAAAkK,MAAAC,EAAAnK,KAAAmK,OACA8yD,EAAA,EAAAC,EAAA,CAqBA,OAnBA,SAAAl9D,KAAAyc,QAAA,SAAAzc,KAAA0c,SACAygD,GAAAn9D,KAAAkK,MAAAlK,KAAAo7D,SAAAlxD,MAAAlK,KAAAmK,OAAAnK,KAAAo7D,SAAAjxD,QACAksB,EAAA,SAAAr2B,KAAAwc,YACAvJ,KAAAQ,IAAA7Z,MAAA,KAAAujE,GAAAlqD,KAAAS,IAAA9Z,MAAA,KAAAujE,GACAjzD,EAAAlK,KAAAo7D,SAAAlxD,MAAAmsB,EACAlsB,EAAAnK,KAAAo7D,SAAAjxD,OAAAksB,EACA,QAAAr2B,KAAAyc,SACAwgD,GAAAj9D,KAAAkK,SAAA,GAEA,QAAAlK,KAAAyc,SACAwgD,EAAAj9D,KAAAkK,SAEA,QAAAlK,KAAA0c,SACAwgD,GAAAl9D,KAAAmK,UAAA,GAEA,QAAAnK,KAAA0c,SACAwgD,EAAAl9D,KAAAmK,YAIAD,QACAC,SACA8yD,UACAC,YAOAE,kBAAA,WACA,GAAAl4C,GAAAllB,KAAA6kB,YAEA7kB,MAAA6K,IAAA,QAAAqa,EAAAhb,OACAlK,KAAA6K,IAAA,SAAAqa,EAAA/a,SAUAgxD,aAAA,SAAAj2C,EAAAnsB,EAAAsZ,GACArS,KAAA6lB,WAAA7b,OAAA6G,KAAAgX,QAAA3C,GAAA7S,EAAAtZ,GACAiR,OAAA6G,KAAAuX,SAAApoB,KAAA6kB,aAAA7a,OAAAS,MAAA4yD,aAOA9B,YAAA,SAAAxiE,GACAA,UACAiH,KAAA+nC,WAAAhvC,GACAiH,KAAA+zD,gBAAAh7D,GACAiH,KAAAo7D,UAAAp7D,KAAAmX,cACAnX,KAAAo7D,SAAAjkD,YAAAnX,KAAAmX,cASAmmD,aAAA,SAAA5uD,EAAA2D,GACA3D,KAAAxS,OACA8N,OAAA6G,KAAA0G,eAAA7I,EAAA,SAAAkJ,GACAvF,KAAAuF,IACS,wBAGTvF,QAQA0hD,gBAAA,SAAAh7D,GACAiH,KAAAkK,MAAA,SAAAnR,GACAA,EAAAmR,MACAlK,KAAA6kB,aACA7kB,KAAA6kB,aAAA3a,OAAA,EACA,EAEAlK,KAAAmK,OAAA,UAAApR,GACAA,EAAAoR,OACAnK,KAAA6kB,aACA7kB,KAAA6kB,aAAA1a,QAAA,EACA,GAOAwI,WAAA,WACA,YAUA3I,OAAAS,MAAA4yD,WAAA,aAMArzD,OAAAS,MAAAvJ,UAAA86D,UAAAhyD,OAAAS,MAAAvJ,UAAA46D,OAQA9xD,OAAAS,MAAAsN,WAAA,SAAA3Q,EAAAiL,GACArI,OAAA6G,KAAAqG,UAAA9P,EAAAsD,IAAA,SAAA0M,GACApN,OAAAS,MAAAvJ,UAAAo8D,aAAAn8D,KAAAiG,IAAAsH,QAAA,SAAAA,GACAtH,EAAAsH,cACA1E,OAAAS,MAAAvJ,UAAAo8D,aAAAn8D,KAAAiG,IAAA8zD,cAAA,SAAAA,GAEA,MADA9zD,GAAA8zD,oBACA,GAAAlxD,QAAAS,MAAA2M,EAAAhQ,EAAAiL,QAGK,KAAAjL,EAAA+P,cAULnN,OAAAS,MAAA8yD,QAAA,SAAA/iE,EAAA6X,EAAAmrD,GACAxzD,OAAA6G,KAAAqG,UAAA1c,EAAA,SAAA4c,GACA/E,KAAA,GAAArI,QAAAS,MAAA2M,EAAAomD,KACK,KAAAA,KAAArmD,cASLnN,OAAAS,MAAA8pD,gBACAvqD,OAAAgG,kBAAA9N,OAAA,kDAAA9G,MAAA,MAUA4O,OAAAS,MAAAkwB,YAAA,SAAAzV,EAAA7S,EAAAtZ,GACA,GACA0kE,GADAjJ,EAAAxqD,OAAAouB,gBAAAlT,EAAAlb,OAAAS,MAAA8pD,gBAGAC,GAAA5gC,sBACA6pC,EAAAzzD,OAAA6G,KAAAwL,kCAAAm4C,EAAA5gC,qBACA9Q,EAAA0xC,EAAAiJ,IAGAzzD,OAAAS,MAAA8yD,QAAA/I,EAAA,cAAAniD,EACAyQ,EAAA/pB,EAAAiR,OAAA6G,KAAAzJ,OAAA4b,MAAAjqB,MAA+Dy7D,KAU/DxqD,OAAAS,MAAAqN,OAAA,EAQA9N,OAAAS,MAAAmyD,eAAA,GAECvmE,SAGD2T,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA1S,OAAA4J,WAMAw8D,4BAAA,WACA,GAAA5yD,GAAA9K,KAAAqkD,WAAA,GACA,OAAAv5C,GAAA,EACA,GAAAmI,KAAAgsB,OAAAn0B,EAAA,OAEA,GAAAmI,KAAAgsB,MAAAn0B,EAAA,KAQA6yD,WAAA,WAEA,MADA39D,MAAA6b,SAAA7b,KAAA09D,+BACA19D,MAWA49D,aAAA,SAAAhL,GACAA,OAEA,IAAAC,GAAA,aACApnC,EAAAmnC,EAAAnnC,YAAAonC,EACArmC,EAAAomC,EAAApmC,UAAAqmC,EACArvC,EAAAxjB,IAmBA,OAjBAgK,QAAA6G,KAAAqb,SACAU,WAAA5sB,KAAAxE,IAAA,SACAqxB,SAAA7sB,KAAA09D,8BACApxC,SAAAtsB,KAAA0yD,YACAlmC,SAAA,SAAAh1B,GACAgsB,EAAA3H,SAAArkB,GACAg1B,KAEAf,WAAA,WACAjI,EAAA2lB,YACA1d,KAEAsB,QAAA,WACAvJ,EAAA3Y,IAAA,gBAIA7K,QAIAgK,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA07B,aAAAxkC,WAQA28D,iBAAA,SAAAz2D,GAGA,MAFAA,GAAAu2D,aACA39D,KAAAmL,YACAnL,MASA89D,mBAAA,SAAA12D,GAIA,MAHAA,GAAAw2D,cACApxC,SAAAxsB,KAAAmL,UAAAmY,KAAAtjB,QAEAA,QAWAgK,OAAAS,MAAAiE,QAAA1E,OAAAS,MAAAiE,YAOA1E,OAAAS,MAAAiE,QAAAqvD,WAAA/zD,OAAA6G,KAAAiT,aAOA/W,KAAA,aAMAgX,WAAA,SAAAhrB,GACAA,GACAiH,KAAA+nC,WAAAhvC,IAQAgvC,WAAA,SAAAhvC,GACA,OAAAkY,KAAAlY,GACAiH,KAAAiR,GAAAlY,EAAAkY,IAQAmyB,SAAA,WACA,OAAYr2B,KAAA/M,KAAA+M,OAOZ6gC,OAAA,WAEA,MAAA5tC,MAAAojC,cAKA,SAAArwB,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAgBApV,GAAAsvD,WAAAl6C,EAAApV,EAAAqvD,YAOAhxD,KAAA,aAQAgX,WAAA,SAAAhrB,GACAA,QACAiH,KAAAi+D,WAAAllE,EAAAklE,YAAA,GAOAvB,QAAA,SAAAjjD,GAMA,OALA5M,GAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACAqyD,EAAAj+D,KAAAi+D,WAEAhiE,EAAA,EAAAoV,EAAAzF,EAAA1P,OAAwCD,EAAAoV,EAASpV,GAAA,EACjD2P,EAAA3P,IAAAgiE,EACAryD,EAAA3P,EAAA,IAAAgiE,EACAryD,EAAA3P,EAAA,IAAAgiE,CAGApxD,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACAu6C,WAAAj+D,KAAAi+D,gBAWAj0D,EAAAS,MAAAiE,QAAAsvD,WAAAjmD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAsvD,WAAA52D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WA2CApV,GAAAyvD,UAAAr6C,EAAApV,EAAAqvD,YAOAhxD,KAAA,YASAgX,WAAA,SAAAhrB,GACAA,QAEAiH,KAAAo+D,OAAArlE,EAAAqlE,OACAp+D,KAAAwzB,OAAAz6B,EAAAy6B,SACA,MACA,MACA,QAQAkpC,QAAA,SAAAjjD,GAkBA,OAHA1D,GAAAipB,EAAApkB,EAAA9E,EAAAuoD,EACAC,EAAAC,EAAAC,EAAAC,EAdAC,EAAA1+D,KAAAwzB,OACA3mB,EAAA4M,EAAAE,WAAA,MACAglD,EAAA9xD,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QAEAy0D,EAAA3rD,KAAAgsB,MAAAhsB,KAAAD,KAAA0rD,EAAAxiE,SACA2iE,EAAA5rD,KAAAU,MAAAirD,EAAA,GACAl0D,EAAAi0D,EAAA/yD,KACAkzD,EAAAH,EAAAz0D,MACA60D,EAAAJ,EAAAx0D,OACAxC,EAAAkF,EAAAmyD,gBAAAF,EAAAC,GACAE,EAAAt3D,EAAAiE,KAEAszD,EAAAl/D,KAAAo+D,OAAA,IAIA3pD,EAAA,EAAqBA,EAAAsqD,EAAQtqD,IAC7B,OAAAD,GAAA,EAAuBA,EAAAsqD,EAAQtqD,IAAA,CAC/B6pD,EAAA,GAAA5pD,EAAAqqD,EAAAtqD,GAGAuB,EAAA,EAAgBipB,EAAA,EAAOpkB,EAAA,EAAO9E,EAAA,CAE9B,QAAAuI,GAAA,EAA0BA,EAAAugD,EAAWvgD,IACrC,OAAAD,GAAA,EAA4BA,EAAAwgD,EAAWxgD,IACvCmgD,EAAA9pD,EAAA4J,EAAAwgD,EACAP,EAAA9pD,EAAA4J,EAAAygD,EAGAN,EAAA,GAAAA,EAAAQ,GAAAT,EAAA,GAAAA,EAAAQ,IAIAN,EAAA,GAAAD,EAAAO,EAAAR,GACAG,EAAAC,EAAArgD,EAAAugD,EAAAxgD,GAEArI,GAAArL,EAAA8zD,GAAAC,EACAz/B,GAAAt0B,EAAA8zD,EAAA,GAAAC,EACA7jD,GAAAlQ,EAAA8zD,EAAA,GAAAC,EACA3oD,GAAApL,EAAA8zD,EAAA,GAAAC,EAGAQ,GAAAZ,GAAAtoD,EACAkpD,EAAAZ,EAAA,GAAAr/B,EACAigC,EAAAZ,EAAA,GAAAzjD,EACAqkD,EAAAZ,EAAA,GAAAvoD,EAAAopD,GAAA,IAAAppD,GAIAjJ,EAAAqxD,aAAAv2D,EAAA,MAOAy7B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACA06C,OAAAp+D,KAAAo+D,OACA5qC,OAAAxzB,KAAAwzB,YAWAxpB,EAAAS,MAAAiE,QAAAyvD,UAAApmD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAyvD,UAAA/2D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAiBApV,GAAAywD,qBAAAr7C,EAAApV,EAAAqvD,YAOAhxD,KAAA,uBAQAgX,WAAA,SAAAhrB,GACAA,QACAiH,KAAA8/B,UAAA/mC,EAAA+mC,WAAA,KAOA48B,QAAA,SAAAjjD,GAOA,OANA5M,GAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACAk0B,EAAA9/B,KAAA8/B,UACAk5B,EAAAptD,EAAA1P,OAEAD,EAAA,EAAAoV,EAAAzF,EAAA1P,OAAwCD,EAAAoV,EAASpV,GAAA,EACjD2P,EAAA3P,EAAA,GAAA6jC,EAAA,KAAAk5B,EAAA/8D,GAAA+8D,CAGAnsD,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACAoc,UAAA9/B,KAAA8/B,eAWA91B,EAAAS,MAAAiE,QAAAywD,qBAAApnD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAywD,qBAAA/3D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA0E,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAaApV,GAAA0wD,UAAAt7C,EAAApV,EAAAqvD,YAOAhxD,KAAA,YAOA2vD,QAAA,SAAAjjD,GAQA,IAPA,GAKAkmB,GALA9yB,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACAyF,EAAArD,EAAA9D,MAAA8D,EAAA7D,OAAA,EACAuD,EAAA,EAGAA,EAAA2D,GACAsuB,GAAA/zB,EAAA8B,GAAA9B,EAAA8B,EAAA,GAAA9B,EAAA8B,EAAA,MACA9B,EAAA8B,GAAAiyB,EACA/zB,EAAA8B,EAAA,GAAAiyB,EACA/zB,EAAA8B,EAAA,GAAAiyB,EACAjyB,GAAA,CAGAb,GAAAqxD,aAAAlwD,EAAA,QASAhE,EAAAS,MAAAiE,QAAA0wD,UAAArnD,WAAA,WACA,UAAA/N,GAAAS,MAAAiE,QAAA0wD,YAGC/oE,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA0E,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAaApV,GAAA2wD,OAAAv7C,EAAApV,EAAAqvD,YAOAhxD,KAAA,SAOA2vD,QAAA,SAAAjjD,GACA,GAGAxd,GAHA4Q,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAA7uD,EAAA1P,MAEA,KAAAD,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA,EAC3B2P,EAAA3P,GAAA,IAAA2P,EAAA3P,GACA2P,EAAA3P,EAAA,OAAA2P,EAAA3P,EAAA,GACA2P,EAAA3P,EAAA,OAAA2P,EAAA3P,EAAA,EAGA4Q,GAAAqxD,aAAAlwD,EAAA,QASAhE,EAAAS,MAAAiE,QAAA2wD,OAAAtnD,WAAA,WACA,UAAA/N,GAAAS,MAAAiE,QAAA2wD,SAGChpE,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAUApV,GAAA4wD,KAAAx7C,EAAApV,EAAAqvD,YAOAhxD,KAAA,OASAgX,WAAA,SAAAhrB,GACAA,QAEAiH,KAAAu/D,KAAAxmE,EAAAwmE,KACAv/D,KAAAw/D,SAAA,SAAAt7D,QAAAnL,EAAAymE,YAAAzmE,EAAAymE,QAAA,GAOA9C,QAAA,SAAAjjD,GACA,GAAAzZ,KAAAu/D,KAAA,CAIA,GAMAtjE,GANA4Q,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6zD,EAAAz/D,KAAAu/D,KAAA16C,aACA66C,EAAA11D,EAAA6G,KAAA2I,sBACAgmD,EAAAx/D,KAAAw/D,QAEA/E,EAAAzsD,EAAA9D,MAAA8D,EAAA7D,OAAA,CAEAu1D,GAAAx1D,MAAAuP,EAAAvP,MACAw1D,EAAAv1D,OAAAsP,EAAAtP,OAEAu1D,EAAA/lD,WAAA,MAAA8iD,UAAAgD,EAAA,IAAAhmD,EAAAvP,MAAAuP,EAAAtP,OAEA,IAAAw1D,GAAAD,EAAA/lD,WAAA,MAAAyC,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAy1D,EAAAD,EAAA/zD,IAEA,KAAA3P,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA,EAC3B2P,EAAA3P,EAAA,GAAA2jE,EAAA3jE,EAAAujE,EAGA3yD,GAAAqxD,aAAAlwD,EAAA,OAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACA67C,KAAAv/D,KAAAu/D,KAAAn8B,WACAo8B,QAAAx/D,KAAAw/D,aAWAx1D,EAAAS,MAAAiE,QAAA4wD,KAAAvnD,WAAA,SAAA3Q,EAAAiL,GACArI,EAAA6G,KAAAqG,UAAA9P,EAAAm4D,KAAA70D,IAAA,SAAA0M,GACAhQ,EAAAm4D,KAAA,GAAAv1D,GAAAS,MAAA2M,EAAAhQ,EAAAm4D,MACAltD,KAAA,GAAArI,GAAAS,MAAAiE,QAAA4wD,KAAAl4D,OAUA4C,EAAAS,MAAAiE,QAAA4wD,KAAAxnD,OAAA,GAECzhB,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAgBApV,GAAAmxD,MAAA/7C,EAAApV,EAAAqvD,YAOAhxD,KAAA,QAQAgX,WAAA,SAAAhrB,GACAA,QACAiH,KAAA8/D,MAAA/mE,EAAA+mE,OAAA,GAOApD,QAAA,SAAAjjD,GAMA,OAFAsmD,GAHAlzD,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACAk0D,EAAA9/D,KAAA8/D,MAEA7jE,EAAA,EAAAoV,EAAAzF,EAAA1P,OAAwCD,EAAAoV,EAASpV,GAAA,EAEjD8jE,GAAA,GAAA9sD,KAAAW,UAAAksD,EAEAl0D,EAAA3P,IAAA8jE,EACAn0D,EAAA3P,EAAA,IAAA8jE,EACAn0D,EAAA3P,EAAA,IAAA8jE,CAGAlzD,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACAo8C,MAAA9/D,KAAA8/D,WAWA91D,EAAAS,MAAAiE,QAAAmxD,MAAA9nD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAmxD,MAAAz4D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAgBApV,GAAAsxD,SAAAl8C,EAAApV,EAAAqvD,YAOAhxD,KAAA,WAQAgX,WAAA,SAAAhrB,GACAA,QACAiH,KAAAigE,UAAAlnE,EAAAknE,WAAA,GAOAvD,QAAA,SAAAjjD,GACA,GAKA/L,GAAAzR,EAAA4I,EAAAkR,EAAAipB,EAAApkB,EAAA9E,EALAjJ,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAAzsD,EAAA7D,OACAuwD,EAAA1sD,EAAA9D,KAGA,KAAAjO,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA+D,KAAAigE,UAC3B,IAAAp7D,EAAA,EAAmBA,EAAA61D,EAAU71D,GAAA7E,KAAAigE,UAAA,CAE7BvyD,EAAA,EAAAzR,EAAAy+D,EAAA,EAAA71D,EAEAkR,EAAAnK,EAAA8B,GACAsxB,EAAApzB,EAAA8B,EAAA,GACAkN,EAAAhP,EAAA8B,EAAA,GACAoI,EAAAlK,EAAA8B,EAAA,EAYA,QAAAwyD,GAAAjkE,EAAAkkE,EAAAlkE,EAAA+D,KAAAigE,UAAsDC,EAAAC,EAAYD,IAClE,OAAAE,GAAAv7D,EAAAw7D,EAAAx7D,EAAA7E,KAAAigE,UAAwDG,EAAAC,EAAYD,IACpE1yD,EAAA,EAAAwyD,EAAAxF,EAAA,EAAA0F,EACAx0D,EAAA8B,GAAAqI,EACAnK,EAAA8B,EAAA,GAAAsxB,EACApzB,EAAA8B,EAAA,GAAAkN,EACAhP,EAAA8B,EAAA,GAAAoI,EAMAjJ,EAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACAu8C,UAAAjgE,KAAAigE,eAWAj2D,EAAAS,MAAAiE,QAAAsxD,SAAAjoD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAsxD,SAAA54D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAiBApV,GAAA4xD,YAAAx8C,EAAApV,EAAAqvD,YAOAhxD,KAAA,cASAgX,WAAA,SAAAhrB,GACAA,QACAiH,KAAA8/B,UAAA/mC,EAAA+mC,WAAA,GACA9/B,KAAAugE,SAAAxnE,EAAAwnE,UAAA,IAOA7D,QAAA,SAAAjjD,GAUA,OAFA1D,GAAAipB,EAAApkB,EAPA/N,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACAk0B,EAAA9/B,KAAA8/B,UACAygC,EAAAvgE,KAAAugE,SACAC,EAAA,IAAA1gC,EACA1sB,EAAAH,KAAAG,IAGAnX,EAAA,EAAAoV,EAAAzF,EAAA1P,OAAwCD,EAAAoV,EAASpV,GAAA,EACjD8Z,EAAAnK,EAAA3P,GACA+iC,EAAApzB,EAAA3P,EAAA,GACA2e,EAAAhP,EAAA3P,EAAA,GAEA8Z,EAAAyqD,GACAxhC,EAAAwhC,GACA5lD,EAAA4lD,GACAptD,EAAA2C,EAAAipB,GAAAuhC,GACAntD,EAAA2C,EAAA6E,GAAA2lD,GACAntD,EAAA4rB,EAAApkB,GAAA2lD,IAEA30D,EAAA3P,EAAA,KAIA4Q,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACAoc,UAAA9/B,KAAA8/B,UACAygC,SAAAvgE,KAAAugE,cAWAv2D,EAAAS,MAAAiE,QAAA4xD,YAAAvoD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAA4xD,YAAAl5D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA0E,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAaApV,GAAA+xD,MAAA38C,EAAApV,EAAAqvD,YAOAhxD,KAAA,QAOA2vD,QAAA,SAAAjjD,GACA,GAGAxd,GAAAykE,EAHA7zD,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAA7uD,EAAA1P,MAEA,KAAAD,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA,EAC3BykE,EAAA,GAAA90D,EAAA3P,GAAA,IAAA2P,EAAA3P,EAAA,OAAA2P,EAAA3P,EAAA,GACA2P,EAAA3P,GAAAykE,EAAA,IACA90D,EAAA3P,EAAA,GAAAykE,EAAA,GACA90D,EAAA3P,EAAA,GAAAykE,EAAA,GAGA7zD,GAAAqxD,aAAAlwD,EAAA,QASAhE,EAAAS,MAAAiE,QAAA+xD,MAAA1oD,WAAA,WACA,UAAA/N,GAAAS,MAAAiE,QAAA+xD,QAGCpqE,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA0E,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAaApV,GAAAiyD,OAAA78C,EAAApV,EAAAqvD,YAOAhxD,KAAA,SAOA2vD,QAAA,SAAAjjD,GACA,GAGAxd,GAAA8Z,EAAAipB,EAAApkB,EAHA/N,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAA7uD,EAAA1P,MAEA,KAAAD,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA,EAC3B8Z,EAAAnK,EAAA3P,GACA+iC,EAAApzB,EAAA3P,EAAA,GACA2e,EAAAhP,EAAA3P,EAAA,GAEA2P,EAAA3P,IAAA,KAAA8Z,EAAA,KAAAipB,EAAA,KAAApkB,GAAA,MACAhP,EAAA3P,EAAA,SAAA8Z,EAAA,KAAAipB,EAAA,KAAApkB,GAAA,MACAhP,EAAA3P,EAAA,SAAA8Z,EAAA,KAAAipB,EAAA,KAAApkB,GAAA,IAGA/N,GAAAqxD,aAAAlwD,EAAA,QASAhE,EAAAS,MAAAiE,QAAAiyD,OAAA5oD,WAAA,WACA,UAAA/N,GAAAS,MAAAiE,QAAAiyD,SAGCtqE,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAwBApV,GAAAkyD,KAAA98C,EAAApV,EAAAqvD,YAOAhxD,KAAA,OASAgX,WAAA,SAAAhrB,GACAA,QAEAiH,KAAAywB,MAAA13B,EAAA03B,OAAA,UACAzwB,KAAAsnB,QAAA,mBAAAvuB,GAAAuuB,QACAvuB,EAAAuuB,QACA,GAAAtd,GAAA0mB,MAAA1wB,KAAAywB,OAAAG,YAOA8rC,QAAA,SAAAjjD,GACA,GAGAxd,GACA4kE,EAAAC,EAAAC,EACAhrD,EAAAipB,EAAApkB,EAAAomD,EACA3/D,EANAwL,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAA7uD,EAAA1P,MAaA,KARAmF,EAAA,GAAA2I,GAAA0mB,MAAA1wB,KAAAywB,OAAAyO,YAEA2hC,EAAAx/D,EAAA,GAAArB,KAAAsnB,QACAw5C,EAAAz/D,EAAA,GAAArB,KAAAsnB,QACAy5C,EAAA1/D,EAAA,GAAArB,KAAAsnB,QAEA05C,EAAA,EAAAhhE,KAAAsnB,QAEArrB,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA,EAC3B8Z,EAAAnK,EAAA3P,GACA+iC,EAAApzB,EAAA3P,EAAA,GACA2e,EAAAhP,EAAA3P,EAAA,GAGA2P,EAAA3P,GAAA4kE,EAAA9qD,EAAAirD,EACAp1D,EAAA3P,EAAA,GAAA6kE,EAAA9hC,EAAAgiC,EACAp1D,EAAA3P,EAAA,GAAA8kE,EAAAnmD,EAAAomD,CAGAn0D,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACA+M,MAAAzwB,KAAAywB,MACAnJ,QAAAtnB,KAAAsnB,aAWAtd,EAAAS,MAAAiE,QAAAkyD,KAAA7oD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAkyD,KAAAx5D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAqBApV,GAAAuyD,SAAAn9C,EAAApV,EAAAqvD,YAOAhxD,KAAA,WAQAgX,WAAA,SAAAhrB,GACAA,QAEAiH,KAAAywB,MAAA13B,EAAA03B,OAAA,WAOAisC,QAAA,SAAAjjD,GACA,GAGAxd,GACAoF,EAJAwL,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAA7uD,EAAA1P,MAKA,KAFAmF,EAAA,GAAA2I,GAAA0mB,MAAA1wB,KAAAywB,OAAAyO,YAEAjjC,EAAA,EAAiBA,EAAAw+D,EAAUx+D,GAAA,EAC3B2P,EAAA3P,IAAAoF,EAAA,OACAuK,EAAA3P,EAAA,IAAAoF,EAAA,OACAuK,EAAA3P,EAAA,IAAAoF,EAAA,MAGAwL,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACA+M,MAAAzwB,KAAAywB,WAWAzmB,EAAAS,MAAAiE,QAAAuyD,SAAAlpD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAuyD,SAAA75D,KAGC/Q,SAGD,SAAA0c,GACA,YAEA,IAAA/I,GAAA+I,EAAA/I,OACA0E,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAuBApV,GAAAwyD,MAAAp9C,EAAApV,EAAAqvD,YACAhxD,KAAA,QAEAgX,WAAA,SAAAhrB,GACAA,QACAiH,KAAAywB,MAAA13B,EAAA03B,OAAA,OACAzwB,KAAA4K,MAAA7R,EAAA6R,QAAA,EACA5K,KAAAmhE,KAAApoE,EAAAooE,MAAA,WACAnhE,KAAAy/B,MAAA1mC,EAAA0mC,OAAA,GAGAi9B,QAAA,SAAAjjD,GACA,GAGA4lC,GAAA+hB,EAAAnhD,EACAlK,EAAAipB,EAAApkB,EACAymD,EAAAC,EAAAC,EACAlgE,EANAwL,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KAKA41D,GAAA,CAEA,IAAAxhE,KAAA4K,MAAA,CAEA42D,GAAA,CAEA,IAAAC,GAAAz3D,EAAA6G,KAAA2I,qBACAioD,GAAAv3D,MAAAlK,KAAA4K,MAAAV,MACAu3D,EAAAt3D,OAAAnK,KAAA4K,MAAAT,MAEA,IAAAu3D,GAAA,GAAA13D,GAAA07B,aAAA+7B,EACAC,GAAAx2D,IAAAlL,KAAA4K,MACA,IAAA+2D,GAAAD,EAAA/nD,WAAA,KACAtY,GAAAsgE,EAAAvlD,aAAA,IAAAslD,EAAAx3D,MAAAw3D,EAAAv3D,QAAAyB,SAIAvK,GAAA,GAAA2I,GAAA0mB,MAAA1wB,KAAAywB,OAAAyO,YAEAmgB,EAAAh+C,EAAA,GAAArB,KAAAy/B,MACA2hC,EAAA//D,EAAA,GAAArB,KAAAy/B,MACAxf,EAAA5e,EAAA,GAAArB,KAAAy/B,KAGA,QAAAxjC,GAAA,EAAAoV,EAAAzF,EAAA1P,OAAwCD,EAAAoV,EAASpV,GAAA,EAYjD,OAVA8Z,EAAAnK,EAAA3P,GACA+iC,EAAApzB,EAAA3P,EAAA,GACA2e,EAAAhP,EAAA3P,EAAA,GAEAulE,IACAniB,EAAAh+C,EAAApF,GAAA+D,KAAAy/B,MACA2hC,EAAA//D,EAAApF,EAAA,GAAA+D,KAAAy/B,MACAxf,EAAA5e,EAAApF,EAAA,GAAA+D,KAAAy/B,OAGAz/B,KAAAmhE,MACA,eACAv1D,EAAA3P,GAAA8Z,EAAAspC,EAAA,IACAzzC,EAAA3P,EAAA,GAAA+iC,EAAAoiC,EAAA,IACAx1D,EAAA3P,EAAA,GAAA2e,EAAAqF,EAAA,GACA,MACA,cACArU,EAAA3P,GAAA,KAAA8Z,IAAA,EAAAspC,GACAzzC,EAAA3P,EAAA,QAAA+iC,IAAA,EAAAoiC,GACAx1D,EAAA3P,EAAA,QAAA2e,IAAA,EAAAqF,EACA,MACA,WACArU,EAAA3P,GAAAgX,KAAAQ,IAAA,IAAAsC,EAAAspC,GACAzzC,EAAA3P,EAAA,GAAAgX,KAAAQ,IAAA,IAAAurB,EAAAoiC,GACAx1D,EAAA3P,EAAA,GAAAgX,KAAAQ,IAAA,IAAAmH,EAAAqF,EACA,MACA,YACA,iBACArU,EAAA3P,GAAAgX,KAAAG,IAAA2C,EAAAspC,GACAzzC,EAAA3P,EAAA,GAAAgX,KAAAG,IAAA4rB,EAAAoiC,GACAx1D,EAAA3P,EAAA,GAAAgX,KAAAG,IAAAwH,EAAAqF,EACA,MACA,gBACAohD,EAAAtrD,EAAAspC,EACAiiB,EAAAtiC,EAAAoiC,EACAG,EAAA3mD,EAAAqF,EAEArU,EAAA3P,GAAAolE,EAAA,IAAAA,EACAz1D,EAAA3P,EAAA,GAAAqlE,EAAA,IAAAA,EACA11D,EAAA3P,EAAA,GAAAslE,EAAA,IAAAA,CACA,MACA,cACA31D,EAAA3P,GAAAgX,KAAAQ,IAAAsC,EAAAspC,GACAzzC,EAAA3P,EAAA,GAAAgX,KAAAQ,IAAAurB,EAAAoiC,GACAx1D,EAAA3P,EAAA,GAAAgX,KAAAQ,IAAAmH,EAAAqF,EACA,MACA,eACArU,EAAA3P,GAAAgX,KAAAS,IAAAqC,EAAAspC,GACAzzC,EAAA3P,EAAA,GAAAgX,KAAAS,IAAAsrB,EAAAoiC,GACAx1D,EAAA3P,EAAA,GAAAgX,KAAAS,IAAAkH,EAAAqF,GAKApT,EAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,OACA3S,MAAAzwB,KAAAywB,MACA7lB,MAAA5K,KAAA4K,MACAu2D,KAAAnhE,KAAAmhE,KACA1hC,MAAAz/B,KAAAy/B,UAKAz1B,EAAAS,MAAAiE,QAAAwyD,MAAAnpD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAwyD,MAAA95D,KAEC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WAAqDmJ,EAAAF,KAAAE,IAAAQ,EAAAV,KAAAU,MACrDX,EAAAC,KAAAD,KAAAI,EAAAH,KAAAG,IAAAM,EAAAT,KAAAS,IAAAurB,EAAAhsB,KAAAgsB,MAAArqB,EAAA3B,KAAA2B,IACAgK,EAAA3L,KAAA2L,KACAlQ,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAaApV,GAAAkzD,OAAA99C,EAAApV,EAAAqvD,YAOAhxD,KAAA,SAOA80D,WAAA,UAOA7mD,OAAA,EAOAC,OAAA,EAOA6mD,aAAA,EASApF,QAAA,SAAAjjD,EAAAuB,EAAAC,GACA,OAAAD,GAAA,IAAAC,EAAA,CAIAjb,KAAA+hE,UAAA,EAAA/mD,EACAhb,KAAAgiE,UAAA,EAAA/mD,CAEA,IAEAjN,GAFAi0D,EAAAxoD,EAAAvP,MAAAg4D,EAAAzoD,EAAAtP,OACAg4D,EAAAljC,EAAAgjC,EAAAjnD,GAAAonD,EAAAnjC,EAAAijC,EAAAjnD,EAGA,eAAAjb,KAAA6hE,aACA7zD,EAAAhO,KAAAqiE,WAAA5oD,EAAAwoD,EAAAC,EAAAC,EAAAC,IAEA,YAAApiE,KAAA6hE,aACA7zD,EAAAhO,KAAAsiE,kBAAA7oD,EAAAwoD,EAAAC,EAAAC,EAAAC,IAEA,aAAApiE,KAAA6hE,aACA7zD,EAAAhO,KAAAuiE,kBAAA9oD,EAAAwoD,EAAAC,EAAAC,EAAAC,IAEA,YAAApiE,KAAA6hE,aACA7zD,EAAAhO,KAAAwiE,cAAA/oD,EAAAwoD,EAAAC,EAAAC,EAAAC,IAEA3oD,EAAAvP,MAAAi4D,EACA1oD,EAAAtP,OAAAi4D,EACA3oD,EAAAE,WAAA,MAAAukD,aAAAlwD,EAAA,OAYAq0D,WAAA,SAAA5oD,EAAAwoD,EAAAC,EAAAC,EAAAC,GACA,GAAAp0D,GAAAnB,EAAA4M,EAAAE,WAAA,MACA8oD,EAAA,GAAAC,EAAA,GAAAC,EAAA,EAAAC,EAAA,EACAC,GAAA,EAAAC,GAAA,EAAAC,EAAAd,EAAAe,EAAAd,EACAR,EAAA13D,EAAA6G,KAAA2I,sBACAypD,EAAAvB,EAAA/nD,WAAA,KAmBA,KAlBAwoD,EAAAxuD,EAAAwuD,GACAC,EAAAzuD,EAAAyuD,GACAV,EAAAx3D,MAAAwJ,EAAAyuD,EAAAF,GACAP,EAAAv3D,OAAAuJ,EAAA0uD,EAAAF,GAEAC,EAAAF,IACAQ,EAAA,EACAE,MAEAP,EAAAF,IACAQ,EAAA,EACAE,MAEA50D,EAAAnB,EAAAuP,aAAA,IAAA6lD,EAAAC,GACAzoD,EAAAvP,MAAAwJ,EAAAyuD,EAAAF,GACAxoD,EAAAtP,OAAAuJ,EAAA0uD,EAAAF,GACAr1D,EAAAqxD,aAAAlwD,EAAA,MAEA60D,IAAAC,GACAb,EAAAc,EACAb,EAAAc,EACAb,EAAAQ,EAAAhvD,EAAAovD,EAAAN,EAAAE,GACAI,EAAApvD,EAAAovD,EAAAN,IAGAM,EAAAZ,EACAU,GAAA,GAEAT,EAAAQ,EAAAjvD,EAAAqvD,EAAAN,EAAAE,GACAI,EAAArvD,EAAAqvD,EAAAN,IAGAM,EAAAZ,EACAU,GAAA,GAEA90D,EAAAnB,EAAAuP,aAAA,IAAA6lD,EAAAC,GACAe,EAAA/E,aAAAlwD,EAAA,KACAnB,EAAAg9B,UAAA,IAAAk5B,EAAAC,GACAn2D,EAAA4vD,UAAAiF,EAAA,IAAAO,EAAAC,EAAA,IAAAa,EAAAC,EAEA,OAAAn2D,GAAAuP,aAAA,IAAA+lD,EAAAC,IAYAI,cAAA,SAAA/oD,EAAAwoD,EAAAC,EAAAC,EAAAC,GAEA,QAAAc,GAAAC,GACA,gBAAA3uD,GACA,GAAAA,EAAA2uD,EACA,QAGA,IADA3uD,GAAAvB,KAAAK,GACAF,EAAAoB,GAAA,MACA,QAEA,IAAA4uD,GAAA5uD,EAAA2uD,CACA,OAAAvuD,GAAAJ,GAAAI,EAAAwuD,GAAA5uD,EAAA4uD,GAIA,QAAA3zD,GAAA5O,GACA,GAAAwT,GAAApY,EAAAonE,EAAA37D,EAAAoO,EAAAqrB,EAAAP,EACAJ,EAAAf,EAAA6jC,EAAAC,CAGA,KAFAz4B,EAAAt2B,GAAA3T,EAAA,IAAA2iE,EACAC,EAAAjvD,EAAAb,EAAAm3B,EAAAt2B,GACAH,EAAA,EAAmBA,EAAA+tD,EAAQ/tD,IAAA,CAI3B,IAHAy2B,EAAAr2B,GAAAJ,EAAA,IAAAqvD,EACAD,EAAAhvD,EAAAd,EAAAm3B,EAAAr2B,GACAqB,EAAA,EAAgBqrB,EAAA,EAASP,EAAA,EAAWJ,EAAA,EAAUf,EAAA,EAC9CxjC,EAAAwnE,EAAAjvD,EAAAmvD,EAAuC1nE,GAAAwnE,EAAAjvD,EAAAmvD,EAA0B1nE,IACjE,KAAAA,EAAA,GAAAA,GAAAgmE,GAAA,CAGAqB,EAAA3vD,EAAA,IAAAP,EAAAnX,EAAA6uC,EAAAt2B,IACAovD,EAAAN,KACAM,EAAAN,MAEA,QAAAz+D,GAAA4+D,EAAAhvD,EAAAovD,EAA6Ch/D,GAAA4+D,EAAAhvD,EAAAovD,EAA0Bh/D,IACvEA,EAAA,GAAAA,GAAAq9D,IAGAqB,EAAA5vD,EAAA,IAAAP,EAAAvO,EAAAimC,EAAAr2B,IACAmvD,EAAAN,GAAAC,KACAK,EAAAN,GAAAC,GAAAO,EAAA9wD,EAAAG,EAAAmwD,EAAAS,EAAA,GAAA5wD,EAAAowD,EAAAS,EAAA,UAEAX,EAAAO,EAAAN,GAAAC,GACAF,EAAA,IACA37D,EAAA,GAAA7C,EAAAo9D,EAAAhmE,GACA6Z,GAAAutD,EACAliC,GAAAkiC,EAAAY,EAAAv8D,GACAk5B,GAAAyiC,EAAAY,EAAAv8D,EAAA,GACA84B,GAAA6iC,EAAAY,EAAAv8D,EAAA,GACA+3B,GAAA4jC,EAAAY,EAAAv8D,EAAA,KAIAA,EAAA,GAAA2M,EAAA8tD,EAAAthE,GACAqjE,EAAAx8D,GAAAy5B,EAAArrB,EACAouD,EAAAx8D,EAAA,GAAAk5B,EAAA9qB,EACAouD,EAAAx8D,EAAA,GAAA84B,EAAA1qB,EACAouD,EAAAx8D,EAAA,GAAA+3B,EAAA3pB,EAGA,QAAAjV,EAAAshE,EACA1yD,EAAA5O,GAGAsjE,EAIA,GAAAt3D,GAAA4M,EAAAE,WAAA,MACAyqD,EAAAv3D,EAAAuP,aAAA,IAAA6lD,EAAAC,GACAiC,EAAAt3D,EAAAuP,aAAA,IAAA+lD,EAAAC,GACA6B,EAAAG,EAAAx4D,KAAAs4D,EAAAC,EAAAv4D,KACAk4D,EAAAZ,EAAAljE,KAAA8hE,cACA0B,EAAAxjE,KAAA+hE,UAAA2B,EAAA1jE,KAAAgiE,UACA+B,EAAA,EAAA/jE,KAAA+hE,UAAAiC,EAAA,EAAAhkE,KAAAgiE,UACA2B,EAAA/kD,EAAA4kD,EAAAxjE,KAAA8hE,aAAA,GACA+B,EAAAjlD,EAAA8kD,EAAA1jE,KAAA8hE,aAAA,GACA8B,KAAyB94B,KAAc24B,IAEvC,OAAAh0D,GAAA,IAYA8yD,kBAAA,SAAA9oD,EAAAwoD,EAAAC,EAAAC,EAAAC,GACA,GAAAtsD,GAAA8E,EAAAhR,EAAA+iB,EAAAnY,EAAAC,EAAAxY,EAAA4I,EAAAw/D,EAAAC,EAAAC,EACA9zC,EAAA+zC,EAAAl7C,EAAA,EAAAk6C,EAAAxjE,KAAA+hE,UACA2B,EAAA1jE,KAAAgiE,UAAAn1D,EAAA4M,EAAAE,WAAA,MACA8qD,EAAA,GAAAxC,EAAA,GAAA7qD,EAAAvK,EAAAuP,aAAA,IAAA6lD,EAAAC,GACAvD,EAAAvnD,EAAAxL,KAAA84D,EAAA73D,EAAAuP,aAAA,IAAA+lD,EAAAC,GACAuC,EAAAD,EAAA94D,IACA,KAAA3P,EAAA,EAAiBA,EAAAmmE,EAAQnmE,IACzB,IAAA4I,EAAA,EAAmBA,EAAAs9D,EAAQt9D,IAO3B,IANA2P,EAAAb,EAAA6vD,EAAA3+D,GACA4P,EAAAd,EAAA+vD,EAAAznE,GACAooE,EAAAb,EAAA3+D,EAAA2P,EACA8vD,EAAAZ,EAAAznE,EAAAwY,EACA+vD,EAAA,GAAA/vD,EAAAwtD,EAAAztD,GAEA+vD,EAAA,EAAwBA,EAAA,EAAUA,IAClCzuD,EAAA6oD,EAAA6F,EAAAD,GACA3pD,EAAA+jD,EAAA6F,EAAA,EAAAD,GACA36D,EAAA+0D,EAAA6F,EAAAC,EAAAF,GACA53C,EAAAgyC,EAAA6F,EAAAC,EAAA,EAAAF,GACA9zC,EAAA3a,GAAA,EAAAuuD,IAAA,EAAAC,GAAA1pD,EAAAypD,GAAA,EAAAC,GACA16D,EAAA06D,GAAA,EAAAD,GAAA13C,EAAA03C,EAAAC,EACAK,EAAAr7C,KAAAmH,CAIA,OAAAi0C,IAYApC,kBAAA,SAAA7oD,EAAAwoD,EAAAC,EAAAC,EAAAC,GAOA,OANAwC,GAAA5kE,KAAA+hE,UAAA8C,EAAA7kE,KAAAgiE,UACA8C,EAAAlmD,EAAAgmD,EAAA,GACAG,EAAAnmD,EAAAimD,EAAA,GACAh4D,EAAA4M,EAAAE,WAAA,MACAvC,EAAAvK,EAAAuP,aAAA,IAAA6lD,EAAAC,GAAAt2D,EAAAwL,EAAAxL,KACAo5D,EAAAn4D,EAAAuP,aAAA,IAAA+lD,EAAAC,GAAA6C,EAAAD,EAAAp5D,KACA/G,EAAA,EAAqBA,EAAAu9D,EAAQv9D,IAC7B,OAAA5I,GAAA,EAAuBA,EAAAkmE,EAAQlmE,IAAA,CAG/B,OAFAyc,GAAA,GAAAzc,EAAA4I,EAAAs9D,GAAAkB,EAAA,EAAA3E,EAAA,EAAAwG,EAAA,EACAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,GAAA1gE,EAAA,IAAAggE,EACAW,EAAA7xD,EAAA9O,EAAAggE,GAA0CW,GAAA3gE,EAAA,GAAAggE,EAAuBW,IAGjE,OAFA1sD,GAAA1F,EAAAmyD,GAAAC,EAAA,KAAAT,EACAU,GAAAxpE,EAAA,IAAA2oE,EAAAc,EAAA5sD,IACAsqD,EAAAzvD,EAAA1X,EAAA2oE,GAA4CxB,GAAAnnE,EAAA,GAAA2oE,EAAuBxB,IAAA,CACnE,GAAAvqD,GAAAzF,EAAAqyD,GAAArC,EAAA,KAAA0B,EACAnT,EAAA3+C,EAAA0yD,EAAA7sD,IAEA84C,GAAA,GAAAA,OAIA0R,EAAA,EAAA1R,MAAA,EAAAA,IAAA,EACA0R,EAAA,IACAxqD,EAAA,GAAAuqD,EAAAoC,EAAAvD,GAEAqD,GAAAjC,EAAAz3D,EAAAiN,EAAA,GACAqsD,GAAA7B,EAEAz3D,EAAAiN,EAAA,SACAwqD,IAAAz3D,EAAAiN,EAAA,QAEAssD,GAAA9B,EAAAz3D,EAAAiN,GACAusD,GAAA/B,EAAAz3D,EAAAiN,EAAA,GACAwsD,GAAAhC,EAAAz3D,EAAAiN,EAAA,GACA6lD,GAAA2E,IAKA4B,EAAAvsD,GAAAysD,EAAAzG,EACAuG,EAAAvsD,EAAA,GAAA0sD,EAAA1G,EACAuG,EAAAvsD,EAAA,GAAA2sD,EAAA3G,EACAuG,EAAAvsD,EAAA,GAAA4sD,EAAAJ,EAGA,MAAAF,IAOA5hC,SAAA,WACA,OACAr2B,KAAA/M,KAAA+M,KACAiO,OAAAhb,KAAAgb,OACAC,OAAAjb,KAAAib,OACA4mD,WAAA7hE,KAAA6hE,WACAC,aAAA9hE,KAAA8hE,iBAUA93D,EAAAS,MAAAiE,QAAAkzD,OAAA7pD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAkzD,OAAAx6D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACApU,EAAA1E,EAAAS,MAAAiE,QACAoV,EAAA9Z,EAAA6G,KAAAiT,WAuBApV,GAAAi3D,YAAA7hD,EAAApV,EAAAqvD,YAOAhxD,KAAA,cAQAgX,WAAA,SAAAhrB,GACAA,UACAiH,KAAAwzB,OAAAz6B,EAAAy6B,SACA,UACA,UACA,UACA,YAQAkpC,QAAA,SAAAjjD,GACA,GAIAxd,GACA8Z,EACAipB,EACApkB,EACA9E,EARAjJ,EAAA4M,EAAAE,WAAA,MACA3L,EAAAnB,EAAAuP,aAAA,IAAA3C,EAAAvP,MAAAuP,EAAAtP,QACAyB,EAAAoC,EAAApC,KACA6uD,EAAA7uD,EAAA1P,OAMA06B,EAAA52B,KAAAwzB,MAEA,KAAAv3B,EAAA,EAAkBA,EAAAw+D,EAAUx+D,GAAA,EAC5B8Z,EAAAnK,EAAA3P,GACA+iC,EAAApzB,EAAA3P,EAAA,GACA2e,EAAAhP,EAAA3P,EAAA,GACA6Z,EAAAlK,EAAA3P,EAAA,GAEA2P,EAAA3P,GAAA8Z,EAAA6gB,EAAA,GAAAoI,EAAApI,EAAA,GAAAhc,EAAAgc,EAAA,GAAA9gB,EAAA8gB,EAAA,GAAAA,EAAA,GACAhrB,EAAA3P,EAAA,GAAA8Z,EAAA6gB,EAAA,GAAAoI,EAAApI,EAAA,GAAAhc,EAAAgc,EAAA,GAAA9gB,EAAA8gB,EAAA,GAAAA,EAAA,GACAhrB,EAAA3P,EAAA,GAAA8Z,EAAA6gB,EAAA,IAAAoI,EAAApI,EAAA,IAAAhc,EAAAgc,EAAA,IAAA9gB,EAAA8gB,EAAA,IAAAA,EAAA,IACAhrB,EAAA3P,EAAA,GAAA8Z,EAAA6gB,EAAA,IAAAoI,EAAApI,EAAA,IAAAhc,EAAAgc,EAAA,IAAA9gB,EAAA8gB,EAAA,IAAAA,EAAA,GAGA/pB,GAAAqxD,aAAAlwD,EAAA,MAOAo1B,SAAA,WACA,MAAAtgB,GAAA9iB,KAAA0jB,UAAA,aACA3W,KAAA/M,KAAA+M,KACAymB,OAAAxzB,KAAAwzB,YAWAxpB,EAAAS,MAAAiE,QAAAi3D,YAAA5tD,WAAA,SAAA3Q,GACA,UAAA4C,GAAAS,MAAAiE,QAAAi3D,YAAAv+D,KAGC/Q,SAGD,SAAA0c,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACA8Y,EAAA9Y,EAAA6G,KAAAzJ,OAAA0b,OACAE,EAAAhZ,EAAA6G,KAAAzJ,OAAA4b,MACAhN,EAAAhM,EAAA6G,KAAAmF,QACAwvB,EAAAx7B,EAAA1S,OAAAkuC,oBACAogC,EAAA,CAEA,IAAA57D,EAAAwM,KAEA,WADAxM,GAAAiiB,KAAA,iCAIA,IAAA9R,GAAAnQ,EAAA1S,OAAA4J,UAAAiZ,gBAAAjY,QACAiY,GAAAviB,KACA,aACA,aACA,WACA,OACA,iBACA,YACA,YACA,aACA,uBAWAoS,EAAAwM,KAAAxM,EAAA6G,KAAAiT,YAAA9Z,EAAA1S,QAOAuuE,0BACAvvD,UAAA,EACAyhB,YAAA,EACAlb,YAAA,EACAib,WAAA,EACAE,YAAA,EACAe,MAAA,EACA+sC,aAAA,EACA7L,WAAA,EACA7pB,aAAA,GAMA21B,WAAA,QAOAC,iBAAA,YAiKAj5D,KAAA,OAOAuJ,SAAA,GAOAyhB,WAAA,SAOAlb,WAAA,kBAOAm9C,eAAA,GAOAC,UAAA,OAOAniC,UAAA,GAOAE,WAAA,KAOAiuC,oBAAA,GAQA9rD,kBAQAyb,OAAA,KAQAsP,OAAA,KAKAghC,kBAAA,IAOAC,cAAA,KAQAL,YAAA,EAQA/hD,WAAA,SAAAgV,EAAAhgC,GACAA,QACAiH,KAAA+4B,OACA/4B,KAAAomE,iBAAA,EACApmE,KAAA+nC,WAAAhvC,GACAiH,KAAAomE,iBAAA,EACApmE,KAAAqmE,mBAWAA,gBAAA,SAAA5tD,GACAzY,KAAAomE,kBAGA3tD,IACAA,EAAAzO,EAAA6G,KAAA2I,sBAAAG,WAAA,MACA3Z,KAAAsmE,eAAA7tD,IAEAzY,KAAAumE,WAAAvmE,KAAAwmE,sBACAxmE,KAAAymE,cACAzmE,KAAAkK,MAAAlK,KAAA0mE,cAAAjuD,IAAAzY,KAAA2mE,aAAAf,EACA5lE,KAAAmK,OAAAnK,KAAA4mE,eAAAnuD,KAOA1J,SAAA,WACA,wBAAA/O,KAAA2S,aACA,iBAAa3S,KAAA+4B,KAAA,qBAAA/4B,KAAA6c,WAAA,QAObuyB,QAAA,SAAA32B,GACAzY,KAAAya,QAAAzQ,EAAA6G,KAAAyJ,YAAAta,KAAAyY,GACAzY,KAAA4pD,YAAAnxC,GACAzY,KAAAwuC,WAAA/1B,GACAzY,KAAA0pD,yBAAAjxC,GACAzY,KAAA6mE,sBAAApuD,GACAzY,KAAA6pD,iBAAApxC,GACAzY,KAAA8pD,eAAArxC,GACAzY,KAAA8mE,YAAAruD,GACAzY,KAAA+mE,sBAAAtuD,GACAzY,KAAAya,QAAAhC,EAAAc,WAOAutD,YAAA,SAAAruD,GACAzY,KAAAgnE,gBAAAvuD,GACAzY,KAAAinE,kBAAAxuD,IAOA6tD,eAAA,SAAA7tD,GACAA,EAAAyuD,aAAA,aACAzuD,EAAA8f,KAAAv4B,KAAAmnE,uBAOAP,eAAA,WACA,MAAA5mE,MAAAonE,0BAAApnE,KAAAumE,WAAArqE,OAAA,GAAA8D,KAAAqnE,oBAQAX,cAAA,SAAAjuD,GAGA,OAFA6uD,GAAAtnE,KAAAunE,cAAA9uD,EAAA,GAEAxc,EAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAmDD,EAAAoV,EAASpV,IAAA,CAC5D,GAAAurE,GAAAxnE,KAAAunE,cAAA9uD,EAAAxc,EACAurE,GAAAF,IACAA,EAAAE,GAGA,MAAAF,IAQA5V,6BAAA,WACA,OAAcl9C,EAAAxU,KAAAkK,MAAAuK,EAAAzU,KAAAmK,SAWds9D,aAAA,SAAAhsE,EAAAgd,EAAApR,EAAAsO,EAAAC,GAEA,GAAA8xD,GAAAx9D,EAAAy9D,EAAAlsE,EAAA4I,MAAA,KACA,IAAArE,KAAA2nE,GAAAnkC,OAAA,CACA,GAAAX,IAAA7iC,KAAAkK,MAAA,EAAAlK,KAAA2nE,GAAA9kC,SAAA,EACAC,GAAA9iC,KAAAmK,OAAA,EAAAnK,KAAA2nE,GAAA7kC,SAAA,CACArqB,GAAAU,OACAV,EAAAW,UAAAypB,EAAAC;AACAntB,GAAAktB,EACAjtB,GAAAktB,EAEA,OAAA9iC,KAAA8lE,YAAA,CACA,GAAA8B,GAAA5nE,KAAA6nE,wBACAxgE,KAAAjM,MAAA,GACA,QAAAa,GAAA,EAAAoV,EAAAhK,EAAAnL,OAA2CD,EAAAoV,EAASpV,IACpDyrE,EAAArgE,EAAApL,GACAiO,EAAAuO,EAAAqvD,YAAAJ,GAAAx9D,MAAA09D,EACAnvD,EAAAhd,GAAAisE,EAAA/xD,EAAAC,GACAD,GAAAzL,EAAA,EAAAA,EAAA,MAIAuO,GAAAhd,GAAA4L,EAAAsO,EAAAC,EAEA5V,MAAA2nE,GAAAnkC,QAAA/qB,EAAAc,WAYAwuD,gBAAA,SAAAtsE,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,EAAAoyD,GAEApyD,GAAA5V,KAAAsW,SAAAtW,KAAAkmE,iBAGA,IAAA73B,GAAAruC,KAAAunE,cAAA9uD,EAAAuvD,EACA,gBAAAhoE,KAAAi6D,WAAAj6D,KAAAkK,MAAAmkC,EAEA,WADAruC,MAAAynE,aAAAhsE,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,EAAAoyD,EAaA,QAFAC,GANAC,EAAAzT,EAAAr5D,MAAA,OACA+sE,EAAA,EACAC,EAAApoE,KAAAqoE,iBAAA5vD,EAAAyvD,EAAA9wE,KAAA,IAAA4wE,EAAA,GACAM,EAAAtoE,KAAAkK,MAAAk+D,EACAG,EAAAL,EAAAhsE,OAAA,EACAssE,EAAAD,EAAA,EAAAD,EAAAC,EAAA,EACAE,EAAA,EAEAxsE,EAAA,EAAAoV,EAAA62D,EAAAhsE,OAAyCD,EAAAoV,EAASpV,IAAA,CAClD,WAAAw4D,EAAA0T,MAAA1T,EAAAv4D,QACAisE,GAEAF,GAAAC,EAAAjsE,GACA+D,KAAAynE,aAAAhsE,EAAAgd,EAAAwvD,EAAAtyD,EAAA8yD,EAAA7yD,EAAAoyD,EAAAG,GACAM,GAAAzoE,KAAAqoE,iBAAA5vD,EAAAwvD,EAAAD,EAAAG,GAAAK,EACAL,GAAAF,EAAA/rE,SASAmsE,iBAAA,SAAA5vD,EAAAwvD,GACA,GAAAS,GAAAd,EAAA19D,EAAAuO,EAAAqvD,YAAAG,GAAA/9D,KAMA,OALA,KAAAlK,KAAA8lE,cACA4C,EAAAT,EAAA7sE,MAAA,IAAAc,OACA0rE,EAAAc,EAAA1oE,KAAA6nE,yBACA39D,GAAA09D,GAEA19D,EAAA,EAAAA,EAAA,GAOAy+D,eAAA,WACA,OAAA3oE,KAAAkK,MAAA,GAOA0+D,cAAA,WACA,OAAA5oE,KAAAmK,OAAA,GAMA0+D,cAAA,WACA,UAQAC,kBAAA,SAAArwD,EAAAhd,GAIA,OAFAstE,GAAA,EAAApzD,EAAA3V,KAAA2oE,iBAAA/yD,EAAA5V,KAAA4oE,gBAEA3sE,EAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAmDD,EAAAoV,EAASpV,IAAA,CAC5D,GAAA+sE,GAAAhpE,KAAAqnE,iBAAA5uD,EAAAxc,GACAgtE,EAAAD,EAAAhpE,KAAAg4B,WACAqW,EAAAruC,KAAAunE,cAAA9uD,EAAAxc,GACAwsE,EAAAzoE,KAAAkpE,mBAAA76B,EACAruC,MAAA+nE,gBACAtsE,EACAgd,EACAzY,KAAAumE,WAAAtqE,GACA0Z,EAAA8yD,EACA7yD,EAAAmzD,EAAAE,EACAhtE,GAEA8sE,GAAAC,IAQAhC,gBAAA,SAAAvuD,IACAzY,KAAA+Q,MAAA/Q,KAAA6oE,iBAIA7oE,KAAA8oE,kBAAArwD,EAAA,aAOAwuD,kBAAA,SAAAxuD,IACAzY,KAAA41B,QAAA,IAAA51B,KAAAowC,cAAApwC,KAAA6oE,mBAIA7oE,KAAAklC,SAAAllC,KAAAklC,OAAAH,cACA/kC,KAAA+pD,cAAAtxC,GAGAA,EAAAU,OACAnZ,KAAAk8C,aAAAzjC,EAAAzY,KAAAmpE,iBACA1wD,EAAA+B,YACAxa,KAAA8oE,kBAAArwD,EAAA,cACAA,EAAA83B,YACA93B,EAAAc,YAOA8tD,iBAAA,WACA,MAAArnE,MAAAonE,yBAAApnE,KAAAg4B,YAOAovC,uBAAA,WACA,MAAApnE,MAAAsW,SAAAtW,KAAAmmE,eAOAU,sBAAA,SAAApuD,GACAzY,KAAAiqC,kBAAAxxB,GACAzY,KAAAopE,2BAAA3wD,IAOA2wD,2BAAA,SAAA3wD,GACA,GAAAzY,KAAAimE,oBAAA,CAGA,GAAA+C,GACA36B,EAAAg7B,EADAC,EAAA,CAGA7wD,GAAA8xB,UAAAvqC,KAAAimE,mBACA,QAAAhqE,GAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAmDD,EAAAoV,EAASpV,IAC5D+sE,EAAAhpE,KAAAqnE,iBAAA5uD,EAAAxc,GACAoyC,EAAAruC,KAAAunE,cAAA9uD,EAAAxc,GACAoyC,EAAA,IACAg7B,EAAArpE,KAAAkpE,mBAAA76B,GACA51B,EAAA+xB,SACAxqC,KAAA2oE,iBAAAU,EACArpE,KAAA4oE,gBAAAU,EACAj7B,EACA26B,EAAAhpE,KAAAg4B,aAGAsxC,GAAAN,CAIAhpE,MAAA+pD,cAAAtxC,KAQAywD,mBAAA,SAAA76B,GACA,iBAAAruC,KAAAi6D,WACAj6D,KAAAkK,MAAAmkC,GAAA,EAEA,UAAAruC,KAAAi6D,UACAj6D,KAAAkK,MAAAmkC,EAEA,GAMAo4B,YAAA,WACAzmE,KAAAupE,gBACAvpE,KAAAwpE,kBAMAC,kBAAA,WACA,GAAAC,IAAA,CACA,IAAA1pE,KAAA2pE,iBAEA,MADA3pE,MAAA2pE,kBAAA,GACA,CAEA,QAAA14D,KAAAjR,MAAA6lE,yBACA7lE,KAAA,KAAAiR,KAAAjR,KAAAiR,KACAjR,KAAA,KAAAiR,GAAAjR,KAAAiR,GACAy4D,GAAA,EAGA,OAAAA,IASAnC,cAAA,SAAA9uD,EAAAuvD,GACA,GAAAhoE,KAAAupE,aAAAvB,GACA,MAAAhoE,MAAAupE,aAAAvB,QAAAhoE,KAAAkK,MAAAlK,KAAAupE,aAAAvB,EAGA,IAAA99D,GAAA0/D,EAAAnV,EAAAz0D,KAAAumE,WAAAyB,EAgBA,OAbA99D,GADA,KAAAuqD,EACA,EAGAz0D,KAAA6pE,aAAApxD,EAAAuvD,GAEAhoE,KAAAupE,aAAAvB,GAAA99D,EAEAA,GAAA,YAAAlK,KAAAi6D,YACA2P,EAAAnV,EAAAr5D,MAAA,OACAwuE,EAAA1tE,OAAA,IACA8D,KAAAupE,aAAAvB,QAGA99D,GAGA29D,uBAAA,WACA,WAAA7nE,KAAA8lE,YACA9lE,KAAAsW,SAAAtW,KAAA8lE,YAAA,IAEA,GASA+D,aAAA,SAAApxD,EAAAuvD,GACA,GAEAU,GAAAoB,EAFArV,EAAAz0D,KAAAumE,WAAAyB,GACA99D,EAAAuO,EAAAqvD,YAAArT,GAAAvqD,MACA09D,EAAA,CAMA,OALA,KAAA5nE,KAAA8lE,cACA4C,EAAAjU,EAAAr5D,MAAA,IAAAc,OACA0rE,GAAAc,EAAA,GAAA1oE,KAAA6nE,0BAEAiC,EAAA5/D,EAAA09D,EACAkC,EAAA,EAAAA,EAAA,GAOA/C,sBAAA,SAAAtuD,GAQA,QAAAsxD,GAAAC,GACA,GAAA/tE,GAAAoV,EAAAxM,EAAAolE,EAAA57B,EACAg7B,EAAAL,EADAhxC,EAAA,CAGA,KAAA/7B,EAAA,EAAAoV,EAAAmS,EAAA+iD,WAAArqE,OAAkDD,EAAAoV,EAASpV,IAAA,CAM3D,IAJAoyC,EAAA7qB,EAAA+jD,cAAA9uD,EAAAxc,GACAotE,EAAA7lD,EAAA0lD,mBAAA76B,GACA26B,EAAAxlD,EAAA6jD,iBAAA5uD,EAAAxc,GAEA4I,EAAA,EAAAolE,EAAAD,EAAA9tE,OAA4C2I,EAAAolE,EAAUplE,IACtD4T,EAAA+xB,SACAhnB,EAAAmlD,iBAAAU,EACArxC,GAAAxU,EAAA2iD,cAAA,EAAA6D,EAAAnlE,IAAA2e,EAAAlN,SAAA4zD,EACA77B,EACA7qB,EAAAlN,SAAA,GAEA0hB,IAAAgxC,GAxBA,GAAAhpE,KAAAg6D,eAAA,CAGA,GAAAkQ,GAAAlqE,KAAAmK,OAAA,EACAqZ,EAAAxjB,KAAAgqE,IAwBAhqE,MAAAg6D,eAAA91D,QAAA,iBACA8lE,EAAApyE,KAAA,KAEAoI,KAAAg6D,eAAA91D,QAAA,oBACA8lE,EAAApyE,KAAA,KAEAoI,KAAAg6D,eAAA91D,QAAA,gBACA8lE,EAAApyE,WAEAoyE,EAAA9tE,OAAA,GACA6tE,EAAAC,KAQA7C,oBAAA,WACA,OAEAn9D,EAAA+F,aAAA/P,KAAA+3B,WAAA/3B,KAAA83B,UACA9tB,EAAA+F,aAAA/P,KAAA83B,UAAA93B,KAAA+3B,WACA/3B,KAAAsW,SAAA,KACAtM,EAAA+F,aAAA,IAAA/P,KAAA6c,WAAA,IAAA7c,KAAA6c,YACAzlB,KAAA,MAQAizC,OAAA,SAAA5xB,EAAAgxC,GAEAzpD,KAAAqwB,UAIA5X,EAAAU,OACAnZ,KAAAsmE,eAAA7tD,GAEAzY,KAAAypE,qBACAzpE,KAAAqmE,gBAAA5tD,GAEAzY,KAAA2pD,wBAAAlxC,GACAgxC,GACAzpD,KAAA60B,UAAApc,GAEAzY,KAAAmwB,iBACA1X,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAmwB,iBAEAnwB,KAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,MACA0L,EAAAW,UAAApZ,KAAA2V,KAAA3V,KAAA4V,KAEA5V,KAAAovC,QAAA32B,GACAA,EAAAc,YAOAitD,oBAAA,WACA,MAAAxmE,MAAA+4B,KAAA39B,MAAA4E,KAAA+lE,aAQA3iC,SAAA,SAAAmI,GACA,GAAAnkC,GAAA0b,EAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAxS,KAAA/4B,KAAA+4B,KACAziB,SAAAtW,KAAAsW,SACAyhB,WAAA/3B,KAAA+3B,WACAlb,WAAA7c,KAAA6c,WACAib,UAAA93B,KAAA83B,UACAE,WAAAh4B,KAAAg4B,WACAgiC,eAAAh6D,KAAAg6D,eACAC,UAAAj6D,KAAAi6D,UACAgM,oBAAAjmE,KAAAimE,oBACAH,YAAA9lE,KAAA8lE,aAKA,OAHA9lE,MAAAglC,sBACAhlC,KAAA+oD,qBAAA3hD,GAEAA,GASAotB,MAAA,SAAAhd,GACAxX,KAAAyY,MACAzY,KAAAyY,IAAAzO,EAAA6G,KAAA2I,sBAAAG,WAAA,MAEA,IAAA4a,GAAAv0B,KAAA0wD,uBACAsZ,EAAAhqE,KAAAmqE,sBAAAnqE,KAAAyY,KACA2xD,EAAApqE,KAAAqqE,iBAAAL,EAAAM,QAAAN,EAAAO,SAGA,OAFAvqE,MAAAwqE,kBAAAj2C,EAAA61C,GAEA5yD,IAAA+c,EAAAn9B,KAAA,KAAAm9B,EAAAn9B,KAAA,KAMA+yE,sBAAA,SAAA1xD,GACA,GAAAgyD,GAAAzqE,KAAAqnE,iBAAA5uD,EAAA,GACA8xD,GAAAvqE,KAAAkK,MAAA,EACAogE,EAAA,CAEA,QACAC,YAAAvqE,KAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,KAAA/M,KAAA2V,KAAA,GACA20D,WAAAtqE,KAAAujC,OAAA,eAAAvjC,KAAAujC,MAAAx2B,MAAA/M,KAAA4V,IAAA,GACA60D,YAOAD,kBAAA,SAAAj2C,EAAA61C,GACA,GAAAM,IAAA,EAAAp5D,EAAAtR,KAAA2vD,eACA7hD,EAAA,KAAAwD,EAAA,cAAAA,EAAA,GAEAijB,GAAA38B,KACA,QAAAoI,KAAA4vD,WAAA,cAAA5vD,KAAA6vD,kBAAA7vD,KAAAywD,wBAAA,IACA3iD,EAAA,MACAs8D,EAAAO,YAAAvzE,KAAA,IACA,aACA4I,KAAA6c,WAAA,gBAAA7c,KAAA6c,WAAA9W,QAAA,kBACA/F,KAAAsW,SAAA,cAAAtW,KAAAsW,SAAA,QACAtW,KAAA83B,UAAA,eAAA93B,KAAA83B,UAAA,QACA93B,KAAA+3B,WAAA,gBAAA/3B,KAAA+3B,WAAA,QACA/3B,KAAAg6D,eAAA,oBAAAh6D,KAAAg6D,eAAA,QACA,UAAAh6D,KAAAyvD,aAAAib,GAAA,QACAN,EAAAQ,UAAAxzE,KAAA,IACA,gBACA,aAUAizE,iBAAA,SAAAQ,EAAAC,GACA,GAAAF,MACAD,KACAxgE,EAAA,CAEAnK,MAAA+qE,UAAAJ,EAGA,QAAA1uE,GAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAmDD,EAAAoV,EAASpV,IAC5D+D,KAAAimE,qBACAjmE,KAAAgrE,kBAAAL,EAAA1uE,EAAA6uE,EAAAD,EAAA1gE,GAEAnK,KAAAirE,oBAAAhvE,EAAA2uE,EAAAzgE,EAAA2gE,EAAAD,EAAAF,GACAxgE,GAAAnK,KAAAqnE,iBAAArnE,KAAAyY,IAAAxc,EAGA,QACA2uE,YACAD,gBAIAM,oBAAA,SAAAhvE,EAAA2uE,EAAAzgE,EAAA2gE,EAAAD,GACA,GAAAK,GAAAlrE,KAAAsW,UAAAtW,KAAAmmE,cAAAnmE,KAAAkmE,mBACA2E,EAAA1gE,EAAAnK,KAAAmK,OAAA,CACA,mBAAAnK,KAAAi6D,cAEAj6D,MAAAmrE,wBAAAlvE,EAAA2uE,EAAAM,EAAAJ,OAGAF,GAAAhzE,KACA,mBACAoe,EAAA80D,EAAA9qE,KAAAkpE,mBAAAlpE,KAAAunE,cAAAvnE,KAAAyY,IAAAxc,IAAAupC,GAAA,KACA,MACAxvB,EAAAk1D,EAAA1lC,GACA,KAGAxlC,KAAAorE,mBAAAprE,KAAA+Q,MAAA,IACA/G,EAAA6G,KAAAgG,OAAAuM,UAAApjB,KAAAumE,WAAAtqE,IACA,eAIAkvE,wBAAA,SAAAlvE,EAAA2uE,EAAAM,EAAAJ,GACA,GAAAryD,GAAAzO,EAAA6G,KAAA2I,sBAAAG,WAAA,KAEA3Z,MAAAsmE,eAAA7tD,EAEA,IAMAwvD,GACA52D,EAPAojD,EAAAz0D,KAAAumE,WAAAtqE,GACAisE,EAAAzT,EAAAr5D,MAAA,OACAgtE,EAAApoE,KAAAqoE,iBAAA5vD,EAAAyvD,EAAA9wE,KAAA,KACAkxE,EAAAtoE,KAAAkK,MAAAk+D,EACAG,EAAAL,EAAAhsE,OAAA,EACAssE,EAAAD,EAAA,EAAAD,EAAAC,EAAA,EACArxE,EAAA8I,KAAAorE,mBAAAprE,KAAA+Q,KAKA,KAFA+5D,GAAA9qE,KAAAkpE,mBAAAlpE,KAAAunE,cAAA9uD,EAAAxc,IAEAA,EAAA,EAAAoV,EAAA62D,EAAAhsE,OAAqCD,EAAAoV,EAASpV,IAC9CgsE,EAAAC,EAAAjsE,GACA2uE,EAAAhzE,KACA,mBACAoe,EAAA80D,EAAAtlC,GAAA,KACA,MACAxvB,EAAAk1D,EAAA1lC,GACA,KAGAtuC,EAAA,IACA8S,EAAA6G,KAAAgG,OAAAuM,UAAA6kD,GACA,cAEA6C,GAAA9qE,KAAAqoE,iBAAA5vD,EAAAwvD,GAAAO,GAIAwC,kBAAA,SAAAL,EAAA1uE,EAAA6uE,EAAAD,EAAA1gE,GACAwgE,EAAA/yE,KACA,aACAoI,KAAAorE,mBAAAprE,KAAAimE,qBACA,OACAjwD,EAAA80D,EAAA9qE,KAAAkpE,mBAAAlpE,KAAAunE,cAAAvnE,KAAAyY,IAAAxc,IAAAupC,GACA,QACAxvB,EAAA7L,EAAAnK,KAAAmK,OAAA,EAAAq7B,GACA,YACAxvB,EAAAhW,KAAAunE,cAAAvnE,KAAAyY,IAAAxc,GAAAupC,GACA,aACAxvB,EAAAhW,KAAAqnE,iBAAArnE,KAAAyY,IAAAxc,GAAA+D,KAAAg4B,WAAAwN,GACA,gBAGAulC,UAAA,SAAAJ,GACA3qE,KAAA6lC,iBACA8kC,EAAA/yE,KACA,aACAoI,KAAAorE,mBAAAprE,KAAA6lC,iBACA,OACA7vB,GAAAhW,KAAAkK,MAAA,EAAAs7B,GACA,QACAxvB,GAAAhW,KAAAmK,OAAA,EAAAq7B,GACA,YACAxvB,EAAAhW,KAAAkK,MAAAs7B,GACA,aACAxvB,EAAAhW,KAAAmK,OAAAq7B,GACA,gBAYA4lC,mBAAA,SAAA5zE,GACA,GAAA6zE,GAAA7zE,GAAA,gBAAAA,GAAA,GAAAwS,GAAA0mB,MAAAl5B,GAAA,EACA,OAAA6zE,MAAAnsC,aAAA,IAAAmsC,EAAAz6C,WAGA,YAAAy6C,EAAAz6C,WAAA,WAAAy6C,EAAA16C,SAAA,GAAAyO,QAAA,IAFA,SAAA5nC,EAAA,KAaAmyC,KAAA,SAAAvwC,EAAA5B,GACAwI,KAAA0jB,UAAA,OAAAtqB,EAAA5B,GAEA4B,IAAA4G,MAAA6lE,2BACA7lE,KAAAqmE,kBACArmE,KAAAmpC,cAQAx2B,WAAA,WACA,YAWA3I,EAAAwM,KAAA+9C,gBAAAvqD,EAAAgG,kBAAA9N,OACA,qFAAA9G,MAAA,MAOA4O,EAAAwM,KAAAC,sBAAA,GAUAzM,EAAAwM,KAAAmkB,YAAA,SAAAzV,EAAAnsB,GACA,IAAAmsB,EACA,WAGA,IAAAsvC,GAAAxqD,EAAAouB,gBAAAlT,EAAAlb,EAAAwM,KAAA+9C,gBACAx7D,GAAAiR,EAAA6G,KAAAzJ,OAAA0b,OAAA/pB,EAAAiR,EAAA6G,KAAAzJ,OAAA4b,MAAAjqB,MAA0Fy7D,GAE1Fz7D,EAAA6c,IAAA7c,EAAA6c,KAAA,EACA7c,EAAA4c,KAAA5c,EAAA4c,MAAA,EACA,MAAA6+C,KACAz7D,EAAA4c,MAAA6+C,EAAA37C,IAEA,MAAA27C,KACAz7D,EAAA6c,KAAA4+C,EAAA17C,IAEA,YAAA/f,KACAA,EAAAud,SAAAtM,EAAAwM,KAAAC,uBAGA1d,EAAAs3C,UACAt3C,EAAAs3C,QAAA,OAGA,IAAAvX,GAAA,EAKA,gBAAA5T,GAQA4T,EAAA5T,EAAA4T,YAPA,cAAA5T,IAAA,OAAAA,EAAAkO,YACA,QAAAlO,GAAAkO,YAAA,OAAAlO,EAAAkO,WAAAxnB,OACAktB,EAAA5T,EAAAkO,WAAAxnB,MAQAktB,IAAA/yB,QAAA,qBAAAA,QAAA,WAEA,IAAAgzB,GAAA,GAAA/uB,GAAAwM,KAAAsiB,EAAA//B,GACAuyE,EAAAvyC,EAAAsL,YAAAtL,EAAA5uB,OACAohE,GAAAxyC,EAAA5uB,OAAA4uB,EAAAqX,aAAArX,EAAAf,WAAAe,EAAA5uB,OACAqhE,EAAAD,EAAAD,EACAG,EAAA1yC,EAAAsL,YAAAmnC,EACAE,EAAA,CAiBA,OAXA,SAAA3yC,EAAAsX,UACAq7B,EAAA3yC,EAAAoL,WAAA,GAEA,UAAApL,EAAAsX,UACAq7B,GAAA3yC,EAAAoL,WAAA,GAEApL,EAAAluB,KACA8K,KAAAojB,EAAAgyB,UAAA2gB,EACA91D,IAAAmjB,EAAAiyB,SAAAygB,EAAA,EAAA1yC,EAAAziB,UAAA,IAAAyiB,EAAAmtC,mBAAAntC,EAAAf,aAGAe,GAYA/uB,EAAAwM,KAAAuB,WAAA,SAAA3Q,EAAAiL,GACA,GAAA0mB,GAAA,GAAA/uB,GAAAwM,KAAApP,EAAA2xB,KAAA/V,EAAA5b,GAEA,OADAiL,MAAA0mB,GACAA,GAGA/uB,EAAA6G,KAAAiJ,gBAAA9P,EAAAwM,OAECngB,SAGD,WAEA,GAAA2sB,GAAAhZ,OAAA6G,KAAAzJ,OAAA4b,KAgDAhZ,QAAA2hE,MAAA3hE,OAAA6G,KAAAiT,YAAA9Z,OAAAwM,KAAAxM,OAAAuH,YAOAxE,KAAA,SAOA6+D,eAAA,EAOAC,aAAA,EAOAj4B,eAAA,uBAOAgJ,WAAA,EAOAkvB,UAAA,EAOAC,mBAAA,yBAOApF,YAAA,EAOAqF,YAAA,OAOAC,YAAA,IAOAC,eAAA,IAQAplD,OAAA,KAOAqlD,SAAA,EAKAC,SAAA,QAKAC,sBAAA,EAKAC,oBAAA,KAKAC,uBAAA,EAKAC,kBAQAzoD,WAAA,SAAAgV,EAAAhgC,GACAiH,KAAA8mB,OAAA/tB,IAAA+tB,cACA9mB,KAAA0jB,UAAA,aAAAqV,EAAAhgC,GACAiH,KAAAysE,gBAMAhG,YAAA,WACAzmE,KAAA0jB,UAAA,eACA1jB,KAAAwsE,mBAMA3D,cAAA,WACA,IAAA7oE,KAAA8mB,OACA,QAEA,IAAA/lB,GAAAf,KAAA8mB,MAEA,QAAA6oB,KAAA5uC,GACA,OAAA6uC,KAAA7uC,GAAA4uC,GAEA,OAAA+8B,KAAA3rE,GAAA4uC,GAAAC,GACA,QAIA,WAOA+8B,kBAAA,SAAAj/D,GACAA,EAAAuF,KAAAS,IAAAhG,EAAA,GACA1N,KAAA4sE,eAAA,iBAAAl/D,IAOAm/D,gBAAA,SAAAn/D,GACAA,EAAAuF,KAAAQ,IAAA/F,EAAA1N,KAAA+4B,KAAA78B,QACA8D,KAAA4sE,eAAA,eAAAl/D,IAQAk/D,eAAA,SAAAxyD,EAAA1M,GACA1N,KAAAoa,KAAA1M,IACA1N,KAAA8sE,wBACA9sE,KAAAoa,GAAA1M,GAEA1N,KAAA+sE,mBAOAD,sBAAA,WACA9sE,KAAAmR,KAAA,qBACAnR,KAAA+J,QAAA/J,KAAA+J,OAAAoH,KAAA,0BAAiExG,OAAA3K,QASjEgtE,mBAAA,SAAAC,EAAAC,GAEA,OAAArzE,UAAAqC,OAAA,CAEA,OADA4qB,MACA7qB,EAAAgxE,EAAgChxE,EAAAixE,EAAcjxE,IAC9C6qB,EAAAlvB,KAAAoI,KAAAgtE,mBAAA/wE,GAEA,OAAA6qB,GAGA,GAAAqmD,GAAAntE,KAAAotE,oBAAAH,GACAn/D,EAAA9N,KAAAqtE,qBAAAF,EAAAnF,UAAAmF,EAAA/yC,UAEA,OAAAtsB,QASAw/D,mBAAA,SAAAxmD,GACA,GAAA9mB,KAAA4rE,iBAAA5rE,KAAA6rE,aACA7rE,KAAAutE,cAAAvtE,KAAA4rE,eAAA9kD,OAGA,QAAA7qB,GAAA+D,KAAA4rE,eAAyC3vE,EAAA+D,KAAA6rE,aAAuB5vE,IAChE+D,KAAAutE,cAAAtxE,EAAA6qB,EAKA,OADA9mB,MAAA2pE,kBAAA,EACA3pE,MAMAutE,cAAA,SAAA7/D,EAAAoZ,GACA,GAAAqmD,GAAAntE,KAAAotE,oBAAA1/D,EAEA1N,MAAAwtE,cAAAL,EAAAnF,YACAhoE,KAAAytE,cAAAN,EAAAnF,cAGAhoE,KAAAqtE,qBAAAF,EAAAnF,UAAAmF,EAAA/yC,YACAp6B,KAAA0tE,qBAAAP,EAAAnF,UAAAmF,EAAA/yC,cAGApwB,OAAA6G,KAAAzJ,OAAA0b,OAAA9iB,KAAAqtE,qBAAAF,EAAAnF,UAAAmF,EAAA/yC,WAAAtT,IAOAsoB,QAAA,SAAA32B,GACAzY,KAAA2tE,SAAA3tE,KAAAkK,MACAlK,KAAA4tE,UAAA5tE,KAAAmK,OACAnK,KAAA0jB,UAAA,UAAAjL,GACAzY,KAAAyY,MAGAzY,KAAA6tE,qBACA7tE,KAAA8tE,2BAMAA,wBAAA,WACA,GAAA9tE,KAAAi3C,QAAAj3C,KAAA48C,UAAA,CAGA,GACAmxB,GAAAt1D,EADApR,EAAArH,KAAA+4B,KAAA39B,MAAA,GAEA4E,MAAA+J,OAAAokC,YACA11B,EAAAzY,KAAA+J,OAAAokC,WACA11B,EAAAU,OACAV,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAA+J,OAAAs8B,mBACArmC,KAAA60B,UAAApc,GACAzY,KAAAmwB,iBAAA1X,EAAAoc,UAAAj7B,MAAA6e,EAAAzY,KAAAmwB,iBACAnwB,KAAAguE,eAAAv1D,KAGAA,EAAAzY,KAAAyY,IACAA,EAAAU,QAEAnZ,KAAA4rE,iBAAA5rE,KAAA6rE,cACAkC,EAAA/tE,KAAAiuE,qBAAA5mE,EAAA,UACArH,KAAAkuE,aAAAH,EAAAt1D,KAGAs1D,EAAA/tE,KAAAiuE,qBAAA5mE,EAAA,aACArH,KAAAmuE,gBAAA9mE,EAAA0mE,EAAAt1D,IAGAA,EAAAc,YAGAy0D,eAAA,SAAAv1D,GAEA,GAAAvO,GAAAlK,KAAA2tE,SAAA,EAAAxjE,EAAAnK,KAAA4tE,UAAA,CACAn1D,GAAAoxB,WAAA3/B,EAAA,GAAAC,EAAA,EAAAD,EAAAC,IAMAijE,oBAAA,SAAAxB,GACA,mBAAAA,KACAA,EAAA5rE,KAAA4rE,eAGA,QADAv6D,GAAArR,KAAAumE,WAAArqE,OACAD,EAAA,EAAqBA,EAAAoV,EAASpV,IAAA,CAC9B,GAAA2vE,GAAA5rE,KAAAumE,WAAAtqE,GAAAC,OACA,OACA8rE,UAAA/rE,EACAm+B,UAAAwxC,EAGAA,IAAA5rE,KAAAumE,WAAAtqE,GAAAC,OAAA,EAEA,OACA8rE,UAAA/rE,EAAA,EACAm+B,UAAAp6B,KAAAumE,WAAAtqE,EAAA,GAAAC,OAAA0vE,EAAA5rE,KAAAumE,WAAAtqE,EAAA,GAAAC,OAAA0vE,IAUAwC,oBAAA,SAAApG,EAAA5tC,GACA,GAAAtsB,GAAA9N,KAAAqtE,qBAAArF,EAAA,IAAA5tC,EAAA,EAAAA,EAAA,EAEA,QACA9jB,SAAAxI,KAAAwI,UAAAtW,KAAAsW,SACAvF,KAAAjD,KAAAiD,MAAA/Q,KAAA+Q,KACAk1D,oBAAAn4D,KAAAm4D,qBAAAjmE,KAAAimE,oBACAjM,eAAAlsD,KAAAksD,gBAAAh6D,KAAAg6D,eACAn9C,WAAA/O,KAAA+O,YAAA7c,KAAA6c,WACAkb,WAAAjqB,KAAAiqB,YAAA/3B,KAAA+3B,WACAD,UAAAhqB,KAAAgqB,WAAA93B,KAAA83B,UACAlC,OAAA9nB,KAAA8nB,QAAA51B,KAAA41B,OACAwa,YAAAtiC,KAAAsiC,aAAApwC,KAAAowC,cAUAi+B,uBAAA,SAAArG,EAAA5tC,GACA,GAAAtsB,GAAA9N,KAAAqtE,qBAAArF,EAAA,IAAA5tC,EAAA,EAAAA,EAAA,EACA,OAAAtsB,MAAAwI,SAAAxI,EAAAwI,SAAAtW,KAAAsW,UASAg4D,oBAAA,SAAAtG,EAAA5tC,GACA,GAAAtsB,GAAA9N,KAAAqtE,qBAAArF,EAAA,IAAA5tC,EAAA,EAAAA,EAAA,EACA,OAAAtsB,MAAAiD,KAAAjD,EAAAiD,KAAA/Q,KAAAgsE,aASAiC,qBAAA,SAAA5mE,EAAAknE,GAKA,GAAA54D,GAAA1C,KAAAgsB,MAAAj/B,KAAA2oE,kBACA/yD,EAAA5V,KAAA4oE,gBAEAoB,EAAAhqE,KAAAwuE,4BACAnnE,EAAAknE,EAEA,QACA54D,OACAC,MACA6yD,WAAAuB,EAAAr0D,KAAAq0D,EAAAyE,SACAC,UAAA1E,EAAAp0D,MAOA44D,4BAAA,SAAAnnE,EAAAknE,GACA,GAAAvuE,KAAA6tE,mBAAA,OAAA7tE,MAAA6tE,kBACA,MAAA7tE,MAAA6tE,iBASA,QAFAE,GALA1E,EAAA,EACArB,EAAA,EACA5tC,EAAA,EACAs0C,EAAA,EACAjG,EAAA,EAGAxsE,EAAA,EAAqBA,EAAA+D,KAAA4rE,eAAyB3vE,IAC9C,OAAAoL,EAAApL,IACAwsE,EAAA,EACAiG,GAAA1uE,KAAAqnE,iBAAArnE,KAAAyY,IAAAuvD,GAEAA,IACA5tC,EAAA,IAGAquC,GAAAzoE,KAAA2uE,gBAAA3uE,KAAAyY,IAAApR,EAAApL,GAAA+rE,EAAA5tC,GACAA,KAGAivC,EAAArpE,KAAAkpE,mBAAAlpE,KAAAunE,cAAAvnE,KAAAyY,IAAAuvD,GAeA,OAbA,WAAAuG,IACAG,IAAA,EAAA1uE,KAAAkmE,mBAAAlmE,KAAAqnE,iBAAArnE,KAAAyY,IAAAuvD,GAAAhoE,KAAAg4B,WACAh4B,KAAAquE,uBAAArG,EAAA5tC,IAAA,EAAAp6B,KAAAkmE,oBAEA,IAAAlmE,KAAA8lE,aAAA1rC,IAAAp6B,KAAAumE,WAAAyB,GAAA9rE,SACAusE,GAAAzoE,KAAA6nE,0BAEAkG,GACAn4D,IAAA84D,EACA/4D,KAAA8yD,EAAA,EAAAA,EAAA,EACAgG,SAAApF,GAEArpE,KAAA6tE,kBAAAE,EACA/tE,KAAA6tE,mBAQAK,aAAA,SAAAH,EAAAt1D,GAEA,GAAAm2D,GAAA5uE,KAAAotE,sBACApF,EAAA4G,EAAA5G,UACA5tC,EAAAw0C,EAAAx0C,UACAy0C,EAAA7uE,KAAAquE,uBAAArG,EAAA5tC,GACAquC,EAAA,IAAAT,GAAA,IAAA5tC,EACAp6B,KAAAkpE,mBAAAlpE,KAAAunE,cAAA9uD,EAAAuvD,IACA+F,EAAAtF,WACA/iB,EAAA1lD,KAAAgb,OAAAhb,KAAA+J,OAAA++B,UACA69B,EAAA3mE,KAAA2mE,YAAAjhB,CAEAjtC,GAAA8xB,UAAAvqC,KAAAsuE,oBAAAtG,EAAA5tC,GACA3hB,EAAA45B,YAAAryC,KAAA8uE,cAAA,EAAA9uE,KAAAqsE,sBAEA5zD,EAAA+xB,SACAujC,EAAAp4D,KAAA8yD,EAAA9B,EAAA,EACAoH,EAAAn4D,IAAAm4D,EAAAW,UACA/H,EACAkI,IASAV,gBAAA,SAAA9mE,EAAA0mE,EAAAt1D,GAEAA,EAAA8xB,UAAAvqC,KAAA4zC,cAMA,QAJAvnB,GAAArsB,KAAAotE,oBAAAptE,KAAA4rE,gBACAlwE,EAAAsE,KAAAotE,oBAAAptE,KAAA6rE,cACAkD,EAAA1iD,EAAA27C,UACAgH,EAAAtzE,EAAAssE,UACA/rE,EAAA8yE,EAA6B9yE,GAAA+yE,EAAc/yE,IAAA,CAC3C,GAAAgzE,GAAAjvE,KAAAkpE,mBAAAlpE,KAAAunE,cAAA9uD,EAAAxc,KAAA,EACA+7B,EAAAh4B,KAAAqnE,iBAAArnE,KAAAyY,IAAAxc,GACAizE,EAAA,EAAAC,EAAA,EAAA1a,EAAAz0D,KAAAumE,WAAAtqE,EAEA,IAAAA,IAAA8yE,EAAA,CACA,OAAAlqE,GAAA,EAAAwM,EAAAojD,EAAAv4D,OAA4C2I,EAAAwM,EAASxM,IACrDA,GAAAwnB,EAAA+N,YAAAn+B,IAAA+yE,GAAAnqE,EAAAnJ,EAAA0+B,aACA+0C,GAAAnvE,KAAA2uE,gBAAAl2D,EAAAg8C,EAAA5vD,GAAA5I,EAAA4I,IAEAA,EAAAwnB,EAAA+N,YACA60C,GAAAjvE,KAAA2uE,gBAAAl2D,EAAAg8C,EAAA5vD,GAAA5I,EAAA4I,GAGAA,KAAA4vD,EAAAv4D,SACAizE,GAAAnvE,KAAA6nE,8BAGA,IAAA5rE,EAAA8yE,GAAA9yE,EAAA+yE,EACAG,GAAAnvE,KAAAunE,cAAA9uD,EAAAxc,IAAA,MAEA,IAAAA,IAAA+yE,EAAA,CACA,OAAAI,GAAA,EAAAC,EAAA3zE,EAAA0+B,UAAiDg1C,EAAAC,EAAYD,IAC7DD,GAAAnvE,KAAA2uE,gBAAAl2D,EAAAg8C,EAAA2a,GAAAnzE,EAAAmzE,EAEA1zE,GAAA0+B,YAAAq6B,EAAAv4D,SACAizE,GAAAnvE,KAAA6nE,0BAGAqH,EAAAl3C,GACAh4B,KAAAg4B,WAAA,GAAA/7B,IAAA+yE,GAAAhvE,KAAAg4B,WAAA,KACAA,GAAAh4B,KAAAg4B,YAEAvf,EAAA+xB,SACAujC,EAAAp4D,KAAAs5D,EACAlB,EAAAn4D,IAAAm4D,EAAAW,UACAS,EAAA,EAAAA,EAAA,EACAn3C,GAEA+1C,EAAAW,WAAAQ,IAcAzH,aAAA,SAAAhsE,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,EAAAoyD,EAAAG,GAEA,GAAAnoE,KAAA6oE,gBACA,MAAA7oE,MAAAsvE,iBAAA7zE,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,EAGAuyD,MAAA,CAGA,IACAoH,GACAC,EAFAx3C,EAAAh4B,KAAAqnE,iBAAA5uD,EAAAuvD,GAGAyH,EAAA,EAEAh3D,GAAAU,OACAvD,GAAAoiB,EAAAh4B,KAAAg4B,WAAAh4B,KAAAkmE,iBACA,QAAAjqE,GAAAksE,EAAA92D,EAAAojD,EAAAv4D,OAAAisE,EAA8DlsE,GAAAoV,EAAUpV,IACxEszE,KAAAvvE,KAAAouE,oBAAApG,EAAA/rE,GACAuzE,EAAAxvE,KAAAouE,oBAAApG,EAAA/rE,EAAA,IAEA+D,KAAA0vE,iBAAAH,EAAAC,IAAAvzE,IAAAoV,KACArR,KAAA2vE,YAAAl0E,EAAAgd,EAAAuvD,EAAA/rE,EAAA,EAAAwzE,EAAA95D,EAAAC,EAAAoiB,GACAy3C,EAAA,GACAF,EAAAC,GAEAC,GAAAhb,EAAAx4D,EAAAksE,EAEA1vD,GAAAc,WAWA+1D,iBAAA,SAAA7zE,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,GAEA,aAAAna,GAAAuE,KAAA+Q,MACA/Q,KAAA0jB,UAAA,eAAAjoB,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,GAEA,eAAAna,IAAAuE,KAAA41B,QAAA51B,KAAAowC,YAAA,GAAApwC,KAAA4vE,sBACA5vE,KAAA0jB,UAAA,eAAAjoB,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,IAeA+5D,YAAA,SAAAl0E,EAAAgd,EAAAuvD,EAAA/rE,EAAAk+B,EAAAxkB,EAAAC,EAAAoiB,GACA,GAAA63C,GAAAhB,EAAAiB,EAAAC,EAEAzmD,EAAA0wC,EAAA3yD,EAAAugE,EAAAoI,EADAC,EAAAjwE,KAAAqtE,qBAAArF,EAAA/rE,EAwBA,IArBAg0E,GACApB,EAAA7uE,KAAAkwE,iBAAAz3D,EAAA0hB,EAAA6tC,EAAA/rE,GACA8zE,EAAAE,EAAAr6C,OACAk6C,EAAAG,EAAAl/D,KACAipD,EAAAiW,EAAAjW,gBAGA6U,EAAA7uE,KAAAsW,SAGAy5D,MAAA/vE,KAAA41B,SAAA,eAAAn6B,EACAq0E,MAAA9vE,KAAA+Q,OAAA,aAAAtV,EAEAw0E,GAAAx3D,EAAAU,OAEA02D,EAAA7vE,KAAAmwE,yBAAA13D,EAAA0hB,EAAA6tC,EAAA/rE,EAAAg0E,GAAA,MACAjW,KAAAh6D,KAAAg6D,eAEAiW,KAAAhK,qBACAjmE,KAAA+pD,cAAAtxC,GAEA,IAAAzY,KAAA8lE,YAAA,CACA8B,EAAA5nE,KAAA6nE,yBACAxgE,EAAA8yB,EAAA/+B,MAAA,IACAy0E,EAAA,CACA,QAAAnI,GAAA7iE,EAAA,EAAAwM,EAAAhK,EAAAnL,OAAiD2I,EAAAwM,EAASxM,IAC1D6iE,EAAArgE,EAAAxC,GACAirE,GAAAr3D,EAAA23D,SAAA1I,EAAA/xD,EAAAk6D,EAAAj6D,GACAm6D,GAAAt3D,EAAA43D,WAAA3I,EAAA/xD,EAAAk6D,EAAAj6D,GACAo6D,EAAAv3D,EAAAqvD,YAAAJ,GAAAx9D,MAAA09D,EACAiI,GAAAG,EAAA,EAAAA,EAAA,MAIAF,IAAAr3D,EAAA23D,SAAAj2C,EAAAxkB,EAAAC,GACAm6D,GAAAt3D,EAAA43D,WAAAl2C,EAAAxkB,EAAAC,IAGAokD,GAAA,KAAAA,KACA1wC,EAAAtpB,KAAAkmE,kBAAAluC,EAAAh4B,KAAAg4B,WACAh4B,KAAAswE,sBAAA73D,EAAAuhD,EAAArkD,EAAAC,EAAA0T,EAAAumD,EAAAhB,IAGAoB,GAAAx3D,EAAAc,UACAd,EAAAW,UAAAy2D,EAAA,IAQAH,iBAAA,SAAAH,EAAAC,GACA,MAAAD,GAAAx+D,OAAAy+D,EAAAz+D,MACAw+D,EAAAj5D,WAAAk5D,EAAAl5D,UACAi5D,EAAAtJ,sBAAAuJ,EAAAvJ,qBACAsJ,EAAAvV,iBAAAwV,EAAAxV,gBACAuV,EAAA1yD,aAAA2yD,EAAA3yD,YACA0yD,EAAAx3C,aAAAy3C,EAAAz3C,YACAw3C,EAAAz3C,YAAA03C,EAAA13C,WACAy3C,EAAA35C,SAAA45C,EAAA55C,QACA25C,EAAAn/B,cAAAo/B,EAAAp/B,aAQAkgC,sBAAA,SAAA73D,EAAAuhD,EAAArkD,EAAAC,EAAA0T,EAAAumD,EAAAhB,GAEA,GAAA7U,EAAA,CAIA,GAMA/9D,GAAAs0E,EANAC,EAAA3B,EAAA,GACA4B,GACAC,UAAA96D,EAAAi5D,EAAA,GACA8B,eAAA/6D,EAAAi5D,GAAA7uE,KAAAkmE,kBAAAlmE,KAAAmmE,cAAA,GAAAqK,EACAI,SAAAh7D,GAAA5V,KAAAmmE,cAAAnmE,KAAAkmE,mBAAA2I,GAEAgC,GAAA,sCAEA,KAAA50E,EAAA,EAAiBA,EAAA40E,EAAA30E,OAAwBD,IACzCs0E,EAAAM,EAAA50E,GACA+9D,EAAA91D,QAAAqsE,OACA93D,EAAA+xB,SAAA70B,EAAA86D,EAAAF,GAAAV,EAAAW,KAcAzI,gBAAA,SAAAtsE,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,EAAAoyD,GAGAhoE,KAAA6oE,kBACAjzD,GAAA5V,KAAAsW,UAAAtW,KAAAkmE,kBAAA,MAEAlmE,KAAA0jB,UAAA,kBAAAjoB,EAAAgd,EAAAg8C,EAAA9+C,EAAAC,EAAAoyD,IAOAjB,sBAAA,SAAAtuD,GACA,GAAAzY,KAAA6oE,gBACA,MAAA7oE,MAAA0jB,UAAA,wBAAAjL,IAQA2wD,2BAAA,SAAA3wD,GACAzY,KAAA0jB,UAAA,6BAAAjL,EAQA,QANAuwD,GACA36B,EAAAg7B,EAGA5U,EAAAt6B,EAAArsB,EAJAw7D,EAAA,EAEAb,EAAAzoE,KAAA2oE,iBACA+F,EAAA1uE,KAAA4oE,gBAGA3sE,EAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAmDD,EAAAoV,EAASpV,IAI5D,GAHA+sE,EAAAhpE,KAAAqnE,iBAAA5uD,EAAAxc,GACAw4D,EAAAz0D,KAAAumE,WAAAtqE,GAEA,KAAAw4D,GAAAz0D,KAAA8mB,QAAA9mB,KAAAwtE,cAAAvxE,GAAA,CAKAoyC,EAAAruC,KAAAunE,cAAA9uD,EAAAxc,GACAotE,EAAArpE,KAAAkpE,mBAAA76B,EAEA,QAAAxpC,GAAA,EAAAoc,EAAAwzC,EAAAv4D,OAA2C2I,EAAAoc,EAAUpc,IACrDiJ,EAAA9N,KAAAqtE,qBAAApxE,EAAA4I,GACAiJ,KAAAm4D,sBAGA9rC,EAAAs6B,EAAA5vD,GAEA4T,EAAA8xB,UAAAz8B,EAAAm4D,oBAEAxtD,EAAA+xB,SACAi+B,EAAAY,EAAArpE,KAAA8wE,mBAAAr4D,EAAAxc,EAAA4I,GACA6pE,EAAApF,EACAtpE,KAAA2uE,gBAAAl2D,EAAA0hB,EAAAl+B,EAAA4I,GAAA,EACAmkE,EAAAhpE,KAAAg4B,YAGAsxC,IAAAN,MAvBAM,IAAAN,GA8BA+H,cAAA,SAAA52C,EAAA62C,GACA,MAAA72C,GACA62C,EAAA16D,SACA06D,EAAAj5C,WACAi5C,EAAAl5C,WAQAm5C,cAAA,SAAAp0D,GAIA,MAHA7S,QAAAoG,gBAAAyM,KACA7S,OAAAoG,gBAAAyM,OAEA7S,OAAAoG,gBAAAyM,IAWAszD,yBAAA,SAAA13D,EAAA0hB,EAAA6tC,EAAA5tC,EAAA61C,GACA,GAEA/lE,GAAAgnE,EAAA9gE,EAFA+gE,EAAAlB,GAAAjwE,KAAAqtE,qBAAArF,EAAA5tC,GACA42C,EAAAhuD,EAAAmuD,EASA,IANAnxE,KAAAoxE,iBAAAJ,GACA5gE,EAAApQ,KAAAixE,cAAAD,EAAAn0D,YACAq0D,EAAAlxE,KAAA+wE,cAAA52C,EAAA62C,IAIAG,GAAA/gE,EAAA8gE,IAAAlxE,KAAAmsE,QACA,MAAA/7D,GAAA8gE,EAGA,iBAAAF,GAAA9rC,SACA8rC,EAAA9rC,OAAA,GAAAl7B,QAAA66B,OAAAmsC,EAAA9rC,QAGA,IAAAn0B,GAAAigE,EAAAjgE,MAAA/Q,KAAA+Q,IAwBA,OAvBA0H,GAAA8xB,UAAAx5B,EAAAyyB,OACAzyB,EAAAyyB,OAAA/qB,EAAAzY,MACA+Q,EAEAigE,EAAAp7C,SACAnd,EAAA21B,YAAA4iC,EAAAp7C,QAAAo7C,EAAAp7C,OAAA4N,OACAwtC,EAAAp7C,OAAA4N,OAAA/qB,EAAAzY,MACAgxE,EAAAp7C,QAGAnd,EAAA41B,UAAA2iC,EAAA5gC,aAAApwC,KAAAowC,YACA33B,EAAA8f,KAAAv4B,KAAAmnE,oBAAAhmE,KAAA6vE,GAIAA,EAAA9rC,SACA8rC,EAAAh2D,OAAAhb,KAAAgb,OACAg2D,EAAA/1D,OAAAjb,KAAAib,OACA+1D,EAAAjnE,OAAA/J,KAAA+J,OACAinE,EAAAhoB,iBAAAhpD,KAAAgpD,iBACAhpD,KAAAwuC,WAAArtC,KAAA6vE,EAAAv4D,IAGAzY,KAAAmsE,SAAA/7D,EAAA8gE,GAMA9gE,EAAA8gE,IALAhnE,EAAAuO,EAAAqvD,YAAA3tC,GAAAjwB,MACAlK,KAAAmsE,UAAA/7D,EAAA8gE,GAAAhnE,GACAA,IAUAknE,iBAAA,SAAAJ,GACAA,EAAAn0D,aACAm0D,EAAAn0D,WAAA7c,KAAA6c,YAEAm0D,EAAA16D,WACA06D,EAAA16D,SAAAtW,KAAAsW,UAEA06D,EAAAj5C,aACAi5C,EAAAj5C,WAAA/3B,KAAA+3B,YAEAi5C,EAAAl5C,YACAk5C,EAAAl5C,UAAA93B,KAAA83B,YAUAu1C,qBAAA,SAAArF,EAAA5tC,EAAAi3C,GACA,MAAAA,GACArxE,KAAA8mB,OAAAkhD,IAAAhoE,KAAA8mB,OAAAkhD,GAAA5tC,GACApX,EAAAhjB,KAAA8mB,OAAAkhD,GAAA5tC,OAIAp6B,KAAA8mB,OAAAkhD,IAAAhoE,KAAA8mB,OAAAkhD,GAAA5tC,GAAAp6B,KAAA8mB,OAAAkhD,GAAA5tC,GAAA,MASAszC,qBAAA,SAAA1F,EAAA5tC,EAAAtsB,GACA9N,KAAA8mB,OAAAkhD,GAAA5tC,GAAAtsB,GASAwjE,wBAAA,SAAAtJ,EAAA5tC,SACAp6B,MAAA8mB,OAAAkhD,GAAA5tC,IAOAozC,cAAA,SAAAxF,GACA,MAAAhoE,MAAA8mB,OAAAkhD,IAQAyF,cAAA,SAAAzF,EAAAl6D,GACA9N,KAAA8mB,OAAAkhD,GAAAl6D,GAOAyjE,iBAAA,SAAAvJ,SACAhoE,MAAA8mB,OAAAkhD,IAOA2G,gBAAA,SAAAl2D,EAAA0hB,EAAA6tC,EAAA5tC,GACA,IAAAp6B,KAAAwxE,cAAA,YAAAxxE,KAAAi6D,WAAAj6D,KAAAgmE,iBAAA7qE,KAAAg/B,GACA,MAAAn6B,MAAAyxE,iBAAAh5D,EAAAuvD,EAEAvvD,GAAAU,MACA,IAAAjP,GAAAlK,KAAAmwE,yBAAA13D,EAAA0hB,EAAA6tC,EAAA5tC,EAKA,OAJA,KAAAp6B,KAAA8lE,cACA57D,GAAAlK,KAAA6nE,0BAEApvD,EAAAc,UACArP,EAAA,EAAAA,EAAA,GASAgmE,iBAAA,SAAAz3D,EAAAuvD,EAAA5tC,GACA,GAAAtsB,GAAA9N,KAAAqtE,qBAAArF,EAAA5tC,EACA,OAAAtsB,MAAAwI,SAAAxI,EAAAwI,SAAAtW,KAAAsW,UASAw6D,mBAAA,SAAAr4D,EAAAuvD,EAAA5tC,GACA,GAAAn+B,GAAAk+B,EAAAjwB,EAAA,CACA,KAAAjO,EAAA,EAAiBA,EAAAm+B,EAAen+B,IAChCk+B,EAAAn6B,KAAAumE,WAAAyB,GAAA/rE,GACAiO,GAAAlK,KAAA2uE,gBAAAl2D,EAAA0hB,EAAA6tC,EAAA/rE,EAEA,OAAAiO,IASA2/D,aAAA,SAAApxD,EAAAuvD,GACAhoE,KAAAwxE,cAAA,CACA,IAAAtnE,GAAAlK,KAAA8wE,mBAAAr4D,EAAAuvD,EAAAhoE,KAAAumE,WAAAyB,GAAA9rE,OAKA,OAJA,KAAA8D,KAAA8lE,cACA57D,GAAAlK,KAAA6nE,0BAEA7nE,KAAAwxE,cAAA,EACAtnE,EAAA,EAAAA,EAAA,GAQAunE,iBAAA,SAAAh5D,EAAAuvD,GACA,GAAAhoE,KAAAwsE,eAAAxE,GACA,MAAAhoE,MAAAwsE,eAAAxE,EAEA,IAAAvT,GAAAz0D,KAAAumE,WAAAyB,GACAI,EAAApoE,KAAAqoE,iBAAA5vD,EAAAg8C,EAAAuT,EAAA,GACAM,EAAAtoE,KAAAkK,MAAAk+D,EACAG,EAAA9T,EAAAv4D,OAAAu4D,EAAA1uD,QAAA/F,KAAAgmE,iBAAA,IAAA9pE,OACAgO,EAAA+I,KAAAS,IAAA40D,EAAAC,EAAA9vD,EAAAqvD,YAAA,KAAA59D,MAEA,OADAlK,MAAAwsE,eAAAxE,GAAA99D,EACAA,GAUAm+D,iBAAA,SAAA5vD,EAAAg8C,EAAAuT,EAAAG,GAGA,OAFAj+D,GAAA,EAEAkwB,EAAA,EAA6BA,EAAAq6B,EAAAv4D,OAAyBk+B,IAAA,CACtD,GAAAD,GAAAs6B,EAAAr6B,EAEAD,GAAAp2B,MAAA,QACAmG,GAAAlK,KAAA2uE,gBAAAl2D,EAAA0hB,EAAA6tC,EAAA5tC,EAAA+tC,IAIA,MAAAj+D,IAOAm9D,iBAAA,SAAA5uD,EAAAuvD,GACA,GAAAhoE,KAAAwpE,cAAAxB,GACA,MAAAhoE,MAAAwpE,cAAAxB,EAMA,QAHAvT,GAAAz0D,KAAAumE,WAAAyB,GACAiB,EAAAjpE,KAAAkwE,iBAAAz3D,EAAAuvD,EAAA,GAEA/rE,EAAA,EAAAoV,EAAAojD,EAAAv4D,OAAwCD,EAAAoV,EAASpV,IAAA,CACjD,GAAAy1E,GAAA1xE,KAAAkwE,iBAAAz3D,EAAAuvD,EAAA/rE,EACAy1E,GAAAzI,IACAA,EAAAyI,GAIA,MADA1xE,MAAAwpE,cAAAxB,GAAAiB,EAAAjpE,KAAAg4B,WAAAh4B,KAAAmmE,cACAnmE,KAAAwpE,cAAAxB,IAOApB,eAAA,SAAAnuD,GAEA,OADAuf,GAAA7tB,EAAA,EACAlO,EAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAmDD,EAAAoV,EAASpV,IAC5D+7B,EAAAh4B,KAAAqnE,iBAAA5uD,EAAAxc,GACAkO,GAAAlO,IAAAoV,EAAA,EAAA2mB,EAAAh4B,KAAAg4B,YAEA,OAAA7tB,IASAi5B,SAAA,SAAAmI,GACA,GAA4BtvC,GAAA4I,EAAAo1B,EAA5B03C,IACA,KAAA11E,IAAA+D,MAAA8mB,OAAA,CACAmT,EAAAj6B,KAAA8mB,OAAA7qB,GACA01E,EAAA11E,KACA,KAAA4I,IAAAo1B,GACA03C,EAAA11E,GAAA4I,GAAAme,EAAAiX,EAAAp1B,IAGA,MAAAmF,QAAA6G,KAAAzJ,OAAA0b,OAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACAzkB,OAAA6qD,OAaA3nE,OAAA2hE,MAAA5zD,WAAA,SAAA3Q,EAAAiL,GACA,GAAAu/D,GAAA,GAAA5nE,QAAA2hE,MAAAvkE,EAAA2xB,KAAA/V,EAAA5b,GAEA,OADAiL,MAAAu/D,GACAA,MAKA,WAEA,GAAA5uD,GAAAhZ,OAAA6G,KAAAzJ,OAAA4b,KAEAhZ,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA2hE,MAAAzqE,WAKAurE,aAAA,WACAzsE,KAAA6xE,mBACA7xE,KAAA8xE,qBACA9xE,KAAA+xE,8BACA/xE,KAAAgyE,6BAMAC,oBAAA,WACAjyE,KAAAzE,GAAA,sBAEA,GAAAioB,GAAAxjB,IACAytB,YAAA,WACAjK,EAAA0uD,UAAA,GACS,QAOTL,iBAAA,WACA,GAAAruD,GAAAxjB,IACAA,MAAAzE,GAAA,mBACAyE,KAAA+J,SAAA/J,KAAA+J,OAAAooE,oBACAnyE,KAAA+J,OAAAooE,mBAAA,EACAnyE,KAAAoyE,uBAOA5uD,EAAAzZ,SACAyZ,EAAAzZ,OAAAsoE,gBAAA7uD,EAAAzZ,OAAAsoE,oBACA7uD,EAAAzZ,OAAAsoE,gBAAAz6E,KAAA4rB,OAKAsuD,mBAAA,WACA,GAAAtuD,GAAAxjB,IACAA,MAAAzE,GAAA,qBAEAioB,EAAAzZ,SACAyZ,EAAAzZ,OAAAsoE,gBAAA7uD,EAAAzZ,OAAAsoE,oBACAroE,OAAA6G,KAAA0C,gBAAAiQ,EAAAzZ,OAAAsoE,gBAAA7uD,OAQA4uD,oBAAA,WACA,GAAA5uD,GAAAxjB,IAEAA,MAAA+J,OAAAxO,GAAA,+BACAyO,OAAA2hE,MAAAzqE,UAAAoxE,oBAAA9uD,EAAAzZ,UAGA/J,KAAA+J,OAAAxO,GAAA,sBACAioB,EAAAzZ,OAAAsoE,iBACA7uD,EAAAzZ,OAAAsoE,gBAAAl5E,QAAA,SAAA4H,GACAA,EAAA+tE,eAAA,MAKA9uE,KAAA+J,OAAAxO,GAAA,6BACAyO,OAAA2hE,MAAAzqE,UAAAoxE,oBAAA9uD,EAAAzZ,WAOAwoE,MAAA,WACAvyE,KAAAwyE,kBAAAxyE,KAAAyyE,eAAAzyE,KAAA,EAAAA,KAAAksE,eAAA,oBAMAuG,eAAA,SAAA1xE,EAAA2xE,EAAApmD,EAAAqmD,GAEA,GAAAC,EA0BA,OAxBAA,IACAC,WAAA,EACApmD,MAAA,WACAzsB,KAAA6yE,WAAA,IAIA9xE,EAAAmrB,QAAA,wBAAAwmD,GACApmD,WACAb,WAAA,WACAmnD,EAAAC,WACA9xE,EAAA4xE,MAGAnmD,SAAA,WAEAzrB,EAAAgJ,QAAAhJ,EAAA6qE,iBAAA7qE,EAAA8qE,cACA9qE,EAAA+sE,2BAGArhD,MAAA,WACA,MAAAmmD,GAAAC,aAGAD,GAMAE,gBAAA,WAEA,GAAAtvD,GAAAxjB,IAEAA,MAAA+yE,iBACAC,aAAAhzE,KAAA+yE,iBAEA/yE,KAAA+yE,gBAAAtlD,WAAA,WACAjK,EAAAyvD,0BAAAzvD,EAAAivD,eAAAjvD,EAAA,EAAAxjB,KAAAksE,eAAA,YACO,MAMPgH,kBAAA,SAAAC,GACA,GAAA3vD,GAAAxjB,KACAozE,EAAAD,EAAA,EAAAnzE,KAAAisE,WAEAjsE,MAAAqzE,uBACArzE,KAAAqsE,sBAAA,EACArsE,KAAAszE,gBAAA7lD,WAAA,WACAjK,EAAA+uD,SACOa,IAMPC,qBAAA,WACA,GAAA3J,GAAA1pE,KAAAwyE,mBAAAxyE,KAAAizE,yBACAjzE,MAAAwyE,mBAAAxyE,KAAAwyE,kBAAA/lD,QACAzsB,KAAAizE,2BAAAjzE,KAAAizE,0BAAAxmD,QAEAumD,aAAAhzE,KAAA+yE,iBACAC,aAAAhzE,KAAAszE,iBAEAtzE,KAAAqsE,sBAAA,EAGA3C,GACA1pE,KAAA+J,QAAA/J,KAAA+J,OAAA6/B,aAAA5pC,KAAA+J,OAAAokC,YAAAnuC,KAAAyY,MAQA86D,UAAA,WACAvzE,KAAA4rE,eAAA,EACA5rE,KAAA6rE,aAAA7rE,KAAA+4B,KAAA78B,OACA8D,KAAA8sE,wBACA9sE,KAAA+sE,mBAOAyG,gBAAA,WACA,MAAAxzE,MAAA+4B,KAAA10B,MAAArE,KAAA4rE,eAAA5rE,KAAA6rE,eAQA4H,qBAAA,SAAAC,GACA,GAAApqD,GAAA,EAAA5b,EAAAgmE,EAAA,CAGA,IAAA1zE,KAAAosE,SAAAjxE,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,IACA,KAAA1N,KAAAosE,SAAAjxE,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,KACA4b,IACA5b,GAGA,WAAAvS,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,WACA4b,IACA5b,GAGA,OAAAgmE,GAAApqD,GAQAqqD,sBAAA,SAAAD,GACA,GAAApqD,GAAA,EAAA5b,EAAAgmE,CAGA,IAAA1zE,KAAAosE,SAAAjxE,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,IACA,KAAA1N,KAAAosE,SAAAjxE,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,KACA4b,IACA5b,GAGA,WAAAvS,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,OAAA1N,KAAA+4B,KAAA78B,QACAotB,IACA5b,GAGA,OAAAgmE,GAAApqD,GAQAsqD,qBAAA,SAAAF,GAGA,IAFA,GAAApqD,GAAA,EAAA5b,EAAAgmE,EAAA,GAEA,KAAAv4E,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,WACA4b,IACA5b,GAGA,OAAAgmE,GAAApqD,GAQAuqD,sBAAA,SAAAH,GAGA,IAFA,GAAApqD,GAAA,EAAA5b,EAAAgmE,GAEA,KAAAv4E,KAAA6E,KAAA+4B,KAAA/yB,OAAA0H,OAAA1N,KAAA+4B,KAAA78B,QACAotB,IACA5b,GAGA,OAAAgmE,GAAApqD,GAOAwqD,6BAAA,WAIA,OAHAC,GAAA/zE,KAAAwzE,kBACAQ,EAAA,EAEA/3E,EAAA,EAAAoV,EAAA0iE,EAAA73E,OAAgDD,EAAAoV,EAASpV,IACzD,OAAA83E,EAAA93E,IACA+3E,GAGA,OAAAA,IASAC,mBAAA,SAAArI,EAAAsI,GAKA,IAJA,GAAAxmE,GAAA1N,KAAAosE,SAAAjxE,KAAA6E,KAAA+4B,KAAA/yB,OAAA4lE,MAAA,EAAAA,EACAzxC,EAAAn6B,KAAA+4B,KAAA/yB,OAAA0H,GACAymE,EAAA,kBAEAA,EAAAh5E,KAAAg/B,IAAAzsB,EAAA,GAAAA,EAAA1N,KAAA+4B,KAAA78B,QACAwR,GAAAwmE,EACA/5C,EAAAn6B,KAAA+4B,KAAA/yB,OAAA0H,EAKA,OAHAymE,GAAAh5E,KAAAg/B,IAAA,OAAAA,IACAzsB,GAAA,IAAAwmE,EAAA,KAEAxmE,GAOA0mE,WAAA,SAAAxI,GACAA,KAAA5rE,KAAA4rE,cACA,IAAAyI,GAAAr0E,KAAAi0E,mBAAArI,MACA0I,EAAAt0E,KAAAi0E,mBAAArI,EAAA,EAEA5rE,MAAA4rE,eAAAyI,EACAr0E,KAAA6rE,aAAAyI,EACAt0E,KAAA8sE,wBACA9sE,KAAA+sE,kBACA/sE,KAAA8tE,2BAOAyG,WAAA,SAAA3I,GACAA,KAAA5rE,KAAA4rE,cACA,IAAAyI,GAAAr0E,KAAA4zE,qBAAAhI,GACA0I,EAAAt0E,KAAA6zE,sBAAAjI,EAEA5rE,MAAA4rE,eAAAyI,EACAr0E,KAAA6rE,aAAAyI,EACAt0E,KAAA8sE,wBACA9sE,KAAA+sE,mBAQAyH,aAAA,SAAAn4E,GACA,IAAA2D,KAAA48C,WAAA58C,KAAA8rE,SAoBA,MAhBA9rE,MAAA+J,QACA/J,KAAAsyE,oBAAAtyE,KAAA+J,QAGA/J,KAAA48C,WAAA,EAEA58C,KAAAy0E,mBAAAp4E,GACA2D,KAAA00E,eAAAC,QACA30E,KAAA+sE,kBACA/sE,KAAA40E,oBACA50E,KAAA60E,mBACA70E,KAAA80E,gBAAA90E,KAAA+4B,KAEA/4B,KAAAuyE,QACAvyE,KAAAmR,KAAA,mBAEAnR,KAAA+J,QAGA/J,KAAA+J,OAAAoH,KAAA,wBAAgDxG,OAAA3K,OAChDA,KAAA+J,OAAAoB,YACAnL,KAAA+0E,uBACA/0E,MALAA,MAQAsyE,oBAAA,SAAAvoE,GACAA,EAAAsoE,iBACAtoE,EAAAsoE,gBAAAl5E,QAAA,SAAA4H,GACAA,EAAAmxE,UAAA,EACAnxE,EAAA67C,WACA77C,EAAA+jD,iBASAiwB,qBAAA,WACA/0E,KAAA+J,OAAAxO,GAAA,aAAAyE,KAAAg1E,iBAAA1xD,KAAAtjB,QAMAg1E,iBAAA,SAAAj8E,GACA,GAAAiH,KAAA8uE,eAAA9uE,KAAA48C,UAAA,CAIA,GAAAy3B,GAAAr0E,KAAAi1E,6BAAAl8E,EAAAsD,GACA64E,EAAAl1E,KAAA4rE,eACAuJ,EAAAn1E,KAAA6rE,YACAwI,KAAAr0E,KAAAo1E,8BAGAf,EAAAr0E,KAAAo1E,6BACAp1E,KAAA4rE,eAAA5rE,KAAAo1E,4BACAp1E,KAAA6rE,aAAAwI,IAGAr0E,KAAA4rE,eAAAyI,EACAr0E,KAAA6rE,aAAA7rE,KAAAo1E,6BAEAp1E,KAAA4rE,iBAAAsJ,GAAAl1E,KAAA6rE,eAAAsJ,IACAn1E,KAAA8sE,wBACA9sE,KAAA+sE,kBACA/sE,KAAA8tE,8BAOA+G,iBAAA,WACA70E,KAAAg0C,YAAA,OAEAh0C,KAAA+J,SACA/J,KAAA+J,OAAAmqC,cAAAl0C,KAAA+J,OAAAkqC,WAAA,QAGAj0C,KAAAunD,YAAAvnD,KAAA+rE,mBAEA/rE,KAAAmoD,YAAAnoD,KAAAq3C,YAAA,EACAr3C,KAAAqoD,cAAAroD,KAAAsoD,eAAA,GAMAykB,gBAAA,WACA,GAAA/sE,KAAA00E,iBAAA10E,KAAAq1E,oBAGAr1E,KAAA6tE,qBACA7tE,KAAA00E,eAAAl9E,MAAAwI,KAAA+4B,KACA/4B,KAAA00E,eAAA9I,eAAA5rE,KAAA4rE,eACA5rE,KAAA00E,eAAA7I,aAAA7rE,KAAA6rE,aACA7rE,KAAA4rE,iBAAA5rE,KAAA6rE,cAAA,CACA,GAAA/9D,GAAA9N,KAAAs1E,uBACAt1E,MAAA00E,eAAA5mE,MAAA6H,KAAA7H,EAAA6H,KACA3V,KAAA00E,eAAA5mE,MAAA8H,IAAA9H,EAAA8H,IACA5V,KAAA00E,eAAA5mE,MAAAwI,SAAAxI,EAAAwI,WAQAg/D,sBAAA,WACA,IAAAt1E,KAAA+J,OACA,OAAgByK,EAAA,EAAAC,EAAA,EAEhB,IAAApN,GAAArH,KAAA+4B,KAAA39B,MAAA,IACA2yE,EAAA/tE,KAAAiuE,qBAAA5mE,EAAA,UACAunE,EAAA5uE,KAAAotE,sBACApF,EAAA4G,EAAA5G,UACA5tC,EAAAw0C,EAAAx0C,UACAy0C,EAAA7uE,KAAAquE,uBAAArG,EAAA5tC,GACAquC,EAAA,IAAAT,GAAA,IAAA5tC,EACAp6B,KAAAkpE,mBAAAlpE,KAAAunE,cAAAvnE,KAAAyY,IAAAuvD,IACA+F,EAAAtF,WACA7xC,EAAA52B,KAAAu2C,sBACA/wC,GACAgP,EAAAu5D,EAAAp4D,KAAA8yD,EACAh0D,EAAAs5D,EAAAn4D,IAAAm4D,EAAAW,UAAAG,GAEA0G,EAAAv1E,KAAA+J,OAAA4+B,cACA2+B,EAAAiO,EAAArrE,MAAA2kE,EACA5F,EAAAsM,EAAAprE,OAAA0kE,CAsBA,OApBArpE,GAAAwE,OAAA6G,KAAAmE,eAAAxP,EAAAoxB,GACApxB,EAAAwE,OAAA6G,KAAAmE,eAAAxP,EAAAxF,KAAA+J,OAAAs8B,mBAEA7gC,EAAAgP,EAAA,IACAhP,EAAAgP,EAAA,GAEAhP,EAAAgP,EAAA8yD,IACA9hE,EAAAgP,EAAA8yD,GAEA9hE,EAAAiP,EAAA,IACAjP,EAAAiP,EAAA,GAEAjP,EAAAiP,EAAAw0D,IACAzjE,EAAAiP,EAAAw0D,GAIAzjE,EAAAgP,GAAAxU,KAAA+J,OAAAy9B,QAAA7xB,KACAnQ,EAAAiP,GAAAzU,KAAA+J,OAAAy9B,QAAA5xB,KAEcD,KAAAnQ,EAAAgP,EAAA,KAAAoB,IAAApQ,EAAAiP,EAAA,KAAA6B,SAAAu4D,IAMd+F,kBAAA,WACA50E,KAAAw1E,aACArtB,YAAAnoD,KAAAmoD,YACAZ,YAAAvnD,KAAAunD,YACAc,cAAAroD,KAAAqoD,cACAC,cAAAtoD,KAAAsoD,cACAtU,YAAAh0C,KAAAg0C,YACAE,cAAAl0C,KAAA+J,QAAA/J,KAAA+J,OAAAmqC,cACAD,WAAAj0C,KAAA+J,QAAA/J,KAAA+J,OAAAkqC,aAOAwhC,qBAAA,WACAz1E,KAAAw1E,cAIAx1E,KAAAg0C,YAAAh0C,KAAAw1E,YAAAE,WACA11E,KAAAmoD,YAAAnoD,KAAAw1E,YAAArtB,YACAnoD,KAAAunD,YAAAvnD,KAAAw1E,YAAAjuB,YACAvnD,KAAAqoD,cAAAroD,KAAAw1E,YAAAntB,cACAroD,KAAAsoD,cAAAtoD,KAAAw1E,YAAAltB,cAEAtoD,KAAA+J,SACA/J,KAAA+J,OAAAmqC,cAAAl0C,KAAAw1E,YAAAthC,cACAl0C,KAAA+J,OAAAkqC,WAAAj0C,KAAAw1E,YAAAvhC,cASA6Q,YAAA,WACA,GAAA6wB,GAAA31E,KAAA80E,kBAAA90E,KAAA+4B,IAqBA,OApBA/4B,MAAAkyE,UAAA,EACAlyE,KAAA48C,WAAA,EACA58C,KAAAq3C,YAAA,EAEAr3C,KAAA6rE,aAAA7rE,KAAA4rE,eACA5rE,KAAA00E,gBAAA10E,KAAA+J,QAAA/J,KAAA00E,eAAAnsD,WAAAm2B,YAAA1+C,KAAA00E,gBACA10E,KAAA00E,eAAA,KAEA10E,KAAAqzE,uBACArzE,KAAAy1E,uBACAz1E,KAAAqsE,sBAAA,EAEArsE,KAAAmR,KAAA,kBACAwkE,GAAA31E,KAAAmR,KAAA,YACAnR,KAAA+J,SACA/J,KAAA+J,OAAAyH,IAAA,aAAAxR,KAAAg1E,kBACAh1E,KAAA+J,OAAAoH,KAAA,uBAAiDxG,OAAA3K,OACjD21E,GAAA31E,KAAA+J,OAAAoH,KAAA,mBAA8DxG,OAAA3K,QAG9DA,MAMA41E,wBAAA,WACA,OAAA3kE,KAAAjR,MAAA8mB,OACA9mB,KAAAumE,WAAAt1D,UACAjR,MAAA8mB,OAAA7V,IAQA4kE,mBAAA,SAAAxpD,EAAA3wB,GACA,KAAAA,IAAA2wB,GACArsB,KAAA81E,0BAAAzpD,EAAA,GACA3wB,GAEAsE,MAAA4rE,eAAAv/C,EACArsB,KAAA6rE,aAAAx/C,GAGAypD,0BAAA,SAAApoE,GACA,GAAAqoE,GAAA,OAAA/1E,KAAA+4B,KAAArrB,EAAA,GACAsoE,EAAAD,EAAAroE,IAAA,CACA1N,MAAAi2E,kBAAAF,EAAAC,GACAh2E,KAAA+4B,KAAA/4B,KAAA+4B,KAAA10B,MAAA,EAAAqJ,EAAA,GACA1N,KAAA+4B,KAAA10B,MAAAqJ,GAEA1N,KAAAumE,WAAAvmE,KAAAwmE,uBAQA0P,YAAA,SAAAC,EAAAC,GACA,GAAAtoE,EAMA,IAJA9N,KAAA6rE,aAAA7rE,KAAA4rE,eAAA,GACA5rE,KAAA61E,mBAAA71E,KAAA4rE,eAAA5rE,KAAA6rE,eAGAuK,GAAAp2E,KAAA6oE,gBAEA,WADA7oE,MAAAq2E,WAAAF,GAAA,EAGA,QAAAl6E,GAAA,EAAAoV,EAAA8kE,EAAAj6E,OAA0CD,EAAAoV,EAASpV,IACnDm6E,IACAtoE,EAAA9D,OAAAssE,gBAAAr6E,IAEA+D,KAAAq2E,WAAAF,EAAAl6E,KAAAoV,EAAA,EAAAvD,IAUAuoE,WAAA,SAAAl8C,EAAAo8C,EAAAC,GACA,GAAAC,GAAA,OAAAz2E,KAAA+4B,KAAA/4B,KAAA4rE,eACA5rE,MAAA+4B,KAAA/4B,KAAA+4B,KAAA10B,MAAA,EAAArE,KAAA4rE,gBACAzxC,EAAAn6B,KAAA+4B,KAAA10B,MAAArE,KAAA6rE,cACA7rE,KAAAumE,WAAAvmE,KAAAwmE,sBACAxmE,KAAA02E,mBAAAv8C,EAAAs8C,EAAAD,GACAx2E,KAAA4rE,gBAAAzxC,EAAAj+B,OACA8D,KAAA6rE,aAAA7rE,KAAA4rE,eACA2K,IAGAv2E,KAAA+sE,kBACA/sE,KAAAmpC,YACAnpC,KAAA8sE,wBACA9sE,KAAAmR,KAAA,WACAnR,KAAA+J,QAAA/J,KAAA+J,OAAAoH,KAAA,gBAAuDxG,OAAA3K,OACvDA,KAAA+J,QAAA/J,KAAA+J,OAAAoB,cASAwrE,yBAAA,SAAA3O,EAAA5tC,EAAAq8C,GAEAz2E,KAAA42E,gBAAA5O,EAAA,GAEAhoE,KAAA8mB,OAAAkhD,EAAA,KACAhoE,KAAA8mB,OAAAkhD,EAAA,MAGA,IAAA6O,MACAC,IAQA,IANA92E,KAAA8mB,OAAAkhD,IAAAhoE,KAAA8mB,OAAAkhD,GAAA5tC,EAAA,KACAy8C,EAAA72E,KAAA8mB,OAAAkhD,GAAA5tC,EAAA,IAKAq8C,EACAK,EAAA,GAAA9zD,EAAA6zD,GACA72E,KAAA8mB,OAAAkhD,EAAA,GAAA8O,MAIA,CACA,OAAAppE,KAAA1N,MAAA8mB,OAAAkhD,GACAltE,SAAA4S,EAAA,KAAA0sB,IACA08C,EAAAh8E,SAAA4S,EAAA,IAAA0sB,GAAAp6B,KAAA8mB,OAAAkhD,GAAAt6D,SAEA1N,MAAA8mB,OAAAkhD,GAAAt6D,GAGA1N,MAAA8mB,OAAAkhD,EAAA,GAAA8O,EAEA92E,KAAA2pE,kBAAA,GASAoN,sBAAA,SAAA/O,EAAA5tC,EAAAtsB,GAEA,GAAAkpE,GAAAh3E,KAAA8mB,OAAAkhD,GACAiP,EAAAj0D,EAAAg0D,EAEA,KAAA58C,GAAAtsB,IACAssB,EAAA,EAKA,QAAA1sB,KAAAupE,GAAA,CACA,GAAAC,GAAAp8E,SAAA4S,EAAA,GAEAwpE,IAAA98C,IACA48C,EAAAE,EAAA,GAAAD,EAAAC,GAGAD,EAAAC,EAAA,UACAF,GAAAE,IAKAl3E,KAAA8mB,OAAAkhD,GAAA5tC,GACAtsB,GAAAkV,EAAAg0D,EAAA58C,EAAA,IACAp6B,KAAA2pE,kBAAA,GASA+M,mBAAA,SAAAP,EAAAM,EAAAD,GAGA,GAAA5H,GAAA5uE,KAAAotE,sBACApF,EAAA4G,EAAA5G,UACA5tC,EAAAw0C,EAAAx0C,SAEAp6B,MAAAwtE,cAAAxF,IACAhoE,KAAAytE,cAAAzF,MAGA,OAAAmO,EACAn2E,KAAA22E,yBAAA3O,EAAA5tC,EAAAq8C,GAGAz2E,KAAA+2E,sBAAA/O,EAAA5tC,EAAAo8C,IASAI,gBAAA,SAAA5O,EAAA1+C,GAEA,GAAAqoD,GAAA3uD,EAAAhjB,KAAA8mB,OACA,QAAA2tC,KAAAz0D,MAAA8mB,OAAA,CACA,GAAAqwD,GAAAr8E,SAAA25D,EAAA,GACA0iB,GAAAnP,IACAhoE,KAAA8mB,OAAAqwD,EAAA7tD,GAAAqoD,EAAAwF,GACAxF,EAAAwF,EAAA7tD,UACAtpB,MAAA8mB,OAAAqwD,MAYAlB,kBAAA,SAAAF,EAAAroE,GAEA,GAAAkhE,GAAA5uE,KAAAotE,oBAAA1/D,GACAs6D,EAAA4G,EAAA5G,UACA5tC,EAAAw0C,EAAAx0C,SAEAp6B,MAAAo3E,mBAAArB,EAAAnH,EAAA5G,EAAA5tC;EAGAi9C,uBAAA,SAAAC,GACA,MAAAt3E,MAAAumE,WAAA+Q,EAAA,IAGAF,mBAAA,SAAArB,EAAAnH,EAAA5G,EAAA5tC,GAEA,GAAA27C,EAAA,CACA,GAAAwB,GAAAv3E,KAAAq3E,uBAAAzI,EAAA5G,WACAwP,EAAAD,IAAAr7E,OAAA,CAEA8D,MAAA8mB,OAAAkhD,EAAA,KACAhoE,KAAA8mB,OAAAkhD,EAAA,MAEA,KAAA5tC,IAAAp6B,MAAA8mB,OAAAkhD,GACAhoE,KAAA8mB,OAAAkhD,EAAA,GAAAltE,SAAAs/B,EAAA,IAAAo9C,GACAx3E,KAAA8mB,OAAAkhD,GAAA5tC,EAEAp6B,MAAA42E,gBAAAhI,EAAA5G,kBAEA,CACA,GAAAgP,GAAAh3E,KAAA8mB,OAAAkhD,EAEAgP,UACAA,GAAA58C,EAEA,IAAA68C,GAAAj0D,EAAAg0D,EAEA,QAAA/6E,KAAAg7E,GAAA,CACA,GAAAC,GAAAp8E,SAAAmB,EAAA,GACAi7E,IAAA98C,GAAA,IAAA88C,IACAF,EAAAE,EAAA,GAAAD,EAAAC,SACAF,GAAAE,OASAO,cAAA,WACAz3E,KAAAk2E,YAAA,OAOAwB,8BAAA,SAAArrD,EAAA3wB,EAAAi8E,GACAA,GAAAtrD,GACA3wB,IAAA2wB,EACArsB,KAAAssE,oBAAA,OAEA,UAAAtsE,KAAAssE,sBACAtsE,KAAAssE,oBAAA,OACAtsE,KAAA6rE,aAAAx/C,GAEArsB,KAAA4rE,eAAA+L,GAEAA,EAAAtrD,GAAAsrD,EAAAj8E,EACA,UAAAsE,KAAAssE,oBACAtsE,KAAA6rE,aAAA8L,EAGA33E,KAAA4rE,eAAA+L,GAKAj8E,IAAA2wB,EACArsB,KAAAssE,oBAAA,QAEA,SAAAtsE,KAAAssE,sBACAtsE,KAAAssE,oBAAA,QACAtsE,KAAA4rE,eAAAlwE,GAEAsE,KAAA6rE,aAAA8L,IAIAC,yBAAA,WACA,GAAA17E,GAAA8D,KAAA+4B,KAAA78B,MACA8D,MAAA4rE,eAAA1vE,EACA8D,KAAA4rE,eAAA1vE,EAEA8D,KAAA4rE,eAAA,IACA5rE,KAAA4rE,eAAA,GAEA5rE,KAAA6rE,aAAA3vE,EACA8D,KAAA6rE,aAAA3vE,EAEA8D,KAAA6rE,aAAA,IACA7rE,KAAA6rE,aAAA,SAOA7hE,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA2hE,MAAAzqE,WAIA8wE,0BAAA,WAGAhyE,KAAA63E,iBAAA,GAAA/oE,MAGA9O,KAAA83E,qBAAA,GAAAhpE,MAEA9O,KAAA+3E,iBAEA/3E,KAAAzE,GAAA,YAAAyE,KAAAgvC,YAAA1rB,KAAAtjB,QAGAgvC,YAAA,SAAAj2C,GAEAiH,KAAAg4E,gBAAA,GAAAlpE,KACA,IAAAmpE,GAAAj4E,KAAA+J,OAAAkb,WAAAlsB,EAAAsD,EAEA2D,MAAAk4E,cAAAD,IACAj4E,KAAAmR,KAAA,cAAApY,GACAiH,KAAAm4E,WAAAp/E,EAAAsD,IAEA2D,KAAAo4E,cAAAH,KACAj4E,KAAAmR,KAAA,WAAApY,GACAiH,KAAAm4E,WAAAp/E,EAAAsD,IAGA2D,KAAA83E,oBAAA93E,KAAA63E,gBACA73E,KAAA63E,gBAAA73E,KAAAg4E,eACAh4E,KAAA+3E,cAAAE,EACAj4E,KAAAq4E,gBAAAr4E,KAAA48C,UACA58C,KAAAs4E,eAAAt4E,KAAAkyE,UAGAkG,cAAA,SAAAH,GACA,MAAAj4E,MAAAg4E,eAAAh4E,KAAA63E,gBAAA,KACA73E,KAAA+3E,cAAAvjE,IAAAyjE,EAAAzjE,GACAxU,KAAA+3E,cAAAtjE,IAAAwjE,EAAAxjE,GAAAzU,KAAAq4E,iBAGAH,cAAA,SAAAD,GACA,MAAAj4E,MAAAg4E,eAAAh4E,KAAA63E,gBAAA,KACA73E,KAAA63E,gBAAA73E,KAAA83E,oBAAA,KACA93E,KAAA+3E,cAAAvjE,IAAAyjE,EAAAzjE,GACAxU,KAAA+3E,cAAAtjE,IAAAwjE,EAAAxjE,GAMA0jE,WAAA,SAAA97E,GACAA,EAAA8kD,gBAAA9kD,EAAA8kD,iBACA9kD,EAAA6kD,iBAAA7kD,EAAA6kD,mBAMA6wB,4BAAA,WACA/xE,KAAAiyE,sBACAjyE,KAAAu4E,uBACAv4E,KAAAw4E,qBACAx4E,KAAAy4E,cAMAA,WAAA,WACAz4E,KAAAzE,GAAA,oBAAAxC,GACAiH,KAAAo0E,WAAAp0E,KAAAi1E,6BAAAl8E,EAAAsD,MAEA2D,KAAAzE,GAAA,uBAAAxC,GACAiH,KAAAu0E,WAAAv0E,KAAAi1E,6BAAAl8E,EAAAsD,OAOAk8E,qBAAA,WACAv4E,KAAAzE,GAAA,qBAAAxC,GACA,GAAAiH,KAAA8rE,SAAA,CAGA,GAAA78B,GAAAjvC,KAAA+J,OAAAkb,WAAAlsB,EAAAsD,EAEA2D,MAAA04E,aAAAzpC,EAAAz6B,EACAxU,KAAA24E,aAAA1pC,EAAAx6B,EACAzU,KAAA8uE,eAAA,EAEA9uE,KAAAkyE,UACAlyE,KAAA44E,iBAAA7/E,EAAAsD,GAGA2D,KAAA48C,YACA58C,KAAAo1E,4BAAAp1E,KAAA4rE,eACA5rE,KAAA4rE,iBAAA5rE,KAAA6rE,cACA7rE,KAAAqzE,uBAEArzE,KAAA8tE,+BAQA+K,eAAA,SAAAx8E,GACA,GAAA4yC,GAAAjvC,KAAA+J,OAAAkb,WAAA5oB,EAEA,OAAA2D,MAAA04E,eAAAzpC,EAAAz6B,GACAxU,KAAA24E,eAAA1pC,EAAAx6B,GAMA+jE,mBAAA,WACAx4E,KAAAzE,GAAA,mBAAAxC,GACAiH,KAAA8uE,eAAA,EACA9uE,KAAA8rE,WAAA9rE,KAAA64E,eAAA9/E,EAAAsD,KAIA2D,KAAAs4E,iBAAAt4E,KAAAmiD,WACAniD,KAAAw0E,aAAAz7E,EAAAsD,GACA2D,KAAA4rE,iBAAA5rE,KAAA6rE,aACA7rE,KAAAkzE,mBAAA,GAGAlzE,KAAA8tE,2BAGA9tE,KAAAkyE,UAAA,MAQA0G,iBAAA,SAAAv8E,GACA,GAAAs7E,GAAA33E,KAAAi1E,6BAAA54E,GACAgwB,EAAArsB,KAAA4rE,eAAAlwE,EAAAsE,KAAA6rE,YACAxvE,GAAA47C,SACAj4C,KAAA03E,8BAAArrD,EAAA3wB,EAAAi8E,IAGA33E,KAAA4rE,eAAA+L,EACA33E,KAAA6rE,aAAA8L,GAEA33E,KAAA8sE,wBACA9sE,KAAA+sE,mBAQAkI,6BAAA,SAAA54E,GASA,OAHAg4E,GACA5f,EANAqkB,EAAA94E,KAAA6rD,gBAAAxvD,GACA08E,EAAA,EACA7uE,EAAA,EACAC,EAAA,EACAiwB,EAAA,EAIAn+B,EAAA,EAAAoV,EAAArR,KAAAumE,WAAArqE,OAAiDD,EAAAoV,EAASpV,IAAA,CAC1Dw4D,EAAAz0D,KAAAumE,WAAAtqE,GACAkO,GAAAnK,KAAAqnE,iBAAArnE,KAAAyY,IAAAxc,GAAA+D,KAAAib,MAEA,IAAA+9D,GAAAh5E,KAAAunE,cAAAvnE,KAAAyY,IAAAxc,GACAotE,EAAArpE,KAAAkpE,mBAAA8P,EAEA9uE,GAAAm/D,EAAArpE,KAAAgb,MAEA,QAAAnW,GAAA,EAAAoc,EAAAwzC,EAAAv4D,OAAyC2I,EAAAoc,EAAUpc,IAAA,CAOnD,GALAk0E,EAAA7uE,EAEAA,GAAAlK,KAAA2uE,gBAAA3uE,KAAAyY,IAAAg8C,EAAA5vD,GAAA5I,EAAA+D,KAAA2b,MAAAsF,EAAApc,KACA7E,KAAAgb,SAEA7Q,GAAA2uE,EAAArkE,GAAAvK,GAAA4uE,EAAAtkE,GAKA,MAAAxU,MAAAi5E,gCACAH,EAAAC,EAAA7uE,EAAAkwB,EAAAn+B,EAAAglB,EALAmZ,KAQA,GAAA0+C,EAAArkE,EAAAtK,EAEA,MAAAnK,MAAAi5E,gCACAH,EAAAC,EAAA7uE,EAAAkwB,EAAAn+B,EAAA,EAAAglB,GAKA,sBAAAozD,GACA,MAAAr0E,MAAA+4B,KAAA78B,QAOA+8E,gCAAA,SAAAH,EAAAC,EAAA7uE,EAAAwD,EAAAuT,GAEA,GAAAi4D,GAAAJ,EAAAtkE,EAAAukE,EACAI,EAAAjvE,EAAA4uE,EAAAtkE,EACA8U,EAAA6vD,EAAAD,EAAA,IACA7E,EAAA3mE,EAAA4b,CAWA,OARAtpB,MAAA2b,QACA04D,EAAApzD,EAAAozD,GAGAA,EAAAr0E,KAAA+4B,KAAA78B,SACAm4E,EAAAr0E,KAAA+4B,KAAA78B,QAGAm4E,KAKArqE,OAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA2hE,MAAAzqE,WAKAuzE,mBAAA,WACAz0E,KAAA00E,eAAA1qE,OAAA4D,SAAA8L,cAAA,YACA1Z,KAAA00E,eAAAvsD,aAAA,uBACA,IAAAra,GAAA9N,KAAAs1E,uBACAt1E,MAAA00E,eAAA5mE,MAAAkZ,QAAA,4BAA4DlZ,EAAA8H,IAAA,WAAwB9H,EAAA6H,KAAA,wDAEpF3L,OAAA4D,SAAA+a,KAAAF,YAAAzoB,KAAA00E,gBAEA1qE,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,UAAA10E,KAAAo5E,UAAA91D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,QAAA10E,KAAAq5E,QAAA/1D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,QAAA10E,KAAAs5E,QAAAh2D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,OAAA10E,KAAAu5E,KAAAj2D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,MAAA10E,KAAAw5E,IAAAl2D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,QAAA10E,KAAAy5E,MAAAn2D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,mBAAA10E,KAAA05E,mBAAAp2D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,oBAAA10E,KAAA25E,oBAAAr2D,KAAAtjB,OACAgK,OAAA6G,KAAAmV,YAAAhmB,KAAA00E,eAAA,iBAAA10E,KAAA45E,iBAAAt2D,KAAAtjB,QAEAA,KAAA65E,0BAAA75E,KAAA+J,SACAC,OAAA6G,KAAAmV,YAAAhmB,KAAA+J,OAAA4+B,cAAA,QAAA3oC,KAAA85E,QAAAx2D,KAAAtjB,OACAA,KAAA65E,0BAAA,IAOAE,UACAC,EAAA,cACAC,EAAA,cACAC,GAAA,cACAC,GAAA,gBACAC,GAAA,eACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,iBACAC,GAAA,iBACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,iBACAC,GAAA,iBAMAC,gBACAC,GAAA,OACAC,GAAA,OAMAC,kBACAC,GAAA,aAGAnB,QAAA,WAEA95E,KAAA00E,gBAAA10E,KAAA00E,eAAAC,SAOAyE,UAAA,SAAA/8E,GACA,GAAA2D,KAAA48C,UAAA,CAGA,GAAAvgD,EAAA6+E,UAAAl7E,MAAA+5E,SACA/5E,UAAA+5E,SAAA19E,EAAA6+E,UAAA7+E,OAEA,MAAAA,EAAA6+E,UAAAl7E,MAAAg7E,mBAAA3+E,EAAA8+E,SAAA9+E,EAAA++E,UAIA,MAHAp7E,WAAAg7E,iBAAA3+E,EAAA6+E,UAAA7+E,GAKAA,EAAAg/E,2BACAh/E,EAAA8kD,iBACAnhD,KAAA+J,QAAA/J,KAAA+J,OAAAoB,cASAkuE,QAAA,SAAAh9E,GACA,OAAA2D,KAAA48C,WAAA58C,KAAAs7E,eACAt7E,KAAAs7E,WAAA,QAGAj/E,EAAA6+E,UAAAl7E,MAAA66E,iBAAAx+E,EAAA8+E,SAAA9+E,EAAA++E,WACAp7E,UAAA66E,eAAAx+E,EAAA6+E,UAAA7+E,GAKAA,EAAAg/E,2BACAh/E,EAAA8kD,iBACAnhD,KAAA+J,QAAA/J,KAAA+J,OAAAoB,eAOAmuE,QAAA,SAAAj9E,GACA,GAAA2D,KAAA48C,YAAA58C,KAAAq1E,kBAAA,CAGA,GAIAkG,GAAAC,EAAAnvD,EAJA/C,EAAAtpB,KAAA4rE,gBAAA,EACA6P,EAAAz7E,KAAA6rE,cAAA,EACA6P,EAAA17E,KAAA+4B,KAAA78B,OACAy/E,EAAA37E,KAAA00E,eAAAl9E,MAAA0E,MAEAy/E,GAAAD,GAEArvD,EAAA,SAAArsB,KAAAssE,oBAAAmP,EAAAnyD,EACAiyD,EAAAI,EAAAD,EACAF,EAAAx7E,KAAA00E,eAAAl9E,MAAA6M,MAAAgoB,IAAAkvD,KAKAA,EAAAI,EAAAD,EAAAD,EAAAnyD,EACAkyD,EAAAx7E,KAAA00E,eAAAl9E,MAAA6M,MAAAilB,IAAAiyD,IAEAv7E,KAAAk2E,YAAAsF,GACAn/E,EAAA6kD,oBAMAw4B,mBAAA,WACA15E,KAAAq1E,mBAAA,EACAr1E,KAAA47E,sBAAA,EACA57E,KAAA67E,iBAAA77E,KAAA4rE,gBAMAgO,iBAAA,WACA55E,KAAAq1E,mBAAA,GAMAsE,oBAAA,SAAAt9E,GACA,GAAAuP,GAAAvP,EAAAuP,IACA5L,MAAA4rE,eAAA5rE,KAAA67E,iBACA77E,KAAA6rE,aAAA7rE,KAAA6rE,eAAA7rE,KAAA4rE,eACA5rE,KAAA67E,iBAAA77E,KAAA47E,sBAAA57E,KAAA6rE,aACA7rE,KAAAk2E,YAAAtqE,GAAA,GACA5L,KAAA47E,sBAAAhwE,EAAA1P,QAMA4/E,cAAA,SAAAz/E,GACA,GAAA2D,KAAA4rE,iBAAA5rE,KAAA6rE,aAAA,CACA,GAAA7rE,KAAA4rE,iBAAA5rE,KAAA+4B,KAAA78B,OACA,MAEA8D,MAAA+7E,gBAAA1/E,GAEA2D,KAAAg8E,YAAA3/E,IAOAk9E,KAAA,SAAAl9E,GACA,GAAA2D,KAAA4rE,iBAAA5rE,KAAA6rE,aAAA,CAIA,GAAAkI,GAAA/zE,KAAAwzE,kBACAyI,EAAAj8E,KAAAk8E,kBAAA7/E,EAGA4/E,IACAA,EAAAE,QAAA,OAAApI,GAGA/pE,OAAAoyE,WAAArI,EACA/pE,OAAAssE,gBAAAt2E,KAAAgtE,mBACAhtE,KAAA4rE,eACA5rE,KAAA6rE,cACAxvE,EAAAg/E,2BACAh/E,EAAA8kD,iBACAnhD,KAAAs7E,WAAA,IAOA7B,MAAA,SAAAp9E,GACA,GAAA+/E,GAAA,KACAH,EAAAj8E,KAAAk8E,kBAAA7/E,GACA+5E,GAAA,CAGA6F,IACAG,EAAAH,EAAAI,QAAA,QAAAt2E,QAAA,UACAiE,OAAAssE,iBAAAtsE,OAAAoyE,iBACAhG,GAAA,IAIAgG,EAAApyE,OAAAoyE,WAGAA,GACAp8E,KAAAk2E,YAAAkG,EAAAhG,GAEA/5E,EAAAg/E,2BACAh/E,EAAA8kD,kBAOAq4B,IAAA,SAAAn9E,GACA2D,KAAA4rE,iBAAA5rE,KAAA6rE,eAIA7rE,KAAAu5E,KAAAl9E,GACA2D,KAAAg8E,YAAA3/E,KAQA6/E,kBAAA,SAAA7/E,GACA,MAAAA,MAAA4/E,eAAAjyE,OAAAjT,OAAAklF,eAUAK,sBAAA,SAAAtU,EAAA5tC,GAKA,OAFAD,GAFAoiD,EAAAv8E,KAAAumE,WAAAyB,GAAA3jE,MAAA,EAAA+1B,GACA4+C,EAAAh5E,KAAAunE,cAAAvnE,KAAAyY,IAAAuvD,GACAwU,EAAAx8E,KAAAkpE,mBAAA8P,GAEA/8E,EAAA,EAAAoV,EAAAkrE,EAAArgF,OAAkDD,EAAAoV,EAASpV,IAC3Dk+B,EAAAoiD,EAAAtgF,GACAugF,GAAAx8E,KAAA2uE,gBAAA3uE,KAAAyY,IAAA0hB,EAAA6tC,EAAA/rE,EAEA,OAAAugF,IASAC,oBAAA,SAAApgF,EAAAqgF,GACA,GAAAC,GAAA38E,KAAA48E,uBAAAvgF,EAAAqgF,GACA9N,EAAA5uE,KAAAotE,oBAAAuP,GACA3U,EAAA4G,EAAA5G,SAEA,IAAAA,IAAAhoE,KAAAumE,WAAArqE,OAAA,GAAAG,EAAA++E,SAAA,KAAA/+E,EAAA6+E,QAEA,MAAAl7E,MAAA+4B,KAAA78B,OAAAygF,CAEA,IAAAviD,GAAAw0C,EAAAx0C,UACAoiD,EAAAx8E,KAAAs8E,sBAAAtU,EAAA5tC,GACAyiD,EAAA78E,KAAA88E,gBAAA9U,EAAA,EAAAwU,GACAO,EAAA/8E,KAAAumE,WAAAyB,GAAA3jE,MAAA+1B,EAEA,OAAA2iD,GAAA7gF,OAAA2gF,EAAA,GAUAD,uBAAA,SAAAvgF,EAAAqgF,GACA,MAAArgF,GAAA47C,UAAAj4C,KAAA4rE,iBAAA5rE,KAAA6rE,cAAA6Q,EACA18E,KAAA6rE,aAGA7rE,KAAA4rE,gBASAoR,kBAAA,SAAA3gF,EAAAqgF,GACA,GAAAC,GAAA38E,KAAA48E,uBAAAvgF,EAAAqgF,GACA9N,EAAA5uE,KAAAotE,oBAAAuP,GACA3U,EAAA4G,EAAA5G,SACA,QAAAA,GAAA3rE,EAAA++E,SAAA,KAAA/+E,EAAA6+E,QAEA,OAAAyB,CAEA,IAAAviD,GAAAw0C,EAAAx0C,UACAoiD,EAAAx8E,KAAAs8E,sBAAAtU,EAAA5tC,GACAyiD,EAAA78E,KAAA88E,gBAAA9U,EAAA,EAAAwU,GACAD,EAAAv8E,KAAAumE,WAAAyB,GAAA3jE,MAAA,EAAA+1B,EAEA,QAAAp6B,KAAAumE,WAAAyB,EAAA,GAAA9rE,OAAA2gF,EAAAN,EAAArgF,QAOA4gF,gBAAA,SAAA9U,EAAA99D,GASA,OAFA+yE,GALAjE,EAAAh5E,KAAAunE,cAAAvnE,KAAAyY,IAAAuvD,GACAkV,EAAAl9E,KAAAumE,WAAAyB,GACAqB,EAAArpE,KAAAkpE,mBAAA8P,GACAmE,EAAA9T,EACA+T,EAAA,EAGAv4E,EAAA,EAAAoc,EAAAi8D,EAAAhhF,OAA6C2I,EAAAoc,EAAUpc,IAAA,CAEvD,GAAAs1B,GAAA+iD,EAAAr4E,GACAw4E,EAAAr9E,KAAA2uE,gBAAA3uE,KAAAyY,IAAA0hB,EAAA6tC,EAAAnjE,EAIA,IAFAs4E,GAAAE,EAEAF,EAAAjzE,EAAA,CAEA+yE,GAAA,CAEA,IAAAK,GAAAH,EAAAE,EACAE,EAAAJ,EACAK,EAAAvqE,KAAAG,IAAAkqE,EAAApzE,GACAuzE,EAAAxqE,KAAAG,IAAAmqE,EAAArzE,EAEAkzE,GAAAK,EAAAD,EAAA34E,IAAA,CAEA,QASA,MAJAo4E,KACAG,EAAAF,EAAAhhF,OAAA,GAGAkhF,GAQAM,eAAA,SAAArhF,GACA2D,KAAA4rE,gBAAA5rE,KAAA+4B,KAAA78B,QAAA8D,KAAA6rE,cAAA7rE,KAAA+4B,KAAA78B,QAGA8D,KAAA29E,oBAAA,OAAAthF,IAOAuhF,aAAA,SAAAvhF,GACA,IAAA2D,KAAA4rE,gBAAA,IAAA5rE,KAAA6rE,cAGA7rE,KAAA29E,oBAAA,KAAAthF,IAQAshF,oBAAA,SAAAzJ,EAAA73E,GAGA,GAAAy5C,GAAA,MAAAo+B,EAAA,eACA5qD,EAAAtpB,KAAA81C,GAAAz5C,EAAA,UAAA2D,KAAAssE,oBACAjwE,GAAA47C,SACAj4C,KAAA69E,oBAAAv0D,GAGAtpB,KAAA89E,uBAAAx0D,GAEA,IAAAA,IACAtpB,KAAA43E,2BACA53E,KAAAqzE,uBACArzE,KAAAqsE,sBAAA,EACArsE,KAAAkzE,oBACAlzE,KAAA8sE,wBACA9sE,KAAA+sE,oBAQA8Q,oBAAA,SAAAv0D,GACA,GAAAquD,GAAA,SAAA33E,KAAAssE,oBACAtsE,KAAA4rE,eAAAtiD,EACAtpB,KAAA6rE,aAAAviD,CAEA,OADAtpB,MAAA03E,8BAAA13E,KAAA4rE,eAAA5rE,KAAA6rE,aAAA8L,GACA,IAAAruD,GAOAw0D,uBAAA,SAAAx0D,GASA,MARAA,GAAA,GACAtpB,KAAA4rE,gBAAAtiD,EACAtpB,KAAA6rE,aAAA7rE,KAAA4rE,iBAGA5rE,KAAA6rE,cAAAviD,EACAtpB,KAAA4rE,eAAA5rE,KAAA6rE,cAEA,IAAAviD,GAOAy0D,eAAA,SAAA1hF,GACA,IAAA2D,KAAA4rE,gBAAA,IAAA5rE,KAAA6rE,cAGA7rE,KAAAg+E,uBAAA,OAAA3hF,IAOA4hF,MAAA,SAAA5hF,EAAA4U,EAAAijE,GACA,GAAAl6B,EACA,IAAA39C,EAAAk7C,OACAyC,EAAAh6C,KAAA,mBAAAk0E,GAAAl0E,KAAAiR,QAEA,KAAA5U,EAAA++E,SAAA,KAAA/+E,EAAA6+E,SAAA,KAAA7+E,EAAA6+E,QAKA,MADAl7E,MAAAiR,IAAA,SAAAijE,KAAA,GACA,CAJAl6B,GAAAh6C,KAAA,mBAAAk0E,GAAAl0E,KAAAiR,IAMA,GAAAwZ,eAAAuvB,IAAAh6C,KAAAiR,KAAA+oC,EAEA,MADAh6C,MAAAiR,GAAA+oC,GACA,GAOAkkC,UAAA,SAAA7hF,EAAA4U,GACA,MAAAjR,MAAAi+E,MAAA5hF,EAAA4U,EAAA,SAMAktE,WAAA,SAAA9hF,EAAA4U,GACA,MAAAjR,MAAAi+E,MAAA5hF,EAAA4U,EAAA,UAOAmtE,2BAAA,SAAA/hF,GACA,GAAAgiF,IAAA,CAUA,OATAr+E,MAAAssE,oBAAA,OAIAtsE,KAAA6rE,eAAA7rE,KAAA4rE,gBAAA,IAAA5rE,KAAA4rE,iBACAyS,EAAAr+E,KAAAk+E,UAAA7hF,EAAA,mBAGA2D,KAAA6rE,aAAA7rE,KAAA4rE,eACAyS,GAOAC,wBAAA,SAAAjiF,GACA,gBAAA2D,KAAAssE,qBAAAtsE,KAAA4rE,iBAAA5rE,KAAA6rE,aACA7rE,KAAAk+E,UAAA7hF,EAAA,gBAEA,IAAA2D,KAAA4rE,gBACA5rE,KAAAssE,oBAAA,OACAtsE,KAAAk+E,UAAA7hF,EAAA,mBAFA,QAUA0/E,gBAAA,SAAA1/E,GACA2D,KAAA4rE,gBAAA5rE,KAAA+4B,KAAA78B,QAAA8D,KAAA6rE,cAAA7rE,KAAA+4B,KAAA78B,QAGA8D,KAAAg+E,uBAAA,QAAA3hF,IAQA2hF,uBAAA,SAAA9J,EAAA73E,GACA,GAAAkiF,GAAA,aAAArK,EAAA,MACAl0E,MAAAqsE,sBAAA,EAGAkS,GADAliF,EAAA47C,SACA,QAGA,WAEAj4C,KAAAu+E,GAAAliF,KACA2D,KAAAqzE,uBACArzE,KAAAkzE,oBACAlzE,KAAA8sE,wBACA9sE,KAAA+sE,oBAQAyR,yBAAA,SAAAniF,GACA,eAAA2D,KAAAssE,qBAAAtsE,KAAA4rE,iBAAA5rE,KAAA6rE,aACA7rE,KAAAm+E,WAAA9hF,EAAA,kBAEA2D,KAAA6rE,eAAA7rE,KAAA+4B,KAAA78B,QACA8D,KAAAssE,oBAAA,QACAtsE,KAAAm+E,WAAA9hF,EAAA,iBAFA,QAUAoiF,4BAAA,SAAApiF,GACA,GAAAqiF,IAAA,CAUA,OATA1+E,MAAAssE,oBAAA,QAEAtsE,KAAA4rE,iBAAA5rE,KAAA6rE,cACA6S,EAAA1+E,KAAAm+E,WAAA9hF,EAAA,kBACA2D,KAAA6rE,aAAA7rE,KAAA4rE,gBAGA5rE,KAAA4rE,eAAA5rE,KAAA6rE,aAEA6S,GAOA1C,YAAA,SAAA3/E,GACA2D,KAAA4rE,iBAAA5rE,KAAA6rE,aACA7rE,KAAA2+E,uBAAAtiF,GAGA2D,KAAA61E,mBAAA71E,KAAA4rE,eAAA5rE,KAAA6rE,cAGA7rE,KAAA6sE,gBAAA7sE,KAAA4rE,gBAEA5rE,KAAA41E,0BAEA51E,KAAA+J,QAAA/J,KAAA+J,OAAAoB,YAEAnL,KAAAmpC,YACAnpC,KAAAmR,KAAA,WACAnR,KAAA+J,QAAA/J,KAAA+J,OAAAoH,KAAA,gBAAqDxG,OAAA3K,QAOrD2+E,uBAAA,SAAAtiF,GACA,OAAA2D,KAAA4rE,eAGA,GAAAvvE,EAAA++E,QAAA,CAEA,GAAAwD,GAAA5+E,KAAA4zE,qBAAA5zE,KAAA4rE,eAEA5rE,MAAA61E,mBAAA+I,EAAA5+E,KAAA4rE,gBACA5rE,KAAA2sE,kBAAAiS,OAEA,IAAAviF,EAAAk7C,OAAA,CAEA,GAAAsnC,GAAA7+E,KAAAyzE,qBAAAzzE,KAAA4rE,eAEA5rE,MAAA61E,mBAAAgJ,EAAA7+E,KAAA4rE,gBACA5rE,KAAA2sE,kBAAAkS,OAGA7+E,MAAA81E,0BAAA91E,KAAA4rE,gBACA5rE,KAAA2sE,kBAAA3sE,KAAA4rE,eAAA,MAOA,WACA,GAAA51D,GAAAhM,OAAA6G,KAAAmF,QACAwvB,EAAAx7B,OAAA1S,OAAAkuC,mBAEAx7B,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAA2hE,MAAAzqE,WAKA+pE,oBAAA,SAAAjD,EAAA4C,EAAAzgE,EAAA2gE,EAAAD,EAAAF,GACA3qE,KAAAwtE,cAAAxF,GAKAhoE,KAAA8+E,qBACA9W,EAAA4C,EAAAzgE,EAAA2gE,EAAAH,GALA3gE,OAAAwM,KAAAtV,UAAA+pE,oBAAA9pE,KAAAnB,KACAgoE,EAAA4C,EAAAzgE,EAAA2gE,EAAAD,IAWAiU,qBAAA,SAAA9W,EAAA4C,EAAAzgE,EAAA2gE,EAAAH,GAQA,OANAtjE,GAAArH,KAAAumE,WAAAyB,GACAG,EAAA,EACAkB,EAAArpE,KAAAkpE,mBAAAlpE,KAAAunE,cAAAvnE,KAAAyY,IAAAuvD,IAAAhoE,KAAAkK,MAAA,EACA+kE,EAAAjvE,KAAA++E,qBAAA/W,GACAgB,EAAAhpE,KAAAqnE,iBAAArnE,KAAAyY,IAAAuvD,GAEA/rE,EAAA,EAAAoV,EAAAhK,EAAAnL,OAAyCD,EAAAoV,EAASpV,IAAA,CAClD,GAAA+iF,GAAAh/E,KAAAqtE,qBAAArF,EAAA/rE,MAEA2uE,GAAAhzE,KACAoI,KAAAi/E,oBACA53E,EAAApL,GAAA+iF,EAAA3V,EAAA4F,EAAAxE,QAAAwE,EAAA3lD,OAAA6+C,GAEA,IAAA0H,GAAA7vE,KAAA2uE,gBAAA3uE,KAAAyY,IAAApR,EAAApL,GAAA+rE,EAAA/rE,EAEA+iF,GAAA/Y,qBACA0E,EAAA/yE,KACAoI,KAAAk/E,kBACAF,EAAA3V,EAAA4F,EAAAxE,QAAAzB,EAAA6G,EAAA1H,IAGAA,GAAA0H,IAOAkP,qBAAA,SAAA/W,GAEA,OADAsB,GAAA,EAAA6V,EAAA,EACAt6E,EAAA,EAAqBA,EAAAmjE,EAAenjE,IACpCykE,GAAAtpE,KAAAqnE,iBAAArnE,KAAAyY,IAAA5T,EAGA,OADAs6E,GAAAn/E,KAAAqnE,iBAAArnE,KAAAyY,IAAA5T,IAEA4lE,QAAAnB,EACAhgD,QAAAtpB,KAAAmmE,cAAAnmE,KAAAkmE,mBAAAiZ,GAAAn/E,KAAAg4B,WAAAh4B,KAAAmmE,iBAOA+Y,kBAAA,SAAAF,EAAA3V,EAAAC,EAAAN,EAAA6G,EAAA1H,GACA,OACA,mBAAA6W,EAAA/Y,oBACA,QAAAjwD,EAAAqzD,EAAAlB,EAAA3iC,GACA,QAAAxvB,EAAAszD,EAAAtpE,KAAAmK,OAAA,EAAAq7B,GACA,YAAAxvB,EAAA65D,EAAArqC,GACA,aAAAxvB,EAAAgzD,EAAAhpE,KAAAg4B,WAAAwN,GACA,eACApuC,KAAA,KAMA6nF,oBAAA,SAAA9kD,EAAA6kD,EAAA3V,EAAAC,EAAAnB,GAEA,GAAAiX,GAAAp/E,KAAAyvD,aAAAtuD,KAAA6I,OAAA6G,KAAAzJ,OAAA0b,QACAuN,SAAA,EACAtf,KAAA/Q,KAAA+Q,KACA6kB,OAAA51B,KAAA41B,OACA7oB,KAAA,OACA4iD,aAAA3lD,OAAA1S,OAAA4J,UAAAyuD,cACOqvB,GAEP,QACA,mBAAAhpE,EAAAqzD,EAAAlB,EAAA3iC,GAAA,QACAxvB,EAAAszD,EAAAtpE,KAAAmK,OAAA,EAAAq7B,GAAA,KACAw5C,EAAAniE,WAAA,gBAAAmiE,EAAAniE,WAAA9W,QAAA,kBACAi5E,EAAA1oE,SAAA,cAAA0oE,EAAA1oE,SAAA,QACA0oE,EAAAlnD,UAAA,eAAAknD,EAAAlnD,UAAA,QACAknD,EAAAjnD,WAAA,gBAAAinD,EAAAjnD,WAAA,QACAinD,EAAAhlB,eAAA,oBAAAglB,EAAAhlB,eAAA,QACA,UAAAolB,EAAA,KACAp1E,OAAA6G,KAAAgG,OAAAuM,UAAA+W,GACA,cACA/iC,KAAA,UAOA,SAAA2b,GAEA,YAEA,IAAA/I,GAAA+I,EAAA/I,SAAA+I,EAAA/I,WACAgZ,EAAAhZ,EAAA6G,KAAAzJ,OAAA4b,KAaAhZ,GAAAq1E,QAAAr1E,EAAA6G,KAAAiT,YAAA9Z,EAAA2hE,MAAA3hE,EAAAuH,YAOAxE,KAAA,UAOAuyE,SAAA,GASAC,gBAAA,EAMAC,cAAA,KAKA9kC,cAAA,EAKAC,iBAAA,EAUA52B,WAAA,SAAAgV,EAAAhgC,GACAiH,KAAAyY,IAAAzO,EAAA6G,KAAA2I,sBAAAG,WAAA,MACA3Z,KAAA0jB,UAAA,aAAAqV,EAAAhgC,GACAiH,KAAAyyD,sBAAAzoD,EAAAq1E,QAAAI,+BAGAz/E,KAAA6lE,yBAAA37D,OAAA,GAUAm8D,gBAAA,SAAA5tD,GACAzY,KAAAomE,kBAIA3tD,IACAA,EAAAzO,EAAA6G,KAAA2I,sBAAAG,WAAA,MACA3Z,KAAAsmE,eAAA7tD,IAIAzY,KAAAu/E,gBAAA,EAGAv/E,KAAAumE,WAAAvmE,KAAAwmE,sBAEAxmE,KAAAu/E,gBAAAv/E,KAAAkK,OACAlK,KAAA2pC,KAAA,QAAA3pC,KAAAu/E,iBAIAv/E,KAAAymE,cACAzmE,KAAAmK,OAAAnK,KAAA4mE,eAAAnuD,KAUAinE,kBAAA,WAMA,OALAC,GAAA,EACAC,EAAA,EACAlX,EAAA,EACAhyE,KAEAuF,EAAA,EAAqBA,EAAA+D,KAAAumE,WAAArqE,OAA4BD,IACjD,OAAA+D,KAAA+4B,KAAA2vC,IAAAzsE,EAAA,GACA2jF,EAAA,EACAlX,IACAiX,KAEA,MAAA3/E,KAAA+4B,KAAA2vC,IAAAzsE,EAAA,IAEA2jF,IACAlX,KAGAhyE,EAAAuF,IAAkBw4D,KAAAkrB,EAAAr2D,OAAAs2D,GAElBlX,GAAA1oE,KAAAumE,WAAAtqE,GAAAC,OACA0jF,GAAA5/E,KAAAumE,WAAAtqE,GAAAC,MAGA,OAAAxF,IASA22E,qBAAA,SAAArF,EAAA5tC,EAAAi3C,GACA,GAAArxE,KAAA6/E,UAAA,CACA,GAAAnpF,GAAAsJ,KAAA6/E,UAAA7X,EACA,KAAAtxE,EACA,MAAA26E,MAAyC,IAEzCrJ,GAAAtxE,EAAA+9D,KACAr6B,EAAA1jC,EAAA4yB,OAAA8Q,EAEA,MAAAp6B,MAAA0jB,UAAA,uBAAAskD,EAAA5tC,EAAAi3C,IASA3D,qBAAA,SAAA1F,EAAA5tC,EAAAtsB,GACA,GAAApX,GAAAsJ,KAAA6/E,UAAA7X,EACAA,GAAAtxE,EAAA+9D,KACAr6B,EAAA1jC,EAAA4yB,OAAA8Q,EAEAp6B,KAAA8mB,OAAAkhD,GAAA5tC,GAAAtsB,GAQAwjE,wBAAA,SAAAtJ,EAAA5tC,GACA,GAAA1jC,GAAAsJ,KAAA6/E,UAAA7X,EACAA,GAAAtxE,EAAA+9D,KACAr6B,EAAA1jC,EAAA4yB,OAAA8Q,QAEAp6B,MAAA8mB,OAAAkhD,GAAA5tC,IAOAozC,cAAA,SAAAxF,GACA,GAAAtxE,GAAAsJ,KAAA6/E,UAAA7X,EACA,OAAAhoE,MAAA8mB,OAAApwB,EAAA+9D,OAQAgZ,cAAA,SAAAzF,EAAAl6D,GACA,GAAApX,GAAAsJ,KAAA6/E,UAAA7X,EACAhoE,MAAA8mB,OAAApwB,EAAA+9D,MAAA3mD,GAOAyjE,iBAAA,SAAAvJ,GACA,GAAAtxE,GAAAsJ,KAAA6/E,UAAA7X,SACAhoE,MAAA8mB,OAAApwB,EAAA+9D,OAYAqrB,UAAA,SAAArnE,EAAAsgB,GACA,GAAA98B,GAAA0xD,EAAA50B,EAAA39B,MAAA4E,KAAA+lE,YAAAga,IAEA,KAAA9jF,EAAA,EAAiBA,EAAA0xD,EAAAzxD,OAAkBD,IACnC8jF,IAAA79E,OAAAlC,KAAAggF,UAAAvnE,EAAAk1C,EAAA1xD,MAGA,OAAA8jF,IAaAE,aAAA,SAAAxnE,EAAAsgB,EAAAivC,EAAAG,GACA,GAAAj+D,GAAA,CACAi+D,MAAA,CACA,QAAAlsE,GAAA,EAAAoV,EAAA0nB,EAAA78B,OAAwCD,EAAAoV,EAASpV,IACjDiO,GAAAlK,KAAA2uE,gBAAAl2D,EAAAsgB,EAAA98B,GAAA+rE,EAAA/rE,EAAAksE,EAEA,OAAAj+D,IAWA81E,UAAA,SAAAvnE,EAAAsgB,EAAAivC,GAcA,OAbA35B,GAAA,EACAsf,KACA8G,EAAA,GACAyT,EAAAnvC,EAAA39B,MAAA,KACA6sE,EAAA,GACA3+C,EAAA,EACA42D,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EACA1Y,EAAA5nE,KAAA6nE,yBAEA5rE,EAAA,EAAqBA,EAAAisE,EAAAhsE,OAAkBD,IACvCgsE,EAAAC,EAAAjsE,GACAkkF,EAAAngF,KAAAigF,aAAAxnE,EAAAwvD,EAAAD,EAAA1+C,GAEAA,GAAA2+C,EAAA/rE,OAEAmyC,GAAA+xC,EAAAD,EAAAvY,EAEAv5B,GAAAruC,KAAAkK,QAAAo2E,GACA3yB,EAAA/1D,KAAA68D,GACAA,EAAA,GACApmB,EAAA8xC,EACAG,GAAA,GAGAjyC,GAAAu5B,EAGA0Y,IACA7rB,GAAAyrB,GAEAzrB,GAAAwT,EAEAmY,EAAApgF,KAAAigF,aAAAxnE,EAAAynE,EAAAlY,EAAA1+C,GACAA,IACAg3D,GAAA,EAEAH,EAAAE,IACAA,EAAAF,EAUA,OANAlkF,IAAA0xD,EAAA/1D,KAAA68D,GAEA4rB,EAAArgF,KAAAu/E,kBACAv/E,KAAAu/E,gBAAAc,EAAAzY,GAGAja,GAQA6Y,oBAAA,WACA,GAAA+Z,GAAAvgF,KAAAi6D,SACAj6D,MAAAyY,IAAAU,OACAnZ,KAAAsmE,eAAAtmE,KAAAyY,KACAzY,KAAAi6D,UAAA,MACA,IAAAtM,GAAA3tD,KAAA8/E,UAAA9/E,KAAAyY,IAAAzY,KAAA+4B,KAKA,OAJA/4B,MAAAi6D,UAAAsmB,EACAvgF,KAAAyY,IAAAc,UACAvZ,KAAAumE,WAAA5Y,EACA3tD,KAAA6/E,UAAA7/E,KAAA0/E,oBACA/xB,GAaAtE,WAAA,SAAAjwD,EAAA5B,GACA,WAAA4B,IACA4G,KAAA6K,IAAA,SAAAoI,KAAAG,IAAA,EAAA5b,IACAwI,KAAA6K,IAAA,QAAA7K,KAAAxE,IAAA,SAAAhE,GACA,mBAAAwI,MAAAwgF,YAAA,EAAAxgF,KAAAwgF,cACAxgF,KAAAwgF,YAAAhpF,IAUA41E,oBAAA,SAAAxB,GACA,mBAAAA,KACAA,EAAA5rE,KAAA4rE,eAMA,QAHA6U,GAAAzgF,KAAAumE,WAAArqE,OACAwkF,EAAA,EAEAzkF,EAAA,EAAqBA,EAAAwkF,EAAcxkF,IAAA,CACnC,GAAAw4D,GAAAz0D,KAAAumE,WAAAtqE,GACA0kF,EAAAlsB,EAAAv4D,MAEA,IAAA0vE,GAAA8U,EAAAC,EACA,OACA3Y,UAAA/rE,EACAm+B,UAAAwxC,EAAA8U,EAIAA,IAAAC,EAEA,OAAA3gF,KAAA+4B,KAAA2nD,IAAA,MAAA1gF,KAAA+4B,KAAA2nD,IACAA,IAIA,OACA1Y,UAAAyY,EAAA,EACArmD,UAAAp6B,KAAAumE,WAAAka,EAAA,GAAAvkF,SAWAsyE,4BAAA,SAAAnnE,EAAAknE,GAOA,OANAG,GAAA,EACAjG,EAAA,EACAmG,EAAA5uE,KAAAotE,sBACAwT,EAAA5gF,KAAAumE,WAAAqI,EAAA5G,WAAA5sE,MAAA,IACAiuE,EAAArpE,KAAAkpE,mBAAAlpE,KAAAunE,cAAAvnE,KAAAyY,IAAAm2D,EAAA5G,YAEA/rE,EAAA,EAAqBA,EAAA2yE,EAAAx0C,UAA8Bn+B,IACnDwsE,GAAAzoE,KAAA2uE,gBAAA3uE,KAAAyY,IAAAmoE,EAAA3kF,GAAA2yE,EAAA5G,UAAA/rE,EAGA,KAAAA,EAAA,EAAiBA,EAAA2yE,EAAA5G,UAA8B/rE,IAC/CyyE,GAAA1uE,KAAAqnE,iBAAArnE,KAAAyY,IAAAxc,EASA,OANA,WAAAsyE,IACAG,IAAA,EAAA1uE,KAAAkmE,mBAAAlmE,KAAAqnE,iBAAArnE,KAAAyY,IAAAm2D,EAAA5G,WACAhoE,KAAAg4B,WAAAh4B,KAAAquE,uBAAAO,EAAA5G,UAAA4G,EAAAx0C,YACA,EAAAp6B,KAAAkmE,qBAIAtwD,IAAA84D,EACA/4D,KAAA8yD,EACAgG,SAAApF,IAIAwX,YAAA,WACA,MAAA5tE,MAAAS,IAAA1T,KAAAs/E,SAAAt/E,KAAAu/E,kBASAn8C,SAAA,SAAAmI,GACA,MAAAvhC,GAAA6G,KAAAzJ,OAAA0b,OAAA9iB,KAAA0jB,UAAA,WAAA6nB,IACA+zC,SAAAt/E,KAAAs/E,cAYAt1E,EAAAq1E,QAAAtnE,WAAA,SAAA3Q,EAAAiL,GACA,GAAAyuE,GAAA,GAAA92E,GAAAq1E,QAAAj4E,EAAA2xB,KAAA/V,EAAA5b,GAEA,OADAiL,MAAAyuE,GACAA,GAMA92E,EAAAq1E,QAAAI,4BAAA,WACA,OACA9/B,IAAA,EACAN,IAAA,EACAE,IAAA,EACAE,IAAA,EACAC,IAAA,EACA1+B,IAAA,EACAs+B,IAAA,EACAE,IAAA,EACAwP,KAAA,KAIC34D,SAGD,WAMA,GAAA0qF,GAAA/2E,OAAAC,OAAA/I,UAAA45C,eAEA9wC,QAAAC,OAAA/I,UAAA45C,gBAAA,SAAAhB,EAAAjlB,EACA4lB,EAAAC,EAAAjC,EAAAkC,EAAAZ,GAEA,GAAA9kC,GAAA4f,EAAAlqB,MACA,MAAAsK,YAAAjL,QAAAq1E,SAQA,MAAA0B,GAAA5/E,KAAA6I,OAAAC,OAAA/I,UAAA44C,EAAAjlB,EACA4lB,EAAAC,EAAAjC,EAAAkC,EAAAZ,EARA,IAAA4X,GAAA18C,EAAA/K,OAAA4vC,EAAAtlC,EAAAqgB,EAAA7Z,QAAA/F,EAAA/K,MAAA+K,EAAAm7B,aACA,OAAAuhB,IAAA18C,EAAA4rE,eACA5rE,EAAApK,IAAA,QAAA8mD,IACA,GAFA,QAgBA3nD,OAAAinC,MAAA/vC,UAAA8/E,2BAAA,WACA,sBAAAh3E,QAAAq1E,QAGA,OAAApjF,GAAA+D,KAAA2R,SAAAzV,OAAsCD,KACtC,GAAA+D,KAAA2R,SAAA1V,YAAA+N,QAAAq1E,QAEA,WADAr/E,MAAAyyD,sBAAAzoD,OAAAq1E,QAAAI,+BAMA,IAAAz8D,GAAAhZ,OAAA6G,KAAAzJ,OAAA4b,KAEAhZ,QAAA6G,KAAAzJ,OAAA0b,OAAA9Y,OAAAq1E,QAAAn+E,WAIA00E,wBAAA,WACA,OAAA3kE,KAAAjR,MAAA6/E,UACA7/E,KAAAumE,WAAAt1D,UACAjR,MAAA8mB,OAAA9mB,KAAA6/E,UAAA5uE,GAAAwjD,OAWAsiB,sBAAA,SAAA/O,EAAA5tC,EAAAtsB,GAEA,GAAApX,GAAAsJ,KAAA6/E,UAAA7X,EACAA,GAAAtxE,EAAA+9D,KACAr6B,EAAA1jC,EAAA4yB,OAAA8Q,EAEApwB,OAAA2hE,MAAAzqE,UAAA61E,sBAAAn9E,MAAAoG,MAAAgoE,EAAA5tC,EAAAtsB,KASA6oE,yBAAA,SAAA3O,EAAA5tC,EAAAq8C,GAEA,GAAA//E,GAAAsJ,KAAA6/E,UAAA7X,EACAA,GAAAtxE,EAAA+9D,KACAr6B,EAAA1jC,EAAA4yB,OAAA8Q,EAEApwB,OAAA2hE,MAAAzqE,UAAAy1E,yBAAA/8E,MAAAoG,MAAAgoE,EAAA5tC,EAAAq8C,KAUAG,gBAAA,SAAA5O,EAAA1+C,GAEA,GAAAqoD,GAAA3uD,EAAAhjB,KAAA8mB,QACApwB,EAAAsJ,KAAA6/E,UAAA7X,EAGAA,GAAAtxE,EAAA+9D,IAEA,QAAAA,KAAAz0D,MAAA8mB,OAAA,CACA,GAAAqwD,GAAAr8E,SAAA25D,EAAA,GAEA0iB,GAAAnP,IACAhoE,KAAA8mB,OAAAqwD,EAAA7tD,GAAAqoD,EAAAwF,GAEAxF,EAAAwF,EAAA7tD,UACAtpB,MAAA8mB,OAAAqwD,MAcAE,uBAAA,SAAAC,GAGA,IAFA,GAAAC,GAAAv3E,KAAAumE,WAAA+Q,EAAA,GAEAt3E,KAAA6/E,UAAAvI,EAAA,IAAAt3E,KAAA6/E,UAAAvI,EAAA,GAAA7iB,OAAAz0D,KAAA6/E,UAAAvI,EAAA,GAAA7iB,MACA8iB,EAAAv3E,KAAAumE,WAAA+Q,EAAA,GAAAC,EAEAD,GAGA,OAAAC,IAQAtB,kBAAA,SAAAF,EAAAroE,GAEA,GAAAkhE,GAAA5uE,KAAAotE,oBAAA1/D,GACAhX,EAAAsJ,KAAA6/E,UAAAjR,EAAA5G,WACAA,EAAAtxE,EAAA+9D,KACAr6B,EAAA1jC,EAAA4yB,OAAAslD,EAAAx0C,SACAp6B,MAAAo3E,mBAAArB,EAAAnH,EAAA5G,EAAA5tC,SAMA,WACA,GAAA6mD,GAAAj3E,OAAA2hE,MAAAzqE,UAAA+3E,+BAWAjvE,QAAA2hE,MAAAzqE,UAAA+3E,gCAAA,SAAAH,EAAAC,EAAA7uE,EAAAwD,EAAAuT,GACAvT,EAAAuzE,EAAA9/E,KAAAnB,KAAA84E,EAAAC,EAAA7uE,EAAAwD,EAAAuT,EAQA,QAJAigE,GAAA,EACAR,EAAA,EAGAzkF,EAAA,EAAmBA,EAAA+D,KAAAumE,WAAArqE,SACnBglF,GAAAlhF,KAAAumE,WAAAtqE,GAAAC,SAEAglF,EAAAR,GAAAhzE,IAH+CzR,IAO/C,OAAA+D,KAAA+4B,KAAAmoD,EAAAR,IAAA,MAAA1gF,KAAA+4B,KAAAmoD,EAAAR,IACAA,GAIA,OAAAhzE,GAAAzR,EAAAykF,MAKA,WAeA,QAAAjmF,SAAAD,EAAAgyC,EAAAn6B,GACA,GAAA8uE,GAAAC,IAAA5qF,MAAAgE,EAGA2mF,GAAAtmF,OACAsmF,EAAAtmF,KAAA,IAAAsmF,EAAAlmF,SAAAiJ,QAAA,iBAIA,IAAAm9E,GAAA,IAAAF,EAAAlmF,SAAAiJ,QAAA,UAAAo9E,MAAAC,KACAlmF,EAAAgmF,EAAA5mF,SACAO,SAAAmmF,EAAAnmF,SACAH,KAAAsmF,EAAAtmF,KACA0F,KAAA4gF,EAAA5gF,KACA9E,OAAA,OACS,SAAAgQ,GACT,GAAAkd,GAAA,EACA6jB,IACA/gC,EAAA+1E,YAAAh1C,GAEA/gC,EAAAlQ,GAAA,iBACA8W,EAAAsW,KAEAld,EAAAlQ,GAAA,gBAAA81B,GACA,MAAA5lB,EAAAg2E,aACA94D,GAAA0I,MAKAh2B,GAAAE,GAAA,iBAAA8uB,GACAA,EAAAq3D,QAAAjyE,QAAAkyE,aACA33E,OAAA2B,IAAA,uCAAAw1E,EAAAnmF,SAAA,IAAAmmF,EAAAtmF,MAGAmP,OAAA2B,IAAA0e,EAAAljB,SAEAkL,EAAA,QAGAhX,EAAAK,MAIA,QAAAkmF,WAAArhF,EAAA8R,GACA,GAAAwvE,GAAAlqF,oBAAA,IACAkqF,GAAAC,SAAAvhF,EAAA,SAAA8pB,EAAAze,GACA,GAAAye,EAEA,KADArgB,QAAA2B,IAAA0e,GACAA,CAGAhY,GAAAzG,KAjEA,sBAAAgC,WAAA,mBAAA7W,QAAA,CAIA,GAAA8iC,WAAAliC,oBAAA,KAAAkiC,UACAunD,IAAAzpF,oBAAA,KACA4pF,KAAA5pF,oBAAA,KACA2pF,MAAA3pF,oBAAA,KAEAsS,OAAAtS,oBAAA,KACA8S,MAAA9S,oBAAA,KAAA8S,KA4DAT,QAAA6G,KAAAqG,UAAA,SAAA1c,EAAA6X,EAAAxF,GACA,QAAAk1E,GAAAn2E,GACAA,GACAwL,EAAA1M,IAAA,GAAA8E,QAAA5D,EAAA,UAEAwL,EAAA8kD,KAAA1hE,EACA6X,KAAAlR,KAAA0L,EAAAuK,KAGAA,EAAA,KACA/E,KAAAlR,KAAA0L,EAAA,UAGA,GAAAuK,GAAA,GAAA3M,MACAjQ,iBAAAgV,SAAA,IAAAhV,EAAA0J,QAAA,UACAkT,EAAA1M,IAAA0M,EAAA8kD,KAAA1hE,EACA6X,KAAAlR,KAAA0L,EAAAuK,IAEA5c,GAAA,IAAAA,EAAA0J,QAAA,QACA09E,UAAApnF,EAAAunF,GAEAvnF,EACAC,QAAAD,EAAA,SAAAunF,GAGA1vE,KAAAlR,KAAA0L,EAAArS,IAIAwP,OAAAovB,eAAA,SAAA5+B,EAAA6X,EAAAmF,GACAhd,IAAAuL,QAAA,aAAAA,QAAA,YAAAtC,OACA,IAAAjJ,EAAA0J,QAAA,QACA09E,UAAApnF,EAAA,SAAAmuB,GACA3e,OAAA4vB,kBAAAjR,EAAA5Z,WAAAsD,EAAAmF,KAIA/c,QAAAD,EAAA,YAAAmuB,GACA3e,OAAA4vB,kBAAAjR,EAAAtW,EAAAmF,MAKAxN,OAAA4vB,kBAAA,SAAA/iB,EAAAxE,EAAAmF,GACA,GAAA2R,IAAA,GAAA0Q,YAAAE,gBAAAljB,EACA7M,QAAA+sB,iBAAA5N,EAAArZ,gBAAA,SAAA2pB,EAAA1gC,GACAsZ,KAAAonB,EAAA1gC,IACKye,IAGLxN,OAAA6G,KAAAka,UAAA,SAAAvwB,IAAA6X,UACA5X,QAAAD,IAAA,YAAAmuB,MAEAq5D,KAAAr5D,MACAtW,wBAgBArI,OAAAi4E,oBAAA,SAAA/3E,EAAAC,EAAApR,EAAAmpF,GACAA,KAAAnpF,CAEA,IAAA0gB,GAAAzP,OAAA4D,SAAA8L,cAAA,UACAyoE,EAAA,GAAAl4E,QAAAC,GAAA,IAAAC,GAAA,IAAA+3E,GACAE,EAAA,GAAAn4E,QAAAC,GAAA,IAAAC,GAAA,IAAA+3E,EAGAzoE,GAAA3L,SAEA2L,EAAAvP,MAAAi4E,EAAAj4E,MACAuP,EAAAtP,OAAAg4E,EAAAh4E,OACApR,QACAA,EAAAopF,aACAppF,EAAAqpF,iBACA,IAAAC,GAAAr4E,OAAAC,QAAAD,OAAA07B,aACA48C,EAAA,GAAAD,GAAA5oE,EAAA1gB,EAMA,OALAupF,GAAAH,aACAG,EAAAF,kBACAE,EAAA/6C,iBAAA46C,EAAAxoE,WAAA,MACA2oE,EAAAxrC,aAAAsrC,EAAAzoE,WAAA,MACA2oE,EAAAC,KAAAt4E,OAAAs4E,KACAD,EAGA,IAAAE,mBAAAx4E,OAAA07B,aAAAxkC,UAAA0kC,WACA57B,QAAA07B,aAAAxkC,UAAA0kC,YAAA,SAAA5d,EAAAjvB,GACAivB,KAAAhe,OAAA4D,SAAA8L,cAAA,UACA1Z,KAAAmiF,WAAA,GAAAl4E,QAAA+d,EAAA9d,MAAA8d,EAAA7d,QACAnK,KAAAoiF,gBAAA,GAAAn4E,QAAA+d,EAAA9d,MAAA8d,EAAA7d,QACAq4E,kBAAArhF,KAAAnB,KAAAgoB,EAAAjvB,GACAiH,KAAAunC,iBAAAvnC,KAAAmiF,WAAAxoE,WAAA,MACA3Z,KAAA82C,aAAA92C,KAAAoiF,gBAAAzoE,WAAA,MACA3Z,KAAAuiF,KAAAt4E,OAAAs4E,MAIAv4E,OAAA07B,aAAAxkC,UAAAuhF,gBAAA,WACA,MAAAziF,MAAAmiF,WAAAM,mBAGAz4E,OAAA07B,aAAAxkC,UAAAwhF,iBAAA,SAAA70D,GACA,MAAA7tB,MAAAmiF,WAAAO,iBAAA70D,IAGA7jB,OAAA07B,aAAAxkC,UAAA4lC,mBAAA,WACA,GAAA9mC,KAAAonC,mBASA,MALApnC,MAAAsnC,cAAAnf,aAAA,QAAAnoB,KAAAkK,MAAAF,OAAAqG,kBACArQ,KAAAsnC,cAAAnf,aAAA,SAAAnoB,KAAAmK,OAAAH,OAAAqG,kBACArQ,KAAAmiF,WAAAj4E,MAAAlK,KAAAkK,MAAAF,OAAAqG,iBACArQ,KAAAmiF,WAAAh4E,OAAAnK,KAAAmK,OAAAH,OAAAqG,iBACArQ,KAAAunC,iBAAAlR,MAAArsB,OAAAqG,iBAAArG,OAAAqG,kBACArQ,MAEAgK,OAAAC,SACAD,OAAAC,OAAA/I,UAAA4lC,mBAAA98B,OAAA07B,aAAAxkC,UAAA4lC,mBAGA,IAAA67C,2BAAA34E,OAAA07B,aAAAxkC,UAAAsnC,sBACAx+B,QAAA07B,aAAAxkC,UAAAsnC,uBAAA,SAAAv3B,EAAAzZ,GAGA,MAFAmrF,2BAAAxhF,KAAAnB,KAAAiR,EAAAzZ,GACAwI,KAAAmiF,WAAAlxE,GAAAzZ,EACAwI,MAEAgK,OAAAC,SACAD,OAAAC,OAAA/I,UAAAsnC,uBAAAx+B,OAAA07B,aAAAxkC,UAAAsnC,8BjB+3C8BrnC,KAAK9K,QAASsB,oBAAoB,IAAI6X,OAAQ7X,oBAAoB,MAI1FirF,IACA,SAASxsF,EAAQC,EAASsB,GkB/p1BhC,GAAAkrF,GAAAlrF,EAAA,IACAmrF,EAAAnrF,EAAA,KACAorF,EAAAprF,EAAA,KACAqrF,EAAArrF,EAAA,IAEA2C,EAAAlE,EAAAC,QAAA,SAAAq1B,EAAAhxB,GACA,GAAAimD,GAAA3gD,IACA2gD,GAAAsiC,UAAA,EACAtiC,EAAAj1B,MACAi1B,EAAAh4B,QAEAg4B,EAAAuiC,KAAAxoF,EAAAO,UAAA,cACAP,EAAAE,MACAF,EAAAG,KAAA,IAAAH,EAAAG,KAAA,KACAH,EAAA6F,MAAA,KAGA,mBAAA7F,GAAAyoF,kBACAzoF,EAAAyoF,iBAAA,EAGA,KAASz3D,EAAAy3D,gBAAAzoF,EAAAyoF,gBACT,MAAA9mF,IAEA,GAAA3B,EAAA0oF,aAAA,IAAkC13D,EAAA03D,aAAA1oF,EAAA0oF,aAClC,MAAA/mF,IAcA,GAZAqvB,EAAAG,KACAnxB,EAAAe,QAAA,MACAklD,EAAAuiC,KACA,GAGAx3D,EAAApU,QAAA,SAAA/M,GACAo2C,EAAA0iC,KAAA,WAAAxnF,OAAA,mBAGA8kD,EAAA2iC,YAEA5oF,EAAAwT,QAEA,OADAhV,GAAAqqF,EAAA7oF,EAAAwT,SACAjS,EAAA,EAAuBA,EAAA/C,EAAAgD,OAAiBD,IAAA,CACxC,GAAA7C,GAAAF,EAAA+C,EACA,IAAA0kD,EAAA6iC,oBAAApqF,GAAA,CACA,GAAA5B,GAAAkD,EAAAwT,QAAA9U,EACAunD,GAAA8iC,UAAArqF,EAAA5B,IAIAkD,EAAAwF,MAEAF,KAAAyjF,UAAA,yBAAAV,EAAAz7E,KAAA5M,EAAAwF,MAGA,IAAAwjF,GAAA,GAAAZ,EACAY,GAAAnoF,GAAA,mBACAolD,EAAA0iC,KAAA,WAGAK,EAAAnoF,GAAA,mBACAolD,EAAA0iC,KAAA,WAAAK,KAGAA,EAAAnoF,GAAA,iBAAA8uB,GACAs2B,EAAA0iC,KAAA,QAAAh5D,KAGAqB,EAAAN,mBAAA,WAIAM,EAAAi4D,WACAD,EAAAE,OAAAl4D,IAIAs3D,GAAA1oF,EAAAuoF,GAEAvoF,EAAA4G,UAAAuiF,UAAA,SAAArqF,EAAA5B,GACAwI,KAAAsjF,SAAAlqF,EAAAyK,eAAArM,GAGA8C,EAAA4G,UAAA2iF,UAAA,SAAAzqF,GACA,MAAA4G,MAAAsjF,SAAAlqF,EAAAyK,gBAGAvJ,EAAA4G,UAAA4iF,aAAA,SAAA1qF,SACA4G,MAAAsjF,SAAAlqF,EAAAyK,gBAGAvJ,EAAA4G,UAAA6iF,MAAA,SAAAz+E,GACAtF,KAAA2oB,KAAA/wB,KAAA0N,IAGAhL,EAAA4G,UAAAk9C,QAAA,SAAA94C,GACAtF,KAAA0rB,IAAAi4D,WAAA,EACA3jF,KAAA0rB,IAAAe,QACAzsB,KAAAqjF,KAAA,UAGA/oF,EAAA4G,UAAAxF,IAAA,SAAA4J,GACAmlB,SAAAnlB,GAAAtF,KAAA2oB,KAAA/wB,KAAA0N,EAGA,QADApM,GAAAqqF,EAAAvjF,KAAAsjF,UACArnF,EAAA,EAAmBA,EAAA/C,EAAAgD,OAAiBD,IAAA,CACpC,GAAA7C,GAAAF,EAAA+C,GACAzE,EAAAwI,KAAAsjF,SAAAlqF,EACA,IAAA82B,EAAA14B,GACA,OAAAqN,GAAA,EAA2BA,EAAArN,EAAA0E,OAAkB2I,IAC7C7E,KAAA0rB,IAAAI,iBAAA1yB,EAAA5B,EAAAqN,QAGA7E,MAAA0rB,IAAAI,iBAAA1yB,EAAA5B,GAGA,OAAAwI,KAAA2oB,KAAAzsB,OACA8D,KAAA0rB,IAAAK,KAAA,QAEA,oBAAA/rB,MAAA2oB,KAAA,GACA3oB,KAAA0rB,IAAAK,KAAA/rB,KAAA2oB,KAAAvxB,KAAA,SAEA,IAAA84B,EAAAlwB,KAAA2oB,KAAA,KAEA,OADAA,MACA1sB,EAAA,EAAuBA,EAAA+D,KAAA2oB,KAAAzsB,OAAsBD,IAC7C0sB,EAAA/wB,KAAAgC,MAAA+uB,EAAA3oB,KAAA2oB,KAAA1sB,GAEA+D,MAAA0rB,IAAAK,KAAApD,OAEA,YAAAxtB,KAAA7D,OAAA4J,UAAA6N,SAAA5N,KAAAnB,KAAA2oB,KAAA,MAEA,OADAtX,GAAA,EACApV,EAAA,EAAuBA,EAAA+D,KAAA2oB,KAAAzsB,OAAsBD,IAC7CoV,GAAArR,KAAA2oB,KAAA1sB,GAAAC,MAKA,QAHAysB,GAAA,GAAA3oB,MAAA2oB,KAAA,eAAAtX,GACAvM,EAAA,EAEA7I,EAAA,EAAuBA,EAAA+D,KAAA2oB,KAAAzsB,OAAsBD,IAE7C,OADA2e,GAAA5a,KAAA2oB,KAAA1sB,GACA4I,EAAA,EAA2BA,EAAA+V,EAAA1e,OAAc2I,IACzC8jB,EAAA7jB,KAAA8V,EAAA/V,EAGA7E,MAAA0rB,IAAAK,KAAApD,OAEA,IAAAq7D,EAAAhkF,KAAA2oB,KAAA,IACA3oB,KAAA0rB,IAAAK,KAAA/rB,KAAA2oB,KAAA,QAEA,CAEA,OADAA,GAAA,GACA1sB,EAAA,EAAuBA,EAAA+D,KAAA2oB,KAAAzsB,OAAsBD,IAC7C0sB,GAAA3oB,KAAA2oB,KAAA1sB,GAAA8S,UAEA/O,MAAA0rB,IAAAK,KAAApD,KAKAruB,EAAA2pF,eACA,iBACA,kBACA,iCACA,gCACA,aACA,iBACA,SACA,UACA,4BACA,OACA,SACA,OACA,aACA,SACA,UACA,KACA,UACA,oBACA,UACA,aACA,OAGA3pF,EAAA4G,UAAAsiF,oBAAA,SAAAU,GACA,QAAAA,GACAhgF,EAAA5J,EAAA2pF,cAAAC,EAAArgF,oBAGA,IAAA0/E,GAAAjsF,OAAA4B,MAAA,SAAA6H,GACA,GAAA7H,KACA,QAAAE,KAAA2H,GAAA7H,EAAAtB,KAAAwB,EACA,OAAAF,IAGAg3B,EAAAhP,MAAAgP,SAAA,SAAAi0D,GACA,yBAAA7sF,OAAA4J,UAAA6N,SAAA5N,KAAAgjF,IAGAjgF,EAAA,SAAAigF,EAAA3vE,GACA,GAAA2vE,EAAAjgF,QAAA,MAAAigF,GAAAjgF,QAAAsQ,EACA,QAAAvY,GAAA,EAAmBA,EAAAkoF,EAAAjoF,OAAeD,IAClC,GAAAkoF,EAAAloF,KAAAuY,EAAA,MAAAvY,EAEA,WAGA+nF,EAAA,SAAAjjF,GACA,yBAAAqjF,OAAArjF,YAAAqjF,QACA,mBAAAC,cAAAtjF,YAAAsjF,eACA,mBAAAC,WAAAvjF,YAAAujF,WAAA,WlBuq1BMC,IACA,SAASnuF,EAAQC,EAASsB,GmBx21BhC,QAAA6sF,GAAAd,GAGA,OAFA/1B,GAAA+1B,EAAAe,wBAAArpF,MAAA,SACA8S,KACAjS,EAAA,EAAmBA,EAAA0xD,EAAAzxD,OAAkBD,IAAA,CACrC,GAAAw4D,GAAA9G,EAAA1xD,EACA,SAAAw4D,EAAA,CAEA,GAAA79B,GAAA69B,EAAA1wD,MAAA,mBACA,IAAA6yB,EAAA,CACA,GAAAx9B,GAAAw9B,EAAA,GAAA/yB,cAAArM,EAAAo/B,EAAA,EAEAnM,UAAAvc,EAAA9U,GAEA82B,EAAAhiB,EAAA9U,IACA8U,EAAA9U,GAAAxB,KAAAJ,GAGA0W,EAAA9U,IAAA8U,EAAA9U,GAAA5B,GAIA0W,EAAA9U,GAAA5B,MAIA0W,GAAAumD,IAAA,GAGA,MAAAvmD,GA3CA,GAAA20E,GAAAlrF,EAAA,IACAkZ,EAAAlZ,EAAA,IAEAmrF,EAAA1sF,EAAAC,QAAA,SAAAqtF,GACA1jF,KAAAspB,OAAA,EACAtpB,KAAA0kF,UAAA,EAGA7zE,GAAAmyE,SAAAF,EAAAD,EAEA,IAAA8B,IACAC,WAAA,EACAC,SAAA,EAkCA/B,GAAA5hF,UAAA4jF,YAAA,SAAAp5D,GACA,GAAAq5D,GAAA/8E,OAAA0jB,EAAA03D,cAAAv/E,aACA,gBAAAkhF,EAAAr5D,EAAAs5D,cAAAt5D,EAAAjgB,SACA,gBAAAs5E,EAAAr5D,EAAAjgB,SACAigB,EAAA6N,cAGAupD,EAAA5hF,UAAA2iF,UAAA,SAAAzqF,GACA,MAAA4G,MAAAkO,QAAA9U,EAAAyK,gBAGAi/E,EAAA5hF,UAAA0iF,OAAA,SAAAF,GACA,OAAAA,EAAAr4D,YAAAs5D,EAAAE,QAAA,CACA,IACA7kF,KAAAyhF,WAAAiC,EAAA9mD,OACA58B,KAAAkO,QAAAs2E,EAAAd,GAEA,MAAAr5D,GACAs6D,EAAAE,SAAA,EAGAF,EAAAE,SACA7kF,KAAAqjF,KAAA,aAGA,IAAAsB,EAAAC,WAAA,IAAAlB,EAAAr4D,WAAA,CACA,IACArrB,KAAAyhF,aACAzhF,KAAAyhF,WAAAiC,EAAA9mD,OACA58B,KAAAkO,QAAAs2E,EAAAd,GACA1jF,KAAAqjF,KAAA,UAGA,MAAAh5D,IAEA,IACArqB,KAAAilF,UAAAvB,GAEA,MAAAr5D,GACAs6D,EAAAC,WAAA,OAGA,KAAAlB,EAAAr4D,aACArrB,KAAAyhF,aACAzhF,KAAAyhF,WAAAiC,EAAA9mD,OACA58B,KAAAqjF,KAAA,UAEArjF,KAAAilF,UAAAvB,GAEAA,EAAA1rE,MACAhY,KAAAqjF,KAAA,QAAArjF,KAAA8kF,YAAApB,IAEA1jF,KAAAqjF,KAAA,OAEArjF,KAAAqjF,KAAA,WAIAP,EAAA5hF,UAAA+jF,UAAA,SAAAvB,GACA,GAAAwB,GAAAllF,KAAA8kF,YAAApB,EACA,OAAAwB,GAAAn2E,WAAAhL,MAAA,gBACA/D,KAAAqjF,KAAA,UAAA8B,YAAAD,EAAAllF,KAAAspB,cACAtpB,KAAAspB,OAAA47D,EAAAE,kBAGAF,EAAAhpF,OAAA8D,KAAAspB,SACAtpB,KAAAqjF,KAAA,OAAA6B,EAAA7gF,MAAArE,KAAAspB,SACAtpB,KAAAspB,OAAA47D,EAAAhpF,SAIA,IAAAg0B,GAAAhP,MAAAgP,SAAA,SAAAi0D,GACA,yBAAA7sF,OAAA4J,UAAA6N,SAAA5N,KAAAgjF,KnB+31BMkB,IACA,SAASjvF,EAAQC,EAASsB,GoBt/1BhC,GAAA0C,GAAA1C,EAAA,KAEAmL,EAAA1M,EAAAC,OAEA,QAAA+C,KAAAiB,GACAA,EAAAirF,eAAAlsF,KAAA0J,EAAA1J,GAAAiB,EAAAjB,GAGA0J,GAAArI,QAAA,SAAAC,EAAAC,GAGA,MAFAD,WACAA,EAAAQ,OAAA,QACAb,EAAAI,QAAA0G,KAAAnB,KAAAtF,EAAAC,KpB8/1BM4qF,IACA,SAASnvF,EAAQC,GqBr/1BvB,YAKA,SAAAivF,GAAAvkF,EAAAkQ,GACA,MAAA3Z,QAAA4J,UAAAokF,eAAAnkF,KAAAJ,EAAAkQ,GAGA7a,EAAAC,QAAA,SAAAmvF,EAAAC,EAAA3pD,EAAA/iC,GACA0sF,KAAA,IACA3pD,KAAA,GACA,IAAA/6B,KAEA,oBAAAykF,IAAA,IAAAA,EAAAtpF,OACA,MAAA6E,EAGA,IAAA2kF,GAAA,KACAF,KAAApqF,MAAAqqF,EAEA,IAAAE,GAAA,GACA5sF,IAAA,gBAAAA,GAAA4sF,UACAA,EAAA5sF,EAAA4sF,QAGA,IAAAt0E,GAAAm0E,EAAAtpF,MAEAypF,GAAA,GAAAt0E,EAAAs0E,IACAt0E,EAAAs0E,EAGA,QAAA1pF,GAAA,EAAiBA,EAAAoV,IAASpV,EAAA,CAC1B,GAEA2pF,GAAAC,EAAA/gF,EAAAuP,EAFAG,EAAAgxE,EAAAvpF,GAAA8J,QAAA2/E,EAAA,OACAh+E,EAAA8M,EAAAtQ,QAAA43B,EAGAp0B,IAAA,GACAk+E,EAAApxE,EAAA1Q,OAAA,EAAA4D,GACAm+E,EAAArxE,EAAA1Q,OAAA4D,EAAA,KAEAk+E,EAAApxE,EACAqxE,EAAA,IAGA/gF,EAAAR,mBAAAshF,GACAvxE,EAAA/P,mBAAAuhF,GAEAP,EAAAvkF,EAAA+D,GAEKoc,MAAAgP,QAAAnvB,EAAA+D,IACL/D,EAAA+D,GAAAlN,KAAAyc,GAEAtT,EAAA+D,IAAA/D,EAAA+D,GAAAuP,GAJAtT,EAAA+D,GAAAuP,EAQA,MAAAtT,KrBkh2BM+kF,IACA,SAAS1vF,EAAQC,GsB5k2BvB,YAEA,IAAA0vF,GAAA,SAAA1xE,GACA,aAAAA,IACA,aACA,MAAAA,EAEA,eACA,MAAAA,GAAA,cAEA,cACA,MAAA2xE,UAAA3xE,KAAA,EAEA,SACA,UAIAje,GAAAC,QAAA,SAAA0K,EAAA0kF,EAAA3pD,EAAA9hC,GAOA,MANAyrF,MAAA,IACA3pD,KAAA,IACA,OAAA/6B,IACAA,EAAA0pB,QAGA,gBAAA1pB,GACAzJ,OAAA4B,KAAA6H,GAAArK,IAAA,SAAAoO,GACA,GAAAmhF,GAAArgF,mBAAAmgF,EAAAjhF,IAAAg3B,CACA,OAAA5a,OAAAgP,QAAAnvB,EAAA+D,IACA/D,EAAA+D,GAAApO,IAAA,SAAA2d,GACA,MAAA4xE,GAAArgF,mBAAAmgF,EAAA1xE,MACSjd,KAAAquF,GAETQ,EAAArgF,mBAAAmgF,EAAAhlF,EAAA+D,OAEK1N,KAAAquF,GAILzrF,EACA4L,mBAAAmgF,EAAA/rF,IAAA8hC,EACAl2B,mBAAAmgF,EAAAhlF,IAFA,KtB2m2BMmlF,IACA,SAAS9vF,EAAQC,EAASsB,GuBxq2BhC,YAEAtB,GAAA8vF,OAAA9vF,EAAAG,MAAAmB,EAAA,KACAtB,EAAAkP,OAAAlP,EAAAqD,UAAA/B,EAAA,MvB+q2BMyuF,IACA,SAAShwF,EAAQC,EAASsB,GAE/B,GAAI0uF,IwBrr2BL,SAAAjwF,EAAA2c,IACC,SAAAoL,GAgED,QAAAnG,GAAAjL,GACA,KAAAu5E,YAAAC,EAAAx5E,IAWA,QAAArW,GAAAoa,EAAAiL,GAGA,IAFA,GAAA7f,GAAA4U,EAAA5U,OACAzF,KACAyF,KACAzF,EAAAyF,GAAA6f,EAAAjL,EAAA5U,GAEA,OAAAzF,GAaA,QAAA+vF,GAAA3vE,EAAAkF,GACA,GAAA9E,GAAAJ,EAAAzb,MAAA,KACA3E,EAAA,EACAwgB,GAAA/a,OAAA,IAGAzF,EAAAwgB,EAAA,OACAJ,EAAAI,EAAA,IAGAJ,IAAA9Q,QAAA0gF,EAAA,IACA,IAAAC,GAAA7vE,EAAAzb,MAAA,KACAurF,EAAAjwF,EAAAgwF,EAAA3qE,GAAA3kB,KAAA,IACA,OAAAX,GAAAkwF,EAgBA,QAAAC,GAAA/vE,GAMA,IALA,GAGArf,GACAqvF,EAJAl/E,KACAm/E,EAAA,EACA5qF,EAAA2a,EAAA3a,OAGA4qF,EAAA5qF,GACA1E,EAAAqf,EAAA9R,WAAA+hF,KACAtvF,GAAA,OAAAA,GAAA,OAAAsvF,EAAA5qF,GAEA2qF,EAAAhwE,EAAA9R,WAAA+hF,KACA,cAAAD,GACAl/E,EAAA/P,OAAA,KAAAJ,IAAA,UAAAqvF,GAAA,QAIAl/E,EAAA/P,KAAAJ,GACAsvF,MAGAn/E,EAAA/P,KAAAJ,EAGA,OAAAmQ,GAWA,QAAAo/E,GAAAj2E,GACA,MAAApa,GAAAoa,EAAA,SAAAtZ,GACA,GAAAmQ,GAAA,EAOA,OANAnQ,GAAA,QACAA,GAAA,MACAmQ,GAAAq/E,EAAAxvF,IAAA,eACAA,EAAA,WAAAA,GAEAmQ,GAAAq/E,EAAAxvF,KAEGJ,KAAA,IAYH,QAAA6vF,GAAAC,GACA,MAAAA,GAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAC,EAcA,QAAAC,GAAAC,EAAAC,GAGA,MAAAD,GAAA,OAAAA,EAAA,SAAAC,IAAA,GAQA,QAAAC,GAAAjxF,EAAAkxF,EAAAC,GACA,GAAA3iF,GAAA,CAGA,KAFAxO,EAAAmxF,EAAA9zE,EAAArd,EAAAoxF,GAAApxF,GAAA,EACAA,GAAAqd,EAAArd,EAAAkxF,GAC+BlxF,EAAAqxF,EAAAC,GAAA,EAAmC9iF,GAAAqiF,EAClE7wF,EAAAqd,EAAArd,EAAAqxF,EAEA,OAAAh0E,GAAA7O,GAAA6iF,EAAA,GAAArxF,KAAAsiD,IAUA,QAAAutC,GAAA5+E,GAEA,GAEAsgF,GAIAC,EACAjjF,EACA6I,EACAq6E,EACAp2B,EACA7sD,EACAuiF,EACApyE,EAEA+yE,EAfArgF,KACAsgF,EAAA1gF,EAAArL,OAEAD,EAAA,EACAsmB,EAAA2lE,EACAC,EAAAC,CAqBA,KALAN,EAAAvgF,EAAAnD,YAAAikF,GACAP,EAAA,IACAA,EAAA,GAGAjjF,EAAA,EAAaA,EAAAijF,IAAWjjF,EAExB0C,EAAAxC,WAAAF,IAAA,KACAmT,EAAA;AAEArQ,EAAA/P,KAAA2P,EAAAxC,WAAAF,GAMA,KAAA6I,EAAAo6E,EAAA,EAAAA,EAAA,IAAyCp6E,EAAAu6E,GAAqB,CAO9D,IAAAF,EAAA9rF,EAAA01D,EAAA,EAAA7sD,EAAAqiF,EAEAz5E,GAAAu6E,GACAjwE,EAAA,iBAGAqvE,EAAAJ,EAAA1/E,EAAAxC,WAAA2I,OAEA25E,GAAAF,GAAAE,EAAA1zE,GAAA20E,EAAArsF,GAAA01D,KACA35C,EAAA,YAGA/b,GAAAorF,EAAA11B,EACA18C,EAAAnQ,GAAAqjF,EAAAI,EAAAzjF,GAAAqjF,EAAAP,IAAA9iF,EAAAqjF,IAEAd,EAAApyE,GAfsDnQ,GAAAqiF,EAmBtDa,EAAAb,EAAAlyE,EACA08C,EAAAh+C,EAAA20E,EAAAN,IACAhwE,EAAA,YAGA25C,GAAAq2B,CAIAH,GAAAlgF,EAAAzL,OAAA,EACAisF,EAAAZ,EAAAtrF,EAAA8rF,EAAAF,EAAA,GAAAE,GAIAp0E,EAAA1X,EAAA4rF,GAAAS,EAAA/lE,GACAvK,EAAA,YAGAuK,GAAA5O,EAAA1X,EAAA4rF,GACA5rF,GAAA4rF,EAGAlgF,EAAAZ,OAAA9K,IAAA,EAAAsmB,GAIA,MAAAwkE,GAAAp/E,GAUA,QAAApC,GAAAgC,GACA,GAAAgb,GACAjsB,EACAkyF,EACAC,EACAN,EACAtjF,EACA+xB,EACA8H,EACA55B,EACAmQ,EACA87C,EAGAk3B,EAEAS,EACAV,EACAW,EANAhhF,IAoBA,KAXAJ,EAAAq/E,EAAAr/E,GAGA0gF,EAAA1gF,EAAArL,OAGAqmB,EAAA2lE,EACA5xF,EAAA,EACA6xF,EAAAC,EAGAvjF,EAAA,EAAaA,EAAAojF,IAAiBpjF,EAC9BksD,EAAAxpD,EAAA1C,GACAksD,EAAA,KACAppD,EAAA/P,KAAAovF,EAAAj2B,GAeA,KAXAy3B,EAAAC,EAAA9gF,EAAAzL,OAMAusF,GACA9gF,EAAA/P,KAAAywF,GAIAG,EAAAP,GAAA,CAIA,IAAArxD,EAAA0xD,EAAAzjF,EAAA,EAA0BA,EAAAojF,IAAiBpjF,EAC3CksD,EAAAxpD,EAAA1C,GACAksD,GAAAxuC,GAAAwuC,EAAAn6B,IACAA,EAAAm6B,EAcA,KARA23B,EAAAF,EAAA,EACA5xD,EAAArU,EAAA5O,GAAA20E,EAAAhyF,GAAAoyF,IACA1wE,EAAA,YAGA1hB,IAAAsgC,EAAArU,GAAAmmE,EACAnmE,EAAAqU,EAEA/xB,EAAA,EAAcA,EAAAojF,IAAiBpjF,EAO/B,GANAksD,EAAAxpD,EAAA1C,GAEAksD,EAAAxuC,KAAAjsB,EAAAgyF,GACAtwE,EAAA,YAGA+4C,GAAAxuC,EAAA,CAEA,IAAAmc,EAAApoC,EAAAwO,EAAAqiF,EACAlyE,EAAAnQ,GAAAqjF,EAAAI,EAAAzjF,GAAAqjF,EAAAP,IAAA9iF,EAAAqjF,IACAzpD,EAAAzpB,GAFkDnQ,GAAAqiF,EAKlDwB,EAAAjqD,EAAAzpB,EACA+yE,EAAAb,EAAAlyE,EACAtN,EAAA/P,KACAovF,EAAAI,EAAAnyE,EAAA0zE,EAAAX,EAAA,KAEAtpD,EAAA/qB,EAAAg1E,EAAAX,EAGArgF,GAAA/P,KAAAovF,EAAAI,EAAA1oD,EAAA,KACAypD,EAAAZ,EAAAjxF,EAAAoyF,EAAAF,GAAAC,GACAnyF,EAAA,IACAkyF,IAIAlyF,IACAisB,EAGA,MAAA5a,GAAAvQ,KAAA,IAcA,QAAAwxF,GAAArhF,GACA,MAAAi/E,GAAAj/E,EAAA,SAAAsP,GACA,MAAAgyE,GAAA1tF,KAAA0b,GACAsvE,EAAAtvE,EAAAxS,MAAA,GAAAR,eACAgT,IAeA,QAAAiyE,GAAAvhF,GACA,MAAAi/E,GAAAj/E,EAAA,SAAAsP,GACA,MAAAkyE,GAAA5tF,KAAA0b,GACA,OAAAtR,EAAAsR,GACAA,IAvdA,GAIAmyE,IAJA,gBAAA3yF,QACAA,EAAAyyB,UAAAzyB,EACA,gBAAAD,QACAA,EAAA0yB,UAAA1yB,EACA,gBAAA2c,MAEAi2E,GAAAj2E,SAAAi2E,GACAA,EAAAjyF,SAAAiyF,GACAA,EAAAroC,OAAAqoC,IAEA7qE,EAAA6qE,EAQA,IAAAnnF,GAGAymF,EAAA,WAGAnB,EAAA,GACAoB,EAAA,EACAX,EAAA,GACAhvC,EAAA,GACA8uC,EAAA,IACAU,EAAA,GACAF,EAAA,IACAG,EAAA,IAGAQ,EAAA,QACAE,EAAA,eACAtC,EAAA,4BAGAF,GACA0C,SAAA,kDACAC,YAAA,iDACAC,gBAAA,iBAIAxB,EAAAR,EAAAoB,EACA50E,EAAAV,KAAAU,MACAqzE,EAAAh/E,OAAAC,YA8aApG,IAMA/J,QAAA,QAQAsxF,MACAjD,OAAAS,EACArhF,OAAAwhF,GAEAZ,SACA5gF,SACAujF,UACAF,aAWAvC,EAAA,WACA,MAAAxkF,IACGV,KAAA9K,EAAAsB,EAAAtB,EAAAD,KAAAq0B,SAAA47D,IAAAjwF,EAAAC,QAAAgwF,KAaFrmF,QxBqr2B6BmB,KAAK9K,EAASsB,EAAoB,IAAIvB,GAAU,WAAa,MAAO4J,WAI5FqpF,IACA,SAASjzF,EAAQC,GyB3s3BvBD,EAAAC,QAAA,y2KzBit3BMizF,IACA,SAASlzF,EAAQC,EAASsB,G0Blt3BhC,GAAAe,GAAAC,EACAC,IACAjB,GAAA,KACAe,EAAAf,EAAA,KACAgB,EAAAhB,EAAA,KACAvB,EAAAC,QAAAqC,MACAtC,EAAAC,QAAAwC,aAAAzC,EAAAC,QAAAD,EAAAC,QAAAD,WACA,IAAA0C,GAAA,kBAAA1C,GAAAC,QAAAD,EAAAC,QAAA0C,UAAA3C,EAAAC,QAAA0C,YAAoH3C,EAAAC,OACpHsC,KACAG,EAAAE,SAAAL,GAEAG,EAAAG,WAAAH,EAAAG,aACA3B,OAAA4B,KAAAN,GAAAO,QAAA,SAAAC,GACA,GAAAhD,GAAAwC,EAAAQ,EACAN,GAAAG,SAAAG,GAAA,WAA6C,MAAAhD,O1B0t3BvCmzF,IACA,SAASnzF,EAAQC,KAMjBmzF,IACA,SAASpzF,EAAQC,KAMjBozF,IACA,SAASrzF,EAAQC","file":"5.2a7b4efc47ecf14f25c0.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 5:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports = module.exports = function (delta) {\n\t  delta = JSON.parse(delta);\n\t  var result = delta.map(function (op) {\n\t    var html = op.insert;\n\t    if (typeof op.insert !== 'string') {\n\t      if (op.insert.formula) {\n\t        html = window.katex.renderToString(op.insert.formula);\n\t      } else {\n\t        return '';\n\t      }\n\t    }\n\t    if (op.attributes && op.attributes.bold) {\n\t      html = '<strong>' + html + '</strong>';\n\t    }\n\t\n\t    if (op.insert.formula) {\n\t      html = window.katex.renderToString(op.insert.formula);\n\t    }\n\t\n\t    return html;\n\t  }).join('');\n\t\n\t  return result;\n\t};\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: {}\n\t};\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".card{background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/reuseable/Card.vue\"],\"names\":[],\"mappings\":\"AACA,MACE,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC\",\"file\":\"Card.vue\",\"sourcesContent\":[\"\\n.card {\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 18:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(17);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 20:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div> <div class=card> <slot name=content></slot> </div> </div> \";\n\n/***/ },\n\n/***/ 21:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__webpack_require__(18)\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(20)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(31), __esModule: true };\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core  = __webpack_require__(11)\n\t  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return $JSON.stringify.apply($JSON, arguments);\n\t};\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  languages: [{ name: 'English', id: 'eng' }, { name: '中文', id: 'cht' }]\n\t};\n\n/***/ },\n\n/***/ 176:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*!\\n * Quill Editor v1.1.0\\n * https://quilljs.com/\\n * Copyright (c) 2014, Jason Chen\\n * Copyright (c) 2013, salesforce.com\\n */.ql-container{box-sizing:border-box;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;margin:0;position:relative}.ql-container.ql-disabled .ql-tooltip{visibility:hidden}.ql-clipboard{left:-100000px;height:1px;overflow-y:hidden;position:absolute;top:50%}.ql-clipboard p{margin:0;padding:0}.ql-editor{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}.ql-editor blockquote,.ql-editor h1,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor h5,.ql-editor h6,.ql-editor ol,.ql-editor p,.ql-editor pre,.ql-editor ul{margin:0;padding:0;counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol,.ql-editor ul{padding-left:1.5em}.ql-editor ol>li,.ql-editor ul>li{list-style-type:none}.ql-editor ul>li:before{content:'\\\\25CF'}.ql-editor li:before{display:inline-block;margin-right:.3em;text-align:right;white-space:nowrap;width:1.2em}.ql-editor li:not(.ql-direction-rtl):before{margin-left:-1.5em}.ql-editor ol li,.ql-editor ul li{padding-left:1.5em}.ql-editor ol li{counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;counter-increment:list-num}.ql-editor ol li:before{content:counter(list-num,decimal) '. '}.ql-editor ol li.ql-indent-1{counter-increment:list-1}.ql-editor ol li.ql-indent-1:before{content:counter(list-1,lower-alpha) '. '}.ql-editor ol li.ql-indent-1{counter-reset:list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-2{counter-increment:list-2}.ql-editor ol li.ql-indent-2:before{content:counter(list-2,lower-roman) '. '}.ql-editor ol li.ql-indent-2{counter-reset:list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-3{counter-increment:list-3}.ql-editor ol li.ql-indent-3:before{content:counter(list-3,decimal) '. '}.ql-editor ol li.ql-indent-3{counter-reset:list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-4{counter-increment:list-4}.ql-editor ol li.ql-indent-4:before{content:counter(list-4,lower-alpha) '. '}.ql-editor ol li.ql-indent-4{counter-reset:list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-5{counter-increment:list-5}.ql-editor ol li.ql-indent-5:before{content:counter(list-5,lower-roman) '. '}.ql-editor ol li.ql-indent-5{counter-reset:list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-6{counter-increment:list-6}.ql-editor ol li.ql-indent-6:before{content:counter(list-6,decimal) '. '}.ql-editor ol li.ql-indent-6{counter-reset:list-7 list-8 list-9}.ql-editor ol li.ql-indent-7{counter-increment:list-7}.ql-editor ol li.ql-indent-7:before{content:counter(list-7,lower-alpha) '. '}.ql-editor ol li.ql-indent-7{counter-reset:list-8 list-9}.ql-editor ol li.ql-indent-8{counter-increment:list-8}.ql-editor ol li.ql-indent-8:before{content:counter(list-8,lower-roman) '. '}.ql-editor ol li.ql-indent-8{counter-reset:list-9}.ql-editor ol li.ql-indent-9{counter-increment:list-9}.ql-editor ol li.ql-indent-9:before{content:counter(list-9,decimal) '. '}.ql-editor .ql-indent-1:not(.ql-direction-rtl){padding-left:3em}.ql-editor li.ql-indent-1:not(.ql-direction-rtl){padding-left:4.5em}.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:3em}.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:4.5em}.ql-editor .ql-indent-2:not(.ql-direction-rtl){padding-left:6em}.ql-editor li.ql-indent-2:not(.ql-direction-rtl){padding-left:7.5em}.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:6em}.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:7.5em}.ql-editor .ql-indent-3:not(.ql-direction-rtl){padding-left:9em}.ql-editor li.ql-indent-3:not(.ql-direction-rtl){padding-left:10.5em}.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:9em}.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:10.5em}.ql-editor .ql-indent-4:not(.ql-direction-rtl){padding-left:12em}.ql-editor li.ql-indent-4:not(.ql-direction-rtl){padding-left:13.5em}.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:12em}.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:13.5em}.ql-editor .ql-indent-5:not(.ql-direction-rtl){padding-left:15em}.ql-editor li.ql-indent-5:not(.ql-direction-rtl){padding-left:16.5em}.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:15em}.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:16.5em}.ql-editor .ql-indent-6:not(.ql-direction-rtl){padding-left:18em}.ql-editor li.ql-indent-6:not(.ql-direction-rtl){padding-left:19.5em}.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:18em}.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:19.5em}.ql-editor .ql-indent-7:not(.ql-direction-rtl){padding-left:21em}.ql-editor li.ql-indent-7:not(.ql-direction-rtl){padding-left:22.5em}.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:21em}.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:22.5em}.ql-editor .ql-indent-8:not(.ql-direction-rtl){padding-left:24em}.ql-editor li.ql-indent-8:not(.ql-direction-rtl){padding-left:25.5em}.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:24em}.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:25.5em}.ql-editor .ql-indent-9:not(.ql-direction-rtl){padding-left:27em}.ql-editor li.ql-indent-9:not(.ql-direction-rtl){padding-left:28.5em}.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:27em}.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:28.5em}.ql-editor .ql-video{display:block;max-width:100%}.ql-editor .ql-video.ql-align-center{margin:0 auto}.ql-editor .ql-video.ql-align-right{margin:0 0 0 auto}.ql-editor .ql-bg-black{background-color:#000}.ql-editor .ql-bg-red{background-color:#e60000}.ql-editor .ql-bg-orange{background-color:#f90}.ql-editor .ql-bg-yellow{background-color:#ff0}.ql-editor .ql-bg-green{background-color:#008a00}.ql-editor .ql-bg-blue{background-color:#06c}.ql-editor .ql-bg-purple{background-color:#93f}.ql-editor .ql-color-white{color:#fff}.ql-editor .ql-color-red{color:#e60000}.ql-editor .ql-color-orange{color:#f90}.ql-editor .ql-color-yellow{color:#ff0}.ql-editor .ql-color-green{color:#008a00}.ql-editor .ql-color-blue{color:#06c}.ql-editor .ql-color-purple{color:#93f}.ql-editor .ql-font-serif{font-family:Georgia,Times New Roman,serif}.ql-editor .ql-font-monospace{font-family:Monaco,Courier New,monospace}.ql-editor .ql-size-small{font-size:.75em}.ql-editor .ql-size-large{font-size:1.5em}.ql-editor .ql-size-huge{font-size:2.5em}.ql-editor .ql-direction-rtl{direction:rtl;text-align:inherit}.ql-editor .ql-align-center{text-align:center}.ql-editor .ql-align-justify{text-align:justify}.ql-editor .ql-align-right{text-align:right}.ql-editor.ql-blank:before{color:rgba(0,0,0,.6);content:attr(data-placeholder);font-style:italic;pointer-events:none;position:absolute}.ql-snow.ql-toolbar:after,.ql-snow .ql-toolbar:after{clear:both;content:'';display:table}.ql-snow.ql-toolbar button,.ql-snow .ql-toolbar button{background:none;border:none;cursor:pointer;display:inline-block;float:left;height:24px;padding:3px 5px;width:28px}.ql-snow.ql-toolbar button svg,.ql-snow .ql-toolbar button svg{float:left;height:100%}.ql-snow.ql-toolbar input.ql-image[type=file],.ql-snow .ql-toolbar input.ql-image[type=file]{display:none}.ql-snow.ql-toolbar .ql-picker-item.ql-selected,.ql-snow .ql-toolbar .ql-picker-item.ql-selected,.ql-snow.ql-toolbar .ql-picker-item:hover,.ql-snow .ql-toolbar .ql-picker-item:hover,.ql-snow.ql-toolbar .ql-picker-label.ql-active,.ql-snow .ql-toolbar .ql-picker-label.ql-active,.ql-snow.ql-toolbar .ql-picker-label:hover,.ql-snow .ql-toolbar .ql-picker-label:hover,.ql-snow.ql-toolbar button.ql-active,.ql-snow .ql-toolbar button.ql-active,.ql-snow.ql-toolbar button:hover,.ql-snow .ql-toolbar button:hover{color:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:hover .ql-fill,.ql-snow .ql-toolbar button:hover .ql-fill,.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill{fill:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow.ql-toolbar button.ql-active .ql-stroke,.ql-snow .ql-toolbar button.ql-active .ql-stroke,.ql-snow.ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar button:hover .ql-stroke,.ql-snow .ql-toolbar button:hover .ql-stroke,.ql-snow.ql-toolbar button:hover .ql-stroke-mitter,.ql-snow .ql-toolbar button:hover .ql-stroke-mitter{stroke:#06c}.ql-snow,.ql-snow *{box-sizing:border-box}.ql-snow .ql-hidden{display:none}.ql-snow .ql-out-bottom,.ql-snow .ql-out-top{visibility:hidden}.ql-snow .ql-tooltip{position:absolute}.ql-snow .ql-tooltip a{cursor:pointer;text-decoration:none}.ql-snow .ql-formats{display:inline-block;vertical-align:middle}.ql-snow .ql-formats:after{clear:both;content:'';display:table}.ql-snow .ql-stroke{fill:none;stroke:#444;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}.ql-snow .ql-stroke-mitter{fill:none;stroke:#444;stroke-mitterlimit:10;stroke-width:2}.ql-snow .ql-fill,.ql-snow .ql-stroke.ql-fill{fill:#444}.ql-snow .ql-empty{fill:none}.ql-snow .ql-even{fill-rule:evenodd}.ql-snow .ql-stroke.ql-thin,.ql-snow .ql-thin{stroke-width:1}.ql-snow .ql-transparent{opacity:.4}.ql-snow .ql-direction svg:last-child{display:none}.ql-snow .ql-direction.ql-active svg:last-child{display:inline}.ql-snow .ql-direction.ql-active svg:first-child{display:none}.ql-snow .ql-editor h1{font-size:2em}.ql-snow .ql-editor h2{font-size:1.5em}.ql-snow .ql-editor h3{font-size:1.17em}.ql-snow .ql-editor h4{font-size:1em}.ql-snow .ql-editor h5{font-size:.83em}.ql-snow .ql-editor h6{font-size:.67em}.ql-snow .ql-editor a{text-decoration:underline}.ql-snow .ql-editor blockquote{border-left:4px solid #ccc;margin-bottom:5px;margin-top:5px;padding-left:16px}.ql-snow .ql-editor code,.ql-snow .ql-editor pre{background-color:#f0f0f0;border-radius:3px}.ql-snow .ql-editor pre{white-space:pre-wrap;margin-bottom:5px;margin-top:5px;padding:5px 10px}.ql-snow .ql-editor code{font-size:85%;padding-bottom:2px;padding-top:2px}.ql-snow .ql-editor code:after,.ql-snow .ql-editor code:before{content:\\\"\\\\A0\\\";letter-spacing:-2px}.ql-snow .ql-editor pre.ql-syntax{background-color:#23241f;color:#f8f8f2;overflow:visible}.ql-snow .ql-editor img{max-width:100%}.ql-snow .ql-picker{color:#444;display:inline-block;float:left;font-size:14px;font-weight:500;height:24px;position:relative;vertical-align:middle}.ql-snow .ql-picker-label{cursor:pointer;display:inline-block;height:100%;padding-left:8px;padding-right:2px;position:relative;width:100%}.ql-snow .ql-picker-label:before{display:inline-block;line-height:22px}.ql-snow .ql-picker-options{background-color:#fff;display:none;min-width:100%;padding:4px 8px;position:absolute;white-space:nowrap}.ql-snow .ql-picker-options .ql-picker-item{cursor:pointer;display:block;padding-bottom:5px;padding-top:5px}.ql-snow .ql-picker.ql-expanded .ql-picker-label{color:#ccc;z-index:2}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill{fill:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke{stroke:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-options{display:block;margin-top:-1px;top:100%;z-index:1}.ql-snow .ql-color-picker,.ql-snow .ql-icon-picker{width:28px}.ql-snow .ql-color-picker .ql-picker-label,.ql-snow .ql-icon-picker .ql-picker-label{padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-label svg,.ql-snow .ql-icon-picker .ql-picker-label svg{right:4px}.ql-snow .ql-icon-picker .ql-picker-options{padding:4px 0}.ql-snow .ql-icon-picker .ql-picker-item{height:24px;width:24px;padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-options{padding:3px 5px;width:152px}.ql-snow .ql-color-picker .ql-picker-item{border:1px solid transparent;float:left;height:16px;margin:2px;padding:0;width:16px}.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg{position:absolute;margin-top:-9px;right:0;top:50%;width:18px}.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label='']):before{content:attr(data-label)}.ql-snow .ql-picker.ql-header{width:98px}.ql-snow .ql-picker.ql-header .ql-picker-item:before,.ql-snow .ql-picker.ql-header .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"1\\\"]:before{content:'Heading 1'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"2\\\"]:before{content:'Heading 2'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"3\\\"]:before{content:'Heading 3'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"4\\\"]:before{content:'Heading 4'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"5\\\"]:before{content:'Heading 5'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"6\\\"]:before{content:'Heading 6'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before{font-size:2em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before{font-size:1.5em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before{font-size:1.17em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before{font-size:1em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before{font-size:.83em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before{font-size:.67em}.ql-snow .ql-picker.ql-font{width:108px}.ql-snow .ql-picker.ql-font .ql-picker-item:before,.ql-snow .ql-picker.ql-font .ql-picker-label:before{content:'Sans Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]:before{content:'Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]:before{content:'Monospace'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before{font-family:Georgia,Times New Roman,serif}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before{font-family:Monaco,Courier New,monospace}.ql-snow .ql-picker.ql-size{width:98px}.ql-snow .ql-picker.ql-size .ql-picker-item:before,.ql-snow .ql-picker.ql-size .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]:before{content:'Small'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]:before{content:'Large'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]:before{content:'Huge'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before{font-size:10px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before{font-size:18px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before{font-size:32px}.ql-snow .ql-color-picker.ql-background .ql-picker-item{background-color:#fff}.ql-snow .ql-color-picker.ql-color .ql-picker-item{background-color:#000}.ql-toolbar.ql-snow{border:1px solid #ccc;box-sizing:border-box;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding:8px}.ql-toolbar.ql-snow .ql-formats{margin-right:15px}.ql-toolbar.ql-snow .ql-picker-label{border:1px solid transparent}.ql-toolbar.ql-snow .ql-picker-options{border:1px solid transparent;box-shadow:0 2px 8px rgba(0,0,0,.2)}.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label,.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options{border-color:#ccc}.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item.ql-selected,.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item:hover{border-color:#000}.ql-toolbar.ql-snow+.ql-container.ql-snow{border-top:0}.ql-snow .ql-tooltip{background-color:#fff;border:1px solid #ccc;box-shadow:0 0 5px #ddd;color:#444;margin-top:10px;padding:5px 12px;white-space:nowrap}.ql-snow .ql-tooltip:before{content:\\\"Visit URL:\\\";line-height:26px;margin-right:8px}.ql-snow .ql-tooltip input[type=text]{display:none;border:1px solid #ccc;font-size:13px;height:26px;margin:0;padding:3px 5px;width:170px}.ql-snow .ql-tooltip a.ql-preview{display:inline-block;max-width:200px;overflow-x:hidden;text-overflow:ellipsis;vertical-align:top}.ql-snow .ql-tooltip a.ql-action:after{border-right:1px solid #ccc;content:'Edit';margin-left:16px;padding-right:8px}.ql-snow .ql-tooltip a.ql-remove:before{content:'Remove';margin-left:8px}.ql-snow .ql-tooltip a{line-height:26px}.ql-snow .ql-tooltip.ql-editing a.ql-preview,.ql-snow .ql-tooltip.ql-editing a.ql-remove{display:none}.ql-snow .ql-tooltip.ql-editing input[type=text]{display:inline-block}.ql-snow .ql-tooltip.ql-editing a.ql-action:after{border-right:0;content:'Save';padding-right:0}.ql-snow .ql-tooltip[data-mode=link]:before{content:\\\"Enter link:\\\"}.ql-snow .ql-tooltip[data-mode=formula]:before{content:\\\"Enter formula:\\\"}.ql-snow .ql-tooltip[data-mode=video]:before{content:\\\"Enter video:\\\"}.ql-snow a{color:#06c}.ql-container.ql-snow{border:1px solid #ccc}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 205:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(176);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(83)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./quill.snow.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./quill.snow.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 213:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 222:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = module.exports;\n\tvar EventEmitter = __webpack_require__(92).EventEmitter;\n\tvar Request = __webpack_require__(449);\n\tvar url = __webpack_require__(336)\n\t\n\thttp.request = function (params, cb) {\n\t    if (typeof params === 'string') {\n\t        params = url.parse(params)\n\t    }\n\t    if (!params) params = {};\n\t    if (!params.host && !params.port) {\n\t        params.port = parseInt(window.location.port, 10);\n\t    }\n\t    if (!params.host && params.hostname) {\n\t        params.host = params.hostname;\n\t    }\n\t\n\t    if (!params.protocol) {\n\t        if (params.scheme) {\n\t            params.protocol = params.scheme + ':';\n\t        } else {\n\t            params.protocol = window.location.protocol;\n\t        }\n\t    }\n\t\n\t    if (!params.host) {\n\t        params.host = window.location.hostname || window.location.host;\n\t    }\n\t    if (/:/.test(params.host)) {\n\t        if (!params.port) {\n\t            params.port = params.host.split(':')[1];\n\t        }\n\t        params.host = params.host.split(':')[0];\n\t    }\n\t    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n\t    \n\t    var req = new Request(new xhrHttp, params);\n\t    if (cb) req.on('response', cb);\n\t    return req;\n\t};\n\t\n\thttp.get = function (params, cb) {\n\t    params.method = 'GET';\n\t    var req = http.request(params, cb);\n\t    req.end();\n\t    return req;\n\t};\n\t\n\thttp.Agent = function () {};\n\thttp.Agent.defaultMaxSockets = 4;\n\t\n\tvar xhrHttp = (function () {\n\t    if (typeof window === 'undefined') {\n\t        throw new Error('no window object present');\n\t    }\n\t    else if (window.XMLHttpRequest) {\n\t        return window.XMLHttpRequest;\n\t    }\n\t    else if (window.ActiveXObject) {\n\t        var axs = [\n\t            'Msxml2.XMLHTTP.6.0',\n\t            'Msxml2.XMLHTTP.3.0',\n\t            'Microsoft.XMLHTTP'\n\t        ];\n\t        for (var i = 0; i < axs.length; i++) {\n\t            try {\n\t                var ax = new(window.ActiveXObject)(axs[i]);\n\t                return function () {\n\t                    if (ax) {\n\t                        var ax_ = ax;\n\t                        ax = null;\n\t                        return ax_;\n\t                    }\n\t                    else {\n\t                        return new(window.ActiveXObject)(axs[i]);\n\t                    }\n\t                };\n\t            }\n\t            catch (e) {}\n\t        }\n\t        throw new Error('ajax not supported in this browser')\n\t    }\n\t    else {\n\t        throw new Error('ajax not supported in this browser');\n\t    }\n\t})();\n\t\n\thttp.STATUS_CODES = {\n\t    100 : 'Continue',\n\t    101 : 'Switching Protocols',\n\t    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n\t    200 : 'OK',\n\t    201 : 'Created',\n\t    202 : 'Accepted',\n\t    203 : 'Non-Authoritative Information',\n\t    204 : 'No Content',\n\t    205 : 'Reset Content',\n\t    206 : 'Partial Content',\n\t    207 : 'Multi-Status',               // RFC 4918\n\t    300 : 'Multiple Choices',\n\t    301 : 'Moved Permanently',\n\t    302 : 'Moved Temporarily',\n\t    303 : 'See Other',\n\t    304 : 'Not Modified',\n\t    305 : 'Use Proxy',\n\t    307 : 'Temporary Redirect',\n\t    400 : 'Bad Request',\n\t    401 : 'Unauthorized',\n\t    402 : 'Payment Required',\n\t    403 : 'Forbidden',\n\t    404 : 'Not Found',\n\t    405 : 'Method Not Allowed',\n\t    406 : 'Not Acceptable',\n\t    407 : 'Proxy Authentication Required',\n\t    408 : 'Request Time-out',\n\t    409 : 'Conflict',\n\t    410 : 'Gone',\n\t    411 : 'Length Required',\n\t    412 : 'Precondition Failed',\n\t    413 : 'Request Entity Too Large',\n\t    414 : 'Request-URI Too Large',\n\t    415 : 'Unsupported Media Type',\n\t    416 : 'Requested Range Not Satisfiable',\n\t    417 : 'Expectation Failed',\n\t    418 : 'I\\'m a teapot',              // RFC 2324\n\t    422 : 'Unprocessable Entity',       // RFC 4918\n\t    423 : 'Locked',                     // RFC 4918\n\t    424 : 'Failed Dependency',          // RFC 4918\n\t    425 : 'Unordered Collection',       // RFC 4918\n\t    426 : 'Upgrade Required',           // RFC 2817\n\t    428 : 'Precondition Required',      // RFC 6585\n\t    429 : 'Too Many Requests',          // RFC 6585\n\t    431 : 'Request Header Fields Too Large',// RFC 6585\n\t    500 : 'Internal Server Error',\n\t    501 : 'Not Implemented',\n\t    502 : 'Bad Gateway',\n\t    503 : 'Service Unavailable',\n\t    504 : 'Gateway Time-out',\n\t    505 : 'HTTP Version Not Supported',\n\t    506 : 'Variant Also Negotiates',    // RFC 2295\n\t    507 : 'Insufficient Storage',       // RFC 4918\n\t    509 : 'Bandwidth Limit Exceeded',\n\t    510 : 'Not Extended',               // RFC 2774\n\t    511 : 'Network Authentication Required' // RFC 6585\n\t};\n\n/***/ },\n\n/***/ 336:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar punycode = __webpack_require__(494);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(467);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n\n/***/ 338:\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var object =  true ? exports : this; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error;\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '');\n\t    if (input.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n\n/***/ 349:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(30);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\t__webpack_require__(443);\n\t\n\tvar _deltaRender = __webpack_require__(5);\n\t\n\tvar _deltaRender2 = _interopRequireDefault(_deltaRender);\n\t\n\tvar _Subjects = __webpack_require__(22);\n\t\n\tvar _Subjects2 = _interopRequireDefault(_Subjects);\n\t\n\tvar _Languages = __webpack_require__(97);\n\t\n\tvar _Languages2 = _interopRequireDefault(_Languages);\n\t\n\tvar _Card = __webpack_require__(21);\n\t\n\tvar _Card2 = _interopRequireDefault(_Card);\n\t\n\tvar _store = __webpack_require__(54);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _actions = __webpack_require__(61);\n\t\n\tvar _getters = __webpack_require__(62);\n\t\n\t__webpack_require__(205);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  ready: function ready() {\n\t    this.newQuestion.language = this.getUserLanguage;\n\t  },\n\t  components: {\n\t    Subject: _Subjects2.default,\n\t    Card: _Card2.default\n\t  },\n\t  methods: {\n\t    renderDelta: function renderDelta(delta) {\n\t      return (0, _deltaRender2.default)(delta);\n\t    },\n\t    readImg: function readImg(e) {\n\t      var c = this.$els.fabricprocess;\n\t      var canvas = new window.fabric.Canvas(c, { width: 600, height: 300 });\n\t      c.fabric = canvas;\n\t      var reader = new window.FileReader();\n\t      reader.onload = function (event) {\n\t        var imgObj = new window.Image();\n\t        imgObj.src = event.target.result;\n\t        imgObj.onload = function () {\n\t          var image = new window.fabric.Image(imgObj);\n\t          image.set({\n\t            angle: 0,\n\t            padding: 10,\n\t            cornersize: 10,\n\t            height: 160,\n\t            width: imgObj.width * (160 / imgObj.height)\n\t          });\n\t          canvas.centerObject(image);\n\t          canvas.add(image);\n\t          canvas.renderAll();\n\t        };\n\t      };\n\t      reader.readAsDataURL(e.target.files[0]);\n\t    },\n\t    outputImg: function outputImg() {\n\t      var c = this.$els.fabricprocess;\n\t      var canvas = c.fabric;\n\t      this.$http.get('/api/qiniu/uptoken').then(function (response) {\n\t        console.log(response.data.uptoken);\n\t        this.uploadImage(canvas.getObjects()[0].toDataURL(), response.data.uptoken);\n\t      });\n\t    },\n\t    publishQuestion: function publishQuestion() {\n\t      this.publishButton.disabled = true;\n\t      if (this.checkComplete()) {\n\t        this.newQuestion.delta = (0, _stringify2.default)(this.editorPreview.question.ops);\n\t\n\t        this.newQuestion.choices[0] = (0, _stringify2.default)(this.editorPreview.answer.mc[0].ops);\n\t        this.newQuestion.choices[1] = (0, _stringify2.default)(this.editorPreview.answer.mc[1].ops);\n\t        this.newQuestion.choices[2] = (0, _stringify2.default)(this.editorPreview.answer.mc[2].ops);\n\t        this.newQuestion.choices[3] = (0, _stringify2.default)(this.editorPreview.answer.mc[3].ops);\n\t\n\t        this.$http.post('/api/manage-question/questions', this.newQuestion).then(function (response) {\n\t          this.$showToast('發佈成功');\n\t          this.publishButton.disabled = false;\n\t          this.newQuestion.context = '';\n\t          this.newQuestion.choices = ['', '', '', ''];\n\t          this.newQuestion.answer = {\n\t            mc: 1\n\t          };\n\t          this.editorPreview = {\n\t            image: {\n\t              label: '',\n\t              type: 'qiniu',\n\t              data: '',\n\t              show: false\n\t            },\n\t            question: { ops: [] },\n\t            answer: {\n\t              mc: [{ ops: [] }, { ops: [] }, { ops: [] }, { ops: [] }]\n\t            }\n\t          };\n\t          this.$broadcast('clear-editor');\n\t\n\t          this.questionInbox.questions.push(response.data);\n\t        }, function (response) {\n\t          this.$showToast('發佈失敗');\n\t          this.publishButton.disabled = false;\n\t          console.log(response);\n\t        });\n\t      } else {\n\t        this.publishButton.disabled = false;\n\t        this.$showToast('信息不完整');\n\t      }\n\t    },\n\t    checkComplete: function checkComplete() {\n\t      var contentComplete = this.editorPreview.question.ops.length !== 0;\n\t      var answerComplete = this.editorPreview.answer.mc[0].ops.length !== 0 && this.editorPreview.answer.mc[1].ops.length !== 0 && this.editorPreview.answer.mc[2].ops.length !== 0 && this.editorPreview.answer.mc[3].ops.length !== 0;\n\t\n\t      return contentComplete && answerComplete;\n\t    },\n\t    addTag: function addTag() {\n\t      if (this.tag.trim() !== '') {\n\t        if (this.newQuestion.tags.indexOf(this.tag) === -1) {\n\t          this.newQuestion.tags.push(this.tag);\n\t          this.tag = '';\n\t        } else {\n\t          this.tag = '';\n\t        }\n\t      }\n\t    },\n\t    removeTag: function removeTag(index) {\n\t      this.newQuestion.tags.splice(index, 1);\n\t    },\n\t\n\t    getLatestQuestionsCreatedByMe: function getLatestQuestionsCreatedByMe() {\n\t      this.$http.get('/api/manage-question/mine').then(function (response) {\n\t        document.getElementById('getLatestQuestionsButton').style.display = 'none';\n\t        this.questionInbox.questions = response.data;\n\t      });\n\t    },\n\t    uploadImage: function uploadImage(imageData, token) {\n\t      imageData = imageData.split(',')[1];\n\t      var uptoken = 'UpToken ' + token;\n\t      this.$http.post('http://upload.qiniu.com/putb64/' + imageData.length * 0.75, imageData, { headers: { 'Content-Type': 'application/octet-stream', 'Authorization': uptoken } }).then(function (response) {\n\t        console.log(response.data);\n\t        this.editorPreview.image.data = response.data.key;\n\t        this.newQuestion.images.push(this.editorPreview.image);\n\t      });\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      publishButton: {\n\t        disabled: false\n\t      },\n\t      questionInbox: {\n\t        questions: [],\n\t        show: false\n\t      },\n\t      subjects: _Subjects2.default.subjects,\n\t      languages: _Languages2.default.languages,\n\t      tag: '',\n\t      newQuestion: {\n\t        language: '',\n\t        type: 'mc',\n\t        subject: 'math',\n\t        tags: [],\n\t        tips: '',\n\t        difficulty: 1,\n\t        choices: ['', '', '', ''],\n\t        images: [],\n\t        answer: {\n\t          mc: 0\n\t        },\n\t        delta: ''\n\t      },\n\t      editorPreview: {\n\t        image: {\n\t          label: '',\n\t          type: 'qiniu',\n\t          data: '',\n\t          show: false\n\t        },\n\t        question: { ops: [] },\n\t        answer: {\n\t          mc: [{ ops: [] }, { ops: [] }, { ops: [] }, { ops: [] }]\n\t        }\n\t      }\n\t    };\n\t  },\n\t\n\t  filters: {\n\t    'timestamp': function timestamp(input) {\n\t      return this.$options.filters.calendar(new Date(parseInt(input.toString().substring(0, 8), 16) * 1000), '');\n\t    }\n\t  },\n\t\n\t  store: _store2.default,\n\t  vuex: {\n\t    actions: {\n\t      setUserLanguage: _actions.setUserLanguage\n\t    },\n\t    getters: {\n\t      getUserLanguage: _getters.getUserLanguage\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 397:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"#create-mc-question .set_difficulty i{width:24px;color:#aaa;cursor:pointer}#create-mc-question .difficulty_status{color:#ffc107!important}#create-mc-question .body_wrapper{max-width:800px;margin:32px auto}#create-mc-question .question_preview{padding:8px;border-top:1px solid #ccc;min-height:43px;box-sizing:border-box}#create-mc-question .mc_content,#create-mc-question .question_preview{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;-o-tab-size:4;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}#create-mc-question .mc_content ol,#create-mc-question .mc_content p,#create-mc-question .question_preview ol,#create-mc-question .question_preview p{margin:0}#create-mc-question .toolbar_title{padding:8px;margin:0}#create-mc-question .mc_preview{display:inline-block;width:100%}#create-mc-question .mc_label{padding:16px}#create-mc-question .mc_content{padding-bottom:16px}#create-mc-question .questions_inbox{position:fixed;right:-360px;top:55px;background:#fff;width:360px;box-shadow:0 0 12px #aaa;height:100%;-webkit-transition:right .2s;transition:right .2s}#create-mc-question .questions_inbox.show{right:0}#create-mc-question .questions_inbox .question{padding:8px 16px;border-bottom:1px solid #eee}#create-mc-question .mc_select{cursor:pointer;padding:8px;background:#ddd}#create-mc-question .hightlight-answer{background-color:#009688;color:#fff}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/create-question/Create-mc-question.vue\"],\"names\":[],\"mappings\":\"AAkZA,sCACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AAED,uCACE,uBAAyB,CAC1B,AAED,kCACE,gBAAiB,AACjB,gBAAiB,CAClB,AAED,sCACE,YAAa,AACb,0BAA4B,AAC5B,gBAAiB,AACjB,qBAAuB,CACxB,AAED,sEACE,sBAAuB,AACvB,YAAa,AACb,iBAAkB,AAClB,YAAa,AACb,aAAc,AACd,gBAAiB,AACjB,kBAAmB,AACnB,cAAe,AACZ,WAAY,AACf,gBAAiB,AACjB,gBAAiB,AACjB,qBAAsB,AACtB,oBAAsB,CACvB,AACD,sJACE,QAAS,CACV,AAED,mCACE,YAAa,AACb,QAAS,CACV,AAED,gCACE,qBAAsB,AACtB,UAAW,CACZ,AAED,8BACE,YAAc,CACf,AAED,gCACE,mBAAqB,CACtB,AAED,qCACE,eAAgB,AAChB,aAAc,AACd,SAAU,AACV,gBAAiB,AACjB,YAAa,AACb,yBAA0B,AAC1B,YAAa,AACb,6BAA+B,AAC/B,oBAAuB,CACxB,AAED,0CACE,OAAS,CACV,AAED,+CACE,iBAAkB,AAClB,4BAA6B,CAC9B,AAED,+BACE,eAAgB,AAChB,YAAa,AACb,eAAiB,CAClB,AAED,uCACE,yBAA0B,AAC1B,UAAY,CACb\",\"file\":\"Create-mc-question.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#create-mc-question .set_difficulty i {\\n  width: 24px;\\n  color: #aaa;\\n  cursor: pointer;\\n}\\n\\n#create-mc-question .difficulty_status {\\n  color: #FFC107 !important\\n}\\n\\n#create-mc-question .body_wrapper {\\n  max-width: 800px;\\n  margin:32px auto;\\n}\\n\\n#create-mc-question .question_preview {\\n  padding: 8px;\\n  border-top:  1px solid #ccc;\\n  min-height: 43px;\\n  box-sizing: border-box;\\n}\\n\\n#create-mc-question .question_preview, #create-mc-question .mc_content {\\n  box-sizing: border-box;\\n  cursor: text;\\n  line-height: 1.42;\\n  height: 100%;\\n  outline: none;\\n  overflow-y: auto;\\n  padding: 12px 15px;\\n  -o-tab-size: 4;\\n     tab-size: 4;\\n  -moz-tab-size: 4;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n#create-mc-question .mc_content p,  #create-mc-question .mc_content ol, #create-mc-question .question_preview p,  #create-mc-question .question_preview ol{\\n  margin: 0\\n}\\n\\n#create-mc-question .toolbar_title {\\n  padding: 8px;\\n  margin: 0\\n}\\n\\n#create-mc-question .mc_preview {\\n  display: inline-block;\\n  width: 100%\\n}\\n\\n#create-mc-question .mc_label {\\n  padding: 16px;\\n}\\n\\n#create-mc-question .mc_content {\\n  padding-bottom: 16px;\\n}\\n\\n#create-mc-question .questions_inbox {\\n  position: fixed;\\n  right: -360px;\\n  top: 55px;\\n  background: #fff;\\n  width: 360px;\\n  box-shadow: 0 0 12px #aaa;\\n  height: 100%;\\n  -webkit-transition: right 0.2s;\\n  transition: right 0.2s;\\n}\\n\\n#create-mc-question .questions_inbox.show {\\n  right: 0;\\n}\\n\\n#create-mc-question .questions_inbox .question {\\n  padding: 8px 16px;\\n  border-bottom: 1px solid #eee\\n}\\n\\n#create-mc-question .mc_select {\\n  cursor: pointer;\\n  padding: 8px;\\n  background: #ddd;\\n}\\n\\n#create-mc-question .hightlight-answer {\\n  background-color: #009688;\\n  color: #fff;\\n}\\n\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 428:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(397);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 443:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.6.5\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(548)\n\t    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\tfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\tfabric.fontPaths = { };\n\t\n\t/**\n\t * Cache Object for widths of chars in text rendering.\n\t */\n\tfabric.charWidthsCache = { };\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t    var eventListener = this.__eventListeners[eventName];\n\t    if (handler) {\n\t      eventListener[eventListener.indexOf(handler)] = false;\n\t    }\n\t    else {\n\t      fabric.util.array.fill(eventListener, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      for (eventName in this.__eventListeners) {\n\t        _removeEventListener.call(this, eventName);\n\t      }\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n\t    }\n\t    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n\t      return value !== false;\n\t    });\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n\t   * @see {@link http://fabricjs.com/events|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  _objects: [],\n\t\n\t  /**\n\t   * Adds objects to collection, Canvas or Group, then renders canvas\n\t   * (if `renderOnAddRemove` is not `false`).\n\t   * in case of Group no changes to bounding box are made.\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    if (this._onObjectAdded) {\n\t      for (var i = 0, length = arguments.length; i < length; i++) {\n\t        this._onObjectAdded(arguments[i]);\n\t      }\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded && this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index, somethingRemoved = false;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        somethingRemoved = true;\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects();\n\t    for (var i = 0, len = objects.length; i < len; i++) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      pow = Math.pow,\n\t      abs = Math.abs,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {*} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var v = fabric.util.rotateVector(point, radians);\n\t      return new fabric.Point(v.x, v.y).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Rotates `vector` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} vector The vector to rotate (x and y)\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {Object} The new rotated point\n\t     */\n\t    rotateVector: function(vector, radians) {\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = vector.x * cos - vector.y * sin,\n\t          ry = vector.x * sin + vector.y * cos;\n\t      return {\n\t        x: rx,\n\t        y: ry\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n\t     * @param {Array} points 4 points array\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    makeBoundingBoxFromPoints: function(points) {\n\t      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n\t          minX = fabric.util.array.min(xPoints),\n\t          maxX = fabric.util.array.max(xPoints),\n\t          width = Math.abs(minX - maxX),\n\t          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n\t          minY = fabric.util.array.min(yPoints),\n\t          maxY = fabric.util.array.max(yPoints),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @param {Number} fontSize\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length, i,\n\t          obj = global || fabric.window;\n\t\n\t      for (i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {*} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        if (klass.async) {\n\t          klass.fromObject(o, function (obj, error) {\n\t            if (!error) {\n\t              enlivenedObjects[index] = obj;\n\t              reviver && reviver(o, enlivenedObjects[index]);\n\t            }\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedObjects[index] = klass.fromObject(o);\n\t          reviver && reviver(o, enlivenedObjects[index]);\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @param {String} path Value to set sourcePath to\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.setSourcePath(path);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      /* eslint-disable camelcase */\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      /* eslint-enable camelcase */\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(213).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype, i, propName,\n\t          capitalizedPropName, setterName, getterName;\n\t\n\t      for (i = proto.stateProperties.length; i--; ) {\n\t\n\t        propName = proto.stateProperties[i];\n\t        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\t        setterName = 'set' + capitalizedPropName;\n\t        getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b, is2x2) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n\t        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Decomposes standard 2x2 matrix into transform componentes\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a transformMatrix\n\t     * @return {Object} Components of transform\n\t     */\n\t    qrDecompose: function(a) {\n\t      var angle = atan2(a[1], a[0]),\n\t          denom = pow(a[0], 2) + pow(a[1], 2),\n\t          scaleX = sqrt(denom),\n\t          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n\t          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n\t      return {\n\t        angle: angle  / PiBy180,\n\t        scaleX: scaleX,\n\t        scaleY: scaleY,\n\t        skewX: skewX / PiBy180,\n\t        skewY: 0,\n\t        translateX: a[4],\n\t        translateY: a[5]\n\t      };\n\t    },\n\t\n\t    customTransformMatrix: function(scaleX, scaleY, skewX) {\n\t      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n\t          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n\t      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n\t    },\n\t\n\t    resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.flipX = false;\n\t      target.flipY = false;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true, i, temp,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n\t          l = imageData.data.length;\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (i = 3; i < l; i += 4) {\n\t        temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    },\n\t\n\t    /**\n\t     * Parse preserveAspectRatio attribute from element\n\t     * @param {string} attribute to be parsed\n\t     * @return {Object} an object containing align and meetOrSlice attribute\n\t     */\n\t    parsePreserveAspectRatioAttribute: function(attribute) {\n\t      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n\t          aspectRatioAttrs = attribute.split(' '), align;\n\t\n\t      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t        meetOrSlice = aspectRatioAttrs.pop();\n\t        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t          align = meetOrSlice;\n\t          meetOrSlice = 'meet';\n\t        }\n\t        else if (aspectRatioAttrs.length) {\n\t          align = aspectRatioAttrs.pop();\n\t        }\n\t      }\n\t      //divide align in alignX and alignY\n\t      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t      return {\n\t        meetOrSlice: meetOrSlice,\n\t        alignX: alignX,\n\t        alignY: alignY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {String} [fontFamily] font family to clear\n\t     */\n\t    clearFabricFontCache: function(fontFamily) {\n\t      if (!fontFamily) {\n\t        fabric.charWidthsCache = { };\n\t      }\n\t      else if (fabric.charWidthsCache[fontFamily]) {\n\t        delete fabric.charWidthsCache[fontFamily];\n\t      }\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[], [], [], []],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound = [], bounds = [],\n\t        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot),\n\t        boundCopy = [[], []];\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      boundCopy[0].x = bound[0].x + fx;\n\t      boundCopy[0].y = bound[0].y + fy;\n\t      boundCopy[1].x = bound[1].x + fx;\n\t      boundCopy[1].y = bound[1].y + fy;\n\t      bounds.push(boundCopy[0]);\n\t      bounds.push(boundCopy[1]);\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [],\n\t        bounds = [[], []],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {*} searchElement\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @return {*}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function fill(array, value) {\n\t    var k = array.length;\n\t    while (k--) {\n\t      array[k] = value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    fill: fill,\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Copies all enumerable properties of one object to another\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t  function extend(destination, source, deep) {\n\t    // JScript DontEnum bug is not taken care of\n\t    // the deep clone is for internal use, is not meant to avoid\n\t    // javascript traps or cloning html element or self referenced objects.\n\t    if (deep) {\n\t      if (source instanceof Array) {\n\t        destination = source.map(function(v) {\n\t          return clone(v, deep)\n\t        })\n\t      }\n\t      else if (source instanceof Object) {\n\t        for (var property in source) {\n\t          destination[property] = clone(source[property], deep)\n\t        }\n\t      }\n\t      else {\n\t        // this sounds odd for an extend but is ok for recursive use\n\t        destination = source;\n\t      }\n\t    }\n\t    else {\n\t      for (var property in source) {\n\t        destination[property] = source[property];\n\t      }\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object, deep) {\n\t    return extend({ }, object, deep);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t})();\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var fn = this.constructor.superclass.prototype[methodName];\n\t    return (arguments.length > 1)\n\t      ? fn.apply(this, slice.call(arguments, 1))\n\t      : fn.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      element.addEventListener(eventName, handler, false);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      element.removeEventListener(eventName, handler, false);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t        return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t      },\n\t\n\t      pointerY = function(event) {\n\t        return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t      };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    // While loop checks (and then sets element to) .parentNode OR .host\n\t    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n\t    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n\t    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\t    while (element && (element.parentNode || element.host)) {\n\t\n\t      // Set element to element parent, or 'host' in case of ShadowDOM\n\t      element = element.parentNode || element.host;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {String} [options.parameters] parameters to append to url in GET or in body\n\t   * @param {String} [options.body] body to send with POST or PUT request\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body = options.body || options.parameters;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {*} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {*} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* eslint-disable */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* eslint-enable */\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || function() { },\n\t          abort = options.abort || function() { return false; },\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start);\n\t        if (abort()) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        onChange(easing(currentTime, startValue, byValue, duration));\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      //handle the 0/0 case:\n\t      if (c === 0 && a === 0) {\n\t        s = p / (2 * Math.PI) * Math.asin(1);\n\t      }\n\t      else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2 / 2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5 / 2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      capitalize = fabric.util.string.capitalize,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t        return parseFloat(n);\n\t      });\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n\t        continue;\n\t      }\n\t\n\t      if (typeof attributes[attr] === 'undefined') {\n\t        if (!fabric.Object.prototype[attr]) {\n\t          continue;\n\t        }\n\t        attributes[attr] = fabric.Object.prototype[attr];\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _getMultipleNodes(doc, nodeNames) {\n\t    var nodeName, nodeArray = [], nodeList;\n\t    for (var i = 0; i < nodeNames.length; i++) {\n\t      nodeName = nodeNames[i];\n\t      nodeList = doc.getElementsByTagName(nodeName);\n\t      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n\t    }\n\t    return nodeArray;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var angle = args[0],\n\t          x = (args.length === 3) ? args[1] : 0,\n\t          y = (args.length === 3) ? args[2] : 0;\n\t\n\t      matrix[0] = Math.cos(angle);\n\t      matrix[1] = Math.sin(angle);\n\t      matrix[2] = -Math.sin(angle);\n\t      matrix[3] = Math.cos(angle);\n\t      matrix[4] = x - (matrix[0] * x + matrix[2] * y);\n\t      matrix[5] = y - (matrix[1] * x + matrix[3] * y);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewXMatrix(matrix, args) {\n\t      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function skewYMatrix(matrix, args) {\n\t      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              // match !== '' && match != null\n\t              return (!!match);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewXMatrix(matrix, args);\n\t            break;\n\t          case 'skewY':\n\t            skewYMatrix(matrix, args);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = normalizeAttr(pair[0].trim().toLowerCase());\n\t      value = normalizeValue(attr, pair[1].trim());\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = normalizeAttr(prop.toLowerCase());\n\t      value = normalizeValue(attr, style[prop]);\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (id === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\t\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        // el2.firstChild != null\n\t        while (el2.firstChild) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        x = element.getAttribute('x') || 0,\n\t        y = element.getAttribute('y') || 0,\n\t        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { }, translateMatrix = '';\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]);\n\t    minY = -parseFloat(viewBoxAttr[2]);\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\t    if (preserveAspectRatio.alignX !== 'none') {\n\t      //translate all container for the effect of Mid, Min, Max\n\t      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t    }\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (x || y) {\n\t      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n\t    }\n\t\n\t    matrix = translateMatrix + ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.nodeName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      // element.firstChild != null\n\t      while (element.firstChild) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished;\n\t   * It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   */\n\t  fabric.parseSVGDocument = (function() {\n\t\n\t    function hasAncestorWithNodeName(element, nodeName) {\n\t      while (element && (element = element.parentNode)) {\n\t        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n\t          && !element.getAttribute('instantiated_by_use')) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    return function(doc, callback, reviver) {\n\t      if (!doc) {\n\t        return;\n\t      }\n\t\n\t      parseUseDirectives(doc);\n\t\n\t      var startTime = new Date(),\n\t          svgUid =  fabric.Object.__uid++,\n\t          options = applyViewboxTransform(doc),\n\t          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t\n\t      options.svgUid = svgUid;\n\t\n\t      if (descendants.length === 0 && fabric.isLikelyNode) {\n\t        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t        // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t        var arr = [];\n\t        for (var i = 0, len = descendants.length; i < len; i++) {\n\t          arr[i] = descendants[i];\n\t        }\n\t        descendants = arr;\n\t      }\n\t\n\t      var elements = descendants.filter(function(el) {\n\t        applyViewboxTransform(el);\n\t        return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n\t              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t      });\n\t\n\t      if (!elements || (elements && !elements.length)) {\n\t        callback && callback([], {});\n\t        return;\n\t      }\n\t\n\t      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t      // Precedence of rules:   style > class > attribute\n\t      fabric.parseElements(elements, function(instances) {\n\t        fabric.documentParsingTime = new Date() - startTime;\n\t        if (callback) {\n\t          callback(instances, options);\n\t        }\n\t      }, clone(options), reviver);\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n\t   * @namespace\n\t   */\n\t  var svgCache = {\n\t\n\t    /**\n\t     * @param {String} name\n\t     * @param {Function} callback\n\t     */\n\t    has: function (name, callback) {\n\t      callback(false);\n\t    },\n\t\n\t    get: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    set: function () {\n\t      /* NOOP */\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _enlivenCachedObject(cachedObject) {\n\t\n\t    var objects = cachedObject.objects,\n\t        options = cachedObject.options;\n\t\n\t    objects = objects.map(function (o) {\n\t      return fabric[capitalize(o.type)].fromObject(o);\n\t    });\n\t\n\t    return ({ objects: objects, options: options });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _createSVGPattern(markup, canvas, property) {\n\t    if (canvas[property] && canvas[property].toSVG) {\n\t      markup.push(\n\t        '\\t<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n\t          'width=\"', canvas[property].source.width,\n\t          '\" height=\"', canvas[property].source.height,\n\t          '\" patternUnits=\"userSpaceOnUse\">\\n',\n\t        '\\t\\t<image x=\"0\" y=\"0\" ',\n\t        'width=\"', canvas[property].source.width,\n\t        '\" height=\"', canvas[property].source.height,\n\t        '\" xlink:href=\"', canvas[property].source.src,\n\t        '\"></image>\\n\\t</pattern>\\n'\n\t      );\n\t    }\n\t  }\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var tagArray = [\n\t            'linearGradient',\n\t            'radialGradient',\n\t            'svg:linearGradient',\n\t            'svg:radialGradient'],\n\t          elList = _getMultipleNodes(doc, tagArray),\n\t          el, j = 0, id, xlink,\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      j = elList.length;\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) {\n\t          attr = normalizeAttr(attr);\n\t          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\t\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t      if (ownAttributes.font) {\n\t        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n\t      }\n\t      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i += 2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        // IE9 doesn't support textContent, but provides text instead.\n\t        var styleContents = styles[i].textContent || styles[i].text;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t              ruleObj = { }, declaration = match[2].trim(),\n\t              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = normalizeAttr(pair[0]),\n\t                value = normalizeValue(property, pair[1], pair[0]);\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            if (allRules[_rule]) {\n\t              fabric.util.object.extend(allRules[_rule], ruleObj);\n\t            }\n\t            else {\n\t              allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t            }\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n\t     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      svgCache.has(url, function (hasUrl) {\n\t        if (hasUrl) {\n\t          svgCache.get(url, function (value) {\n\t            var enlivedRecord = _enlivenCachedObject(value);\n\t            callback(enlivedRecord.objects, enlivedRecord.options);\n\t          });\n\t        }\n\t        else {\n\t          new fabric.util.request(url, {\n\t            method: 'get',\n\t            onComplete: onComplete\n\t          });\n\t        }\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          callback && callback(null);\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n\t          svgCache.set(url, {\n\t            objects: fabric.util.array.invoke(results, 'toObject'),\n\t            options: options\n\t          });\n\t          callback && callback(results, options);\n\t        }, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n\t        callback(results, options);\n\t      }, reviver);\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces,\n\t     * font URLs for font faces must be collected by developers\n\t     * and are not extracted from the DOM by fabricjs\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function(objects) {\n\t      var markup = '', fontList = { }, obj, fontFamily,\n\t          style, row, rowIndex, _char, charIndex,\n\t          fontPaths = fabric.fontPaths;\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        obj = objects[i];\n\t        fontFamily = obj.fontFamily;\n\t        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n\t          continue;\n\t        }\n\t        fontList[fontFamily] = true;\n\t        if (!obj.styles) {\n\t          continue;\n\t        }\n\t        style = obj.styles;\n\t        for (rowIndex in style) {\n\t          row = style[rowIndex];\n\t          for (charIndex in row) {\n\t            _char = row[charIndex];\n\t            fontFamily = _char.fontFamily;\n\t            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n\t              fontList[fontFamily] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var j in fontList) {\n\t        markup += [\n\t          '\\t\\t@font-face {\\n',\n\t          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n\t          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n\t          '\\t\\t}\\n'\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          '\\t<style type=\"text/css\">',\n\t          '<![CDATA[\\n',\n\t          markup,\n\t          ']]>',\n\t          '</style>\\n'\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function(canvas) {\n\t      var markup = [];\n\t\n\t      _createSVGPattern(markup, canvas, 'backgroundColor');\n\t      _createSVGPattern(markup, canvas, 'overlayColor');\n\t\n\t      return markup.join('');\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_obj, i) {\n\t      setTimeout(function() {\n\t        _obj.createObject(_obj.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      // eslint-disable-next-line no-eq-null, eqeqeq\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    type: 'point',\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * TODO: rename in scalarMultiply in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * TODO: rename in scalarMultiplyEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * TODO: rename in scalarDivide in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * TODO: rename in scalarDivideEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      if (typeof t === 'undefined') {\n\t        t = 0.5;\n\t      }\n\t      t = Math.max(Math.min(1, t), 0);\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return this.lerp(that);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x of this point\n\t     * @param {Number} x\n\t     * @chainable\n\t     */\n\t    setX: function (x) {\n\t      this.x = x;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets y of this point\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setY: function (y) {\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     * @chainable\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    },\n\t\n\t    /**\n\t     * return a cloned instance of the point\n\t     * @return {fabric.Point}\n\t     */\n\t    clone: function () {\n\t      return new Point(this.x, this.y);\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    constructor: Intersection,\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * TODO: rename in intersectSegmentSegment\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * TODO: rename in intersectSegmentPolygon\n\t   * fix detection of coincident\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length,\n\t        b1, b2, inter;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      b1 = points[i];\n\t      b2 = points[(i + 1) % length];\n\t      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {fabric.Point} r1\n\t   * @param {fabric.Point} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        source = [255, 255, 255, 0];\n\t      }\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromHex(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (!source) {\n\t        //if color is not recognize let's make black as canvas does\n\t        source = [0, 0, 0, 1];\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255; g /= 255; b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    grey:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1 / 6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1 / 2) {\n\t      return q;\n\t    }\n\t    if (t < 2 / 3) {\n\t      return p + (q - p) * (2 / 3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1 / 3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1 / 3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3 || value.length === 4),\n\t          isRGBa = (value.length === 8 || value.length === 4),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n\t          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset') || 0,\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStop) {\n\t      for (var position in colorStop) {\n\t        var color = new fabric.Color(colorStop[position]);\n\t        this.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @return {Object}\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY,\n\t        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = fabric.util.object.clone(this.coords),\n\t          markup, commonAttributes;\n\t\n\t      // colorStops must be sorted ascending\n\t      this.colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          '<linearGradient ',\n\t          commonAttributes,\n\t          ' x1=\"', coords.x1,\n\t          '\" y1=\"', coords.y1,\n\t          '\" x2=\"', coords.x2,\n\t          '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        markup = [\n\t          '<radialGradient ',\n\t          commonAttributes,\n\t          ' cx=\"', coords.x2,\n\t          '\" cy=\"', coords.y2,\n\t          '\" r=\"', coords.r2,\n\t          '\" fx=\"', coords.x1,\n\t          '\" fy=\"', coords.y1,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t\n\t      for (var i = 0; i < this.colorStops.length; i++) {\n\t        markup.push(\n\t          '<stop ',\n\t            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n\t            '\" style=\"stop-color:', this.colorStops[i].color,\n\t            (this.colorStops[i].opacity !== null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} object\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(parseFloat(offset), color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type,\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords, ellipseMatrix;\n\t\n\t      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n\t        type = 'linear';\n\t      }\n\t      else {\n\t        type = 'radial';\n\t      }\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      if (options[prop] === 'Infinity') {\n\t        options[prop] = 1;\n\t      }\n\t      else if (options[prop] === '-Infinity') {\n\t        options[prop] = 0;\n\t      }\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry / object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t/**\n\t * Pattern class\n\t * @class fabric.Pattern\n\t * @see {@link http://fabricjs.com/patterns|Pattern demo}\n\t * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n\t * @see {@link fabric.Pattern#initialize} for constructor definition\n\t */\n\tfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t  /**\n\t   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t   * @type String\n\t   * @default\n\t   */\n\t  repeat: 'repeat',\n\t\n\t  /**\n\t   * Pattern horizontal offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetX: 0,\n\t\n\t  /**\n\t   * Pattern vertical offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetY: 0,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Pattern} thisArg\n\t   */\n\t  initialize: function(options) {\n\t    options || (options = { });\n\t\n\t    this.id = fabric.Object.__uid++;\n\t\n\t    if (options.source) {\n\t      if (typeof options.source === 'string') {\n\t        // function string\n\t        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t          this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        }\n\t        else {\n\t          // img src string\n\t          var _this = this;\n\t          this.source = fabric.util.createImage();\n\t          fabric.util.loadImage(options.source, function(img) {\n\t            _this.source = img;\n\t          });\n\t        }\n\t      }\n\t      else {\n\t        // img element\n\t        this.source = options.source;\n\t      }\n\t    }\n\t    if (options.repeat) {\n\t      this.repeat = options.repeat;\n\t    }\n\t    if (options.offsetX) {\n\t      this.offsetX = options.offsetX;\n\t    }\n\t    if (options.offsetY) {\n\t      this.offsetY = options.offsetY;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of a pattern\n\t   * @return {Object} Object representation of a pattern instance\n\t   */\n\t  toObject: function() {\n\t\n\t    var source;\n\t\n\t    // callback\n\t    if (typeof this.source === 'function') {\n\t      source = String(this.source);\n\t    }\n\t    // <img> element\n\t    else if (typeof this.source.src === 'string') {\n\t      source = this.source.src;\n\t    }\n\t    // <canvas> element\n\t    else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t      source = this.source.toDataURL();\n\t    }\n\t\n\t    return {\n\t      source: source,\n\t      repeat: this.repeat,\n\t      offsetX: this.offsetX,\n\t      offsetY: this.offsetY\n\t    };\n\t  },\n\t\n\t  /* _TO_SVG_START_ */\n\t  /**\n\t   * Returns SVG representation of a pattern\n\t   * @param {fabric.Object} object\n\t   * @return {String} SVG representation of a pattern\n\t   */\n\t  toSVG: function(object) {\n\t    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t        patternWidth = patternSource.width / object.getWidth(),\n\t        patternHeight = patternSource.height / object.getHeight(),\n\t        patternOffsetX = this.offsetX / object.getWidth(),\n\t        patternOffsetY = this.offsetY / object.getHeight(),\n\t        patternImgSrc = '';\n\t    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t      patternHeight = 1;\n\t    }\n\t    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t      patternWidth = 1;\n\t    }\n\t    if (patternSource.src) {\n\t      patternImgSrc = patternSource.src;\n\t    }\n\t    else if (patternSource.toDataURL) {\n\t      patternImgSrc = patternSource.toDataURL();\n\t    }\n\t\n\t    return '<pattern id=\"SVGID_' + this.id +\n\t                  '\" x=\"' + patternOffsetX +\n\t                  '\" y=\"' + patternOffsetY +\n\t                  '\" width=\"' + patternWidth +\n\t                  '\" height=\"' + patternHeight + '\">\\n' +\n\t             '<image x=\"0\" y=\"0\"' +\n\t                    ' width=\"' + patternSource.width +\n\t                    '\" height=\"' + patternSource.height +\n\t                    '\" xlink:href=\"' + patternImgSrc +\n\t             '\"></image>\\n' +\n\t           '</pattern>\\n';\n\t  },\n\t  /* _TO_SVG_END_ */\n\t\n\t  /**\n\t   * Returns an instance of CanvasPattern\n\t   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t   * @return {CanvasPattern}\n\t   */\n\t  toLive: function(ctx) {\n\t    var source = typeof this.source === 'function'\n\t      ? this.source()\n\t      : this.source;\n\t\n\t    // if the image failed to load, return, and allow rest to continue loading\n\t    if (!source) {\n\t      return '';\n\t    }\n\t\n\t    // if an image\n\t    if (typeof source.src !== 'undefined') {\n\t      if (!source.complete) {\n\t        return '';\n\t      }\n\t      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t        return '';\n\t      }\n\t    }\n\t    return ctx.createPattern(source, this.repeat);\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          offset = fabric.util.rotateVector(\n\t            { x: this.offsetX, y: this.offsetY },\n\t            fabric.util.degreesToRadians(-object.angle)),\n\t          BLUR_BOX = 20;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t      }\n\t      if (object.flipX) {\n\t        offset.x *= -1;\n\t      }\n\t      if (object.flipY) {\n\t        offset.y *= -1;\n\t      }\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n\t          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY,\n\t          affectStroke: this.affectStroke\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t\n\t      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n\t        if (this[prop] !== proto[prop]) {\n\t          obj[prop] = this[prop];\n\t        }\n\t      }, this);\n\t\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  // eslint-disable-next-line max-len\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t      toFixed = fabric.util.toFixed,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: true,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: [1, 0, 0, 1, 0, 0],\n\t\n\t    /**\n\t     * if set to false background image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    backgroundVpt: true,\n\t\n\t    /**\n\t     * if set to false overlya image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    overlayVpt: true,\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n\t      this._objects = [];\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, cb);\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, cb);\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, cb);\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, cb);\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isRetinaScaling: function() {\n\t      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} retinaScaling if applied, otherwise 1;\n\t     */\n\t    getRetinaScaling: function() {\n\t      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (!this._isRetinaScaling()) {\n\t        return;\n\t      }\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n\t        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n\t      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          img && (this[property] = new fabric.Image(img, options));\n\t          callback && callback(img);\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback(image);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      if (color && color.source) {\n\t        var _this = this;\n\t        fabric.util.loadImage(color.source, function(img) {\n\t          _this[property] = new fabric.Pattern({\n\t            source: img,\n\t            repeat: color.repeat,\n\t            offsetX: color.offsetX,\n\t            offsetY: color.offsetY\n\t          });\n\t          callback && callback();\n\t        });\n\t      }\n\t      else {\n\t        this[property] = color;\n\t        callback && callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function(canvasEl) {\n\t      var element = fabric.util.createCanvasElement(canvasEl)\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t      this._initRetinaScaling();\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this._activeGroup, object;\n\t      this.viewportTransform = vpt;\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        object = this._objects[i];\n\t        object.group || object.setCoords();\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords();\n\t      }\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point, vpt = this.viewportTransform.slice(0);\n\t      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n\t      vpt[0] = value;\n\t      vpt[3] = value;\n\t      var after = fabric.util.transformPoint(point, vpt);\n\t      vpt[4] += before.x - after.x;\n\t      vpt[5] += before.y - after.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      var vpt = this.viewportTransform.slice(0);\n\t      vpt[4] = -point.x;\n\t      vpt[5] = -point.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t      delete obj.canvas;\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      this.backgroundImage = null;\n\t      this.overlayImage = null;\n\t      this.backgroundColor = '';\n\t      this.overlayColor = ''\n\t      this.clearContext(this.contextContainer);\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders both the canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._objects);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders background, objects, overlay and controls.\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {Array} objects to render\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderCanvas: function(ctx, objects) {\n\t      this.clearContext(ctx);\n\t      this.fire('before:render');\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, ctx);\n\t      }\n\t      this._renderBackground(ctx);\n\t\n\t      ctx.save();\n\t      //apply viewport transform once for all rendering process\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      this._renderObjects(ctx, objects);\n\t      ctx.restore();\n\t      if (!this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      if (this.clipTo) {\n\t        ctx.restore();\n\t      }\n\t      this._renderOverlay(ctx);\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      this.fire('after:render');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} objects to render\n\t     */\n\t    _renderObjects: function(ctx, objects) {\n\t      for (var i = 0, length = objects.length; i < length; ++i) {\n\t        objects[i] && objects[i].render(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {string} property 'background' or 'overlay'\n\t     */\n\t    _renderBackgroundOrOverlay: function(ctx, property) {\n\t      var object = this[property + 'Color'];\n\t      if (object) {\n\t        ctx.fillStyle = object.toLive\n\t          ? object.toLive(ctx)\n\t          : object;\n\t\n\t        ctx.fillRect(\n\t          object.offsetX || 0,\n\t          object.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      object = this[property + 'Image'];\n\t      if (object) {\n\t        if (this[property + 'Vpt']) {\n\t          ctx.save();\n\t          ctx.transform.apply(ctx, this.viewportTransform);\n\t        }\n\t        object.render(ctx);\n\t        this[property + 'Vpt'] && ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'background');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'overlay');\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(center.left, center.top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the viewport\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObject: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, vpCenter);\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectH: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object Vertically in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectV: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n\t    },\n\t\n\t    /**\n\t     * Calculate the point in canvas that correspond to the center of actual viewport.\n\t     * @return {fabric.Point} vpCenter, viewport center\n\t     * @chainable\n\t     */\n\t    getVpCenter: function() {\n\t      var center = this.getCenter(),\n\t          iVpt = fabric.util.invertTransform(this.viewportTransform);\n\t      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay(propertiesToInclude));\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().filter(function(object) {\n\t        return !object.excludeFromExport;\n\t      }).map(function(instance) {\n\t        return this._toObject(instance, methodName, propertiesToInclude);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      var object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function(propertiesToInclude) {\n\t      var data = {\n\t        background: (this.backgroundColor && this.backgroundColor.toObject)\n\t          ? this.backgroundColor.toObject(propertiesToInclude)\n\t          : this.backgroundColor\n\t      };\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject(propertiesToInclude)\n\t          : this.overlayColor;\n\t      }\n\t      if (this.backgroundImage) {\n\t        data.backgroundImage = this.backgroundImage.toObject(propertiesToInclude);\n\t      }\n\t      if (this.overlayImage) {\n\t        data.overlayImage = this.overlayImage.toObject(propertiesToInclude);\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {String} [options.width] desired width of svg with or without units\n\t     * @param {String} [options.height] desired height of svg with or without units\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (options.suppressPreamble) {\n\t        return;\n\t      }\n\t      markup.push(\n\t        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n\t          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width = options.width || this.width,\n\t          height = options.height || this.height,\n\t          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t      if (options.viewBox) {\n\t        viewBox = 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" ';\n\t      }\n\t      else {\n\t        if (this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          viewBox = 'viewBox=\"' +\n\t                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          (this.backgroundColor && !this.backgroundColor.toLive\n\t            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n\t            : null),\n\t          viewBox,\n\t          'xml:space=\"preserve\">\\n',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n\t        '<defs>',\n\t          fabric.createSVGFontFacesMarkup(this.getObjects()),\n\t          fabric.createSVGRefElementsMarkup(this),\n\t        '</defs>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      var instance;\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        instance = objects[i];\n\t        if (instance.excludeFromExport) {\n\t          continue;\n\t        }\n\t        this._setSVGObject(markup, instance, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * push single object svg representation in the markup\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      markup.push(instance.toSVG(reviver));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property, reviver) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG(reviver));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      if (this[property] && this[property].source) {\n\t        markup.push(\n\t          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n\t            'width=\"',\n\t              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.height\n\t                : this.height),\n\t            '\" fill=\"url(#' + property + 'Pattern)\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t      else if (this[property] && property === 'overlayColor') {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.unshift(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.unshift(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.push(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.push(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== 0) {\n\t            newIdx = idx - 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== 0) {\n\t          // if object is not on the bottom of stack\n\t          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== this._objects.length - 1) {\n\t            newIdx = idx + 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== this._objects.length - 1) {\n\t          // if object is not on top of stack (last item in an array)\n\t          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color: 'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow: null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap: 'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin: 'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray: null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur;\n\t    ctx.shadowOffsetX = this.shadow.offsetX;\n\t    ctx.shadowOffsetY = this.shadow.offsetY;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        p1.x -= 0.5;\n\t        p2.x += 0.5;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (var i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [],\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y);\n\t\n\t      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n\t      for (var i = 1, len = points.length; i < len; i++) {\n\t        var midPoint = p1.midPointFrom(p2);\n\t        // p1 is our bezier control point\n\t        // midpoint is our endpoint\n\t        // start point is p(i-1) value.\n\t        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        p1 = new fabric.Point(points[i].x, points[i].y);\n\t        if ((i + 1) < points.length) {\n\t          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n\t        }\n\t      }\n\t      path.push('L ', p1.x, ' ', p1.y, ' ');\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t        fill: null,\n\t        stroke: this.color,\n\t        strokeWidth: this.width,\n\t        strokeLineCap: this.strokeLineCap,\n\t        strokeLineJoin: this.strokeLineJoin,\n\t        strokeDashArray: this.strokeDashArray,\n\t        originX: 'center',\n\t        originY: 'center'\n\t      });\n\t\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData),\n\t        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\t\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction(),\n\t      offsetX: -topLeft.x,\n\t      offsetY: -topLeft.y\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:added\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * Indicates which key enable unproportional scaling\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    uniScaleKey:           'shiftKey',\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates which key enable centered Transfrom\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    centeredKey:           'altKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternate action on corner\n\t     * values: altKey, shiftKey, ctrlKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    altActionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Indicates which key enable multiple click selection\n\t     * values: altKey, shiftKey, ctrlKey, cmdKey\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternative selection\n\t     * in case of target overlapping with active object\n\t     * values: altKey, shiftKey, ctrlKey, cmdKey\n\t     * @since 1.6.5\n\t     * @type null|String\n\t     * @default\n\t     */\n\t    altSelectionKey:           null,\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected.\n\t     * When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * Indicates if the right click on canvas can output the context menu or not\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    stopContextMenu: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire right click events\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    fireRightClick: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Divides objects in two groups, one to render immediately\n\t     * and one to render as activeGroup.\n\t     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n\t     */\n\t    _chooseObjectsToRender: function() {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          object, objsToRender = [], activeGroupObjects = [];\n\t\n\t      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n\t        for (var i = 0, length = this._objects.length; i < length; i++) {\n\t          object = this._objects[i];\n\t          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n\t            objsToRender.push(object);\n\t          }\n\t          else {\n\t            activeGroupObjects.push(object);\n\t          }\n\t        }\n\t        if (activeGroup) {\n\t          activeGroup._set('_objects', activeGroupObjects);\n\t          objsToRender.push(activeGroup);\n\t        }\n\t        activeObject && objsToRender.push(activeObject);\n\t      }\n\t      else {\n\t        objsToRender = this._objects;\n\t      }\n\t      return objsToRender;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      if (this.selection && !this._groupSelector && !this.isDrawingMode) {\n\t        this.clearContext(this.contextTop);\n\t      }\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection(ctx);\n\t      }\n\t\n\t      this.fire('after:render');\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     */\n\t    _resetCurrentTransform: function() {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        skewX: t.original.skewX,\n\t        skewY: t.original.skewY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @param {Object} [point] x,y object of point coordinates we want to check.\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target, point) {\n\t      var ignoreZoom = true,\n\t          pointer = point || this.getPointer(e, ignoreZoom),\n\t          xy;\n\t\n\t      if (target.group && target.group === this.getActiveGroup()) {\n\t        xy = this._normalizePointer(target.group, pointer);\n\t      }\n\t      else {\n\t        xy = { x: pointer.x, y: pointer.y };\n\t      }\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var m = object.calcTransformMatrix(),\n\t          invertedM = fabric.util.invertTransform(m),\n\t          vpt = this.viewportTransform,\n\t          vptPointer = this.restorePointerVpt(pointer),\n\t          p = fabric.util.transformPoint(vptPointer, invertedM);\n\t      return fabric.util.transformPoint(p, vpt);\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners,\n\t          ctx = this.contextCache,\n\t          originalColor = target.selectionBackgroundColor;\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t      target.selectionBackgroundColor = '';\n\t\n\t      ctx.save();\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      target.render(ctx);\n\t      ctx.restore();\n\t\n\t      target.active && target._renderControls(ctx);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t      target.selectionBackgroundColor = originalColor;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        ctx, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(ctx);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e[this.selectionKey])\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !t.altKey : t.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner, e) {\n\t      if (!corner) {\n\t        return 'drag';\n\t      }\n\t\n\t      switch (corner) {\n\t        case 'mtr':\n\t          return 'rotate';\n\t        case 'ml':\n\t        case 'mr':\n\t          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\t        case 'mt':\n\t        case 'mb':\n\t          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\t        default:\n\t          return 'scale';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner, e),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        corner: corner,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        lastX: pointer.x,\n\t        lastY: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1,\n\t        shiftKey: e.shiftKey,\n\t        altKey: e[this.centeredKey]\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform();\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the translation occurred\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var transform = this._currentTransform,\n\t          target = transform.target,\n\t          newLeft = x - transform.offsetX,\n\t          newTop = y - transform.offsetY,\n\t          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n\t          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\t\n\t      moveX && target.set('left', newLeft);\n\t      moveY && target.set('top', newTop);\n\t      return moveX || moveY;\n\t    },\n\t\n\t    /**\n\t     * Check if we are increasing a positive skew or lower it,\n\t     * checking mouse direction and pressed corner.\n\t     * @private\n\t     */\n\t    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n\t      var property = 'originX', origins = { 0: 'center' },\n\t          skew = t.target.skewX, originA = 'left', originB = 'right',\n\t          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n\t          flipSign = 1;\n\t\n\t      mouseMove = mouseMove > 0 ? 1 : -1;\n\t      if (by === 'y') {\n\t        skew = t.target.skewY;\n\t        originA = 'top';\n\t        originB = 'bottom';\n\t        property = 'originY';\n\t      }\n\t      origins[-1] = originA;\n\t      origins[1] = originB;\n\t\n\t      t.target.flipX && (flipSign *= -1);\n\t      t.target.flipY && (flipSign *= -1);\n\t\n\t      if (skew === 0) {\n\t        t.skewSign = -corner * mouseMove * flipSign;\n\t        t[property] = origins[-mouseMove];\n\t      }\n\t      else {\n\t        skew = skew > 0 ? 1 : -1;\n\t        t.skewSign = skew;\n\t        t[property] = origins[skew * corner * flipSign];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Skew object by mouse events\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y'\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _skewObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target, skewed = false,\n\t          lockSkewingX = target.get('lockSkewingX'),\n\t          lockSkewingY = target.get('lockSkewingY');\n\t\n\t      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var center = target.getCenterPoint(),\n\t          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n\t          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n\t          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\t\n\t      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\t      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n\t      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n\t      // Actually skew the object\n\t      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n\t      t.lastX = x;\n\t      t.lastY = y;\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Set object skew\n\t     * @private\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _setObjectSkew: function(localMouse, transform, by, _dim) {\n\t      var target = transform.target, newValue, skewed = false,\n\t          skewSign = transform.skewSign, newDim, dimNoSkew,\n\t          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\t\n\t      if (by === 'x') {\n\t        otherBy = 'y';\n\t        _otherBy = 'Y';\n\t        _by = 'X';\n\t        skewX = 0;\n\t        skewY = target.skewY;\n\t      }\n\t      else {\n\t        otherBy = 'x';\n\t        _otherBy = 'X';\n\t        _by = 'Y';\n\t        skewX = target.skewX;\n\t        skewY = 0;\n\t      }\n\t\n\t      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n\t      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\t      if (newDimMouse <= 2) {\n\t        newValue = 0;\n\t      }\n\t      else {\n\t        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n\t                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n\t        newValue = fabric.util.radiansToDegrees(newValue);\n\t      }\n\t      skewed = target['skew' + _by] !== newValue;\n\t      target.set('skew' + _by, newValue);\n\t      if (target['skew' + _otherBy] !== 0) {\n\t        newDim = target._getTransformedDimensions();\n\t        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n\t        target.set('scale' + _otherBy, newValue);\n\t      }\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n\t          dim = target._getTransformedDimensions(), scaled = false;\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n\t          changeX, changeY, scaleX, scaleY;\n\t\n\t      scaleX = localMouse.x * target.scaleX / _dim.x;\n\t      scaleY = localMouse.y * target.scaleY / _dim.y;\n\t      changeX = target.scaleX !== scaleX;\n\t      changeY = target.scaleY !== scaleY;\n\t\n\t      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      transform.newScaleX = scaleX;\n\t      transform.newScaleY = scaleY;\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n\t                     _dim.x * transform.original.scaleX / target.scaleX,\n\t          scaled;\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n\t      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n\t      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > target.padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += target.padding;\n\t        }\n\t        else {\n\t          localMouse.x -= target.padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > target.padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += target.padding;\n\t        }\n\t        else {\n\t          localMouse.y -= target.padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the rotation occurred\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return false;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta);\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t\n\t      t.target.angle = angle % 360;\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @param {fabric.Object} target to reset transform\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n\t     */\n\t    _drawSelection: function (ctx) {\n\t      var groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      if (this.selectionColor) {\n\t        ctx.fillStyle = this.selectionColor;\n\t\n\t        ctx.fillRect(\n\t          groupSelector.ex - ((left > 0) ? 0 : -left),\n\t          groupSelector.ey - ((top > 0) ? 0 : -top),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t\n\t      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n\t        return;\n\t      }\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      var ignoreZoom = true,\n\t          pointer = this.getPointer(e, ignoreZoom),\n\t          activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          activeTarget;\n\t\n\t      // first check current group (if one exists)\n\t      // active group does not check sub targets like normal groups.\n\t      // if active group just exits.\n\t      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n\t        this._fireOverOutEvents(activeGroup, e);\n\t        return activeGroup;\n\t      }\n\t      // if we hit the corner of an activeObject, let's return that.\n\t      if (activeObject && activeObject._findTargetCorner(pointer)) {\n\t        this._fireOverOutEvents(activeObject, e);\n\t        return activeObject;\n\t      }\n\t      if (activeObject && this._checkTarget(pointer, activeObject)) {\n\t        if (!this.preserveObjectStacking) {\n\t          this._fireOverOutEvents(activeObject, e);\n\t          return activeObject;\n\t        }\n\t        else {\n\t          activeTarget = activeObject;\n\t        }\n\t      }\n\t\n\t      this.targets = [];\n\t\n\t      var target = this._searchPossibleTargets(this._objects, pointer);\n\t      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n\t        target = activeTarget;\n\t      }\n\t      this._fireOverOutEvents(target, e);\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      if (target) {\n\t        if (this._hoveredTarget !== target) {\n\t          if (this._hoveredTarget) {\n\t            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t            this._hoveredTarget.fire('mouseout');\n\t          }\n\t          this.fire('mouse:over', { target: target, e: e });\n\t          target.fire('mouseover');\n\t          this._hoveredTarget = target;\n\t        }\n\t      }\n\t      else if (this._hoveredTarget) {\n\t        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t        this._hoveredTarget.fire('mouseout');\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(pointer, obj) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(null, obj, pointer)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(objects, pointer) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target, i = objects.length, normalizedPointer, subTarget;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if (this._checkTarget(pointer, objects[i])) {\n\t          target = objects[i];\n\t          if (target.type === 'group' && target.subTargetCheck) {\n\t            normalizedPointer = this._normalizePointer(target, pointer);\n\t            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n\t            subTarget && this.targets.push(subTarget);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates without the effect of the viewport\n\t     * @param {Object} pointer with \"x\" and \"y\" number values\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    restorePointerVpt: function(pointer) {\n\t      return fabric.util.transformPoint(\n\t        pointer,\n\t        fabric.util.invertTransform(this.viewportTransform)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * @param {Event} e\n\t     * @param {Boolean} ignoreZoom\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = this.restorePointerVpt(pointer);\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      this.upperCanvasEl = this._createCanvasElement();\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      this._setActiveObject(object);\n\t      this.renderAll();\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { target: obj });\n\t        obj.fire('deselected');\n\t      }\n\t      this.callSuper('_onObjectRemoved', obj);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object and fire events\n\t     * @param {event} e\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      var activeObject = this._activeObject;\n\t      this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t      this._discardActiveObject();\n\t      this.fire('selection:cleared', { e: e });\n\t      activeObject && activeObject.fire('deselected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a specified one\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @param {Event} e Event object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group and fire events\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      var g = this.getActiveGroup();\n\t      this.fire('before:selection:cleared', { e: e, target: g });\n\t      this._discardActiveGroup();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length;\n\t      for ( ; i < len; i++) {\n\t        allObjects[i].set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t      if (activeObject || activeGroup) {\n\t        this.fire('before:selection:cleared', { target: activeObject || activeGroup, e: e });\n\t      }\n\t      this.deactivateAll();\n\t      if (activeObject || activeGroup) {\n\t        this.fire('selection:cleared', { e: e, target: activeObject });\n\t        activeObject && activeObject.fire('deselected');\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.callSuper('dispose');\n\t      var wrapper = this.wrapperEl;\n\t      this.removeListeners();\n\t      wrapper.removeChild(this.upperCanvasEl);\n\t      wrapper.removeChild(this.lowerCanvasEl);\n\t      delete this.upperCanvasEl;\n\t      if (wrapper.parentNode) {\n\t        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n\t      }\n\t      delete this.wrapperEl;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this.discardActiveGroup();\n\t      this.discardActiveObject();\n\t      this.clearContext(this.contextTop);\n\t      return this.callSuper('clear');\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup) {\n\t        activeGroup._renderControls(ctx);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {};\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      var originalProperties;\n\t      //If the object is in a selection group, simulate what would happen to that\n\t      //object when the group is deselected\n\t      originalProperties = this._realizeGroupTransformOnObject(instance);\n\t      this.callSuper('_setSVGObject', markup, instance, reviver);\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t    },\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @ignore\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t        mt: 0, // n\n\t        tr: 1, // ne\n\t        mr: 2, // e\n\t        br: 3, // se\n\t        mb: 4, // s\n\t        bl: 5, // sw\n\t        ml: 6, // w\n\t        tl: 7 // nw\n\t      },\n\t      addListener = fabric.util.addListener,\n\t      removeListener = fabric.util.removeListener;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t      this._onMouseOut = this._onMouseOut.bind(this);\n\t      this._onContextMenu = this._onContextMenu.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on wheel event\n\t     */\n\t    _onMouseWheel: function(e) {\n\t      this.__onMouseWheel(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseOut: function(e) {\n\t      var target = this._hoveredTarget;\n\t      this.fire('mouse:out', { target: target, e: e });\n\t      this._hoveredTarget = null;\n\t      target && target.fire('mouseout', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onContextMenu: function (e) {\n\t      if (this.stopContextMenu) {\n\t        e.stopPropagation()\n\t        e.preventDefault();\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp);\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t      var target, searchTarget = true, transform = this._currentTransform,\n\t          groupSelector = this._groupSelector,\n\t          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      if (transform) {\n\t        this._finalizeCurrentTransform();\n\t        searchTarget = !transform.actionPerformed;\n\t      }\n\t\n\t      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      if (target || !isClick) {\n\t        this._maybeGroupObjects(e);\n\t      }\n\t      else {\n\t        // those are done by default on mouse up\n\t        // by _maybeGroupObjects, we are skipping it in case of no target find\n\t        this._groupSelector = null;\n\t        this._currentTransform = null;\n\t      }\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t\n\t      this._handleCursorAndEvent(e, target, 'up');\n\t      target && (target.__corner = 0);\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * set cursor for mouse up and handle mouseUp event\n\t     * @param {Event} e event from mouse\n\t     * @param {fabric.Object} target receiving event\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     */\n\t    _handleCursorAndEvent: function(e, target, eventType) {\n\t      this._setCursorFromEvent(e, target);\n\t      this._handleEvent(e, eventType, target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Handle event firing for target and subtargets\n\t     * @param {Event} e event from mouse\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     * @param {fabric.Object} targetObj receiving event\n\t     */\n\t    _handleEvent: function(e, eventType, targetObj) {\n\t      var target = typeof targetObj === undefined ? this.findTarget(e) : targetObj,\n\t          targets = this.targets || [],\n\t          options = { e: e, target: target, subTargets: targets };\n\t\n\t      this.fire('mouse:' + eventType, options);\n\t      target && target.fire('mouse' + eventType, options);\n\t      for (var i = 0; i < targets.length; i++) {\n\t        targets[i].fire('mouse' + eventType, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _finalizeCurrentTransform: function() {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t      this._restoreOriginXY(target);\n\t\n\t      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n\t        this.fire('object:modified', { target: target });\n\t        target.fire('modified');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var pointer = this.getPointer(e);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this._handleEvent(e, 'down');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var pointer = this.getPointer(e);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this._handleEvent(e, 'move');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this._handleEvent(e, 'up');\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clic ked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      // if right click just fire events\n\t      var isRightClick  = 'which' in e ? e.which === 3 : e.button === 2;\n\t      if (isRightClick) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'down', target ? target : null);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      var target = this.findTarget(e),\n\t          pointer = this.getPointer(e, true);\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this._clearSelection(e, target, pointer);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (target) {\n\t        if (target.selectable && (target.__corner || !shouldGroup)) {\n\t          this._beforeTransform(e, target);\n\t          this._setupCurrentTransform(e, target);\n\t        }\n\t\n\t        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n\t          this.deactivateAll();\n\t          target.selectable && this.setActiveObject(target, e);\n\t        }\n\t      }\n\t      this._handleEvent(e, 'down', target ? target : null);\n\t      // we must renderAll so that we update the visuals\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearSelection: function(e, target, pointer) {\n\t      this.deactivateAllWithDispatch(e);\n\t\n\t      if (target && target.selectable) {\n\t        this.setActiveObject(target, e);\n\t      }\n\t      else if (this.selection) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t        target = this.findTarget(e);\n\t        this._setCursorFromEvent(e, target);\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t      this._handleEvent(e, 'move', target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Method that defines actions when an Event Mouse Wheel\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseWheel: function(e) {\n\t      this.fire('mouse:wheel', {\n\t        e: e\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false;\n\t      transform.target.isMoving = true;\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      transform.actionPerformed && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action,\n\t          actionPerformed = false;\n\t\n\t      if (action === 'rotate') {\n\t        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'skewX') {\n\t        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n\t      }\n\t      else if (action === 'skewY') {\n\t        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n\t      }\n\t      else {\n\t        actionPerformed = this._translateObject(x, y);\n\t        if (actionPerformed) {\n\t          this._fire('moving', target, e);\n\t          this.setCursor(target.moveCursor || this.moveCursor);\n\t        }\n\t      }\n\t      transform.actionPerformed = actionPerformed;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform();\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {Object} transform current tranform\n\t     * @param {Number} x mouse position x from origin\n\t     * @param {Number} y mouse poistion y from origin\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        return this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform();\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        return this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t\n\t      var hoverCursor = target.hoverCursor || this.hoverCursor;\n\t      if (!target.selectable) {\n\t        //let's skip _findTargetCorner if object is not selectable\n\t        this.setCursor(hoverCursor);\n\t      }\n\t      else {\n\t        var activeGroup = this.getActiveGroup(),\n\t            // only show proper corner when group selection is not active\n\t            corner = target._findTargetCorner\n\t                      && (!activeGroup || !activeGroup.contains(target))\n\t                      && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t        if (!corner) {\n\t          this.setCursor(hoverCursor);\n\t        }\n\t        else {\n\t          this._setCornerCursor(corner, target, e);\n\t        }\n\t      }\n\t      //actually unclear why it should return something\n\t      //is never evaluated\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target, e) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target, e) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n\t        //if we are holding shift and we are on a mx corner...\n\t        n += 2;\n\t      }\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e[this.selectionKey] && target && target.selectable &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (target === activeGroup) {\n\t        // if it's a group, find target again, using activeGroup objects\n\t        target = this.findTarget(e, true);\n\t        // if even object is not found, bail out\n\t        if (!target) {\n\t          return;\n\t        }\n\t      }\n\t      if (activeGroup) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0));\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [this._activeObject, target]\n\t            : [target, this._activeObject];\n\t      this._activeObject.isEditing && this._activeObject.exitEditing();\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\t\n\t  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'jpeg',\n\t     *   quality: 0.8\n\t     * });\n\t     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   left: 100,\n\t     *   top: 100,\n\t     *   width: 200,\n\t     *   height: 200\n\t     * });\n\t     * @example <caption>Generate double scaled png dataURL</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   multiplier: 2\n\t     * });\n\t     */\n\t    toDataURL: function (options) {\n\t      options || (options = { });\n\t\n\t      var format = options.format || 'png',\n\t          quality = options.quality || 1,\n\t          multiplier = options.multiplier || 1,\n\t          cropping = {\n\t            left: options.left || 0,\n\t            top: options.top || 0,\n\t            width: options.width || 0,\n\t            height: options.height || 0,\n\t          };\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t      var origWidth = this.getWidth(),\n\t          origHeight = this.getHeight(),\n\t          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n\t          scaledHeight = (cropping.width || this.getHeight()) * multiplier,\n\t          zoom = this.getZoom(),\n\t          newZoom = zoom * multiplier,\n\t          vp = this.viewportTransform,\n\t          translateX = (vp[4] - cropping.left) * multiplier,\n\t          translateY = (vp[5] - cropping.top) * multiplier,\n\t          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n\t          originalInteractive = this.interactive;\n\t\n\t      this.viewportTransform = newVp;\n\t      // setting interactive to false avoid exporting controls\n\t      this.interactive && (this.interactive = false);\n\t      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n\t        // this.setDimensions is going to renderAll also;\n\t        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n\t      }\n\t      else {\n\t        this.renderAll();\n\t      }\n\t      var data = this.__toDataURL(format, quality, cropping);\n\t      originalInteractive && (this.interactive = originalInteractive);\n\t      this.viewportTransform = vp;\n\t      //setDimensions with no option object is taking care of:\n\t      //this.width, this.height, this.renderAll()\n\t      this.setDimensions({ width: origWidth, height: origHeight });\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURL: function(format, quality) {\n\t\n\t      var canvasEl = this.contextContainer.canvas;\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (format === 'jpg') {\n\t        format = 'jpeg';\n\t      }\n\t\n\t      var data = supportQuality\n\t                ? canvasEl.toDataURL('image/' + format, quality)\n\t                : canvasEl.toDataURL('image/' + format);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t     * @deprecated since 1.0.13\n\t     * @param {String} format (png|jpeg)\n\t     * @param {Number} multiplier\n\t     * @param {Number} quality (0..1)\n\t     * @return {String}\n\t     */\n\t    toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t      return this.toDataURL({\n\t        format: format,\n\t        multiplier: multiplier,\n\t        quality: quality\n\t      });\n\t    },\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : fabric.util.object.clone(json);\n\t\n\t    this.clear();\n\t\n\t    var _this = this;\n\t    this._enlivenObjects(serialized.objects, function () {\n\t      _this._setBgOverlay(serialized, function () {\n\t        // remove parts i cannot set as options\n\t        delete serialized.objects;\n\t        delete serialized.backgroundImage;\n\t        delete serialized.overlayImage;\n\t        delete serialized.background;\n\t        delete serialized.overlay;\n\t        // this._initOptions does too many things to just\n\t        // call it. Normally loading an Object from JSON\n\t        // create the Object instance. Here the Canvas is\n\t        // already an instance and we are just loading things over it\n\t        for (var prop in serialized) {\n\t          _this[prop] = serialized[prop];\n\t        }\n\t        callback && callback();\n\t      });\n\t    }, reviver);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var _this = this,\n\t        loaded = {\n\t          backgroundColor: false,\n\t          overlayColor: false,\n\t          backgroundImage: false,\n\t          overlayImage: false\n\t        };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        _this.renderAll();\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t\n\t    cbIfLoaded();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.Image.fromObject(value, function(img) {\n\t        _this[property] = img;\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    var _this = this;\n\t\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      enlivenedObjects.forEach(function(obj, index) {\n\t        // we splice the array just in case some custom classes restored from JSON\n\t        // will add more object to canvas at canvas init.\n\t        _this.insertAt(obj, index);\n\t      });\n\t\n\t      _this.renderOnAddRemove = renderOnAddRemove;\n\t      callback && callback();\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires deselected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   * @fires skewing\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   * @fires mouseover\n\t   * @fires mouseout\n\t   */\n\t  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Angle of skew on x axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewX:                    0,\n\t\n\t    /**\n\t     * Angle of skew on y axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewY:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               13,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Default cursor value used when moving this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:               null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    borderDashArray:          null,\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active and transparentCorners false)\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerStrokeColor:        null,\n\t\n\t    /**\n\t     * Specify style of control, 'rect' or 'circle'\n\t     * @since 1.6.2\n\t     * @type String\n\t     */\n\t    cornerStyle:          'rect',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's control (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    cornerDashArray:          null,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object. Only works with text objects at the moment.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * Selection Background color of an object. colored layer behind the object when it is active.\n\t     * does not mix good with globalCompositeOperation methods.\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBackgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object horizontal skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingY:             false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t\n\t    lockScalingFlip:          false,\n\t\n\t    /**\n\t     * When `true`, object is not exported in SVG or OBJECT/JSON\n\t     * since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t\n\t    excludeFromExport:          false,\n\t\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:  (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'skewX skewY'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initGradient: function(options) {\n\t      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n\t        this.set('fill', new fabric.Gradient(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n\t        this.set('stroke', new fabric.Gradient(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initPattern: function(options) {\n\t      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n\t        this.set('fill', new fabric.Pattern(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n\t        this.set('stroke', new fabric.Pattern(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initClipping: function(options) {\n\t      if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t        return;\n\t      }\n\t\n\t      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t      if (typeof functionBody !== 'undefined') {\n\t        this.clipTo = new Function('ctx', functionBody);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this.set(prop, options[prop]);\n\t      }\n\t      this._initGradient(options);\n\t      this._initPattern(options);\n\t      this._initClipping(options);\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n\t      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,\n\t            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n\t            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n\t          };\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Basic getter\n\t     * @param {String} property Property name\n\t     * @return {*} value of a property\n\t     */\n\t    get: function(property) {\n\t      return this[property];\n\t    },\n\t\n\t    /**\n\t     * Return the object scale factor counting also the group scaling\n\t     * @return {Object} object with scaleX and scaleY properties\n\t     */\n\t    getObjectScaling: function() {\n\t      var scaleX = this.scaleX, scaleY = this.scaleY;\n\t      if (this.group) {\n\t        var scaling = this.group.getObjectScaling();\n\t        scaleX *= scaling.scaleX;\n\t        scaleY *= scaling.scaleY;\n\t      }\n\t      return { scaleX: scaleX, scaleY: scaleY };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObject: function(obj) {\n\t      for (var prop in obj) {\n\t        this._set(prop, obj[prop]);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    set: function(key, value) {\n\t      if (typeof key === 'object') {\n\t        this._setObject(key);\n\t      }\n\t      else {\n\t        if (typeof value === 'function' && key !== 'clipTo') {\n\t          this._set(key, value(this.get(key)));\n\t        }\n\t        else {\n\t          this._set(key, value);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Toggles specified property from `true` to `false` or from `false` to `true`\n\t     * @param {String} property Property to toggle\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    toggle: function(property) {\n\t      var value = this.get(property);\n\t      if (typeof value === 'boolean') {\n\t        this.set(property, !value);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value // TODO\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if ((this.width === 0 && this.height === 0) || !this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      this._renderBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._render(ctx, noTransform);\n\t      this.clipTo && ctx.restore();\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Draws a background for the object big as its width and height;\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        -this.width / 2,\n\t        -this.height / 2,\n\t        this.width,\n\t        this.height\n\t      );\n\t      // if there is background color no other shadows\n\t      // should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      if (this.group) {\n\t        this.group._setOpacity(ctx);\n\t      }\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Sets line dash\n\t     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n\t     * @param {Array} dashArray array representing dashes\n\t     * @param {Function} alternative function to call if browaser does not support lineDash\n\t     */\n\t    _setLineDash: function(ctx, dashArray, alternative) {\n\t      if (!dashArray) {\n\t        return;\n\t      }\n\t      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t      if (1 & dashArray.length) {\n\t        dashArray.push.apply(dashArray, dashArray);\n\t      }\n\t      if (supportsLineDash) {\n\t        ctx.setLineDash(dashArray);\n\t      }\n\t      else {\n\t        alternative && alternative(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      if (!this.active || noTransform\n\t          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n\t        return;\n\t      }\n\t\n\t      var vpt = this.getViewportTransform(),\n\t          matrix = this.calcTransformMatrix(),\n\t          options;\n\t      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n\t      options = fabric.util.qrDecompose(matrix);\n\t\n\t      ctx.save();\n\t      ctx.translate(options.translateX, options.translateY);\n\t      ctx.lineWidth = 1 * this.borderScaleFactor;\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t\n\t      if (this.group && this.group === this.canvas.getActiveGroup()) {\n\t        ctx.rotate(degreesToRadians(options.angle));\n\t        this.drawBordersInGroup(ctx, options);\n\t      }\n\t      else {\n\t        ctx.rotate(degreesToRadians(this.angle));\n\t        this.drawBorders(ctx);\n\t      }\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n\t          scaling = this.getObjectScaling();\n\t      if (this.canvas && this.canvas._isRetinaScaling()) {\n\t        multX *= fabric.devicePixelRatio;\n\t        multY *= fabric.devicePixelRatio;\n\t      }\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.fill.gradientTransform) {\n\t        var g = this.fill.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.fill.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.fill.offsetX || 0,\n\t          -this.height / 2 + this.fill.offsetY || 0);\n\t      }\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\t      if (this.stroke.gradientTransform) {\n\t        var g = this.stroke.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.stroke.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.stroke.offsetX || 0,\n\t          -this.height / 2 + this.stroke.offsetY || 0);\n\t      }\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance, some objects are async, so using callback method will work for every object.\n\t     * Using the direct return does not work for images and groups.\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @param {Object} [options] for clone as image, passed to toDataURL\n\t     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback, options) {\n\t      var dataUrl = this.toDataURL(options);\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      options.gradientTransform && (gradient.gradientTransform = options.gradientTransform);\n\t\n\t      for (var position in options.colorStops) {\n\t        var color = new fabric.Color(options.colorStops[position]);\n\t        gradient.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas && this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterH: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas && this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterV: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas && this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenter: function () {\n\t      this.canvas && this.canvas.viewportCenterObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      this.canvas && this.canvas.remove(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX, offsetY, dim;\n\t\n\t      if (typeof fromOriginX === 'string') {\n\t        fromOriginX = originXOffset[fromOriginX];\n\t      }\n\t      else {\n\t        fromOriginX -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginX === 'string') {\n\t        toOriginX = originXOffset[toOriginX];\n\t      }\n\t      else {\n\t        toOriginX -= 0.5;\n\t      }\n\t\n\t      offsetX = toOriginX - fromOriginX;\n\t\n\t      if (typeof fromOriginY === 'string') {\n\t        fromOriginY = originYOffset[fromOriginY];\n\t      }\n\t      else {\n\t        fromOriginY -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginY === 'string') {\n\t        toOriginY = originYOffset[toOriginY];\n\t      }\n\t      else {\n\t        toOriginY -= 0.5;\n\t      }\n\t\n\t      offsetY = toOriginY - fromOriginY;\n\t\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull,\n\t          offsetFrom, offsetTo;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      if (typeof this.originX === 'string') {\n\t        offsetFrom = originXOffset[this.originX];\n\t      }\n\t      else {\n\t        offsetFrom = this.originX - 0.5;\n\t      }\n\t      if (typeof to === 'string') {\n\t        offsetTo = originXOffset[to];\n\t      }\n\t      else {\n\t        offsetTo = to - 0.5;\n\t      }\n\t      this.left += xFull * (offsetTo - offsetFrom);\n\t      this.top += yFull * (offsetTo - offsetFrom);\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function getCoords(oCoords) {\n\t    return [\n\t      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n\t      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n\t      new fabric.Point(oCoords.br.x, oCoords.br.y),\n\t      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n\t    ];\n\t  }\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Object containing coordinates of object's controls\n\t     * @type Object\n\t     * @default\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR) {\n\t      var oCoords = getCoords(this.oCoords),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            oCoords,\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other) {\n\t      var intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            getCoords(this.oCoords),\n\t            getCoords(other.oCoords)\n\t          );\n\t\n\t      return intersection.status === 'Intersection'\n\t        || other.isContainedWithinObject(this)\n\t        || this.isContainedWithinObject(other);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other) {\n\t      var points = getCoords(this.oCoords),\n\t          i = 0;\n\t      for (; i < 4; i++) {\n\t        if (!other.containsPoint(points[i])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR) {\n\t      var boundingRect = this.getBoundingRect();\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point) {\n\t      if (!this.oCoords) {\n\t        this.setCoords();\n\t      }\n\t      var lines = this._getImageLines(this.oCoords),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} oCoords Coordinates of the object being evaluated\n\t     */\n\t     // remove yi, not used but left code here just in case.\n\t    _findCrossPoints: function(point, oCoords) {\n\t      var b1, b2, a1, a2, xi, // yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in oCoords) {\n\t        iLine = oCoords[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          // yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = -(a1 - a2) / (b1 - b2);\n\t          // yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function() {\n\t      this.oCoords || this.setCoords();\n\t      return fabric.util.makeBoundingBoxFromPoints([\n\t        this.oCoords.tl,\n\t        this.oCoords.tr,\n\t        this.oCoords.br,\n\t        this.oCoords.bl\n\t      ]);\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object bounding box counting transformations\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this._getTransformedDimensions().x;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object bounding box counting transformations\n\t     * to be renamed in 2.0\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this._getTransformedDimensions().y;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      this.setCoords();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function() {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = this._calculateCurrentDimensions(),\n\t          currentWidth = dim.x, currentHeight = dim.y;\n\t\n\t      // If width is negative, make postive. Fixes path selection issue\n\t      if (currentWidth < 0) {\n\t        currentWidth = Math.abs(currentWidth);\n\t      }\n\t\n\t      var sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t\n\t          // offset added for rotate and scale actions\n\t          coords = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n\t          ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n\t          mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n\t          mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n\t          mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n\t          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      this.oCoords = {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t        // middle\n\t        ml: ml, mt: mt, mr: mr, mb: mb,\n\t        // rotating point\n\t        mtr: mtr\n\t      };\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      this._setCornerCoords && this._setCornerCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\n\t     * calculate rotation matrix of an object\n\t     * @return {Array} rotation matrix for the object\n\t     */\n\t    _calcRotateMatrix: function() {\n\t      if (this.angle) {\n\t        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n\t        return [cos, sin, -sin, cos, 0, 0];\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /*\n\t     * calculate trasform Matrix that represent current transformation from\n\t     * object properties.\n\t     * @return {Array} matrix Transform Matrix for the object\n\t     */\n\t    calcTransformMatrix: function() {\n\t      var center = this.getCenterPoint(),\n\t          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n\t          rotateMatrix = this._calcRotateMatrix(),\n\t          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n\t          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n\t      matrix = multiplyMatrices(matrix, translateMatrix);\n\t      matrix = multiplyMatrices(matrix, rotateMatrix);\n\t      matrix = multiplyMatrices(matrix, dimensionMatrix);\n\t      return matrix;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n\t      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n\t          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n\t          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n\t          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n\t          scaleMatrix = [scaleX, 0, 0, scaleY],\n\t          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n\t      return multiplyMatrices(m, skewMatrixY, true);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t\n\t  function getSvgColorString(prop, value) {\n\t    if (!value) {\n\t      return prop + ': none; ';\n\t    }\n\t    else if (value.toLive) {\n\t      return prop + ': url(#SVGID_' + value.id + '); ';\n\t    }\n\t    else {\n\t      var color = new fabric.Color(value),\n\t          str = prop + ': ' + color.toRgb() + '; ',\n\t          opacity = color.getAlpha();\n\t      if (opacity !== 1) {\n\t        //change the color in rgb + opacity\n\t        str += prop + '-opacity: ' + opacity.toString() + '; ';\n\t      }\n\t      return str;\n\t    }\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t    /**\n\t     * Returns styles-string for svg-export\n\t     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n\t     * @return {String}\n\t     */\n\t    getSvgStyles: function(skipShadow) {\n\t\n\t      var fillRule = this.fillRule,\n\t          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t          visibility = this.visible ? '' : ' visibility: hidden;',\n\t          filter = skipShadow ? '' : this.getSvgFilter(),\n\t          fill = getSvgColorString('fill', this.fill),\n\t          stroke = getSvgColorString('stroke', this.stroke);\n\t\n\t      return [\n\t        stroke,\n\t        'stroke-width: ', strokeWidth, '; ',\n\t        'stroke-dasharray: ', strokeDashArray, '; ',\n\t        'stroke-linecap: ', strokeLineCap, '; ',\n\t        'stroke-linejoin: ', strokeLineJoin, '; ',\n\t        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t        fill,\n\t        'fill-rule: ', fillRule, '; ',\n\t        'opacity: ', opacity, ';',\n\t        filter,\n\t        visibility\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns filter for svg shadow\n\t     * @return {String}\n\t     */\n\t    getSvgFilter: function() {\n\t      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns id attribute for svg output\n\t     * @return {String}\n\t     */\n\t    getSvgId: function() {\n\t      return this.id ? 'id=\"' + this.id + '\" ' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export\n\t     * @return {String}\n\t     */\n\t    getSvgTransform: function() {\n\t      if (this.group && this.group.type === 'path-group') {\n\t        return '';\n\t      }\n\t      var toFixed = fabric.util.toFixed,\n\t          angle = this.getAngle(),\n\t          skewX = (this.getSkewX() % 360),\n\t          skewY = (this.getSkewY() % 360),\n\t          center = this.getCenterPoint(),\n\t\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                            ' ' +\n\t                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                          ')',\n\t\n\t          anglePart = angle !== 0\n\t            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t            : '',\n\t\n\t          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n\t            ? '' :\n\t            (' scale(' +\n\t              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n\t              ' ' +\n\t              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n\t            ')'),\n\t\n\t          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\t\n\t          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\t\n\t          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t      return [\n\t        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export from the transform matrix of single elements\n\t     * @return {String}\n\t     */\n\t    getSvgTransformMatrix: function() {\n\t      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createBaseSVGMarkup: function() {\n\t      var markup = [];\n\t\n\t      if (this.fill && this.fill.toLive) {\n\t        markup.push(this.fill.toSVG(this, false));\n\t      }\n\t      if (this.stroke && this.stroke.toLive) {\n\t        markup.push(this.stroke.toSVG(this, false));\n\t      }\n\t      if (this.shadow) {\n\t        markup.push(this.shadow.toSVG(this));\n\t      }\n\t      return markup;\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  /*\n\t    Depends on `stateProperties`\n\t  */\n\t  function saveProps(origin, destination, props) {\n\t    var tmpObj = { }, deep = true;\n\t    props.forEach(function(prop) {\n\t      tmpObj[prop] = origin[prop];\n\t    });\n\t    extend(origin[destination], tmpObj, deep);\n\t  }\n\t\n\t  function _isEqual(origValue, currentValue) {\n\t    if (origValue instanceof Array) {\n\t      if (origValue.length !== currentValue.length) {\n\t        return false\n\t      }\n\t      var _currentValue = currentValue.concat().sort(),\n\t          _origValue = origValue.concat().sort();\n\t      return !_origValue.some(function(v, i) {\n\t        return !_isEqual(_currentValue[i], v);\n\t      });\n\t    }\n\t    else if (origValue instanceof Object) {\n\t      for (var key in origValue) {\n\t        if (!_isEqual(origValue[key], currentValue[key])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t    else {\n\t      return origValue === currentValue;\n\t    }\n\t  }\n\t\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Returns true if object state (one of its state properties) was changed\n\t     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t     */\n\t    hasStateChanged: function() {\n\t      return !_isEqual(this.originalState, this);\n\t    },\n\t\n\t    /**\n\t     * Saves state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    saveState: function(options) {\n\t      saveProps(this, 'originalState', this.stateProperties);\n\t      if (options && options.stateProperties) {\n\t        saveProps(this, 'originalState', options.stateProperties);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Setups state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    setupState: function(options) {\n\t      this.originalState = { };\n\t      this.saveState(options);\n\t      return this;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      /* eslint-disable camelcase */\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t      /* eslint-enable camelcase */\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t      this.__corner = 0;\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width,\n\t          h = this.height,\n\t          addStrokeToW = true,\n\t          addStrokeToH = true;\n\t\n\t      if (this.type === 'line' && this.strokeLineCap === 'butt') {\n\t        addStrokeToH = w;\n\t        addStrokeToW = h;\n\t      }\n\t\n\t      if (addStrokeToH) {\n\t        h += h < 0 ? -strokeWidth : strokeWidth;\n\t      }\n\t\n\t      if (addStrokeToW) {\n\t        w += w < 0 ? -strokeWidth : strokeWidth;\n\t      }\n\t\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     */\n\t    _getTransformedDimensions: function(skewX, skewY) {\n\t      if (typeof skewX === 'undefined') {\n\t        skewX = this.skewX;\n\t      }\n\t      if (typeof skewY === 'undefined') {\n\t        skewY = this.skewY;\n\t      }\n\t      var dimensions = this._getNonTransformedDimensions(),\n\t          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n\t          points = [\n\t            {\n\t              x: -dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: -dimX,\n\t              y: dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: dimY\n\t            }],\n\t          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n\t          bbox;\n\t      for (i = 0; i < points.length; i++) {\n\t        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n\t      }\n\t      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n\t      return { x: bbox.width, y: bbox.height };\n\t    },\n\t\n\t    /*\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function()  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          w = dim.x, h = dim.y,\n\t          p = fabric.util.transformPoint(new fabric.Point(w, h), vpt, true);\n\t\n\t      return p.scalarAdd(2 * this.padding);\n\t    },\n\t\n\t    /**\n\t     * Draws a colored layer behind the object, inside its selection borders.\n\t     * Requires public options: padding, selectionBackgroundColor\n\t     * this function is called when the context is transformed\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawSelectionBackground: function(ctx) {\n\t      if (!this.selectionBackgroundColor || this.group || !this.active) {\n\t        return this;\n\t      }\n\t      ctx.save();\n\t      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n\t          vpt = this.canvas.viewportTransform;\n\t      ctx.translate(center.x, center.y);\n\t      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.fillStyle = this.selectionBackgroundColor;\n\t      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = this.borderColor;\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box when it is inside a group.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @param {object} options object representing current object parameters\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBordersInGroup: function(ctx, options) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var p = this._getNonTransformedDimensions(),\n\t          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n\t          wh = fabric.util.transformPoint(p, matrix),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth + 2 * this.padding,\n\t          height = wh.y + strokeWidth + 2 * this.padding;\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t      ctx.strokeStyle = this.borderColor;\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          scaleOffset = this.cornerSize,\n\t          left = -(width + scaleOffset) / 2,\n\t          top = -(height + scaleOffset) / 2,\n\t          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t      if (!this.transparentCorners) {\n\t        ctx.strokeStyle = this.cornerStrokeColor;\n\t      }\n\t      this._setLineDash(ctx, this.cornerDashArray, null);\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left,\n\t        top);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width,\n\t        top);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left,\n\t        top + height);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width,\n\t        top + height);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width / 2,\n\t          top);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width / 2,\n\t          top + height);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width,\n\t          top + height / 2);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left,\n\t          top + height / 2);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width / 2,\n\t          top - this.rotatingPointOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n\t      switch (this.cornerStyle) {\n\t        case 'circle':\n\t          ctx.beginPath();\n\t          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n\t          ctx[methodName]();\n\t          if (stroke) {\n\t            ctx.stroke();\n\t          }\n\t          break;\n\t        default:\n\t          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t          ctx[methodName + 'Rect'](left, top, size, size);\n\t          if (stroke) {\n\t            ctx.strokeRect(left, top, size, size);\n\t          }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange();\n\t      },\n\t      onComplete: function() {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete();\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || { };\n\t\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint();\n\t        ctx.translate(\n\t          cp.x - this.strokeWidth / 2,\n\t          cp.y - this.strokeWidth / 2\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ', this.getSvgId(),\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object, callback) {\n\t    var points = [object.x1, object.y1, object.x2, object.y2],\n\t        line = new fabric.Line(points, object);\n\t    callback && callback(line);\n\t    return line;\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t        case nearest:\n\t          return Math.min(this.get(axis1), this.get(axis2));\n\t        case center:\n\t          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t        case farthest:\n\t          return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options.radius || 0);\n\t\n\t      this.startAngle = options.startAngle || this.startAngle;\n\t      this.endAngle = options.endAngle || this.endAngle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        radius: this.get('radius'),\n\t        startAngle: this.startAngle,\n\t        endAngle: this.endAngle\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ', this.getSvgId(),\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object, callback) {\n\t    var circle = new fabric.Circle(object);\n\t    callback && callback(circle);\n\t    return circle;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('width', options.width || 100)\n\t          .set('height', options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ', this.getSvgId(),\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Triangle instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Triangle instance is created\n\t   * @return {Object} instance of Canvas.Triangle\n\t   */\n\t  fabric.Triangle.fromObject = function(object, callback) {\n\t    var triangle = new fabric.Triangle(object);\n\t    callback && callback(triangle);\n\t    return triangle;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('rx', options.rx || 0);\n\t      this.set('ry', options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        rx: this.get('rx'),\n\t        ry: this.get('ry')\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ', this.getSvgId(),\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object, callback) {\n\t    var ellipse = new fabric.Ellipse(object);\n\t    callback && callback(ellipse);\n\t    return ellipse;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('rx', 'ry', 'x', 'y');\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Used to specify dash pattern for stroke on this object\n\t     * @type Array\n\t     */\n\t    strokeDashArray: null,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(-0.5, -0.5, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n\t          k = 1 - 0.5522847498;\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        rx: this.get('rx') || 0,\n\t        ry: this.get('ry') || 0\n\t      });\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ', this.getSvgId(),\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object, callback) {\n\t    var rect = new fabric.Rect(object);\n\t    callback && callback(rect);\n\t    return rect;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      return fabric.Polygon.prototype.initialize.call(this, points, options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t      return fabric.Polygon.prototype._calcDimensions.call(this);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object, callback) {\n\t    var polyline = new fabric.Polyline(object.points, object);\n\t    callback && callback(polyline);\n\t    return polyline;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polygon} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || { };\n\t      this.points = points || [];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t      this.pathOffset = {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t      this.minX = minX || 0;\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [], addTransform,\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n\t      }\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<', this.type, ' ', this.getSvgId(),\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      if (this.stroke || this.strokeDashArray) {\n\t        ctx.closePath();\n\t        this._renderStroke(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    commonRender: function(ctx, noTransform) {\n\t      var point, len = this.points.length;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t\n\t      noTransform || ctx.translate(-this.pathOffset.x, -this.pathOffset.y);\n\t      ctx.beginPath();\n\t      ctx.moveTo(this.points[0].x, this.points[0].y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x, point.y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.points.length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object, callback) {\n\t    var polygon = new fabric.Polygon(object.points, object);\n\t    callback && callback(polygon);\n\t    return polygon;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t\n\t      this.setOptions(options);\n\t\n\t      if (!path) {\n\t        path = [];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _renderPathCommands: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      this._renderPathCommands(ctx);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        path: this.path.map(function(item) { return item.slice() }),\n\t        pathOffset: this.pathOffset\n\t      });\n\t      if (this.sourcePath) {\n\t        o.sourcePath = this.sourcePath;\n\t      }\n\t      if (this.transformMatrix) {\n\t        o.transformMatrix = this.transformMatrix;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<path ', this.getSvgId(),\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [],\n\t          coords = [],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [currentPath.charAt(0)];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              x,\n\t              y\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   */\n\t  fabric.Path.fromObject = function(object, callback) {\n\t    // remove this pattern rom 2.0, accept just object.\n\t    var path;\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var pathUrl = object.path;\n\t        path = elements[0];\n\t        delete object.path;\n\t\n\t        fabric.util.object.extend(path, object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback && callback(path);\n\t      });\n\t    }\n\t    else {\n\t      path = new fabric.Path(object.path, object);\n\t      callback && callback(path);\n\t      return path;\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      invoke = fabric.util.array.invoke,\n\t      parentToObject = fabric.Object.prototype.toObject;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [], yC = [], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Renders this group on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render this instance on\n\t     */\n\t    render: function(ctx) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.transform(ctx);\n\t\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      ctx.translate(-this.width / 2, -this.height / 2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {*} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(parentToObject.call(this, propertiesToInclude), {\n\t        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n\t      });\n\t      if (this.sourcePath) {\n\t        o.sourcePath = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(),\n\t        'style=\"', this.getSvgStyles(), '\" ',\n\t        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t        '>\\n'\n\t      );\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push('\\t', objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = this.getObjects()[0].get('fill') || '';\n\t      if (typeof firstPathFill !== 'string') {\n\t        return false;\n\t      }\n\t      firstPathFill = firstPathFill.toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        var pathFill = path.get('fill') || '';\n\t        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    // remove this pattern from 2.0 accepts only object\n\t    if (typeof object.paths === 'string') {\n\t      fabric.loadSVGFromURL(object.paths, function (elements) {\n\t\n\t        var pathUrl = object.paths;\n\t        delete object.paths;\n\t\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n\t        delete object.paths;\n\t        callback(new fabric.PathGroup(enlivenedObjects, object));\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      invoke = fabric.util.array.invoke;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Indicates if click events should also check for subtargets\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    subTargetCheck: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      this.originalState = { };\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          center = this.getCenterPoint();\n\t\n\t      object.set({\n\t        originalLeft: objectLeft,\n\t        originalTop: objectTop,\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      stroke:           true,\n\t      strokeWidth:      true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.transform(ctx);\n\t      this._setShadow(ctx);\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._transformDone = true;\n\t      // the array is now sorted in order of highest first, so start from end\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t      this._transformDone = false;\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      var matrix = object.calcTransformMatrix(),\n\t          options = fabric.util.qrDecompose(matrix),\n\t          center = new fabric.Point(options.translateX, options.translateY);\n\t      object.scaleX = options.scaleX;\n\t      object.scaleY = options.scaleY;\n\t      object.skewX = options.skewX;\n\t      object.skewY = options.skewY;\n\t      object.angle = options.angle;\n\t      object.flipX = false;\n\t      object.flipY = false;\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this.realizeTransform(object);\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all group objects\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      this.forEachObject(function(object) {\n\t        object.setCoords();\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords();\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var ivt = fabric.util.invertTransform(this.getViewportTransform()),\n\t          minXY = fabric.util.transformPoint(new fabric.Point(min(aX), min(aY)), ivt),\n\t          maxXY = fabric.util.transformPoint(new fabric.Point(max(aX), max(aY)), ivt),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(), 'transform=\"',\n\t        /* avoiding styles intentionally */\n\t        this.getSvgTransform(),\n\t        this.getSvgTransformMatrix(),\n\t        '\" style=\"',\n\t        this.getSvgFilter(),\n\t        '\">\\n'\n\t      );\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push('\\t', this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {*}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      delete object.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'alignX',\n\t    'alignY',\n\t    'meetOrSlice'\n\t  );\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * Width of a stroke.\n\t     * For image quality a stroke multiple of 2 gives better results.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * minimum scale factor under which any resizeFilter is triggered to resize the image\n\t     * 0 will disable the automatic resize. 1 will trigger automatically always.\n\t     * number bigger than 1 can be used in case we want to scale with some filter above\n\t     * the natural image dimensions\n\t     * @type Number\n\t     */\n\t    minimumScaleTrigger: 0.5,\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @param {function} [callback] callback function to call after eventual filters applied.\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options, callback) {\n\t      options || (options = { });\n\t      this.filters = [];\n\t      this.resizeFilters = [];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options, callback);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t\n\t      var _callback, _this;\n\t\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.resizeFilters.length === 0) {\n\t        _callback = callback;\n\t      }\n\t      else {\n\t        _this = this;\n\t        _callback = function() {\n\t          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n\t        };\n\t      }\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(_callback);\n\t      }\n\t      else if (_callback) {\n\t        _callback(this);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t      var w = this.width / 2, h = this.height / 2;\n\t      ctx.beginPath();\n\t      ctx.moveTo(-w, -h);\n\t      ctx.lineTo(w, -h);\n\t      ctx.lineTo(w, h);\n\t      ctx.lineTo(-w, h);\n\t      ctx.lineTo(-w, -h);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [], resizeFilters = [],\n\t          scaleX = 1, scaleY = 1;\n\t\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          if (filterObj.type === 'Resize') {\n\t            scaleX *= filterObj.scaleX;\n\t            scaleY *= filterObj.scaleY;\n\t          }\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t\n\t      this.resizeFilters.forEach(function(filterObj) {\n\t        filterObj && resizeFilters.push(filterObj.toObject());\n\t      });\n\t\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        src: this.getSrc(),\n\t        filters: filters,\n\t        resizeFilters: resizeFilters,\n\t        crossOrigin: this.crossOrigin,\n\t        alignX: this.alignX,\n\t        alignY: this.alignY,\n\t        meetOrSlice: this.meetOrSlice\n\t      });\n\t\n\t      object.width /= scaleX;\n\t      object.height /= scaleY;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none', filtered = true;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @param {Boolean} filtered indicates if the src is needed for svg\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function(filtered) {\n\t      var element = filtered ? this._element : this._originalElement;\n\t      if (element) {\n\t        return fabric.isLikelyNode ? element._src : element.src;\n\t      }\n\t      else {\n\t        return this.src || '';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Array} filters to be applied\n\t     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n\t     * @param {Boolean} forResizing\n\t     * @return {CanvasElement} canvasEl to be drawn immediately\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var replacement = fabric.util.createImage(),\n\t          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n\t          minimumScale = this.minimumScaleTrigger / retinaScaling,\n\t          _this = this, scaleX, scaleY;\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback(this);\n\t        return imgElement;\n\t      }\n\t\n\t      var canvasEl = fabric.util.createCanvasElement();\n\t      canvasEl.width = imgElement.width;\n\t      canvasEl.height = imgElement.height;\n\t      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\t\n\t      filters.forEach(function(filter) {\n\t        if (!filter) {\n\t          return;\n\t        }\n\t        if (forResizing) {\n\t          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n\t          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n\t          if (scaleX * retinaScaling < 1) {\n\t            scaleX *= retinaScaling;\n\t          }\n\t          if (scaleY * retinaScaling < 1) {\n\t            scaleY *= retinaScaling;\n\t          }\n\t        }\n\t        else {\n\t          scaleX = filter.scaleX;\n\t          scaleY = filter.scaleY;\n\t        }\n\t        filter.applyTo(canvasEl, scaleX, scaleY);\n\t        if (!forResizing && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback(_this);\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback(_this);\n\t          replacement.onload = canvasEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._stroke(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options, callback) {\n\t      this.setElement(fabric.util.getById(element), callback, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img) {\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [];\n\t          return new fabric.Image(img, object, callback);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        preserveAR;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n\t      extend(parsedAttributes, preserveAR);\n\t    }\n\t\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = function(object) {\n\t    return new fabric.Image.filters.Brightness(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side / 2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t          output = context.createImageData(sw, sh),\n\t          dst = output.data,\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0,\n\t          r, g, b, a, dstOff,\n\t          scx, scy, srcOff, wt;\n\t\n\t      for (var y = 0; y < sh; y++) {\n\t        for (var x = 0; x < sw; x++) {\n\t          dstOff = (y * sw + x) * 4;\n\t          // calculate the weighed sum of the source image pixels that\n\t          // fall under the convolution matrix\n\t          r = 0; g = 0; b = 0; a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t              scy = y + cy - halfSide;\n\t              scx = x + cx - halfSide;\n\t\n\t              // eslint-disable-next-line max-depth\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              srcOff = (scy * sw + scx) * 4;\n\t              wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = function(object) {\n\t    return new fabric.Image.filters.Convolute(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n\t    return new fabric.Image.filters.GradientTransparency(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function() {\n\t    return new fabric.Image.filters.Grayscale();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function() {\n\t    return new fabric.Image.filters.Invert();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = canvasEl.width;\n\t      maskCanvasEl.height = canvasEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      callback && callback(new fabric.Image.filters.Mask(object));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = function(object) {\n\t    return new fabric.Image.filters.Noise(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = function(object) {\n\t    return new fabric.Image.filters.Pixelate(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 0;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n\t    return new fabric.Image.filters.RemoveWhite(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia2();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = function(object) {\n\t    return new fabric.Image.filters.Tint(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = function(object) {\n\t    return new fabric.Image.filters.Multiply(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t\n\t  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  fabric.Image.filters.Blend.fromObject = function(object) {\n\t    return new fabric.Image.filters.Blend(object);\n\t  };\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} scaleX\n\t     * @param {Number} scaleY\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t      if (scaleX === 1 && scaleY === 1) {\n\t        return;\n\t      }\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Filter sliceByTwo\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = oW, stepH = oH,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      dW = floor(dW);\n\t      dH = floor(dH);\n\t      tmpCanvas.width = max(dW, oW);\n\t      tmpCanvas.height = max(dH, oH);\n\t\n\t      if (dW > oW) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (dH > oH) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, oW, oH);\n\t      canvasEl.width = max(dW, oW);\n\t      canvasEl.height = max(dH, oH);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        oW = stepW;\n\t        oH = stepH;\n\t        if (dW * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = dW;\n\t          doneW = true;\n\t        }\n\t        if (dH * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = dH;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, oW, oH);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, dW, dH);\n\t    },\n\t\n\t    /**\n\t     * Filter lanczosResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    /**\n\t     * bilinearFiltering\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < dH; i++) {\n\t        for (j = 0; j < dW; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * oW + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    /**\n\t     * hermiteFastResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /* eslint-disable max-depth */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /* eslint-enable max-depth */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = function(object) {\n\t    return new fabric.Image.filters.Resize(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Matrix filter class\n\t   * @class fabric.Image.filters.ColorMatrix\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n\t   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n\t   * @example <caption>Kodachrome filter</caption>\n\t   * var filter = new fabric.Image.filters.ColorMatrix({\n\t   *  matrix: [\n\t       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n\t       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n\t       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n\t       0, 0, 0, 1, 0\n\t      ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'ColorMatrix',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n\t     */\n\t    initialize: function( options ) {\n\t      options || ( options = {} );\n\t      this.matrix = options.matrix || [\n\t        1, 0, 0, 0, 0,\n\t        0, 1, 0, 0, 0,\n\t        0, 0, 1, 0, 0,\n\t        0, 0, 0, 1, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function( canvasEl ) {\n\t      var context = canvasEl.getContext( '2d' ),\n\t          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n\t          data = imageData.data,\n\t          iLen = data.length,\n\t          i,\n\t          r,\n\t          g,\n\t          b,\n\t          a,\n\t          m = this.matrix;\n\t\n\t      for ( i = 0; i < iLen; i += 4 ) {\n\t        r = data[ i ];\n\t        g = data[ i + 1 ];\n\t        b = data[ i + 2 ];\n\t        a = data[ i + 3 ];\n\t\n\t        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n\t        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n\t        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n\t        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n\t      }\n\t\n\t      context.putImageData( imageData, 0, 0 );\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        type: this.type,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n\t   */\n\t  fabric.Image.filters.ColorMatrix.fromObject = function( object ) {\n\t    return new fabric.Image.filters.ColorMatrix( object );\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t      MIN_TEXT_WIDTH = 2;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor'\n\t  );\n\t\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: {\n\t      fontSize: true,\n\t      fontWeight: true,\n\t      fontFamily: true,\n\t      fontStyle: true,\n\t      lineHeight: true,\n\t      text: true,\n\t      charSpacing: true,\n\t      textAlign: true,\n\t      strokeWidth: false,\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:      stateProperties,\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * additional space between characters\n\t     * expressed in thousands of em unit\n\t     * @type Number\n\t     * @default\n\t     */\n\t    charSpacing:             0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.setOptions(options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      this._setupCompositeOperation(ctx);\n\t      this._renderTextBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t      this.clipTo && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @override\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      return { x: this.width, y: this.height };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4), char, width;\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        var additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = chars.split('');\n\t        for (var i = 0, len = chars.length; i < len; i++) {\n\t          char = chars[i];\n\t          width = ctx.measureText(char).width + additionalSpace;\n\t          ctx[method](char, left, top);\n\t          left += width > 0 ? width : 0;\n\t        }\n\t      }\n\t      else {\n\t        ctx[method](chars, left, top);\n\t      }\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex);\n\t      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      // stretch the line\n\t      var words = line.split(/\\s+/),\n\t          charOffset = 0,\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join(''), lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          leftOffset = 0, word;\n\t\n\t      for (var i = 0, len = words.length; i < len; i++) {\n\t        while (line[charOffset] === ' ' && charOffset < line.length) {\n\t          charOffset++;\n\t        }\n\t        word = words[i];\n\t        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n\t        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n\t        charOffset += word.length;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} word\n\t     */\n\t    _getWidthOfWords: function (ctx, word) {\n\t      var width = ctx.measureText(word).width, charCount, additionalSpace;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = word.split('').length;\n\t        additionalSpace = charCount * this._getWidthOfCharSpacing();\n\t        width += additionalSpace;\n\t      }\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * Returns true because text has no style\n\t     */\n\t    isEmptyStyles: function() {\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     */\n\t    _renderTextCommon: function(ctx, method) {\n\t\n\t      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight,\n\t            lineWidth = this._getLineWidth(ctx, i),\n\t            leftOffset = this._getLineLeftOffset(lineWidth);\n\t        this._renderTextLine(\n\t          method,\n\t          ctx,\n\t          this._textLines[i],\n\t          left + leftOffset,\n\t          top + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      this._renderTextCommon(ctx, 'fillText');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokedashArray);\n\t      ctx.beginPath();\n\t      this._renderTextCommon(ctx, 'strokeText');\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line\n\t     */\n\t    _getHeightOfLine: function() {\n\t      return this._getHeightOfSingleLine() * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line without lineHeight\n\t     */\n\t    _getHeightOfSingleLine: function() {\n\t      return this.fontSize * this._fontSizeMult;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextBackground: function(ctx) {\n\t      this._renderBackground(ctx);\n\t      this._renderTextLinesBackground(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        if (lineWidth > 0) {\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      // if there is text background color no\n\t      // other shadows should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [];\n\t      this.__lineHeights = [];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearCache: function() {\n\t      var shouldClear = false;\n\t      if (this._forceClearCache) {\n\t        this._forceClearCache = false;\n\t        return true;\n\t      }\n\t      for (var prop in this._dimensionAffectingProps) {\n\t        if (this['__' + prop] !== this[prop]) {\n\t          this['__' + prop] = this[prop];\n\t          shouldClear = true;\n\t        }\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n\t      }\n\t\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else {\n\t        width = this._measureLine(ctx, lineIndex);\n\t      }\n\t      this.__lineWidths[lineIndex] = width;\n\t\n\t      if (width && this.textAlign === 'justify') {\n\t        wordCount = line.split(/\\s+/);\n\t        if (wordCount.length > 1) {\n\t          this.__lineWidths[lineIndex] = -1;\n\t        }\n\t      }\n\t      return width;\n\t    },\n\t\n\t    _getWidthOfCharSpacing: function() {\n\t      if (this.charSpacing !== 0) {\n\t        return this.fontSize * this.charSpacing / 1000;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      var line = this._textLines[lineIndex],\n\t          width = ctx.measureText(line).width,\n\t          additionalSpace = 0, charCount, finalWidth;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = line.split('').length;\n\t        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n\t      }\n\t      finalWidth = width + additionalSpace;\n\t      return finalWidth > 0 ? finalWidth : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i);\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * return font declaration string for canvas context\n\t     * @returns {String} font declaration formatted for canvas context.\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      this._setTextStyles(ctx);\n\t\n\t      if (this._shouldClearCache()) {\n\t        this._initDimensions(ctx);\n\t      }\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._render(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n\t        text:                 this.text,\n\t        fontSize:             this.fontSize,\n\t        fontWeight:           this.fontWeight,\n\t        fontFamily:           this.fontFamily,\n\t        fontStyle:            this.fontStyle,\n\t        lineHeight:           this.lineHeight,\n\t        textDecoration:       this.textDecoration,\n\t        textAlign:            this.textAlign,\n\t        textBackgroundColor:  this.textBackgroundColor,\n\t        charSpacing:          this.charSpacing\n\t      });\n\t      if (!this.includeDefaultValues) {\n\t        this._removeDefaultValues(object);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      if (!this.ctx) {\n\t        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      }\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      var noShadow = true, filter = this.getSvgFilter(),\n\t          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\t\n\t      markup.push(\n\t        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n\t          style, '>\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n\t            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n\t            textAndBg.textSpans.join(''),\n\t          '\\t\\t</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [],\n\t          textBgRects = [],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      if (this.textAlign === 'justify') {\n\t        // i call from here to do not intefere with IText\n\t        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n\t        return;\n\t      }\n\t      textSpans.push(\n\t        '\\t\\t\\t<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>\\n'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n\t      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this._setTextStyles(ctx);\n\t\n\t      var line = this._textLines[i],\n\t          words = line.split(/\\s+/),\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          word, attributes = this._getFillAttributes(this.fill),\n\t          len;\n\t\n\t      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\t\n\t      for (i = 0, len = words.length; i < len; i++) {\n\t        word = words[i];\n\t        textSpans.push(\n\t          '\\t\\t\\t<tspan x=\"',\n\t            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n\t            'y=\"',\n\t            toFixed(yPos, NUM_FRACTION_DIGITS),\n\t            '\" ',\n\t            // doing this on <tspan> elements since setting opacity\n\t            // on containing <text> one doesn't work in Illustrator\n\t            attributes, '>',\n\t            fabric.util.string.escapeXml(word),\n\t          '</tspan>\\n'\n\t        );\n\t        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n\t      }\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {*} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key in this._dimensionAffectingProps) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t\n\t    var textContent = '';\n\t\n\t    // The XML is not properly parsed in IE9 so a workaround to get\n\t    // textContent is through firstChild.data. Another workaround would be\n\t    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\t    if (!('textContent' in element)) {\n\t      if ('firstChild' in element && element.firstChild !== null) {\n\t        if ('data' in element.firstChild && element.firstChild.data !== null) {\n\t          textContent = element.firstChild.data;\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      textContent = element.textContent;\n\t    }\n\t\n\t    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\t\n\t    var text = new fabric.Text(textContent, options),\n\t        textHeightScaleFactor = text.getHeight() / text.height,\n\t        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n\t        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n\t        textHeight = text.getHeight() + scaledDiff,\n\t        offX = 0;\n\t    /*\n\t      Adjust positioning:\n\t        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t        top/left properties in Fabric correspond to center point of text bounding box\n\t    */\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object, callback) {\n\t    var text = new fabric.Text(object.text, clone(object));\n\t    callback && callback(text);\n\t    return text;\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __widthOfSpace: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__widthOfSpace = [];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          // eslint-disable-next-line no-unused-vars\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      this._updateAndFire('selectionStart', index);\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      this._updateAndFire('selectionEnd', index);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property 'selectionStart' or 'selectionEnd'\n\t     * @param {Number} index new position of property\n\t     */\n\t    _updateAndFire: function(property, index) {\n\t      if (this[property] !== index) {\n\t        this._fireSelectionChanged();\n\t        this[property] = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Fires the even of selection changed\n\t     * @private\n\t     */\n\t    _fireSelectionChanged: function() {\n\t      this.fire('selection:changed');\n\t      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.oldWidth = this.width;\n\t      this.oldHeight = this.height;\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n\t      // the correct position but not at every cursor animation.\n\t      this.cursorOffsetCache = { };\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t      if (this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    _clearTextArea: function(ctx) {\n\t      // we add 4 pixel, to be sure to do not leave any pixel out\n\t      var width = this.oldWidth + 4, height = this.oldHeight + 4;\n\t      ctx.clearRect(-width / 2, -height / 2, width, height);\n\t    },\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n\t        return this.cursorOffsetCache;\n\t      }\n\t      var lineLeftOffset = 0,\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0,\n\t          boundaries;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n\t        leftOffset -= this._getWidthOfCharSpacing();\n\t      }\n\t      boundaries = {\n\t        top: topOffset,\n\t        left: leftOffset > 0 ? leftOffset : 0,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t      this.cursorOffsetCache = boundaries;\n\t      return this.cursorOffsetCache;\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          multiplier = this.scaleX * this.canvas.getZoom(),\n\t          cursorWidth = this.cursorWidth / multiplier;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset - cursorWidth / 2,\n\t        boundaries.top + boundaries.topOffset,\n\t        cursorWidth,\n\t        charHeight);\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t          if (j === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t          if (end.charIndex === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        realLineHeight = lineHeight;\n\t        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n\t          lineHeight /= this.lineHeight;\n\t        }\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth > 0 ? boxWidth : 0,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += realLineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      charOffset = charOffset || 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          prevStyle,\n\t          thisStyle,\n\t          charsToRender = '';\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i - charOffset];\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight, shouldFill, shouldStroke,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset, textDecoration, chars, additionalSpace, _charWidth;\n\t\n\t      if (decl) {\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t        shouldStroke = decl.stroke;\n\t        shouldFill = decl.fill;\n\t        textDecoration = decl.textDecoration;\n\t      }\n\t      else {\n\t        charHeight = this.fontSize;\n\t      }\n\t\n\t      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n\t      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\t\n\t      decl && ctx.save();\n\t\n\t      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n\t      textDecoration = textDecoration || this.textDecoration;\n\t\n\t      if (decl && decl.textBackgroundColor) {\n\t        this._removeShadow(ctx);\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = _char.split('');\n\t        charWidth = 0;\n\t        for (var j = 0, len = chars.length, char; j < len; j++) {\n\t          char = chars[j];\n\t          shouldFill && ctx.fillText(char, left + charWidth, top);\n\t          shouldStroke && ctx.strokeText(char, left + charWidth, top);\n\t          _charWidth = ctx.measureText(char).width + additionalSpace;\n\t          charWidth += _charWidth > 0 ? _charWidth : 0;\n\t        }\n\t      }\n\t      else {\n\t        shouldFill && ctx.fillText(_char, left, top);\n\t        shouldStroke && ctx.strokeText(_char, left, top);\n\t      }\n\t\n\t      if (textDecoration || textDecoration !== '') {\n\t        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n\t      }\n\t\n\t      decl && ctx.restore();\n\t      ctx.translate(charWidth, 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var decorationWeight = charHeight / 15,\n\t          positions = {\n\t            underline: top + charHeight / 10,\n\t            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n\t            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n\t          },\n\t          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\t\n\t      for (i = 0; i < decorations.length; i++) {\n\t        decoration = decorations[i];\n\t        if (textDecoration.indexOf(decoration) > -1) {\n\t          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      this.callSuper('_renderTextLinesBackground', ctx);\n\t\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset,\n\t          leftOffset = this._getLeftOffset(),\n\t          topOffset = this._getTopOffset(),\n\t          line, _char, style;\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        line = this._textLines[i];\n\t\n\t        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n\t          lineTopOffset += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t\n\t        for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t          style = this._getStyleDeclaration(i, j);\n\t          if (!style || !style.textBackgroundColor) {\n\t            continue;\n\t          }\n\t          _char = line[j];\n\t\n\t          ctx.fillStyle = style.textBackgroundColor;\n\t\n\t          ctx.fillRect(\n\t            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n\t            topOffset + lineTopOffset,\n\t            this._getWidthOfChar(ctx, _char, i, j) + 1,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} fontFamily name\n\t     * @return {Object} reference to cache\n\t     */\n\t    _getFontCache: function(fontFamily) {\n\t      if (!fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t      return fabric.charWidthsCache[fontFamily];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n\t          styleDeclaration = clone(charDecl),\n\t          width, cacheProp, charWidthsCache;\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles for this char\n\t      // global style from object is always applyed and handled by save and restore\n\t      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t\n\t      //if we want this._setShadow.call to work with styleDeclarion\n\t      //we have to add those references\n\t      if (styleDeclaration.shadow) {\n\t        styleDeclaration.scaleX = this.scaleX;\n\t        styleDeclaration.scaleY = this.scaleY;\n\t        styleDeclaration.canvas = this.canvas;\n\t        styleDeclaration.getObjectScaling = this.getObjectScaling;\n\t        this._setShadow.call(styleDeclaration, ctx);\n\t      }\n\t\n\t      if (!this.caching || !charWidthsCache[cacheProp]) {\n\t        width = ctx.measureText(_char).width;\n\t        this.caching && (charWidthsCache[cacheProp] = width);\n\t        return width;\n\t      }\n\t\n\t      return charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t      ctx.save();\n\t      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t      if (this.charSpacing !== 0) {\n\t        width += this._getWidthOfCharSpacing();\n\t      }\n\t      ctx.restore();\n\t      return width > 0 ? width : 0\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      this._isMeasuring = true;\n\t      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      if (this.charSpacing !== 0) {\n\t        width -= this._getWidthOfCharSpacing();\n\t      }\n\t      this._isMeasuring = false;\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var lineHeight, height = 0;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        lineHeight = this._getHeightOfLine(ctx, i);\n\t        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var clonedStyles = { }, i, j, row;\n\t      for (i in this.styles) {\n\t        row = this.styles[i];\n\t        clonedStyles[i] = { };\n\t        for (j in row) {\n\t          clonedStyles[i][j] = clone(row[j]);\n\t        }\n\t      }\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clonedStyles\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as argument\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object, callback) {\n\t    var iText = new fabric.IText(object.text, clone(object));\n\t    callback && callback(iText);\n\t    return iText;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t    },\n\t\n\t    /**\n\t     * Initializes \"selected\" event handler\n\t     */\n\t    initSelectedHandler: function() {\n\t      this.on('selected', function() {\n\t\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          _this.selected = true;\n\t        }, 100);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        if (this.canvas && !this.canvas._hasITextHandlers) {\n\t          this.canvas._hasITextHandlers = true;\n\t          this._initCanvasHandlers();\n\t        }\n\t\n\t        // Track IText instances per-canvas. Only register in this array once added\n\t        // to a canvas; we don't want to leak a reference to the instance forever\n\t        // simply because it existed at some point.\n\t        // (Might be added to a collection, but not on a canvas.)\n\t        if (_this.canvas) {\n\t          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n\t          _this.canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        // (Might be removed from a collection, but not on a canvas.)\n\t        if (_this.canvas) {\n\t          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(_this.canvas._iTextInstances, _this);\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function() {\n\t      var _this = this;\n\t\n\t      this.canvas.on('selection:cleared', function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n\t      });\n\t\n\t      this.canvas.on('mouse:up', function() {\n\t        if (_this.canvas._iTextInstances) {\n\t          _this.canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      });\n\t\n\t      this.canvas.on('object:selected', function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          // we do not want to animate a selection, only cursor\n\t          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      // to clear just itext area we need to transform the context\n\t      // it may not be worth it\n\t      if (shouldClear) {\n\t        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.selectionStart = 0;\n\t      this.selectionEnd = this.text.length;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function(e) {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t\n\t      this.initHiddenTextarea(e);\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t      this._textBeforeEdit = this.text;\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.canvas.renderAll();\n\t      this.initMouseMoveHandler();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      this.canvas.on('mouse:move', this.mouseMoveHandler.bind(this));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    mouseMoveHandler: function(options) {\n\t      if (!this.__isMousedown || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n\t          currentStart = this.selectionStart,\n\t          currentEnd = this.selectionEnd;\n\t      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n\t        return;\n\t      }\n\t      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n\t        this.selectionStart = this.__selectionStartOnMouseDown;\n\t        this.selectionEnd = newSelectionStart;\n\t      }\n\t      else {\n\t        this.selectionStart = newSelectionStart;\n\t        this.selectionEnd = this.__selectionStartOnMouseDown;\n\t      }\n\t      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n\t        this._fireSelectionChanged();\n\t        this._updateTextarea();\n\t        this.renderCursorOrSelection();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea || this.inCompositionMode) {\n\t        return;\n\t      }\n\t      this.cursorOffsetCache = { };\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        var style = this._calcTextareaPosition();\n\t        this.hiddenTextarea.style.left = style.left;\n\t        this.hiddenTextarea.style.top = style.top;\n\t        this.hiddenTextarea.style.fontSize = style.fontSize;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Object} style contains style for hiddenTextarea\n\t     */\n\t    _calcTextareaPosition: function() {\n\t      if (!this.canvas) {\n\t        return { x: 1, y: 1 };\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          m = this.calcTransformMatrix(),\n\t          p = {\n\t            x: boundaries.left + leftOffset,\n\t            y: boundaries.top + boundaries.topOffset + charHeight\n\t          },\n\t          upperCanvas = this.canvas.upperCanvasEl,\n\t          maxWidth = upperCanvas.width - charHeight,\n\t          maxHeight = upperCanvas.height - charHeight;\n\t\n\t      p = fabric.util.transformPoint(p, m);\n\t      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\t\n\t      if (p.x < 0) {\n\t        p.x = 0;\n\t      }\n\t      if (p.x > maxWidth) {\n\t        p.x = maxWidth;\n\t      }\n\t      if (p.y < 0) {\n\t        p.y = 0;\n\t      }\n\t      if (p.y > maxHeight) {\n\t        p.y = maxHeight;\n\t      }\n\t\n\t      // add canvas offset on document\n\t      p.x += this.canvas._offset.left;\n\t      p.y += this.canvas._offset.top;\n\t\n\t      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t      var isTextChanged = (this._textBeforeEdit !== this.text);\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t      this.hiddenTextarea = null;\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      isTextChanged && this.fire('modified');\n\t      if (this.canvas) {\n\t        this.canvas.off('mouse:move', this.mouseMoveHandler);\n\t        this.canvas.fire('text:editing:exited', { target: this });\n\t        isTextChanged && this.canvas.fire('object:modified', { target: this });\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.selectionStart = start;\n\t      this.selectionEnd = start;\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t      }\n\t      //short circuit for block paste\n\t      if (!useCopiedStyle && this.isEmptyStyles()) {\n\t        this.insertChar(_chars, false);\n\t        return;\n\t      }\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.copiedTextStyle[i];\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.selectionStart += _char.length;\n\t      this.selectionEnd = this.selectionStart;\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this._updateTextarea();\n\t      this.setCoords();\n\t      this._fireSelectionChanged();\n\t      this.fire('changed');\n\t      this.canvas && this.canvas.fire('text:changed', { target: this });\n\t      this.canvas && this.canvas.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      if (!this.styles[lineIndex + 1]) {\n\t        this.styles[lineIndex + 1] = {};\n\t      }\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        for (var index in this.styles[lineIndex]) {\n\t          if (parseInt(index, 10) >= charIndex) {\n\t            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t\n\t      this.styles[lineIndex][charIndex] =\n\t        style || clone(currentLineStyles[charIndex - 1]);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    },\n\t\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      return this._textLines[lIndex - 1];\n\t    },\n\t\n\t    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t        }\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    },\n\t\n\t    /**\n\t     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n\t     * mimic the key - mouse navigation when shift is pressed.\n\t     */\n\t    setSelectionStartEndWithShift: function(start, end, newSelection) {\n\t      if (newSelection <= start) {\n\t        if (end === start) {\n\t          this._selectionDirection = 'left';\n\t        }\n\t        else if (this._selectionDirection === 'right') {\n\t          this._selectionDirection = 'left';\n\t          this.selectionEnd = start;\n\t        }\n\t        this.selectionStart = newSelection;\n\t      }\n\t      else if (newSelection > start && newSelection < end) {\n\t        if (this._selectionDirection === 'right') {\n\t          this.selectionEnd = newSelection;\n\t        }\n\t        else {\n\t          this.selectionStart = newSelection;\n\t        }\n\t      }\n\t      else {\n\t        // newSelection is > selection start and end\n\t        if (end === start) {\n\t          this._selectionDirection = 'right';\n\t        }\n\t        else if (this._selectionDirection === 'left') {\n\t          this._selectionDirection = 'right';\n\t          this.selectionStart = end;\n\t        }\n\t        this.selectionEnd = newSelection;\n\t      }\n\t    },\n\t\n\t    setSelectionInBoundaries: function() {\n\t      var length = this.text.length;\n\t      if (this.selectionStart > length) {\n\t        this.selectionStart = length;\n\t      }\n\t      else if (this.selectionStart < 0) {\n\t        this.selectionStart = 0;\n\t      }\n\t      if (this.selectionEnd > length) {\n\t        this.selectionEnd = length;\n\t      }\n\t      else if (this.selectionEnd < 0) {\n\t        this.selectionEnd = 0;\n\t      }\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initSelectedHandler();\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t      if (!this.editable) {\n\t        return;\n\t      }\n\t      var pointer = this.canvas.getPointer(options.e);\n\t\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.abortCursorAnimation();\n\t        }\n\t        this.renderCursorOrSelection();\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (!this.editable || this._isObjectMoved(options.e)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected && !this.__corner) {\n\t        this.enterEditing(options.e);\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.initDelayedCursor(true);\n\t        }\n\t        else {\n\t          this.renderCursorOrSelection();\n\t        }\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelection = this.getSelectionStartFromPointer(e),\n\t        start = this.selectionStart, end = this.selectionEnd;\n\t    if (e.shiftKey) {\n\t      this.setSelectionStartEndWithShift(start, end, newSelection);\n\t    }\n\t    else {\n\t      this.selectionStart = newSelection;\n\t      this.selectionEnd = newSelection;\n\t    }\n\t    this._fireSelectionChanged();\n\t    this._updateTextarea();\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    var style = this._calcTextareaPosition();\n\t    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n\t                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n\t    fabric.document.body.appendChild(this.hiddenTextarea);\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapUp: {\n\t    67: 'copy',\n\t    88: 'cut'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapDown: {\n\t    65: 'selectAll'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this._keysMap) {\n\t      this[this._keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapDown[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n\t   * if a copy/cut event fired, keyup is dismissed\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyUp: function(e) {\n\t    if (!this.isEditing || this._copyDone) {\n\t      this._copyDone = false;\n\t      return;\n\t    }\n\t    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapUp[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this.inCompositionMode) {\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        offsetEnd = this.selectionEnd || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff, charsToInsert, start;\n\t    if (newTextLength > textLength) {\n\t      //we added some character\n\t      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n\t      diff = newTextLength - textLength;\n\t      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n\t    }\n\t    else {\n\t      //we selected a portion of text and then input something else.\n\t      //Internet explorer does not trigger this else\n\t      diff = newTextLength - textLength + offsetEnd - offset;\n\t      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    }\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Composition start\n\t   */\n\t  onCompositionStart: function() {\n\t    this.inCompositionMode = true;\n\t    this.prevCompositionLength = 0;\n\t    this.compositionStart = this.selectionStart;\n\t  },\n\t\n\t  /**\n\t   * Composition end\n\t   */\n\t  onCompositionEnd: function() {\n\t    this.inCompositionMode = false;\n\t  },\n\t\n\t  /**\n\t   * Composition update\n\t   */\n\t  onCompositionUpdate: function(e) {\n\t    var data = e.data;\n\t    this.selectionStart = this.compositionStart;\n\t    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n\t      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n\t    this.insertChars(data, false);\n\t    this.prevCompositionLength = data.length;\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      //do not cut-copy if no selection\n\t      return;\n\t    }\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = this.getSelectionStyles(\n\t                          this.selectionStart,\n\t                          this.selectionEnd);\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this._copyDone = true;\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy(e);\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return (e && e.clipboardData) || fabric.window.clipboardData;\n\t  },\n\t\n\t  /**\n\t   * Finds the width in pixels before the cursor on the same line\n\t   * @private\n\t   * @param {Number} lineIndex\n\t   * @param {Number} charIndex\n\t   * @return {Number} widthBeforeCursor width before cursor\n\t   */\n\t  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n\t    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n\t        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\t\n\t    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n\t      _char = textBeforeCursor[i];\n\t      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t    return widthBeforeCursor;\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n\t        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\t\n\t    return textAfterCursor.length + indexOnOtherLine + 2;\n\t  },\n\t\n\t  /**\n\t   * private\n\t   * Helps finding if the offset should be counted from Start or End\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  _getSelectionForOffset: function(e, isRight) {\n\t    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n\t      return this.selectionEnd;\n\t    }\n\t    else {\n\t      return this.selectionStart;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      // if on first line, up cursor goes to start of line\n\t      return -selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n\t        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n\t    // return a negative offset\n\t    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * find for a given width it founds the matching character.\n\t   * @private\n\t   */\n\t  _getIndexOnLine: function(lineIndex, width) {\n\t\n\t    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        textOnLine = this._textLines[lineIndex],\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n\t        widthOfCharsOnLine = lineLeftOffset,\n\t        indexOnLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnLine > width) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - width),\n\t            offsetFromRightEdge = Math.abs(rightEdge - width);\n\t\n\t        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnLine = textOnLine.length - 1;\n\t    }\n\t\n\t    return indexOnLine;\n\t  },\n\t\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Down', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Up', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up or down, fires the events\n\t   * @param {String} direction 'Up' or 'Down'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorUpOrDown: function(direction, e) {\n\t    // getUpCursorOffset\n\t    // getDownCursorOffset\n\t    var action = 'get' + direction + 'CursorOffset',\n\t        offset = this[action](e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorWithoutShift(offset);\n\t    }\n\t    if (offset !== 0) {\n\t      this.setSelectionInBoundaries();\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithShift: function(offset) {\n\t    var newSelection = this._selectionDirection === 'left'\n\t    ? this.selectionStart + offset\n\t    : this.selectionEnd + offset;\n\t    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithoutShift: function(offset) {\n\t    if (offset < 0) {\n\t      this.selectionStart += offset;\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionEnd += offset;\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Left', e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @return {Boolean} true if a change happened\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var newValue;\n\t    if (e.altKey) {\n\t      newValue = this['findWordBoundary' + direction](this[prop]);\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      newValue = this['findLineBoundary' + direction](this[prop]);\n\t    }\n\t    else {\n\t      this[prop] += direction === 'Left' ? -1 : 1;\n\t      return true;\n\t    }\n\t    if (typeof newValue !== undefined && this[prop] !== newValue) {\n\t      this[prop] = newValue;\n\t      return true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    return this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    return this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    var change = true;\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n\t      change = this._moveLeft(e, 'selectionStart');\n\t\n\t    }\n\t    this.selectionEnd = this.selectionStart;\n\t    return change;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else if (this.selectionStart !== 0){\n\t      this._selectionDirection = 'left';\n\t      return this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Right', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right or Left, fires event\n\t   * @param {String} direction 'Left', 'Right'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorLeftOrRight: function(direction, e) {\n\t    var actionName = 'moveCursor' + direction + 'With';\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      actionName += 'Shift';\n\t    }\n\t    else {\n\t      actionName += 'outShift';\n\t    }\n\t    if (this[actionName](e)) {\n\t      this.abortCursorAnimation();\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveRight(e, 'selectionStart');\n\t    }\n\t    else if (this.selectionEnd !== this.text.length) {\n\t      this._selectionDirection = 'right';\n\t      return this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    var changed = true;\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      changed = this._moveRight(e, 'selectionStart');\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return changed;\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n'\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text',\n\t        getSvgFilter: fabric.Object.prototype.getSvgFilter\n\t      }, styleDecl));\n\t\n\t      return [\n\t        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n\t        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n\t        'style=\"', fillStyles, '\">',\n\t        fabric.util.string.escapeXml(_char),\n\t        '</tspan>\\n'\n\t      ].join('');\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {}),\n\t      clone  = fabric.util.object.clone;\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * fixed to 2 so that an empty textbox cannot go to 0\n\t     * and is still selectable without text.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 2,\n\t\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingY: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingFlip: true,\n\t\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      this.callSuper('initialize', text, options);\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t\n\t      // add width to this list of props that effect line wrapping.\n\t      this._dimensionAffectingProps.width = true;\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines();\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n' && i > 0) {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ' && i > 0) {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        if (!map) {\n\t          return returnCloneOrEmpty ? { } : null;\n\t        }\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0;\n\t      charOffset = charOffset || 0;\n\t      for (var i = 0, len = text.length; i < len; i++) {\n\t        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var lineWidth        = 0,\n\t          lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          word             = '',\n\t          offset           = 0,\n\t          infix            = ' ',\n\t          wordWidth        = 0,\n\t          infixWidth       = 0,\n\t          largestWordWidth = 0,\n\t          lineJustStarted = true,\n\t          additionalSpace = this._getWidthOfCharSpacing();\n\t\n\t      for (var i = 0; i < words.length; i++) {\n\t        word = words[i];\n\t        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\t\n\t        offset += word.length;\n\t\n\t        lineWidth += infixWidth + wordWidth - additionalSpace;\n\t\n\t        if (lineWidth >= this.width && !lineJustStarted) {\n\t          lines.push(line);\n\t          line = '';\n\t          lineWidth = wordWidth;\n\t          lineJustStarted = true;\n\t        }\n\t        else {\n\t          lineWidth += additionalSpace;\n\t        }\n\t\n\t        if (!lineJustStarted) {\n\t          line += infix;\n\t        }\n\t        line += word;\n\t\n\t        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n\t        offset++;\n\t        lineJustStarted = false;\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      i && lines.push(line);\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      var originalAlign = this.textAlign;\n\t      this.ctx.save();\n\t      this._setTextStyles(this.ctx);\n\t      this.textAlign = 'left';\n\t      var lines = this._wrapText(this.ctx, this.text);\n\t      this.textAlign = originalAlign;\n\t      this.ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        minWidth: this.minWidth\n\t      });\n\t    }\n\t  });\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object, callback) {\n\t    var textbox = new fabric.Textbox(object.text, clone(object));\n\t    callback && callback(textbox);\n\t    return textbox;\n\t  };\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t        return true;\n\t      }\n\t    }\n\t    else {\n\t      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles),\n\t          map          = this._styleMap[lineIndex];\n\t\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(549).DOMParser,\n\t      URL = __webpack_require__(336),\n\t      HTTP = __webpack_require__(222),\n\t      HTTPS = __webpack_require__(451),\n\t\n\t      Canvas = __webpack_require__(213),\n\t      Image = __webpack_require__(213).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(547);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      // eslint-disable-next-line no-eval\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  // fabric.util.createCanvasElement = function(_, width, height) {\n\t  //   return new Canvas(width, height);\n\t  // }\n\t\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n\t        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t    options = options || { };\n\t    options.nodeCanvas = nodeCanvas;\n\t    options.nodeCacheCanvas = nodeCacheCanvas;\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n\t    fabricCanvas.Font = Canvas.Font;\n\t    return fabricCanvas;\n\t  };\n\t\n\t  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n\t  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n\t    el = el || fabric.document.createElement('canvas');\n\t    this.nodeCanvas = new Canvas(el.width, el.height);\n\t    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n\t    originaInitStatic.call(this, el, options);\n\t    this.contextContainer = this.nodeCanvas.getContext('2d');\n\t    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n\t    this.Font = Canvas.Font;\n\t  }\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n\t    if (!this._isRetinaScaling()) {\n\t      return;\n\t    }\n\t\n\t    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n\t    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n\t    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n\t  }\n\t\n\t  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n\t    origSetBackstoreDimension.call(this, prop, value);\n\t    this.nodeCanvas[prop] = value;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23).Buffer, __webpack_require__(60)))\n\n/***/ },\n\n/***/ 449:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(49);\n\tvar Response = __webpack_require__(450);\n\tvar Base64 = __webpack_require__(338);\n\tvar inherits = __webpack_require__(44);\n\t\n\tvar Request = module.exports = function (xhr, params) {\n\t    var self = this;\n\t    self.writable = true;\n\t    self.xhr = xhr;\n\t    self.body = [];\n\t    \n\t    self.uri = (params.protocol || 'http:') + '//'\n\t        + params.host\n\t        + (params.port ? ':' + params.port : '')\n\t        + (params.path || '/')\n\t    ;\n\t    \n\t    if (typeof params.withCredentials === 'undefined') {\n\t        params.withCredentials = true;\n\t    }\n\t\n\t    try { xhr.withCredentials = params.withCredentials }\n\t    catch (e) {}\n\t    \n\t    if (params.responseType) try { xhr.responseType = params.responseType }\n\t    catch (e) {}\n\t    \n\t    xhr.open(\n\t        params.method || 'GET',\n\t        self.uri,\n\t        true\n\t    );\n\t\n\t    xhr.onerror = function(event) {\n\t        self.emit('error', new Error('Network error'));\n\t    };\n\t\n\t    self._headers = {};\n\t    \n\t    if (params.headers) {\n\t        var keys = objectKeys(params.headers);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (!self.isSafeRequestHeader(key)) continue;\n\t            var value = params.headers[key];\n\t            self.setHeader(key, value);\n\t        }\n\t    }\n\t    \n\t    if (params.auth) {\n\t        //basic auth\n\t        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n\t    }\n\t\n\t    var res = new Response;\n\t    res.on('close', function () {\n\t        self.emit('close');\n\t    });\n\t    \n\t    res.on('ready', function () {\n\t        self.emit('response', res);\n\t    });\n\t\n\t    res.on('error', function (err) {\n\t        self.emit('error', err);\n\t    });\n\t    \n\t    xhr.onreadystatechange = function () {\n\t        // Fix for IE9 bug\n\t        // SCRIPT575: Could not complete the operation due to error c00c023f\n\t        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n\t        if (xhr.__aborted) return;\n\t        res.handle(xhr);\n\t    };\n\t};\n\t\n\tinherits(Request, Stream);\n\t\n\tRequest.prototype.setHeader = function (key, value) {\n\t    this._headers[key.toLowerCase()] = value\n\t};\n\t\n\tRequest.prototype.getHeader = function (key) {\n\t    return this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.removeHeader = function (key) {\n\t    delete this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.write = function (s) {\n\t    this.body.push(s);\n\t};\n\t\n\tRequest.prototype.destroy = function (s) {\n\t    this.xhr.__aborted = true;\n\t    this.xhr.abort();\n\t    this.emit('close');\n\t};\n\t\n\tRequest.prototype.end = function (s) {\n\t    if (s !== undefined) this.body.push(s);\n\t\n\t    var keys = objectKeys(this._headers);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i];\n\t        var value = this._headers[key];\n\t        if (isArray(value)) {\n\t            for (var j = 0; j < value.length; j++) {\n\t                this.xhr.setRequestHeader(key, value[j]);\n\t            }\n\t        }\n\t        else this.xhr.setRequestHeader(key, value)\n\t    }\n\t\n\t    if (this.body.length === 0) {\n\t        this.xhr.send('');\n\t    }\n\t    else if (typeof this.body[0] === 'string') {\n\t        this.xhr.send(this.body.join(''));\n\t    }\n\t    else if (isArray(this.body[0])) {\n\t        var body = [];\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body.push.apply(body, this.body[i]);\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n\t        var len = 0;\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            len += this.body[i].length;\n\t        }\n\t        var body = new(this.body[0].constructor)(len);\n\t        var k = 0;\n\t        \n\t        for (var i = 0; i < this.body.length; i++) {\n\t            var b = this.body[i];\n\t            for (var j = 0; j < b.length; j++) {\n\t                body[k++] = b[j];\n\t            }\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (isXHR2Compatible(this.body[0])) {\n\t        this.xhr.send(this.body[0]);\n\t    }\n\t    else {\n\t        var body = '';\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body += this.body[i].toString();\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t};\n\t\n\t// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\n\tRequest.unsafeHeaders = [\n\t    \"accept-charset\",\n\t    \"accept-encoding\",\n\t    \"access-control-request-headers\",\n\t    \"access-control-request-method\",\n\t    \"connection\",\n\t    \"content-length\",\n\t    \"cookie\",\n\t    \"cookie2\",\n\t    \"content-transfer-encoding\",\n\t    \"date\",\n\t    \"expect\",\n\t    \"host\",\n\t    \"keep-alive\",\n\t    \"origin\",\n\t    \"referer\",\n\t    \"te\",\n\t    \"trailer\",\n\t    \"transfer-encoding\",\n\t    \"upgrade\",\n\t    \"user-agent\",\n\t    \"via\"\n\t];\n\t\n\tRequest.prototype.isSafeRequestHeader = function (headerName) {\n\t    if (!headerName) return false;\n\t    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n\t};\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    return keys;\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\t\n\tvar indexOf = function (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t};\n\t\n\tvar isXHR2Compatible = function (obj) {\n\t    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n\t    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n\t    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n\t};\n\n\n/***/ },\n\n/***/ 450:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(49);\n\tvar util = __webpack_require__(84);\n\t\n\tvar Response = module.exports = function (res) {\n\t    this.offset = 0;\n\t    this.readable = true;\n\t};\n\t\n\tutil.inherits(Response, Stream);\n\t\n\tvar capable = {\n\t    streaming : true,\n\t    status2 : true\n\t};\n\t\n\tfunction parseHeaders (res) {\n\t    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n\t    var headers = {};\n\t    for (var i = 0; i < lines.length; i++) {\n\t        var line = lines[i];\n\t        if (line === '') continue;\n\t        \n\t        var m = line.match(/^([^:]+):\\s*(.*)/);\n\t        if (m) {\n\t            var key = m[1].toLowerCase(), value = m[2];\n\t            \n\t            if (headers[key] !== undefined) {\n\t            \n\t                if (isArray(headers[key])) {\n\t                    headers[key].push(value);\n\t                }\n\t                else {\n\t                    headers[key] = [ headers[key], value ];\n\t                }\n\t            }\n\t            else {\n\t                headers[key] = value;\n\t            }\n\t        }\n\t        else {\n\t            headers[line] = true;\n\t        }\n\t    }\n\t    return headers;\n\t}\n\t\n\tResponse.prototype.getResponse = function (xhr) {\n\t    var respType = String(xhr.responseType).toLowerCase();\n\t    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n\t    if (respType === 'arraybuffer') return xhr.response;\n\t    return xhr.responseText;\n\t}\n\t\n\tResponse.prototype.getHeader = function (key) {\n\t    return this.headers[key.toLowerCase()];\n\t};\n\t\n\tResponse.prototype.handle = function (res) {\n\t    if (res.readyState === 2 && capable.status2) {\n\t        try {\n\t            this.statusCode = res.status;\n\t            this.headers = parseHeaders(res);\n\t        }\n\t        catch (err) {\n\t            capable.status2 = false;\n\t        }\n\t        \n\t        if (capable.status2) {\n\t            this.emit('ready');\n\t        }\n\t    }\n\t    else if (capable.streaming && res.readyState === 3) {\n\t        try {\n\t            if (!this.statusCode) {\n\t                this.statusCode = res.status;\n\t                this.headers = parseHeaders(res);\n\t                this.emit('ready');\n\t            }\n\t        }\n\t        catch (err) {}\n\t        \n\t        try {\n\t            this._emitData(res);\n\t        }\n\t        catch (err) {\n\t            capable.streaming = false;\n\t        }\n\t    }\n\t    else if (res.readyState === 4) {\n\t        if (!this.statusCode) {\n\t            this.statusCode = res.status;\n\t            this.emit('ready');\n\t        }\n\t        this._emitData(res);\n\t        \n\t        if (res.error) {\n\t            this.emit('error', this.getResponse(res));\n\t        }\n\t        else this.emit('end');\n\t        \n\t        this.emit('close');\n\t    }\n\t};\n\t\n\tResponse.prototype._emitData = function (res) {\n\t    var respBody = this.getResponse(res);\n\t    if (respBody.toString().match(/ArrayBuffer/)) {\n\t        this.emit('data', new Uint8Array(respBody, this.offset));\n\t        this.offset = respBody.byteLength;\n\t        return;\n\t    }\n\t    if (respBody.length > this.offset) {\n\t        this.emit('data', respBody.slice(this.offset));\n\t        this.offset = respBody.length;\n\t    }\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 451:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(222);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ },\n\n/***/ 465:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n\n/***/ 466:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n\n/***/ 467:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(465);\n\texports.encode = exports.stringify = __webpack_require__(466);\n\n\n/***/ },\n\n/***/ 494:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 499:\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div id=create-mc-question> <mdl-button primary raised class=float-button style=\\\"bottom: 80px\\\" @click=\\\"questionInbox.show = true\\\" v-bind:disabled=publishButton.disabled> <i class=material-icons>inbox</i> {{questionInbox.questions.length}} </mdl-button> <mdl-button primary raised class=float-button @click=publishQuestion() v-bind:disabled=publishButton.disabled> 發佈 </mdl-button> <div class=body_wrapper> <card> <div slot=content style=\\\"padding: 16px 16px 0 16px\\\"> <div class=flex-column> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>科目</span> <select v-model=newQuestion.subject> <option v-for=\\\"subject in subjects\\\" v-bind:value=subject.id> {{ subject.name }} </option> </select> </div> <div class=\\\"set_difficulty flex-column flex-50\\\"> <span class=field-title style=margin-bottom:4px>難度</span> <span class=flex-row> <i v-for=\\\"n in 5\\\" class=material-icons @click=\\\"newQuestion.difficulty = $index + 1\\\" :class=\\\"{'difficulty_status': newQuestion.difficulty > $index}\\\">star_rate</i> </span> </div> </div> <div class=flex-row style=\\\"padding-top: 25px\\\"> <div class=\\\"flex-column flex-50\\\"> <div style=\\\"margin-right: 10px\\\"> <span class=field-title>標籤</span> </div> <div class=\\\"flex-row flex-center flex-wrap\\\"> <span class=q-tag @click=removeTag($index) v-for=\\\"tag in newQuestion.tags\\\" track-by=$index>{{tag}}</span> </div> <div style=\\\"position: relative;top: -12px\\\"> <mdl-textfield label=輸入標籤.回車 @keyup.enter=addTag() :value.sync=tag style=width:200px></mdl-textfield> </div> </div> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>語言</span> <select v-model=newQuestion.language v-on:change=setUserLanguage(newQuestion.language)> <option v-for=\\\"language in languages\\\" v-bind:value=language.id> {{ language.name }} </option> </select> </div> </div> </div> </div> </card> <div class=flex-column style=\\\"margin-bottom: 16px\\\"> <h5 style=margin-left:4px>編輯題目</h5> <div style=background:#ddd class=flex-column> <mdl-button primary @click=\\\"editorPreview.image.show = !editorPreview.image.show\\\"><i class=material-icons>photo</i> <span>添加圖片</span> </mdl-button> </div> <div v-show=editorPreview.image.show> <form v-on:change=readImg($event)> <input type=file id=uploadedImg /> </form> <div class=\\\"flex-column flex-center\\\"> <canvas v-el:fabricprocess></canvas> <mdl-textfield label=圖片名字 :value.sync=editorPreview.image.label></mdl-textfield> <mdl-button primary @click=outputImg()><i class=material-icons>photo</i> <span>输出图片</span></mdl-button> </div> </div> </div> <div class=flex-column> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.question></quill> </div> </card> </div> <h5 style=margin-left:4px>編輯答案</h5> <p style=margin:0;text-align:center;color:#9E9E9E>點擊選項設定正確答案</p> <div id=mc_input_container> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 0}\\\" @click=\\\"newQuestion.answer.mc = 0\\\">A</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[0]></quill> </div> </card> </div> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 1}\\\" @click=\\\"newQuestion.answer.mc = 1\\\">B</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[1]></quill> </div> </card> </div> </div> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 2}\\\" @click=\\\"newQuestion.answer.mc = 2\\\">C</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[2]></quill> </div> </card> </div> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 3}\\\" @click=\\\"newQuestion.answer.mc = 3\\\">D</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[3]></quill> </div> </card> </div> </div> </div> </div> <div class=questions_inbox class=flex-column :class=\\\"{'show': questionInbox.show}\\\"> <div class=flex-row style=\\\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0\\\"> <i class=material-icons @click=\\\"questionInbox.show = false\\\">close</i> <span style=\\\"font-size: 20px;padding-top: 2px;padding-left: 16px\\\">創建題集記錄</span> </div> <div class=\\\"flex-column flex-center\\\" style=\\\"margin: 8px 0\\\" id=getLatestQuestionsButton> <mdl-button primary raised @click=getLatestQuestionsCreatedByMe()>獲取我最近創建的題目</mdl-button> </div> <div class=flex-column style=\\\"overflow-y: auto;margin-bottom:60px; flex: 1\\\"> <div class=question v-for=\\\"q in questionInbox.questions\\\" track-by=_id> <div v-if=q.delta> <div class=q-context v-html=renderDelta(q.delta)></div> </div> <div v-if=q.context> <div class=q-context v-html=q.context></div> </div> <div class=flex-row> <span style=\\\"color: #9E9E9E\\\">{{q._id | timestamp}}</span> <span class=\\\"flex-row flex-center\\\" style=color:#FFC107;margin-left:auto>{{q.difficulty}}<i class=material-icons style=\\\"font-size: 18px\\\">star</i></span> </div> </div> </div> </div> </div> \";\n\n/***/ },\n\n/***/ 525:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__webpack_require__(428)\n\t__vue_script__ = __webpack_require__(349)\n\t__vue_template__ = __webpack_require__(499)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ },\n\n/***/ 547:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 548:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 549:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 5.2a7b4efc47ecf14f25c0.js\n **/","exports = module.exports = function (delta) {\n  delta = JSON.parse(delta)\n  var result = delta.map(function (op) {\n    var html = op.insert\n    if (typeof op.insert !== 'string') {\n      if (op.insert.formula) {\n        html = window.katex.renderToString(op.insert.formula)\n      } else {\n        return ''\n      }\n    }\n    if (op.attributes && op.attributes.bold) {\n      html = '<strong>' + html + '</strong>'\n    }\n\n    if (op.insert.formula) {\n      html = window.katex.renderToString(op.insert.formula)\n    }\n\n    return html\n  }).join('')\n\n  return result\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/delta-render.js\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".card{background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/reuseable/Card.vue\"],\"names\":[],\"mappings\":\"AACA,MACE,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC\",\"file\":\"Card.vue\",\"sourcesContent\":[\"\\n.card {\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/reuseable/Card.vue\n ** module id = 17\n ** module chunks = 1 3 4 5 9\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/reuseable/Card.vue\n ** module id = 18\n ** module chunks = 1 3 4 5 9\n **/","module.exports = \" <div> <div class=card> <slot name=content></slot> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/reuseable/Card.vue\n ** module id = 20\n ** module chunks = 1 3 4 5 9\n **/","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Card.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Card.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Card.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/reuseable/Card.vue\n ** module id = 21\n ** module chunks = 1 3 4 5 9\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/json/stringify.js\n ** module id = 30\n ** module chunks = 2 3 5 9\n **/","var core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/json/stringify.js\n ** module id = 31\n ** module chunks = 2 3 5 9\n **/","module.exports = {\n  languages: [\n    {name: 'English', id: 'eng'},\n    {name: '中文', id: 'cht'}\n  ]\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/Languages.js\n **/","exports = module.exports = require(\"./../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n * Quill Editor v1.1.0\\n * https://quilljs.com/\\n * Copyright (c) 2014, Jason Chen\\n * Copyright (c) 2013, salesforce.com\\n */.ql-container{box-sizing:border-box;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;margin:0;position:relative}.ql-container.ql-disabled .ql-tooltip{visibility:hidden}.ql-clipboard{left:-100000px;height:1px;overflow-y:hidden;position:absolute;top:50%}.ql-clipboard p{margin:0;padding:0}.ql-editor{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}.ql-editor blockquote,.ql-editor h1,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor h5,.ql-editor h6,.ql-editor ol,.ql-editor p,.ql-editor pre,.ql-editor ul{margin:0;padding:0;counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol,.ql-editor ul{padding-left:1.5em}.ql-editor ol>li,.ql-editor ul>li{list-style-type:none}.ql-editor ul>li:before{content:'\\\\25CF'}.ql-editor li:before{display:inline-block;margin-right:.3em;text-align:right;white-space:nowrap;width:1.2em}.ql-editor li:not(.ql-direction-rtl):before{margin-left:-1.5em}.ql-editor ol li,.ql-editor ul li{padding-left:1.5em}.ql-editor ol li{counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;counter-increment:list-num}.ql-editor ol li:before{content:counter(list-num,decimal) '. '}.ql-editor ol li.ql-indent-1{counter-increment:list-1}.ql-editor ol li.ql-indent-1:before{content:counter(list-1,lower-alpha) '. '}.ql-editor ol li.ql-indent-1{counter-reset:list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-2{counter-increment:list-2}.ql-editor ol li.ql-indent-2:before{content:counter(list-2,lower-roman) '. '}.ql-editor ol li.ql-indent-2{counter-reset:list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-3{counter-increment:list-3}.ql-editor ol li.ql-indent-3:before{content:counter(list-3,decimal) '. '}.ql-editor ol li.ql-indent-3{counter-reset:list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-4{counter-increment:list-4}.ql-editor ol li.ql-indent-4:before{content:counter(list-4,lower-alpha) '. '}.ql-editor ol li.ql-indent-4{counter-reset:list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-5{counter-increment:list-5}.ql-editor ol li.ql-indent-5:before{content:counter(list-5,lower-roman) '. '}.ql-editor ol li.ql-indent-5{counter-reset:list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-6{counter-increment:list-6}.ql-editor ol li.ql-indent-6:before{content:counter(list-6,decimal) '. '}.ql-editor ol li.ql-indent-6{counter-reset:list-7 list-8 list-9}.ql-editor ol li.ql-indent-7{counter-increment:list-7}.ql-editor ol li.ql-indent-7:before{content:counter(list-7,lower-alpha) '. '}.ql-editor ol li.ql-indent-7{counter-reset:list-8 list-9}.ql-editor ol li.ql-indent-8{counter-increment:list-8}.ql-editor ol li.ql-indent-8:before{content:counter(list-8,lower-roman) '. '}.ql-editor ol li.ql-indent-8{counter-reset:list-9}.ql-editor ol li.ql-indent-9{counter-increment:list-9}.ql-editor ol li.ql-indent-9:before{content:counter(list-9,decimal) '. '}.ql-editor .ql-indent-1:not(.ql-direction-rtl){padding-left:3em}.ql-editor li.ql-indent-1:not(.ql-direction-rtl){padding-left:4.5em}.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:3em}.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:4.5em}.ql-editor .ql-indent-2:not(.ql-direction-rtl){padding-left:6em}.ql-editor li.ql-indent-2:not(.ql-direction-rtl){padding-left:7.5em}.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:6em}.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:7.5em}.ql-editor .ql-indent-3:not(.ql-direction-rtl){padding-left:9em}.ql-editor li.ql-indent-3:not(.ql-direction-rtl){padding-left:10.5em}.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:9em}.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:10.5em}.ql-editor .ql-indent-4:not(.ql-direction-rtl){padding-left:12em}.ql-editor li.ql-indent-4:not(.ql-direction-rtl){padding-left:13.5em}.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:12em}.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:13.5em}.ql-editor .ql-indent-5:not(.ql-direction-rtl){padding-left:15em}.ql-editor li.ql-indent-5:not(.ql-direction-rtl){padding-left:16.5em}.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:15em}.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:16.5em}.ql-editor .ql-indent-6:not(.ql-direction-rtl){padding-left:18em}.ql-editor li.ql-indent-6:not(.ql-direction-rtl){padding-left:19.5em}.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:18em}.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:19.5em}.ql-editor .ql-indent-7:not(.ql-direction-rtl){padding-left:21em}.ql-editor li.ql-indent-7:not(.ql-direction-rtl){padding-left:22.5em}.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:21em}.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:22.5em}.ql-editor .ql-indent-8:not(.ql-direction-rtl){padding-left:24em}.ql-editor li.ql-indent-8:not(.ql-direction-rtl){padding-left:25.5em}.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:24em}.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:25.5em}.ql-editor .ql-indent-9:not(.ql-direction-rtl){padding-left:27em}.ql-editor li.ql-indent-9:not(.ql-direction-rtl){padding-left:28.5em}.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:27em}.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:28.5em}.ql-editor .ql-video{display:block;max-width:100%}.ql-editor .ql-video.ql-align-center{margin:0 auto}.ql-editor .ql-video.ql-align-right{margin:0 0 0 auto}.ql-editor .ql-bg-black{background-color:#000}.ql-editor .ql-bg-red{background-color:#e60000}.ql-editor .ql-bg-orange{background-color:#f90}.ql-editor .ql-bg-yellow{background-color:#ff0}.ql-editor .ql-bg-green{background-color:#008a00}.ql-editor .ql-bg-blue{background-color:#06c}.ql-editor .ql-bg-purple{background-color:#93f}.ql-editor .ql-color-white{color:#fff}.ql-editor .ql-color-red{color:#e60000}.ql-editor .ql-color-orange{color:#f90}.ql-editor .ql-color-yellow{color:#ff0}.ql-editor .ql-color-green{color:#008a00}.ql-editor .ql-color-blue{color:#06c}.ql-editor .ql-color-purple{color:#93f}.ql-editor .ql-font-serif{font-family:Georgia,Times New Roman,serif}.ql-editor .ql-font-monospace{font-family:Monaco,Courier New,monospace}.ql-editor .ql-size-small{font-size:.75em}.ql-editor .ql-size-large{font-size:1.5em}.ql-editor .ql-size-huge{font-size:2.5em}.ql-editor .ql-direction-rtl{direction:rtl;text-align:inherit}.ql-editor .ql-align-center{text-align:center}.ql-editor .ql-align-justify{text-align:justify}.ql-editor .ql-align-right{text-align:right}.ql-editor.ql-blank:before{color:rgba(0,0,0,.6);content:attr(data-placeholder);font-style:italic;pointer-events:none;position:absolute}.ql-snow.ql-toolbar:after,.ql-snow .ql-toolbar:after{clear:both;content:'';display:table}.ql-snow.ql-toolbar button,.ql-snow .ql-toolbar button{background:none;border:none;cursor:pointer;display:inline-block;float:left;height:24px;padding:3px 5px;width:28px}.ql-snow.ql-toolbar button svg,.ql-snow .ql-toolbar button svg{float:left;height:100%}.ql-snow.ql-toolbar input.ql-image[type=file],.ql-snow .ql-toolbar input.ql-image[type=file]{display:none}.ql-snow.ql-toolbar .ql-picker-item.ql-selected,.ql-snow .ql-toolbar .ql-picker-item.ql-selected,.ql-snow.ql-toolbar .ql-picker-item:hover,.ql-snow .ql-toolbar .ql-picker-item:hover,.ql-snow.ql-toolbar .ql-picker-label.ql-active,.ql-snow .ql-toolbar .ql-picker-label.ql-active,.ql-snow.ql-toolbar .ql-picker-label:hover,.ql-snow .ql-toolbar .ql-picker-label:hover,.ql-snow.ql-toolbar button.ql-active,.ql-snow .ql-toolbar button.ql-active,.ql-snow.ql-toolbar button:hover,.ql-snow .ql-toolbar button:hover{color:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-fill,.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,.ql-snow.ql-toolbar button:hover .ql-fill,.ql-snow .ql-toolbar button:hover .ql-fill,.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill{fill:#06c}.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-mitter,.ql-snow.ql-toolbar button.ql-active .ql-stroke,.ql-snow .ql-toolbar button.ql-active .ql-stroke,.ql-snow.ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow .ql-toolbar button.ql-active .ql-stroke-mitter,.ql-snow.ql-toolbar button:hover .ql-stroke,.ql-snow .ql-toolbar button:hover .ql-stroke,.ql-snow.ql-toolbar button:hover .ql-stroke-mitter,.ql-snow .ql-toolbar button:hover .ql-stroke-mitter{stroke:#06c}.ql-snow,.ql-snow *{box-sizing:border-box}.ql-snow .ql-hidden{display:none}.ql-snow .ql-out-bottom,.ql-snow .ql-out-top{visibility:hidden}.ql-snow .ql-tooltip{position:absolute}.ql-snow .ql-tooltip a{cursor:pointer;text-decoration:none}.ql-snow .ql-formats{display:inline-block;vertical-align:middle}.ql-snow .ql-formats:after{clear:both;content:'';display:table}.ql-snow .ql-stroke{fill:none;stroke:#444;stroke-linecap:round;stroke-linejoin:round;stroke-width:2}.ql-snow .ql-stroke-mitter{fill:none;stroke:#444;stroke-mitterlimit:10;stroke-width:2}.ql-snow .ql-fill,.ql-snow .ql-stroke.ql-fill{fill:#444}.ql-snow .ql-empty{fill:none}.ql-snow .ql-even{fill-rule:evenodd}.ql-snow .ql-stroke.ql-thin,.ql-snow .ql-thin{stroke-width:1}.ql-snow .ql-transparent{opacity:.4}.ql-snow .ql-direction svg:last-child{display:none}.ql-snow .ql-direction.ql-active svg:last-child{display:inline}.ql-snow .ql-direction.ql-active svg:first-child{display:none}.ql-snow .ql-editor h1{font-size:2em}.ql-snow .ql-editor h2{font-size:1.5em}.ql-snow .ql-editor h3{font-size:1.17em}.ql-snow .ql-editor h4{font-size:1em}.ql-snow .ql-editor h5{font-size:.83em}.ql-snow .ql-editor h6{font-size:.67em}.ql-snow .ql-editor a{text-decoration:underline}.ql-snow .ql-editor blockquote{border-left:4px solid #ccc;margin-bottom:5px;margin-top:5px;padding-left:16px}.ql-snow .ql-editor code,.ql-snow .ql-editor pre{background-color:#f0f0f0;border-radius:3px}.ql-snow .ql-editor pre{white-space:pre-wrap;margin-bottom:5px;margin-top:5px;padding:5px 10px}.ql-snow .ql-editor code{font-size:85%;padding-bottom:2px;padding-top:2px}.ql-snow .ql-editor code:after,.ql-snow .ql-editor code:before{content:\\\"\\\\A0\\\";letter-spacing:-2px}.ql-snow .ql-editor pre.ql-syntax{background-color:#23241f;color:#f8f8f2;overflow:visible}.ql-snow .ql-editor img{max-width:100%}.ql-snow .ql-picker{color:#444;display:inline-block;float:left;font-size:14px;font-weight:500;height:24px;position:relative;vertical-align:middle}.ql-snow .ql-picker-label{cursor:pointer;display:inline-block;height:100%;padding-left:8px;padding-right:2px;position:relative;width:100%}.ql-snow .ql-picker-label:before{display:inline-block;line-height:22px}.ql-snow .ql-picker-options{background-color:#fff;display:none;min-width:100%;padding:4px 8px;position:absolute;white-space:nowrap}.ql-snow .ql-picker-options .ql-picker-item{cursor:pointer;display:block;padding-bottom:5px;padding-top:5px}.ql-snow .ql-picker.ql-expanded .ql-picker-label{color:#ccc;z-index:2}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill{fill:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke{stroke:#ccc}.ql-snow .ql-picker.ql-expanded .ql-picker-options{display:block;margin-top:-1px;top:100%;z-index:1}.ql-snow .ql-color-picker,.ql-snow .ql-icon-picker{width:28px}.ql-snow .ql-color-picker .ql-picker-label,.ql-snow .ql-icon-picker .ql-picker-label{padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-label svg,.ql-snow .ql-icon-picker .ql-picker-label svg{right:4px}.ql-snow .ql-icon-picker .ql-picker-options{padding:4px 0}.ql-snow .ql-icon-picker .ql-picker-item{height:24px;width:24px;padding:2px 4px}.ql-snow .ql-color-picker .ql-picker-options{padding:3px 5px;width:152px}.ql-snow .ql-color-picker .ql-picker-item{border:1px solid transparent;float:left;height:16px;margin:2px;padding:0;width:16px}.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg{position:absolute;margin-top:-9px;right:0;top:50%;width:18px}.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label='']):before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label='']):before{content:attr(data-label)}.ql-snow .ql-picker.ql-header{width:98px}.ql-snow .ql-picker.ql-header .ql-picker-item:before,.ql-snow .ql-picker.ql-header .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"1\\\"]:before{content:'Heading 1'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"2\\\"]:before{content:'Heading 2'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"3\\\"]:before{content:'Heading 3'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"4\\\"]:before{content:'Heading 4'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"5\\\"]:before{content:'Heading 5'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before,.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\\\"6\\\"]:before{content:'Heading 6'}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"1\\\"]:before{font-size:2em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"2\\\"]:before{font-size:1.5em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"3\\\"]:before{font-size:1.17em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"4\\\"]:before{font-size:1em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"5\\\"]:before{font-size:.83em}.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\\\"6\\\"]:before{font-size:.67em}.ql-snow .ql-picker.ql-font{width:108px}.ql-snow .ql-picker.ql-font .ql-picker-item:before,.ql-snow .ql-picker.ql-font .ql-picker-label:before{content:'Sans Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]:before{content:'Serif'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before,.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]:before{content:'Monospace'}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]:before{font-family:Georgia,Times New Roman,serif}.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]:before{font-family:Monaco,Courier New,monospace}.ql-snow .ql-picker.ql-size{width:98px}.ql-snow .ql-picker.ql-size .ql-picker-item:before,.ql-snow .ql-picker.ql-size .ql-picker-label:before{content:'Normal'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]:before{content:'Small'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]:before{content:'Large'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before,.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]:before{content:'Huge'}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]:before{font-size:10px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]:before{font-size:18px}.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]:before{font-size:32px}.ql-snow .ql-color-picker.ql-background .ql-picker-item{background-color:#fff}.ql-snow .ql-color-picker.ql-color .ql-picker-item{background-color:#000}.ql-toolbar.ql-snow{border:1px solid #ccc;box-sizing:border-box;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding:8px}.ql-toolbar.ql-snow .ql-formats{margin-right:15px}.ql-toolbar.ql-snow .ql-picker-label{border:1px solid transparent}.ql-toolbar.ql-snow .ql-picker-options{border:1px solid transparent;box-shadow:0 2px 8px rgba(0,0,0,.2)}.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label,.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options{border-color:#ccc}.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item.ql-selected,.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item:hover{border-color:#000}.ql-toolbar.ql-snow+.ql-container.ql-snow{border-top:0}.ql-snow .ql-tooltip{background-color:#fff;border:1px solid #ccc;box-shadow:0 0 5px #ddd;color:#444;margin-top:10px;padding:5px 12px;white-space:nowrap}.ql-snow .ql-tooltip:before{content:\\\"Visit URL:\\\";line-height:26px;margin-right:8px}.ql-snow .ql-tooltip input[type=text]{display:none;border:1px solid #ccc;font-size:13px;height:26px;margin:0;padding:3px 5px;width:170px}.ql-snow .ql-tooltip a.ql-preview{display:inline-block;max-width:200px;overflow-x:hidden;text-overflow:ellipsis;vertical-align:top}.ql-snow .ql-tooltip a.ql-action:after{border-right:1px solid #ccc;content:'Edit';margin-left:16px;padding-right:8px}.ql-snow .ql-tooltip a.ql-remove:before{content:'Remove';margin-left:8px}.ql-snow .ql-tooltip a{line-height:26px}.ql-snow .ql-tooltip.ql-editing a.ql-preview,.ql-snow .ql-tooltip.ql-editing a.ql-remove{display:none}.ql-snow .ql-tooltip.ql-editing input[type=text]{display:inline-block}.ql-snow .ql-tooltip.ql-editing a.ql-action:after{border-right:0;content:'Save';padding-right:0}.ql-snow .ql-tooltip[data-mode=link]:before{content:\\\"Enter link:\\\"}.ql-snow .ql-tooltip[data-mode=formula]:before{content:\\\"Enter formula:\\\"}.ql-snow .ql-tooltip[data-mode=video]:before{content:\\\"Enter video:\\\"}.ql-snow a{color:#06c}.ql-container.ql-snow{border:1px solid #ccc}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/quill/dist/quill.snow.css\n ** module id = 176\n ** module chunks = 3 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../css-loader/index.js!./quill.snow.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./quill.snow.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./quill.snow.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/quill/dist/quill.snow.css\n ** module id = 205\n ** module chunks = 3 5\n **/","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/index.js\n ** module id = 222\n ** module chunks = 5\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/url.js\n ** module id = 336\n ** module chunks = 5\n **/",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Base64/base64.js\n ** module id = 338\n ** module chunks = 5\n **/","<template>\n  <div id=\"create-mc-question\">\n    <mdl-button primary raised class=\"float-button\" style=\"bottom: 80px\" @click=\"questionInbox.show = true\" v-bind:disabled=\"publishButton.disabled\">\n      <i class=\"material-icons\">inbox</i> {{questionInbox.questions.length}}\n    </mdl-button>\n    <mdl-button primary raised class=\"float-button\" @click=\"publishQuestion()\" v-bind:disabled=\"publishButton.disabled\">\n      發佈\n    </mdl-button>\n    <div class=\"body_wrapper\">\n      <card>\n        <div slot=\"content\" style=\"padding: 16px 16px 0 16px\">\n          <div class=\"flex-column\">\n            <div class=\"flex-row\">\n              <div class=\"flex-column flex-50\">\n                <span class=\"field-title\">科目</span>\n                <select v-model=\"newQuestion.subject\">\n                  <option v-for=\"subject in subjects\" v-bind:value=\"subject.id\">\n                    {{ subject.name }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"set_difficulty flex-column flex-50\">\n                <span class=\"field-title\" style=\"margin-bottom:4px\">難度</span>\n                <span class=\"flex-row\">\n                  <i v-for=\"n in 5\" class=\"material-icons\" @click=\"newQuestion.difficulty = $index + 1\" :class=\"{'difficulty_status': newQuestion.difficulty > $index}\">star_rate</i>\n                </span>\n              </div>\n            </div>\n            <div class=\"flex-row\" style=\"padding-top: 25px;\">\n              <div class=\"flex-column flex-50\">\n                <div style=\"margin-right: 10px;\">\n                  <span class=\"field-title\">標籤</span>\n                </div>\n                <div class=\"flex-row flex-center flex-wrap\">\n                  <span class=\"q-tag\" @click=\"removeTag($index)\" v-for=\"tag in newQuestion.tags\" track-by=\"$index\">{{tag}}</span>\n                </div>\n                <div style=\"position: relative;top: -12px\">\n                  <mdl-textfield label=\"輸入標籤.回車\" @keyup.enter=\"addTag()\" :value.sync=\"tag\" style=\"width:200px\"></mdl-textfield>\n                </div>\n              </div>\n\n              <div class=\"flex-column flex-50\">\n                <span class=\"field-title\">語言</span>\n                <select v-model=\"newQuestion.language\" v-on:change=\"setUserLanguage(newQuestion.language)\">\n                  <option v-for=\"language in languages\" v-bind:value=\"language.id\">\n                    {{ language.name }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </card>\n      <div class=\"flex-column\" style=\"margin-bottom: 16px\">\n        <h5 style=\"margin-left:4px\">編輯題目</h5>\n        <div style=\"background:#ddd\" class=\"flex-column\">\n          <mdl-button primary @click=\"editorPreview.image.show = !editorPreview.image.show\"><i class=\"material-icons\">photo</i>\n            <span>添加圖片</span>\n          </mdl-button>\n        </div>\n        <div v-show=\"editorPreview.image.show\">\n          <form v-on:change=\"readImg($event)\">\n            <input type=\"file\" id=\"uploadedImg\"/>\n          </form>\n          <div class=\"flex-column flex-center\">\n            <canvas v-el:fabricprocess></canvas>\n            <mdl-textfield label=\"圖片名字\" :value.sync=\"editorPreview.image.label\"></mdl-textfield>\n            <mdl-button primary @click=\"outputImg()\"><i class=\"material-icons\">photo</i> <span>输出图片</span></mdl-button>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-column\">\n        <card>\n          <div slot=\"content\">\n            <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.question\"></quill>\n          </div>\n        </card>\n      </div>\n\n      <h5 style=\"margin-left:4px\">編輯答案</h5>\n      <p style=\"margin:0;text-align:center;color:#9E9E9E\">點擊選項設定正確答案</p>\n      <div id=\"mc_input_container\">\n        <div class=\"flex-row\">\n          <div class=\"flex-column flex-50\">\n            <div class=\"mc_select\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 0}\" @click=\"newQuestion.answer.mc = 0\">A</div>\n            <card>\n              <div slot=\"content\">\n                <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[0]\"></quill>\n              </div>\n            </card>\n          </div>\n          <div class=\"flex-column flex-50\">\n            <div class=\"mc_select\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 1}\" @click=\"newQuestion.answer.mc = 1\">B</div>\n            <card>\n              <div slot=\"content\">\n                <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[1]\"></quill>\n              </div>\n            </card>\n          </div>\n        </div>\n        <div class=\"flex-row\">\n          <div class=\"flex-column flex-50\">\n            <div class=\"mc_select\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 2}\" @click=\"newQuestion.answer.mc = 2\">C</div>\n            <card>\n              <div slot=\"content\">\n                <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[2]\"></quill>\n              </div>\n            </card>\n          </div>\n          <div class=\"flex-column flex-50\">\n            <div class=\"mc_select\" :class=\"{'hightlight-answer': newQuestion.answer.mc === 3}\" @click=\"newQuestion.answer.mc = 3\">D</div>\n            <card>\n              <div slot=\"content\">\n                <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content.sync=\"editorPreview.answer.mc[3]\"></quill>\n              </div>\n            </card>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"questions_inbox\" class=\"flex-column\" :class=\"{'show': questionInbox.show}\">\n      <div class=\"flex-row\" style=\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0;\">\n        <i class=\"material-icons\" @click=\"questionInbox.show = false\">close</i>\n        <span style=\"font-size: 20px;padding-top: 2px;padding-left: 16px;\">創建題集記錄</span>\n      </div>\n\n      <div class=\"flex-column flex-center\" style=\"margin: 8px 0;\" id=\"getLatestQuestionsButton\">\n        <mdl-button primary raised @click=\"getLatestQuestionsCreatedByMe()\">獲取我最近創建的題目</mdl-button>\n      </div>\n\n      <div class=\"flex-column\" style=\"overflow-y: auto;margin-bottom:60px; flex: 1\">\n        <div class=\"question\" v-for=\"q in questionInbox.questions\" track-by=\"_id\">\n          <div v-if=\"q.delta\">\n            <div class=\"q-context\" v-html=\"renderDelta(q.delta)\"></div>\n          </div>\n          <div v-if=\"q.context\">\n            <div class=\"q-context\" v-html=\"q.context\"></div>\n          </div>\n          <div class=\"flex-row\">\n            <span style=\"color: #9E9E9E\">{{q._id | timestamp}}</span>\n            <span class=\"flex-row flex-center\" style=\"color:#FFC107;margin-left:auto\">{{q.difficulty}}<i class=\"material-icons\" style=\"font-size: 18px\">star</i></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'fabric'\nimport deltaRender from '../../modules/delta-render'\nimport Subject from '../../modules/Subjects'\nimport Language from '../../modules/Languages'\nimport Card from '../../components/reuseable/Card'\nimport store from '../../vuex/store'\nimport { setUserLanguage } from '../../vuex/actions'\nimport { getUserLanguage } from '../../vuex/getters'\nimport 'quill/dist/quill.snow.css'\n// var delayTimer\n\nexport default {\n  ready: function () {\n    this.newQuestion.language = this.getUserLanguage\n  },\n  components: {\n    Subject,\n    Card\n  },\n  methods: {\n    renderDelta: function (delta) {\n      return deltaRender(delta)\n    },\n    readImg: function (e) {\n      let c = this.$els.fabricprocess\n      var canvas = new window.fabric.Canvas(c, { width: 600, height: 300 })\n      c.fabric = canvas\n      var reader = new window.FileReader()\n      reader.onload = function (event) {\n        var imgObj = new window.Image()\n        imgObj.src = event.target.result\n        imgObj.onload = function () {\n          var image = new window.fabric.Image(imgObj)\n          image.set({\n            angle: 0,\n            padding: 10,\n            cornersize: 10,\n            height: 160,\n            width: imgObj.width * (160 / imgObj.height)\n          })\n          canvas.centerObject(image)\n          canvas.add(image)\n          canvas.renderAll()\n        }\n      }\n      reader.readAsDataURL(e.target.files[0])\n    },\n    outputImg: function () {\n      let c = this.$els.fabricprocess\n      let canvas = c.fabric\n      this.$http.get('/api/qiniu/uptoken').then(function (response) {\n        console.log(response.data.uptoken)\n        this.uploadImage(canvas.getObjects()[0].toDataURL(), response.data.uptoken)\n      })\n    },\n    publishQuestion: function () {\n      this.publishButton.disabled = true\n      if (this.checkComplete()) {\n        // this.newQuestion.context = renderQuill(this.editorPreview.question.ops)\n        this.newQuestion.delta = JSON.stringify(this.editorPreview.question.ops)\n        // this.newQuestion.choices[0] = renderQuill(this.editorPreview.answer.mc[0].ops)\n        // this.newQuestion.choices[1] = renderQuill(this.editorPreview.answer.mc[1].ops)\n        // this.newQuestion.choices[2] = renderQuill(this.editorPreview.answer.mc[2].ops)\n        // this.newQuestion.choices[3] = renderQuill(this.editorPreview.answer.mc[3].ops)\n        this.newQuestion.choices[0] = JSON.stringify(this.editorPreview.answer.mc[0].ops)\n        this.newQuestion.choices[1] = JSON.stringify(this.editorPreview.answer.mc[1].ops)\n        this.newQuestion.choices[2] = JSON.stringify(this.editorPreview.answer.mc[2].ops)\n        this.newQuestion.choices[3] = JSON.stringify(this.editorPreview.answer.mc[3].ops)\n\n        this.$http.post('/api/manage-question/questions', this.newQuestion).then(function (response) {\n          this.$showToast('發佈成功')\n          this.publishButton.disabled = false\n          this.newQuestion.context = ''\n          this.newQuestion.choices = ['', '', '', '']\n          this.newQuestion.answer = {\n            mc: 1\n          }\n          this.editorPreview = {\n            image: {\n              label: '',\n              type: 'qiniu',\n              data: '',\n              show: false\n            },\n            question: { ops: [] },\n            answer: {\n              mc: [ { ops: [] }, { ops: [] }, { ops: [] }, { ops: [] } ]\n            }\n          }\n          this.$broadcast('clear-editor')\n          // this.renderQuestionPreview('clear')\n          // this.renderMcPreview('clear')\n          this.questionInbox.questions.push(response.data)\n        }, function (response) {\n          this.$showToast('發佈失敗')\n          this.publishButton.disabled = false\n          console.log(response)\n        })\n      } else {\n        this.publishButton.disabled = false\n        this.$showToast('信息不完整')\n      }\n    },\n    checkComplete: function () {\n      let contentComplete = this.editorPreview.question.ops.length !== 0\n      let answerComplete = this.editorPreview.answer.mc[0].ops.length !== 0 && this.editorPreview.answer.mc[1].ops.length !== 0 && this.editorPreview.answer.mc[2].ops.length !== 0 && this.editorPreview.answer.mc[3].ops.length !== 0\n\n      return (contentComplete && answerComplete)\n    },\n    addTag: function () {\n      if (this.tag.trim() !== '') {\n        if (this.newQuestion.tags.indexOf(this.tag) === -1) {\n          this.newQuestion.tags.push(this.tag)\n          this.tag = ''\n        } else {\n          this.tag = ''\n        }\n      }\n    },\n    removeTag: function (index) {\n      this.newQuestion.tags.splice(index, 1)\n    },\n    // renderQuestionPreview: function (option) {\n    // if (option === 'clear') {\n    //   window.document.querySelector('.question_preview').innerHTML = '<p></p>'\n    // } else {\n    //   window.document.querySelector('.question_preview').innerHTML = renderQuill(this.editorPreview.question.ops)\n    //   setTimeout(function renderQuestionPreview () {\n    //     window.renderMathInElement(\n    //       document.querySelector('.question_preview'),\n    //       {\n    //         delimiters: [\n    //           {left: '$$', right: '$$', display: false}\n    //         ]\n    //       }\n    //     )\n    //   }, 0)\n    // }\n    // },\n    // renderMcPreview: function (option) {\n    //   if (option === 'clear') {\n    //     window.document.getElementById('mc1').innerHTML = '<p></p>'\n    //     window.document.getElementById('mc2').innerHTML = '<p></p>'\n    //     window.document.getElementById('mc3').innerHTML = '<p></p>'\n    //     window.document.getElementById('mc4').innerHTML = '<p></p>'\n    //   } else {\n    //     window.document.getElementById('mc1').innerHTML = renderQuill(this.editorPreview.answer.mc[0].ops)\n    //     window.document.getElementById('mc2').innerHTML = renderQuill(this.editorPreview.answer.mc[1].ops)\n    //     window.document.getElementById('mc3').innerHTML = renderQuill(this.editorPreview.answer.mc[2].ops)\n    //     window.document.getElementById('mc4').innerHTML = renderQuill(this.editorPreview.answer.mc[3].ops)\n    //\n    //     setTimeout(function renderMcPreview () {\n    //       window.renderMathInElement(\n    //         document.getElementById('mc_preview'),\n    //         {\n    //           delimiters: [\n    //             {left: '$$', right: '$$', display: false}\n    //           ]\n    //         }\n    //       )\n    //     }, 0)\n    //   }\n    // },\n    getLatestQuestionsCreatedByMe: function () {\n      this.$http.get('/api/manage-question/mine').then(function (response) {\n        document.getElementById('getLatestQuestionsButton').style.display = 'none'\n        this.questionInbox.questions = response.data\n      })\n    },\n    uploadImage: function (imageData, token) {\n      imageData = imageData.split(',')[1]\n      let uptoken = 'UpToken ' + token\n      this.$http.post('http://upload.qiniu.com/putb64/' + imageData.length * 0.75, imageData, {headers: {'Content-Type': 'application/octet-stream', 'Authorization': uptoken}}).then(function (response) {\n        console.log(response.data)\n        this.editorPreview.image.data = response.data.key\n        this.newQuestion.images.push(this.editorPreview.image)\n      })\n    }\n  },\n  data () {\n    return {\n      publishButton: {\n        disabled: false\n      },\n      questionInbox: {\n        questions: [],\n        show: false\n      },\n      subjects: Subject.subjects,\n      languages: Language.languages,\n      tag: '',\n      newQuestion: {\n        language: '',\n        type: 'mc',\n        subject: 'math',\n        tags: [],\n        tips: '',\n        difficulty: 1,\n        choices: ['', '', '', ''],\n        images: [],\n        answer: {\n          mc: 0\n        },\n        delta: ''\n      },\n      editorPreview: {\n        image: {\n          label: '',\n          type: 'qiniu',\n          data: '',\n          show: false\n        },\n        question: { ops: [] },\n        answer: {\n          mc: [ { ops: [] }, { ops: [] }, { ops: [] }, { ops: [] } ]\n        }\n      }\n    }\n  },\n  filters: {\n    'timestamp': function (input) {\n      return this.$options.filters.calendar(new Date(parseInt(input.toString().substring(0, 8), 16) * 1000), '')\n    }\n  },\n  // watch: {\n  //   'editorPreview.question.ops': function () {\n  //   var self = this\n  //   clearTimeout(delayTimer)\n  //   delayTimer = setTimeout(function () {\n  //     self.renderQuestionPreview()\n  //   }, 500)\n  //   },\n  //   'editorPreview.answer.mc': function () {\n  //     var self = this\n  //     clearTimeout(delayTimer)\n  //     delayTimer = setTimeout(function () {\n  //       self.renderMcPreview()\n  //     }, 500)\n  //   }\n  // },\n  store,\n  vuex: {\n    actions: {\n      setUserLanguage: setUserLanguage\n    },\n    getters: {\n      getUserLanguage: getUserLanguage\n    }\n  }\n}\n</script>\n<style>\n#create-mc-question .set_difficulty i {\n  width: 24px;\n  color: #aaa;\n  cursor: pointer;\n}\n\n#create-mc-question .difficulty_status {\n  color: #FFC107 !important\n}\n\n#create-mc-question .body_wrapper {\n  max-width: 800px;\n  margin:32px auto;\n}\n\n#create-mc-question .question_preview {\n  padding: 8px;\n  border-top:  1px solid #ccc;\n  min-height: 43px;\n  box-sizing: border-box;\n}\n\n#create-mc-question .question_preview, #create-mc-question .mc_content {\n  box-sizing: border-box;\n  cursor: text;\n  line-height: 1.42;\n  height: 100%;\n  outline: none;\n  overflow-y: auto;\n  padding: 12px 15px;\n  tab-size: 4;\n  -moz-tab-size: 4;\n  text-align: left;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n#create-mc-question .mc_content p,  #create-mc-question .mc_content ol, #create-mc-question .question_preview p,  #create-mc-question .question_preview ol{\n  margin: 0\n}\n\n#create-mc-question .toolbar_title {\n  padding: 8px;\n  margin: 0\n}\n\n#create-mc-question .mc_preview {\n  display: inline-block;\n  width: 100%\n}\n\n#create-mc-question .mc_label {\n  padding: 16px;\n}\n\n#create-mc-question .mc_content {\n  padding-bottom: 16px;\n}\n\n#create-mc-question .questions_inbox {\n  position: fixed;\n  right: -360px;\n  top: 55px;\n  background: #fff;\n  width: 360px;\n  box-shadow: 0 0 12px #aaa;\n  height: 100%;\n  transition: right 0.2s;\n}\n\n#create-mc-question .questions_inbox.show {\n  right: 0;\n}\n\n#create-mc-question .questions_inbox .question {\n  padding: 8px 16px;\n  border-bottom: 1px solid #eee\n}\n\n#create-mc-question .mc_select {\n  cursor: pointer;\n  padding: 8px;\n  background: #ddd;\n}\n\n#create-mc-question .hightlight-answer {\n  background-color: #009688;\n  color: #fff;\n}\n\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Create-mc-question.vue?36cfc5aa\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#create-mc-question .set_difficulty i{width:24px;color:#aaa;cursor:pointer}#create-mc-question .difficulty_status{color:#ffc107!important}#create-mc-question .body_wrapper{max-width:800px;margin:32px auto}#create-mc-question .question_preview{padding:8px;border-top:1px solid #ccc;min-height:43px;box-sizing:border-box}#create-mc-question .mc_content,#create-mc-question .question_preview{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:none;overflow-y:auto;padding:12px 15px;-o-tab-size:4;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}#create-mc-question .mc_content ol,#create-mc-question .mc_content p,#create-mc-question .question_preview ol,#create-mc-question .question_preview p{margin:0}#create-mc-question .toolbar_title{padding:8px;margin:0}#create-mc-question .mc_preview{display:inline-block;width:100%}#create-mc-question .mc_label{padding:16px}#create-mc-question .mc_content{padding-bottom:16px}#create-mc-question .questions_inbox{position:fixed;right:-360px;top:55px;background:#fff;width:360px;box-shadow:0 0 12px #aaa;height:100%;-webkit-transition:right .2s;transition:right .2s}#create-mc-question .questions_inbox.show{right:0}#create-mc-question .questions_inbox .question{padding:8px 16px;border-bottom:1px solid #eee}#create-mc-question .mc_select{cursor:pointer;padding:8px;background:#ddd}#create-mc-question .hightlight-answer{background-color:#009688;color:#fff}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/create-question/Create-mc-question.vue\"],\"names\":[],\"mappings\":\"AAkZA,sCACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AAED,uCACE,uBAAyB,CAC1B,AAED,kCACE,gBAAiB,AACjB,gBAAiB,CAClB,AAED,sCACE,YAAa,AACb,0BAA4B,AAC5B,gBAAiB,AACjB,qBAAuB,CACxB,AAED,sEACE,sBAAuB,AACvB,YAAa,AACb,iBAAkB,AAClB,YAAa,AACb,aAAc,AACd,gBAAiB,AACjB,kBAAmB,AACnB,cAAe,AACZ,WAAY,AACf,gBAAiB,AACjB,gBAAiB,AACjB,qBAAsB,AACtB,oBAAsB,CACvB,AACD,sJACE,QAAS,CACV,AAED,mCACE,YAAa,AACb,QAAS,CACV,AAED,gCACE,qBAAsB,AACtB,UAAW,CACZ,AAED,8BACE,YAAc,CACf,AAED,gCACE,mBAAqB,CACtB,AAED,qCACE,eAAgB,AAChB,aAAc,AACd,SAAU,AACV,gBAAiB,AACjB,YAAa,AACb,yBAA0B,AAC1B,YAAa,AACb,6BAA+B,AAC/B,oBAAuB,CACxB,AAED,0CACE,OAAS,CACV,AAED,+CACE,iBAAkB,AAClB,4BAA6B,CAC9B,AAED,+BACE,eAAgB,AAChB,YAAa,AACb,eAAiB,CAClB,AAED,uCACE,yBAA0B,AAC1B,UAAY,CACb\",\"file\":\"Create-mc-question.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n#create-mc-question .set_difficulty i {\\n  width: 24px;\\n  color: #aaa;\\n  cursor: pointer;\\n}\\n\\n#create-mc-question .difficulty_status {\\n  color: #FFC107 !important\\n}\\n\\n#create-mc-question .body_wrapper {\\n  max-width: 800px;\\n  margin:32px auto;\\n}\\n\\n#create-mc-question .question_preview {\\n  padding: 8px;\\n  border-top:  1px solid #ccc;\\n  min-height: 43px;\\n  box-sizing: border-box;\\n}\\n\\n#create-mc-question .question_preview, #create-mc-question .mc_content {\\n  box-sizing: border-box;\\n  cursor: text;\\n  line-height: 1.42;\\n  height: 100%;\\n  outline: none;\\n  overflow-y: auto;\\n  padding: 12px 15px;\\n  -o-tab-size: 4;\\n     tab-size: 4;\\n  -moz-tab-size: 4;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n}\\n#create-mc-question .mc_content p,  #create-mc-question .mc_content ol, #create-mc-question .question_preview p,  #create-mc-question .question_preview ol{\\n  margin: 0\\n}\\n\\n#create-mc-question .toolbar_title {\\n  padding: 8px;\\n  margin: 0\\n}\\n\\n#create-mc-question .mc_preview {\\n  display: inline-block;\\n  width: 100%\\n}\\n\\n#create-mc-question .mc_label {\\n  padding: 16px;\\n}\\n\\n#create-mc-question .mc_content {\\n  padding-bottom: 16px;\\n}\\n\\n#create-mc-question .questions_inbox {\\n  position: fixed;\\n  right: -360px;\\n  top: 55px;\\n  background: #fff;\\n  width: 360px;\\n  box-shadow: 0 0 12px #aaa;\\n  height: 100%;\\n  -webkit-transition: right 0.2s;\\n  transition: right 0.2s;\\n}\\n\\n#create-mc-question .questions_inbox.show {\\n  right: 0;\\n}\\n\\n#create-mc-question .questions_inbox .question {\\n  padding: 8px 16px;\\n  border-bottom: 1px solid #eee\\n}\\n\\n#create-mc-question .mc_select {\\n  cursor: pointer;\\n  padding: 8px;\\n  background: #ddd;\\n}\\n\\n#create-mc-question .hightlight-answer {\\n  background-color: #009688;\\n  color: #fff;\\n}\\n\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/create-question/Create-mc-question.vue\n ** module id = 397\n ** module chunks = 5\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/views/create-question/Create-mc-question.vue\n ** module id = 428\n ** module chunks = 5\n **/","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.6.5\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        if (klass.async) {\n          klass.fromObject(o, function (obj, error) {\n            if (!error) {\n              enlivenedObjects[index] = obj;\n              reviver && reviver(o, enlivenedObjects[index]);\n            }\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedObjects[index] = klass.fromObject(o);\n          reviver && reviver(o, enlivenedObjects[index]);\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.setSourcePath(path);\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound = [], bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot),\n        boundCopy = [[], []];\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      boundCopy[0].x = bound[0].x + fx;\n      boundCopy[0].y = bound[0].y + fy;\n      boundCopy[1].x = bound[1].x + fx;\n      boundCopy[1].y = bound[1].y + fy;\n      bounds.push(boundCopy[0]);\n      bounds.push(boundCopy[1]);\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n\n  /**\n   * Copies all enumerable properties of one object to another\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (source instanceof Array) {\n        destination = source.map(function(v) {\n          return clone(v, deep)\n        })\n      }\n      else if (source instanceof Object) {\n        for (var property in source) {\n          destination[property] = clone(source[property], deep)\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var fn = this.constructor.superclass.prototype[methodName];\n    return (arguments.length > 1)\n      ? fn.apply(this, slice.call(arguments, 1))\n      : fn.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      element.addEventListener(eventName, handler, false);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      element.removeEventListener(eventName, handler, false);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || function() { },\n          abort = options.abort || function() { return false; },\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start);\n        if (abort()) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        onChange(easing(currentTime, startValue, byValue, duration));\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      capitalize = fabric.util.string.capitalize,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n        return parseFloat(n);\n      });\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var angle = args[0],\n          x = (args.length === 3) ? args[1] : 0,\n          y = (args.length === 3) ? args[2] : 0;\n\n      matrix[0] = Math.cos(angle);\n      matrix[1] = Math.sin(angle);\n      matrix[2] = -Math.sin(angle);\n      matrix[3] = Math.cos(angle);\n      matrix[4] = x - (matrix[0] * x + matrix[2] * y);\n      matrix[5] = y - (matrix[1] * x + matrix[3] * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewXMatrix(matrix, args) {\n      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function skewYMatrix(matrix, args) {\n      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewXMatrix(matrix, args);\n            break;\n          case 'skewY':\n            skewYMatrix(matrix, args);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = normalizeAttr(pair[0].trim().toLowerCase());\n      value = normalizeValue(attr, pair[1].trim());\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = normalizeAttr(prop.toLowerCase());\n      value = normalizeValue(attr, style[prop]);\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   */\n  fabric.parseSVGDocument = (function() {\n\n    function hasAncestorWithNodeName(element, nodeName) {\n      while (element && (element = element.parentNode)) {\n        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n          && !element.getAttribute('instantiated_by_use')) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return function(doc, callback, reviver) {\n      if (!doc) {\n        return;\n      }\n\n      parseUseDirectives(doc);\n\n      var startTime = new Date(),\n          svgUid =  fabric.Object.__uid++,\n          options = applyViewboxTransform(doc),\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\n      options.svgUid = svgUid;\n\n      if (descendants.length === 0 && fabric.isLikelyNode) {\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n        var arr = [];\n        for (var i = 0, len = descendants.length; i < len; i++) {\n          arr[i] = descendants[i];\n        }\n        descendants = arr;\n      }\n\n      var elements = descendants.filter(function(el) {\n        applyViewboxTransform(el);\n        return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n      });\n\n      if (!elements || (elements && !elements.length)) {\n        callback && callback([], {});\n        return;\n      }\n\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n      // Precedence of rules:   style > class > attribute\n      fabric.parseElements(elements, function(instances) {\n        fabric.documentParsingTime = new Date() - startTime;\n        if (callback) {\n          callback(instances, options);\n        }\n      }, clone(options), reviver);\n    };\n  })();\n\n  /**\n   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n   * @namespace\n   */\n  var svgCache = {\n\n    /**\n     * @param {String} name\n     * @param {Function} callback\n     */\n    has: function (name, callback) {\n      callback(false);\n    },\n\n    get: function () {\n      /* NOOP */\n    },\n\n    set: function () {\n      /* NOOP */\n    }\n  };\n\n  /**\n   * @private\n   */\n  function _enlivenCachedObject(cachedObject) {\n\n    var objects = cachedObject.objects,\n        options = cachedObject.options;\n\n    objects = objects.map(function (o) {\n      return fabric[capitalize(o.type)].fromObject(o);\n    });\n\n    return ({ objects: objects, options: options });\n  }\n\n  /**\n   * @private\n   */\n  function _createSVGPattern(markup, canvas, property) {\n    if (canvas[property] && canvas[property].toSVG) {\n      markup.push(\n        '\\t<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n          'width=\"', canvas[property].source.width,\n          '\" height=\"', canvas[property].source.height,\n          '\" patternUnits=\"userSpaceOnUse\">\\n',\n        '\\t\\t<image x=\"0\" y=\"0\" ',\n        'width=\"', canvas[property].source.width,\n        '\" height=\"', canvas[property].source.height,\n        '\" xlink:href=\"', canvas[property].source.src,\n        '\"></image>\\n\\t</pattern>\\n'\n      );\n    }\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) {\n          attr = normalizeAttr(attr);\n          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      if (ownAttributes.font) {\n        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n      }\n      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver) {\n      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = normalizeAttr(pair[0]),\n                value = normalizeValue(property, pair[1], pair[0]);\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromURL: function(url, callback, reviver) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      svgCache.has(url, function (hasUrl) {\n        if (hasUrl) {\n          svgCache.get(url, function (value) {\n            var enlivedRecord = _enlivenCachedObject(value);\n            callback(enlivedRecord.objects, enlivedRecord.options);\n          });\n        }\n        else {\n          new fabric.util.request(url, {\n            method: 'get',\n            onComplete: onComplete\n          });\n        }\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n          svgCache.set(url, {\n            objects: fabric.util.array.invoke(results, 'toObject'),\n            options: options\n          });\n          callback && callback(results, options);\n        }, reviver);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromString: function(string, callback, reviver) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n        callback(results, options);\n      }, reviver);\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function(objects) {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths;\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function(canvas) {\n      var markup = [];\n\n      _createSVGPattern(markup, canvas, 'backgroundColor');\n      _createSVGPattern(markup, canvas, 'overlayColor');\n\n      return markup.join('');\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color represenation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color represenation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color represenation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStop) {\n      for (var position in colorStop) {\n        var color = new fabric.Color(colorStop[position]);\n        this.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @return {Object}\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = fabric.util.object.clone(this.coords),\n          markup, commonAttributes;\n\n      // colorStops must be sorted ascending\n      this.colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', coords.x2,\n          '\" cy=\"', coords.y2,\n          '\" r=\"', coords.r2,\n          '\" fx=\"', coords.x1,\n          '\" fy=\"', coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      for (var i = 0; i < this.colorStops.length; i++) {\n        markup.push(\n          '<stop ',\n            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n            '\" style=\"stop-color:', this.colorStops[i].color,\n            (this.colorStops[i].opacity !== null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(parseFloat(offset), color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n/**\n * Pattern class\n * @class fabric.Pattern\n * @see {@link http://fabricjs.com/patterns|Pattern demo}\n * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n * @see {@link fabric.Pattern#initialize} for constructor definition\n */\nfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n  /**\n   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n   * @type String\n   * @default\n   */\n  repeat: 'repeat',\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX: 0,\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY: 0,\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @return {fabric.Pattern} thisArg\n   */\n  initialize: function(options) {\n    options || (options = { });\n\n    this.id = fabric.Object.__uid++;\n\n    if (options.source) {\n      if (typeof options.source === 'string') {\n        // function string\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\n        }\n        else {\n          // img src string\n          var _this = this;\n          this.source = fabric.util.createImage();\n          fabric.util.loadImage(options.source, function(img) {\n            _this.source = img;\n          });\n        }\n      }\n      else {\n        // img element\n        this.source = options.source;\n      }\n    }\n    if (options.repeat) {\n      this.repeat = options.repeat;\n    }\n    if (options.offsetX) {\n      this.offsetX = options.offsetX;\n    }\n    if (options.offsetY) {\n      this.offsetY = options.offsetY;\n    }\n  },\n\n  /**\n   * Returns object representation of a pattern\n   * @return {Object} Object representation of a pattern instance\n   */\n  toObject: function() {\n\n    var source;\n\n    // callback\n    if (typeof this.source === 'function') {\n      source = String(this.source);\n    }\n    // <img> element\n    else if (typeof this.source.src === 'string') {\n      source = this.source.src;\n    }\n    // <canvas> element\n    else if (typeof this.source === 'object' && this.source.toDataURL) {\n      source = this.source.toDataURL();\n    }\n\n    return {\n      source: source,\n      repeat: this.repeat,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY\n    };\n  },\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   * @param {fabric.Object} object\n   * @return {String} SVG representation of a pattern\n   */\n  toSVG: function(object) {\n    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n        patternWidth = patternSource.width / object.getWidth(),\n        patternHeight = patternSource.height / object.getHeight(),\n        patternOffsetX = this.offsetX / object.getWidth(),\n        patternOffsetY = this.offsetY / object.getHeight(),\n        patternImgSrc = '';\n    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n      patternHeight = 1;\n    }\n    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n      patternWidth = 1;\n    }\n    if (patternSource.src) {\n      patternImgSrc = patternSource.src;\n    }\n    else if (patternSource.toDataURL) {\n      patternImgSrc = patternSource.toDataURL();\n    }\n\n    return '<pattern id=\"SVGID_' + this.id +\n                  '\" x=\"' + patternOffsetX +\n                  '\" y=\"' + patternOffsetY +\n                  '\" width=\"' + patternWidth +\n                  '\" height=\"' + patternHeight + '\">\\n' +\n             '<image x=\"0\" y=\"0\"' +\n                    ' width=\"' + patternSource.width +\n                    '\" height=\"' + patternSource.height +\n                    '\" xlink:href=\"' + patternImgSrc +\n             '\"></image>\\n' +\n           '</pattern>\\n';\n  },\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive: function(ctx) {\n    var source = typeof this.source === 'function'\n      ? this.source()\n      : this.source;\n\n    // if the image failed to load, return, and allow rest to continue loading\n    if (!source) {\n      return '';\n    }\n\n    // if an image\n    if (typeof source.src !== 'undefined') {\n      if (!source.complete) {\n        return '';\n      }\n      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n        return '';\n      }\n    }\n    return ctx.createPattern(source, this.repeat);\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: true,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: [1, 0, 0, 1, 0, 0],\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      if (color && color.source) {\n        var _this = this;\n        fabric.util.loadImage(color.source, function(img) {\n          _this[property] = new fabric.Pattern({\n            source: img,\n            repeat: color.repeat,\n            offsetX: color.offsetX,\n            offsetY: color.offsetY\n          });\n          callback && callback();\n        });\n      }\n      else {\n        this[property] = color;\n        callback && callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl)\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords();\n      }\n      if (activeGroup) {\n        activeGroup.setCoords();\n      }\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = fabric.util.transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = ''\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders both the canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = fabric.util.invertTransform(this.viewportTransform);\n      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(propertiesToInclude) {\n      var data = {\n        background: (this.backgroundColor && this.backgroundColor.toObject)\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor\n      };\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (this.backgroundImage) {\n        data.backgroundImage = this.backgroundImage.toObject(propertiesToInclude);\n      }\n      if (this.overlayImage) {\n        data.overlayImage = this.overlayImage.toObject(propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          (this.backgroundColor && !this.backgroundColor.toLive\n            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n            : null),\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>',\n          fabric.createSVGFontFacesMarkup(this.getObjects()),\n          fabric.createSVGRefElementsMarkup(this),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      if (this[property] && this[property].source) {\n        markup.push(\n          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n            'width=\"',\n              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n                ? this[property].source.width\n                : this.width),\n            '\" height=\"',\n              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n                ? this[property].source.height\n                : this.height),\n            '\" fill=\"url(#' + property + 'Pattern)\"',\n          '></rect>\\n'\n        );\n      }\n      else if (this[property] && property === 'overlayColor') {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== 0) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== this._objects.length - 1) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur;\n    ctx.shadowOffsetX = this.shadow.offsetX;\n    ctx.shadowOffsetY = this.shadow.offsetY;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        p1.x -= 0.5;\n        p2.x += 0.5;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (var i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [],\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y);\n\n      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n      for (var i = 1, len = points.length; i < len; i++) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        p1 = new fabric.Point(points[i].x, points[i].y);\n        if ((i + 1) < points.length) {\n          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n        }\n      }\n      path.push('L ', p1.x, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n        originX: 'center',\n        originY: 'center'\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: altKey, shiftKey, ctrlKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: altKey, shiftKey, ctrlKey, cmdKey\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: altKey, shiftKey, ctrlKey, cmdKey\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.selection && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vpt = this.viewportTransform,\n          vptPointer = this.restorePointerVpt(pointer),\n          p = fabric.util.transformPoint(vptPointer, invertedM);\n      return fabric.util.transformPoint(p, vpt);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > target.padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += target.padding;\n        }\n        else {\n          localMouse.x -= target.padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > target.padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += target.padding;\n        }\n        else {\n          localMouse.y -= target.padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta);\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      t.target.angle = angle % 360;\n      return true;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && this._checkTarget(pointer, activeObject)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n        }\n      }\n\n      this.targets = [];\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      if (target) {\n        if (this._hoveredTarget !== target) {\n          if (this._hoveredTarget) {\n            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n            this._hoveredTarget.fire('mouseout');\n          }\n          this.fire('mouse:over', { target: target, e: e });\n          target.fire('mouseover');\n          this._hoveredTarget = target;\n        }\n      }\n      else if (this._hoveredTarget) {\n        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n        this._hoveredTarget.fire('mouseout');\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      this.upperCanvasEl = this._createCanvasElement();\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      this._setActiveObject(object);\n      this.renderAll();\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      this.fire('before:selection:cleared', { target: activeObject, e: e });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { e: e });\n      activeObject && activeObject.fire('deselected', { e: e });\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      this.fire('before:selection:cleared', { e: e, target: g });\n      this._discardActiveGroup();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length;\n      for ( ; i < len; i++) {\n        allObjects[i].set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n      if (activeObject || activeGroup) {\n        this.fire('before:selection:cleared', { target: activeObject || activeGroup, e: e });\n      }\n      this.deactivateAll();\n      if (activeObject || activeGroup) {\n        this.fire('selection:cleared', { e: e, target: activeObject });\n        activeObject && activeObject.fire('deselected');\n      }\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.callSuper('dispose');\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation()\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp);\n      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform();\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._handleCursorAndEvent(e, target, 'up');\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * set cursor for mouse up and handle mouseUp event\n     * @param {Event} e event from mouse\n     * @param {fabric.Object} target receiving event\n     * @param {String} eventType event to fire (up, down or move)\n     */\n    _handleCursorAndEvent: function(e, target, eventType) {\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, eventType, target ? target : null);\n    },\n\n    /**\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     */\n    _handleEvent: function(e, eventType, targetObj) {\n      var target = typeof targetObj === undefined ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = { e: e, target: target, subTargets: targets };\n\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _finalizeCurrentTransform: function() {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target });\n        target.fire('modified');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clic ked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      // if right click just fire events\n      var isRightClick  = 'which' in e ? e.which === 3 : e.button === 2;\n      if (isRightClick) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var target = this.findTarget(e),\n          pointer = this.getPointer(e, true);\n\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this._clearSelection(e, target, pointer);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n\n        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n          this.deactivateAll();\n          target.selectable && this.setActiveObject(target, e);\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     */\n    _clearSelection: function(e, target, pointer) {\n      this.deactivateAllWithDispatch(e);\n\n      if (target && target.selectable) {\n        this.setActiveObject(target, e);\n      }\n      else if (this.selection) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this.fire('mouse:wheel', {\n        e: e\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor;\n      if (!target.selectable) {\n        //let's skip _findTargetCorner if object is not selectable\n        this.setCursor(hoverCursor);\n      }\n      else {\n        var activeGroup = this.getActiveGroup(),\n            // only show proper corner when group selection is not active\n            corner = target._findTargetCorner\n                      && (!activeGroup || !activeGroup.contains(target))\n                      && target._findTargetCorner(this.getPointer(e, true));\n\n        if (!corner) {\n          this.setCursor(hoverCursor);\n        }\n        else {\n          this._setCornerCursor(corner, target, e);\n        }\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0));\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.width || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    this.clear();\n\n    var _this = this;\n    this._enlivenObjects(serialized.objects, function () {\n      _this._setBgOverlay(serialized, function () {\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        for (var prop in serialized) {\n          _this[prop] = serialized[prop];\n        }\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var _this = this,\n        loaded = {\n          backgroundColor: false,\n          overlayColor: false,\n          backgroundImage: false,\n          overlayImage: false\n        };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        _this.renderAll();\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\n    cbIfLoaded();\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.Image.fromObject(value, function(img) {\n        _this[property] = img;\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    var _this = this;\n\n    if (!objects || objects.length === 0) {\n      callback && callback();\n      return;\n    }\n\n    var renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      enlivenedObjects.forEach(function(obj, index) {\n        // we splice the array just in case some custom classes restored from JSON\n        // will add more object to canvas at canvas init.\n        _this.insertAt(obj, index);\n      });\n\n      _this.renderOnAddRemove = renderOnAddRemove;\n      callback && callback();\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   */\n  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object. Only works with text objects at the moment.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n\n    excludeFromExport:          false,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:  (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initGradient: function(options) {\n      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n        this.set('fill', new fabric.Gradient(options.fill));\n      }\n      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n        this.set('stroke', new fabric.Gradient(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initPattern: function(options) {\n      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n        this.set('fill', new fabric.Pattern(options.fill));\n      }\n      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n        this.set('stroke', new fabric.Pattern(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initClipping: function(options) {\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\n        return;\n      }\n\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n      if (typeof functionBody !== 'undefined') {\n        this.clipTo = new Function('ctx', functionBody);\n      }\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      for (var prop in options) {\n        this.set(prop, options[prop]);\n      }\n      this._initGradient(options);\n      this._initPattern(options);\n      this._initClipping(options);\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Basic getter\n     * @param {String} property Property name\n     * @return {*} value of a property\n     */\n    get: function(property) {\n      return this[property];\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     */\n    _setObject: function(obj) {\n      for (var prop in obj) {\n        this._set(prop, obj[prop]);\n      }\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      if (typeof key === 'object') {\n        this._setObject(key);\n      }\n      else {\n        if (typeof value === 'function' && key !== 'clipTo') {\n          this._set(key, value(this.get(key)));\n        }\n        else {\n          this._set(key, value);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n\n      this[key] = value;\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Toggles specified property from `true` to `false` or from `false` to `true`\n     * @param {String} property Property to toggle\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    toggle: function(property) {\n      var value = this.get(property);\n      if (typeof value === 'boolean') {\n        this.set(property, !value);\n      }\n      return this;\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value // TODO\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if ((this.width === 0 && this.height === 0) || !this.visible) {\n        return;\n      }\n\n      ctx.save();\n\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._render(ctx, noTransform);\n      this.clipTo && ctx.restore();\n\n      ctx.restore();\n    },\n\n    /**\n     * Draws a background for the object big as its width and height;\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -this.width / 2,\n        -this.height / 2,\n        this.width,\n        this.height\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group) {\n        this.group._setOpacity(ctx);\n      }\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      if (!this.active || noTransform\n          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      if (this.fill.gradientTransform) {\n        var g = this.fill.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.fill.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.fill.offsetX || 0,\n          -this.height / 2 + this.fill.offsetY || 0);\n      }\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      if (this.stroke.gradientTransform) {\n        var g = this.stroke.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.stroke.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.stroke.offsetX || 0,\n          -this.height / 2 + this.stroke.offsetY || 0);\n      }\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 0;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      options.gradientTransform && (gradient.gradientTransform = options.gradientTransform);\n\n      for (var position in options.colorStops) {\n        var color = new fabric.Color(options.colorStops[position]);\n        gradient.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      this.canvas && this.canvas.remove(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(oCoords) {\n    return [\n      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n      new fabric.Point(oCoords.br.x, oCoords.br.y),\n      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Object containing coordinates of object's controls\n     * @type Object\n     * @default\n     */\n    oCoords: null,\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR) {\n      var oCoords = getCoords(this.oCoords),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            oCoords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            getCoords(this.oCoords),\n            getCoords(other.oCoords)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this)\n        || this.isContainedWithinObject(other);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other) {\n      var points = getCoords(this.oCoords),\n          i = 0;\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i])) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR) {\n      var boundingRect = this.getBoundingRect();\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var lines = this._getImageLines(this.oCoords),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} oCoords Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, oCoords) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in oCoords) {\n        iLine = oCoords[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function() {\n      this.oCoords || this.setCoords();\n      return fabric.util.makeBoundingBoxFromPoints([\n        this.oCoords.tl,\n        this.oCoords.tr,\n        this.oCoords.br,\n        this.oCoords.bl\n      ]);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      this.setCoords();\n      return this;\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function() {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y;\n\n      // If width is negative, make postive. Fixes path selection issue\n      if (currentWidth < 0) {\n        currentWidth = Math.abs(currentWidth);\n      }\n\n      var sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\n          // offset added for rotate and scale actions\n          coords = fabric.util.transformPoint(this.getCenterPoint(), vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n          ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n          mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n          mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n          mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      this.oCoords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n        // middle\n        ml: ml, mt: mt, mr: mr, mb: mb,\n        // rotating point\n        mtr: mtr\n      };\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      this._setCornerCoords && this._setCornerCoords();\n\n      return this;\n    },\n\n    /*\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /*\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function() {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix = this._calcRotateMatrix(),\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n      matrix = multiplyMatrices(matrix, translateMatrix);\n      matrix = multiplyMatrices(matrix, rotateMatrix);\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY],\n          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n      return multiplyMatrices(m, skewMatrixY, true);\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend;\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue) {\n    if (origValue instanceof Array) {\n      if (origValue.length !== currentValue.length) {\n        return false\n      }\n      var _currentValue = currentValue.concat().sort(),\n          _origValue = origValue.concat().sort();\n      return !_origValue.some(function(v, i) {\n        return !_isEqual(_currentValue[i], v);\n      });\n    }\n    else if (origValue instanceof Object) {\n      for (var key in origValue) {\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return origValue === currentValue;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function() {\n      return !_isEqual(this.originalState, this);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      saveProps(this, 'originalState', this.stateProperties);\n      if (options && options.stateProperties) {\n        saveProps(this, 'originalState', options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      this.originalState = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width,\n          h = this.height,\n          addStrokeToW = true,\n          addStrokeToH = true;\n\n      if (this.type === 'line' && this.strokeLineCap === 'butt') {\n        addStrokeToH = w;\n        addStrokeToW = h;\n      }\n\n      if (addStrokeToH) {\n        h += h < 0 ? -strokeWidth : strokeWidth;\n      }\n\n      if (addStrokeToW) {\n        w += w < 0 ? -strokeWidth : strokeWidth;\n      }\n\n      return { x: w, y: h };\n    },\n\n    /*\n     * @private\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          w = dim.x, h = dim.y,\n          p = fabric.util.transformPoint(new fabric.Point(w, h), vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth + 2 * this.padding,\n          height = wh.y + strokeWidth + 2 * this.padding;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange();\n      },\n      onComplete: function() {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete();\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || { };\n\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint();\n        ctx.translate(\n          cp.x - this.strokeWidth / 2,\n          cp.y - this.strokeWidth / 2\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    var points = [object.x1, object.y1, object.x2, object.y2],\n        line = new fabric.Line(points, object);\n    callback && callback(line);\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n      this.set('radius', options.radius || 0);\n\n      this.startAngle = options.startAngle || this.startAngle;\n      this.endAngle = options.endAngle || this.endAngle;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        radius: this.get('radius'),\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    var circle = new fabric.Circle(object);\n    callback && callback(circle);\n    return circle;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n\n      this.set('width', options.width || 100)\n          .set('height', options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Returns fabric.Triangle instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Triangle instance is created\n   * @return {Object} instance of Canvas.Triangle\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    var triangle = new fabric.Triangle(object);\n    callback && callback(triangle);\n    return triangle;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n\n      this.set('rx', options.rx || 0);\n      this.set('ry', options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        rx: this.get('rx'),\n        ry: this.get('ry')\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    var ellipse = new fabric.Ellipse(object);\n    callback && callback(ellipse);\n    return ellipse;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry', 'x', 'y');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Used to specify dash pattern for stroke on this object\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.callSuper('initialize', options);\n      this._initRxRy();\n\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        rx: this.get('rx') || 0,\n        ry: this.get('ry') || 0\n      });\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    var rect = new fabric.Rect(object);\n    callback && callback(rect);\n    return rect;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      return fabric.Polygon.prototype.initialize.call(this, points, options);\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n      return fabric.Polygon.prototype._calcDimensions.call(this);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    var polyline = new fabric.Polyline(object.points, object);\n    callback && callback(polyline);\n    return polyline;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Object\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Polygon} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || { };\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], addTransform,\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n      }\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      if (this.stroke || this.strokeDashArray) {\n        ctx.closePath();\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      noTransform || ctx.translate(-this.pathOffset.x, -this.pathOffset.y);\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x, this.points[0].y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x, point.y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.points.length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    var polygon = new fabric.Polygon(object.points, object);\n    callback && callback(polygon);\n    return polygon;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n\n      this.setOptions(options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice() }),\n        pathOffset: this.pathOffset\n      });\n      if (this.sourcePath) {\n        o.sourcePath = this.sourcePath;\n      }\n      if (this.transformMatrix) {\n        o.transformMatrix = this.transformMatrix;\n      }\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              x,\n              y\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        fabric.util.object.extend(path, object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      path = new fabric.Path(object.path, object);\n      callback && callback(path);\n      return path;\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      invoke = fabric.util.array.invoke,\n      parentToObject = fabric.Object.prototype.toObject;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Renders this group on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render this instance on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.transform(ctx);\n\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(parentToObject.call(this, propertiesToInclude), {\n        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n      });\n      if (this.sourcePath) {\n        o.sourcePath = this.sourcePath;\n      }\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    // remove this pattern from 2.0 accepts only object\n    if (typeof object.paths === 'string') {\n      fabric.loadSVGFromURL(object.paths, function (elements) {\n\n        var pathUrl = object.paths;\n        delete object.paths;\n\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n        delete object.paths;\n        callback(new fabric.PathGroup(enlivenedObjects, object));\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      invoke = fabric.util.array.invoke;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      this.originalState = { };\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          center = this.getCenterPoint();\n\n      object.set({\n        originalLeft: objectLeft,\n        originalTop: objectTop,\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords();\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.transform(ctx);\n      this._setShadow(ctx);\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._transformDone = true;\n      // the array is now sorted in order of highest first, so start from end\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n\n      this.clipTo && ctx.restore();\n      ctx.restore();\n      this._transformDone = false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.scaleX = options.scaleX;\n      object.scaleY = options.scaleY;\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.flipX = false;\n      object.flipY = false;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all group objects\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      this.forEachObject(function(object) {\n        object.setCoords();\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords();\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var ivt = fabric.util.invertTransform(this.getViewportTransform()),\n          minXY = fabric.util.transformPoint(new fabric.Point(min(aX), min(aY)), ivt),\n          maxXY = fabric.util.transformPoint(new fabric.Point(max(aX), max(aY)), ivt),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'alignX',\n    'alignY',\n    'meetOrSlice'\n  );\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        src: this.getSrc(),\n        filters: filters,\n        resizeFilters: resizeFilters,\n        crossOrigin: this.crossOrigin,\n        alignX: this.alignX,\n        alignY: this.alignY,\n        meetOrSlice: this.meetOrSlice\n      });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img) {\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = function(object) {\n    return new fabric.Image.filters.Brightness(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = function(object) {\n    return new fabric.Image.filters.Convolute(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n    return new fabric.Image.filters.GradientTransparency(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function() {\n    return new fabric.Image.filters.Grayscale();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function() {\n    return new fabric.Image.filters.Invert();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      callback && callback(new fabric.Image.filters.Mask(object));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = function(object) {\n    return new fabric.Image.filters.Noise(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = function(object) {\n    return new fabric.Image.filters.Pixelate(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n    return new fabric.Image.filters.RemoveWhite(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function() {\n    return new fabric.Image.filters.Sepia();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function() {\n    return new fabric.Image.filters.Sepia2();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = function(object) {\n    return new fabric.Image.filters.Tint(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = function(object) {\n    return new fabric.Image.filters.Multiply(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  fabric.Image.filters.Blend.fromObject = function(object) {\n    return new fabric.Image.filters.Blend(object);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = function(object) {\n    return new fabric.Image.filters.Resize(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = function( object ) {\n    return new fabric.Image.filters.ColorMatrix( object );\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor'\n  );\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: {\n      fontSize: true,\n      fontWeight: true,\n      fontFamily: true,\n      fontStyle: true,\n      lineHeight: true,\n      text: true,\n      charSpacing: true,\n      textAlign: true,\n      strokeWidth: false,\n    },\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.setOptions(options);\n      this.__skipDimension = false;\n      this._initDimensions();\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      this._setupCompositeOperation(ctx);\n      this._renderTextBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n      this.clipTo && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @override\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      return { x: this.width, y: this.height };\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          char = chars[i];\n          width = ctx.measureText(char).width + additionalSpace;\n          ctx[method](char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(''), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokedashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextBackground: function(ctx) {\n      this._renderBackground(ctx);\n      this._renderTextLinesBackground(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearCache: function() {\n      var shouldClear = false;\n      if (this._forceClearCache) {\n        this._forceClearCache = false;\n        return true;\n      }\n      for (var prop in this._dimensionAffectingProps) {\n        if (this['__' + prop] !== this[prop]) {\n          this['__' + prop] = this[prop];\n          shouldClear = true;\n        }\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      ctx.save();\n      this._setTextStyles(ctx);\n\n      if (this._shouldClearCache()) {\n        this._initDimensions(ctx);\n      }\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._render(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var object = extend(this.callSuper('toObject', propertiesToInclude), {\n        text:                 this.text,\n        fontSize:             this.fontSize,\n        fontWeight:           this.fontWeight,\n        fontFamily:           this.fontFamily,\n        fontStyle:            this.fontStyle,\n        lineHeight:           this.lineHeight,\n        textDecoration:       this.textDecoration,\n        textAlign:            this.textAlign,\n        textBackgroundColor:  this.textBackgroundColor,\n        charSpacing:          this.charSpacing\n      });\n      if (!this.includeDefaultValues) {\n        this._removeDefaultValues(object);\n      }\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key in this._dimensionAffectingProps) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    var text = new fabric.Text(object.text, clone(object));\n    callback && callback(text);\n    return text;\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.oldWidth = this.width;\n      this.oldHeight = this.height;\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.oldWidth + 4, height = this.oldHeight + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n                    : boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, char; j < len; j++) {\n          char = chars[j];\n          shouldFill && ctx.fillText(char, left + charWidth, top);\n          shouldStroke && ctx.strokeText(char, left + charWidth, top);\n          _charWidth = ctx.measureText(char).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          line, _char, style;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j);\n          if (!style || !style.textBackgroundColor) {\n            continue;\n          }\n          _char = line[j];\n\n          ctx.fillStyle = style.textBackgroundColor;\n\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n            topOffset + lineTopOffset,\n            this._getWidthOfChar(ctx, _char, i, j) + 1,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var clonedStyles = { }, i, j, row;\n      for (i in this.styles) {\n        row = this.styles[i];\n        clonedStyles[i] = { };\n        for (j in row) {\n          clonedStyles[i][j] = clone(row[j]);\n        }\n      }\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clonedStyles\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    var iText = new fabric.IText(object.text, clone(object));\n    callback && callback(iText);\n    return iText;\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n    },\n\n    /**\n     * Initializes \"selected\" event handler\n     */\n    initSelectedHandler: function() {\n      this.on('selected', function() {\n\n        var _this = this;\n        setTimeout(function() {\n          _this.selected = true;\n        }, 100);\n      });\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        if (this.canvas && !this.canvas._hasITextHandlers) {\n          this.canvas._hasITextHandlers = true;\n          this._initCanvasHandlers();\n        }\n\n        // Track IText instances per-canvas. Only register in this array once added\n        // to a canvas; we don't want to leak a reference to the instance forever\n        // simply because it existed at some point.\n        // (Might be added to a collection, but not on a canvas.)\n        if (_this.canvas) {\n          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n          _this.canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        // (Might be removed from a collection, but not on a canvas.)\n        if (_this.canvas) {\n          _this.canvas._iTextInstances = _this.canvas._iTextInstances || [];\n          fabric.util.removeFromArray(_this.canvas._iTextInstances, _this);\n        }\n      });\n    },\n\n    /**\n     * @private\n     */\n    _initCanvasHandlers: function() {\n      var _this = this;\n\n      this.canvas.on('selection:cleared', function() {\n        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n      });\n\n      this.canvas.on('mouse:up', function() {\n        if (_this.canvas._iTextInstances) {\n          _this.canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      });\n\n      this.canvas.on('object:selected', function() {\n        fabric.IText.prototype.exitEditingOnOthers(_this.canvas);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.canvas.renderAll();\n      this.initMouseMoveHandler();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler.bind(this));\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n                    : boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n      this.hiddenTextarea = null;\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.copiedTextStyle[i];\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.canvas && this.canvas.fire('text:changed', { target: this });\n      this.canvas && this.canvas.renderAll();\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      if (!this.styles[lineIndex + 1]) {\n        this.styles[lineIndex + 1] = {};\n      }\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        for (var index in this.styles[lineIndex]) {\n          if (parseInt(index, 10) >= charIndex) {\n            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this.styles[lineIndex][charIndex] =\n        style || clone(currentLineStyles[charIndex - 1]);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initSelectedHandler();\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    this._fireSelectionChanged();\n    this._updateTextarea();\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this._keysMap) {\n      this[this._keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(\n                          this.selectionStart,\n                          this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone  = fabric.util.object.clone;\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n      this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.width = true;\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines();\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function() {\n      var originalAlign = this.textAlign;\n      this.ctx.save();\n      this._setTextStyles(this.ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(this.ctx, this.text);\n      this.textAlign = originalAlign;\n      this.ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        minWidth: this.minWidth\n      });\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    var textbox = new fabric.Textbox(object.text, clone(object));\n    callback && callback(textbox);\n    return textbox;\n  };\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles),\n          map          = this._styleMap[lineIndex];\n\n      // adjust line index\n      lineIndex = map.line;\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  }\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fabric/dist/fabric.js\n ** module id = 443\n ** module chunks = 5\n **/","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/request.js\n ** module id = 449\n ** module chunks = 5\n **/","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/response.js\n ** module id = 450\n ** module chunks = 5\n **/","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/https-browserify/index.js\n ** module id = 451\n ** module chunks = 5\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 465\n ** module chunks = 5\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 466\n ** module chunks = 5\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 467\n ** module chunks = 5\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/~/punycode/punycode.js\n ** module id = 494\n ** module chunks = 5\n **/","module.exports = \" <div id=create-mc-question> <mdl-button primary raised class=float-button style=\\\"bottom: 80px\\\" @click=\\\"questionInbox.show = true\\\" v-bind:disabled=publishButton.disabled> <i class=material-icons>inbox</i> {{questionInbox.questions.length}} </mdl-button> <mdl-button primary raised class=float-button @click=publishQuestion() v-bind:disabled=publishButton.disabled> 發佈 </mdl-button> <div class=body_wrapper> <card> <div slot=content style=\\\"padding: 16px 16px 0 16px\\\"> <div class=flex-column> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>科目</span> <select v-model=newQuestion.subject> <option v-for=\\\"subject in subjects\\\" v-bind:value=subject.id> {{ subject.name }} </option> </select> </div> <div class=\\\"set_difficulty flex-column flex-50\\\"> <span class=field-title style=margin-bottom:4px>難度</span> <span class=flex-row> <i v-for=\\\"n in 5\\\" class=material-icons @click=\\\"newQuestion.difficulty = $index + 1\\\" :class=\\\"{'difficulty_status': newQuestion.difficulty > $index}\\\">star_rate</i> </span> </div> </div> <div class=flex-row style=\\\"padding-top: 25px\\\"> <div class=\\\"flex-column flex-50\\\"> <div style=\\\"margin-right: 10px\\\"> <span class=field-title>標籤</span> </div> <div class=\\\"flex-row flex-center flex-wrap\\\"> <span class=q-tag @click=removeTag($index) v-for=\\\"tag in newQuestion.tags\\\" track-by=$index>{{tag}}</span> </div> <div style=\\\"position: relative;top: -12px\\\"> <mdl-textfield label=輸入標籤.回車 @keyup.enter=addTag() :value.sync=tag style=width:200px></mdl-textfield> </div> </div> <div class=\\\"flex-column flex-50\\\"> <span class=field-title>語言</span> <select v-model=newQuestion.language v-on:change=setUserLanguage(newQuestion.language)> <option v-for=\\\"language in languages\\\" v-bind:value=language.id> {{ language.name }} </option> </select> </div> </div> </div> </div> </card> <div class=flex-column style=\\\"margin-bottom: 16px\\\"> <h5 style=margin-left:4px>編輯題目</h5> <div style=background:#ddd class=flex-column> <mdl-button primary @click=\\\"editorPreview.image.show = !editorPreview.image.show\\\"><i class=material-icons>photo</i> <span>添加圖片</span> </mdl-button> </div> <div v-show=editorPreview.image.show> <form v-on:change=readImg($event)> <input type=file id=uploadedImg /> </form> <div class=\\\"flex-column flex-center\\\"> <canvas v-el:fabricprocess></canvas> <mdl-textfield label=圖片名字 :value.sync=editorPreview.image.label></mdl-textfield> <mdl-button primary @click=outputImg()><i class=material-icons>photo</i> <span>输出图片</span></mdl-button> </div> </div> </div> <div class=flex-column> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.question></quill> </div> </card> </div> <h5 style=margin-left:4px>編輯答案</h5> <p style=margin:0;text-align:center;color:#9E9E9E>點擊選項設定正確答案</p> <div id=mc_input_container> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 0}\\\" @click=\\\"newQuestion.answer.mc = 0\\\">A</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[0]></quill> </div> </card> </div> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 1}\\\" @click=\\\"newQuestion.answer.mc = 1\\\">B</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[1]></quill> </div> </card> </div> </div> <div class=flex-row> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 2}\\\" @click=\\\"newQuestion.answer.mc = 2\\\">C</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[2]></quill> </div> </card> </div> <div class=\\\"flex-column flex-50\\\"> <div class=mc_select :class=\\\"{'hightlight-answer': newQuestion.answer.mc === 3}\\\" @click=\\\"newQuestion.answer.mc = 3\\\">D</div> <card> <div slot=content> <quill :toolbar=\\\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\\\" :content.sync=editorPreview.answer.mc[3]></quill> </div> </card> </div> </div> </div> </div> <div class=questions_inbox class=flex-column :class=\\\"{'show': questionInbox.show}\\\"> <div class=flex-row style=\\\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0\\\"> <i class=material-icons @click=\\\"questionInbox.show = false\\\">close</i> <span style=\\\"font-size: 20px;padding-top: 2px;padding-left: 16px\\\">創建題集記錄</span> </div> <div class=\\\"flex-column flex-center\\\" style=\\\"margin: 8px 0\\\" id=getLatestQuestionsButton> <mdl-button primary raised @click=getLatestQuestionsCreatedByMe()>獲取我最近創建的題目</mdl-button> </div> <div class=flex-column style=\\\"overflow-y: auto;margin-bottom:60px; flex: 1\\\"> <div class=question v-for=\\\"q in questionInbox.questions\\\" track-by=_id> <div v-if=q.delta> <div class=q-context v-html=renderDelta(q.delta)></div> </div> <div v-if=q.context> <div class=q-context v-html=q.context></div> </div> <div class=flex-row> <span style=\\\"color: #9E9E9E\\\">{{q._id | timestamp}}</span> <span class=\\\"flex-row flex-center\\\" style=color:#FFC107;margin-left:auto>{{q.difficulty}}<i class=material-icons style=\\\"font-size: 18px\\\">star</i></span> </div> </div> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/create-question/Create-mc-question.vue\n ** module id = 499\n ** module chunks = 5\n **/","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Create-mc-question.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Create-mc-question.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Create-mc-question.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/create-question/Create-mc-question.vue\n ** module id = 525\n ** module chunks = 5\n **/"],"sourceRoot":""}