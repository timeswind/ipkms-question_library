{"version":3,"sources":["webpack:///6.7f5f716cfcab1e304605.js","webpack:///./~/process/browser.js?82e4*","webpack:///./src/modules/delta-render.js?6119**","webpack:///./~/isarray/index.js?eabc*","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/readable-stream/lib/_stream_duplex.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./src/components/reuseable/Card.vue?f64a*","webpack:///./~/events/events.js","webpack:///./src/components/reuseable/Card.vue?77d7*","webpack:///./~/readable-stream/lib/_stream_transform.js","webpack:///./~/readable-stream/lib/_stream_writable.js","webpack:///./src/components/reuseable/Card.vue?8fda","webpack:///./src/components/reuseable/Card.vue?a983*","webpack:///./~/http-browserify/index.js","webpack:///./~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/readable-stream/lib/_stream_readable.js","webpack:///./~/string_decoder/index.js","webpack:///./~/url/url.js","webpack:///./~/Base64/base64.js","webpack:///Create-mc-question.vue","webpack:///./src/views/create-question/Create-mc-question.vue?c301","webpack:///./src/views/create-question/Create-mc-question.vue?d5a4","webpack:///./~/fabric/dist/fabric.js","webpack:///./~/http-browserify/lib/request.js","webpack:///./~/http-browserify/lib/response.js","webpack:///./~/https-browserify/index.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/readable-stream/duplex.js","webpack:///./~/readable-stream/passthrough.js","webpack:///./~/readable-stream/readable.js","webpack:///./~/readable-stream/transform.js","webpack:///./~/readable-stream/writable.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/util.js","webpack:///./src/views/create-question/Create-mc-question.vue","webpack:///./src/views/create-question/Create-mc-question.vue?5c57"],"names":["webpackJsonp","6","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","call","this","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","length","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","8","delta","console","log","JSON","parse","result","map","op","html","insert","formula","window","katex","renderToString","attributes","bold","join","11","isArray","arr","Object","toString","23","create","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","24","__webpack_require__","Duplex","options","Readable","Writable","readable","allowHalfOpen","onend","_writableState","ended","end","bind","forEach","xs","f","l","objectKeys","keys","obj","key","util","inherits","method","30","Stream","EE","EventEmitter","Transform","PassThrough","pipe","dest","ondata","chunk","write","source","pause","ondrain","resume","didOnEnd","onclose","destroy","onerror","er","cleanup","listenerCount","_isStdio","44","Buffer","arg","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","isFunction","isPrimitive","o","isBuffer","70","defineProperty","default","props","128","id","sources","names","mappings","file","sourcesContent","sourceRoot","141","_events","_maxListeners","undefined","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","type","handler","listeners","error","err","context","slice","listener","m","newListener","warned","trace","g","fired","list","position","splice","ret","evlistener","emitter","143","content","locals","154","TransformState","stream","afterTransform","data","needTransform","transforming","writecb","writechunk","ts","_transformState","cb","rs","_readableState","reading","needReadable","highWaterMark","_read","sync","_flush","done","ws","encoding","_transform","_write","writeencoding","155","WriteReq","callback","WritableState","hwm","defaultHwm","objectMode","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","buffer","pendingcb","prefinished","errorEmitted","writeAfterEnd","state","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","c","entry","prefinish","need","endWritable","cork","uncork","168","__vue_exports__","__vue_options__","__vue_template__","render","staticRenderFns","170","_vm","_h","staticClass","_t","174","187","http","Request","url","request","params","host","port","parseInt","location","hostname","protocol","scheme","test","split","req","xhrHttp","get","Agent","defaultMaxSockets","XMLHttpRequest","ActiveXObject","axs","ax","ax_","STATUS_CODES","100","101","102","200","201","202","203","204","205","206","207","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511","ReadableState","pipes","pipesCount","flowing","endEmitted","emittedReadable","readableListening","readableObjectMode","ranOut","awaitDrain","readingMore","decoder","StringDecoder","readableAddChunk","addToFront","chunkInvalid","onEofChunk","read","unshift","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","p","howMuchToRead","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","src","resumeScheduled","resume_","fromList","stringMode","shift","buf","cpy","Math","min","copy","endReadable","indexOf","x","debuglog","setEncoding","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","unpipe","doEnd","stdout","stderr","endFn","dests","ev","fn","res","self","wrap","paused","events","_fromList","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","isEncoding","toLowerCase","replace","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","charCodeAt","size","substring","cr","Url","slashes","auth","hash","search","query","pathname","path","href","urlParse","parseQueryString","slashesDenoteHost","u","urlFormat","format","urlResolve","relative","resolve","urlResolveObject","resolveObject","punycode","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","rest","trim","proto","exec","lowerProto","substr","match","hostEnd","hec","atSign","lastIndexOf","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","domainArray","newOut","s","encode","h","ae","esc","encodeURIComponent","escape","qm","stringify","charAt","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","last","hasTrailingSlash","up","isAbsolute","306","InvalidCharacterError","message","object","chars","btoa","input","block","idx","output","atob","bs","bc","String","fromCharCode","320","_interopRequireDefault","__esModule","_stringify","_stringify2","_extends2","_extends3","_vuex","_deltaRender","_deltaRender2","_Card","_Card2","mounted","$nextTick","newQuestionState","choices","setNewQuestionChoice","index","newQuestion","language","getUserLanguage","components","Card","methods","updateMcCorrectAnswer","correctList","indexString","choicesLength","correct","newQuestionDifficultyOnChange","newDifficulty","setNewQuestionMeta","difficulty","newQuestionSubjectOnChange","newSubject","subject","handleDeltaChange","setNewQuestionContent","renderDelta","readImg","$refs","fabricprocess","canvas","fabric","Canvas","width","height","reader","FileReader","onload","event","imgObj","Image","target","forEachObject","remove","image","set","angle","padding","cornersize","centerObject","add","renderAll","readAsDataURL","files","outputImg","$http","then","response","uploadImage","getObjects","toDataURL","uptoken","publishQuestion","publishButton","disabled","checkComplete","newQuestionData","ops","choice","clue","post","$showToast","resetNewQuestion","editorPreview","label","show","questionInbox","questions","contentComplete","addTag","tag","tags","newTags","removeTag","getLatestQuestionsCreatedByMe","document","getElementById","style","display","imageData","token","headers","Content-Type","Authorization","newImage","newImages","images","setNewQuestionImages","removeChoice","oldChoices","oldCorrectListBool","newCorrectList","bool","removeNewQuestionChoice","addChoice","mapActions","setUserLanguage","tips","answer","mc","question","computed","mapGetters","subjects","languages","alphabet","watch","val","392","jsdom","createWindow","parentWindow","isTouchSupported","documentElement","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","__eventListeners","eventListener","fill","observe","prop","stopObserving","fire","listenersForEvent","filter","Observable","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","insertAt","nonSplicing","objects","somethingRemoved","_onObjectRemoved","item","isEmpty","contains","complexity","reduce","memo","current","global","sqrt","atan2","pow","abs","PiBy180","PI","removeFromArray","getRandomInt","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","y","addEquals","vector","sin","cos","rx","ry","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","left","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","toUpperCase","resolveNamespace","parts","loadImage","crossOrigin","img","createImage","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","klass","async","fromObject","groupSVGElements","elements","PathGroup","setSourcePath","populateWithProperties","destination","properties","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","propName","capitalizedPropName","setterName","getterName","stateProperties","property","Function","clipContext","receiver","beginPath","clipTo","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","setAngle","getFunctionBody","isTransparent","tolerance","temp","_isTransparent","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","fontFamily","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","byProperty","find","value1","value2","condition","searchElement","POSITIVE_INFINITY","NEGATIVE_INFINITY","every","some","rv","extend","deep","Element","hasOwnProperty","clone","character","capitalize","firstLetterOnly","escapeXml","Dummy","thisArg","_this","Subclass","callSuper","methodName","superclass","createClass","initialize","parent","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","createListener","uid","wrappedHandler","createWrappedHandler","getElement","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","addEventListener","removeEventListener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","makeElement","tagName","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","defaultView","getComputedStyle","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","onComplete","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","warn","animate","requestAnimFrame","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","transformMatrix","parseTransformAttribute","visible","_setStrokeFillOpacity","colorAttributes","color","Color","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","RegExp","elementById","node","nodelist","parseUseDirectives","attrs","xlink","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","_enlivenCachedObject","cachedObject","_createSVGPattern","markup","toSVG","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewXMatrix","skewYMatrix","iMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","hasAncestorWithNodeName","startTime","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","documentParsingTime","svgCache","has","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","font","ElementsParser","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","loadXML","results","hasUrl","enlivedRecord","loadSVGFromString","DOMParser","parser","parseFromString","createSVGFontFacesMarkup","row","rowIndex","_char","charIndex","fontList","createSVGRefElementsMarkup","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","Gradient","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","round","getSource","_source","toRgb","toHsl","hsl","toHsla","toHex","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","colorStops","gradientTransform","addColorStop","colorStop","toObject","commonAttributes","sort","group","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","Pattern","repeat","patternSource","patternWidth","getWidth","patternHeight","getHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","NUM_FRACTION_DIGITS","BLUR_BOX","StaticCanvas","CANVAS_INIT_ERROR","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","setOptions","_createCanvasElement","_applyCanvasStyle","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","_activeGroup","setCoords","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","_set","clearContext","clearRect","clear","_hasITextHandlers","_canvasITextSelectionClearedHanlder","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","_renderBackground","_renderObjects","drawControls","_renderOverlay","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","iVpt","setPositionByOrigin","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","background","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","viewBox","_setSVGObject","sendToBack","objs","bringToFront","sendBackwards","intersecting","newIdx","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","createPath","pathData","Path","strokeWidth","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_chooseObjectsToRender","getActiveGroup","activeObject","getActiveObject","objsToRender","activeGroupObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","ignoreZoom","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","hasBorders","transparentCorners","contextCache","originalColor","selectionBackgroundColor","active","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","_rotateObject","lastAngle","curAngle","hasRoated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","_checkTarget","_fireOverOutEvents","targets","_searchPossibleTargets","_hoveredTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","setActiveObject","_discardActiveObject","discardActiveObject","_setActiveGroup","setActiveGroup","_discardActiveGroup","discardActiveGroup","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","_setCursorFromEvent","cursorOffset","tr","mr","br","mb","bl","ml","tl","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","__onTransformGesture","__onDrag","__onMouseWheel","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_isCurrentlyDrawing","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","_handleCursorAndEvent","__corner","eventType","_handleEvent","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","isRightClick","which","button","shouldGroup","_shouldGroup","_clearSelection","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","reverse","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","supportQuality","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","__toDataURL","toDataURLWithMultiplier","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","_toDataURL","_toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","statefullCache","noScaleCache","cacheProperties","propertySet","_cacheCanvas","_cacheContext","_updateCacheCanvas","getViewportTransform","objectScale","getObjectScaling","_getNonTransformedDimensions","retina","zoomX","zoomY","cacheWidth","cacheHeight","_initGradient","_initPattern","_initClipping","functionBody","fromLeft","_transformDone","_removeDefaultValues","scaling","_setObject","shouldConstrainValue","_constrainScale","dirty","setOnGroup","toggle","sourcePath","noTransform","_setupCompositeOperation","drawSelectionBackground","_setOpacity","isCacheDirty","drawObject","drawCacheOnCanvas","_setStrokeStyles","_setFillStyles","drawImage","skipCanvas","_removeShadow","miterLimit","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","pos","adjustPosition","to","offsetFrom","offsetTo","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","oCoords","multiplyMatrices","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","ignoreVpt","calcCoords","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","skewMatrixY","getSvgColorString","str","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","saveProps","tmpObj","_isEqual","origValue","currentValue","firstPass","originalSet","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","w","bbox","dimX","dimY","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","line","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","triangle","piBy2","Ellipse","getRx","getRy","ellipse","_initRxRy","isRounded","Polyline","Polygon","_calcDimensions","commonRender","polyline","pathOffset","addTransform","polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","currentPath","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","parentToObject","paths","parseDimensionsFromPaths","xC","yC","isSameColor","firstPathFill","pathFill","total","pathGroup","_lockProperties","isAlreadyGrouped","originalState","_updateObjectsCoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","originalLeft","originalTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","_lastScaleX","_lastScaleY","minimumScaleTrigger","filters","resizeFilters","_initElement","_element","_callback","_originalElement","_initConfig","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","filtered","getSvgSrc","origFill","_src","setSrc","imgElement","forResizing","replacement","retinaScaling","minimumScale","applyTo","toBuffer","pngCompression","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","createImageData","dst","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","lanczosCreate","lobes","xx","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","ColorMatrix","Contrast","contrast","contrastF","Saturate","saturate","adjust","MIN_TEXT_WIDTH","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","cursorWidth","_getTextHeight","_renderTextLinesBackground","_renderText","_renderTextDecoration","_renderTextFill","_renderTextStroke","textBaseline","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","char","shortM","additionalSpace","_getWidthOfCharSpacing","measureText","_renderTextLine","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","charCount","_getLeftOffset","_getTopOffset","isEmptyStyles","_renderTextCommon","lineHeights","heightOfLine","maxHeight","_getLineLeftOffset","lineLeftOffset","lineTopOffset","originalFill","__lineWidths","__lineHeights","_shouldClearDimensionCache","shouldClear","_forceClearCache","wordCount","_measureLine","finalWidth","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","additionalProperties","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textBgRects","textSpans","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","clearContextTop","cursorOffsetCache","renderCursorOrSelection","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","realLineHeight","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","_charWidth","decl","_getHeightOfChar","_applyCharStylesGetWidth","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","underline","line-through","overline","decorations","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","iText","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","initSelectedHandler","selected","_initCanvasHandlers","_removeCanvasHandlers","exitEditingOnOthers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","initHiddenTextarea","hiddenTextarea","focus","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","clonedStyles","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","setSelectionStartEndWithShift","newSelection","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","_keysMap","9","27","13","33","34","35","36","37","38","39","40","46","_ctrlKeysMapUp","67","88","_ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","_getWidthBeforeCursor","textBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","foundMatch","textOnLine","widthOfCharsOnLine","indexOnLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","textbox","setObjectScaleOverridden","_refreshControlsVisibility","override","tmp","oURL","URL","reqHandler","HTTPS","HTTP","statusCode","errno","ECONNREFUSED","requestFs","fs","readFile","createImageAndCallBack","eval","createCanvasForNode","nodeCanvasOptions","nodeCanvas","nodeCacheCanvas","FabricCanvas","fabricCanvas","Font","originaInitStatic","createPNGStream","createJPEGStream","origSetBackstoreDimension","Response","Base64","uri","withCredentials","responseType","_headers","isSafeRequestHeader","setHeader","__aborted","handle","getHeader","removeHeader","isXHR2Compatible","unsafeHeaders","headerName","Blob","ArrayBuffer","FormData","parseHeaders","getAllResponseHeaders","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody","Uint8Array","byteLength","473","qs","sep","regexp","maxKeys","kstr","vstr","474","stringifyPrimitive","isFinite","ks","475","decode","477","478","479","NODE_ENV","READABLE_STREAM","480","481","487","__WEBPACK_AMD_DEFINE_RESULT__","RangeError","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","base","digitToBasic","digit","flag","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","out","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","488","489","readUInt8","490","inspect","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","numLinesEst","prev","cur","ar","pad","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","pid","italic","inverse","cyan","magenta","special","boolean","null","date","_scopeId","521","staticStyle","primary","click","$event","_s","slot","_l","domProps","margin-bottom","difficulty_status","material-icons","padding-top","margin-right","directives","rawName","expression","hintText","nativeOn","keyup","border","ref","text-align","_e","toolbar","text-change","margin","flex","nativeValue","margin-left","icon","flex-column","questions_inbox","margin-top","padding-left","padding-bottom","border-bottom","overflow-y","_id","innerHTML","537","538","539","540"],"mappings":"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","file":"6.7f5f716cfcab1e304605.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 6:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports = module.exports = function (delta) {\n\t  console.log(delta);\n\t  delta = JSON.parse(delta);\n\t  var result = delta.map(function (op) {\n\t    var html = op.insert;\n\t    if (typeof op.insert !== 'string') {\n\t      if (op.insert.formula) {\n\t        html = window.katex.renderToString(op.insert.formula);\n\t      } else {\n\t        return '';\n\t      }\n\t    }\n\t    if (op.attributes && op.attributes.bold) {\n\t      html = '<strong>' + html + '</strong>';\n\t    }\n\t\n\t    if (op.insert.formula) {\n\t      html = window.katex.renderToString(op.insert.formula);\n\t    }\n\t\n\t    return html;\n\t  }).join('');\n\t\n\t  return result;\n\t};\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(44);\n\tutil.inherits = __webpack_require__(23);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(303);\n\tvar Writable = __webpack_require__(155);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tforEach(objectKeys(Writable.prototype), function(method) {\n\t  if (!Duplex.prototype[method])\n\t    Duplex.prototype[method] = Writable.prototype[method];\n\t});\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex))\n\t    return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false)\n\t    this.readable = false;\n\t\n\t  if (options && options.writable === false)\n\t    this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false)\n\t    this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended)\n\t    return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  process.nextTick(this.end.bind(this));\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(141).EventEmitter;\n\tvar inherits = __webpack_require__(23);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(479);\n\tStream.Writable = __webpack_require__(481);\n\tStream.Duplex = __webpack_require__(477);\n\tStream.Transform = __webpack_require__(480);\n\tStream.PassThrough = __webpack_require__(478);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18).Buffer))\n\n/***/ },\n\n/***/ 70:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: {}\n\t};\n\n/***/ },\n\n/***/ 128:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".card{background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/reuseable/Card.vue\"],\"names\":[],\"mappings\":\"AACA,MACE,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC\",\"file\":\"Card.vue\",\"sourcesContent\":[\"\\n.card {\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 141:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n\n/***/ 143:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(128);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Card.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Card.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 154:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(24);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(44);\n\tutil.inherits = __webpack_require__(23);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\t\n\tfunction TransformState(options, stream) {\n\t  this.afterTransform = function(er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb)\n\t    return stream.emit('error', new Error('no writecb in Transform class'));\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (!util.isNullOrUndefined(data))\n\t    stream.push(data);\n\t\n\t  if (cb)\n\t    cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform))\n\t    return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(options, this);\n\t\n\t  // when the writable side finishes, then flush out anything remaining.\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  this.once('prefinish', function() {\n\t    if (util.isFunction(this._flush))\n\t      this._flush(function(er) {\n\t        done(stream, er);\n\t      });\n\t    else\n\t      done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function(chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function(chunk, encoding, cb) {\n\t  throw new Error('not implemented');\n\t};\n\t\n\tTransform.prototype._write = function(chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform ||\n\t        rs.needReadable ||\n\t        rs.length < rs.highWaterMark)\n\t      this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function(n) {\n\t  var ts = this._transformState;\n\t\n\t  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\t\n\tfunction done(stream, er) {\n\t  if (er)\n\t    return stream.emit('error', er);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length)\n\t    throw new Error('calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming)\n\t    throw new Error('calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\tmodule.exports = Writable;\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(18).Buffer;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(44);\n\tutil.inherits = __webpack_require__(23);\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(30);\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t}\n\t\n\tfunction WritableState(options, stream) {\n\t  var Duplex = __webpack_require__(24);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function(er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.buffer = [];\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t}\n\t\n\tfunction Writable(options) {\n\t  var Duplex = __webpack_require__(24);\n\t\n\t  // Writable ctor is applied to Duplexes, though they're not\n\t  // instanceof Writable, they're instanceof Readable.\n\t  if (!(this instanceof Writable) && !(this instanceof Duplex))\n\t    return new Writable(options);\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function() {\n\t  this.emit('error', new Error('Cannot pipe. Not readable.'));\n\t};\n\t\n\t\n\tfunction writeAfterEnd(stream, state, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  process.nextTick(function() {\n\t    cb(er);\n\t  });\n\t}\n\t\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    var er = new TypeError('Invalid non-string/buffer chunk');\n\t    stream.emit('error', er);\n\t    process.nextTick(function() {\n\t      cb(er);\n\t    });\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t\n\t  if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  else if (!encoding)\n\t    encoding = state.defaultEncoding;\n\t\n\t  if (!util.isFunction(cb))\n\t    cb = function() {};\n\t\n\t  if (state.ended)\n\t    writeAfterEnd(this, state, cb);\n\t  else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function() {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function() {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing &&\n\t        !state.corked &&\n\t        !state.finished &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length)\n\t      clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode &&\n\t      state.decodeStrings !== false &&\n\t      util.isString(chunk)) {\n\t    chunk = new Buffer(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret)\n\t    state.needDrain = true;\n\t\n\t  if (state.writing || state.corked)\n\t    state.buffer.push(new WriteReq(chunk, encoding, cb));\n\t  else\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev)\n\t    stream._writev(chunk, state.onwrite);\n\t  else\n\t    stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  if (sync)\n\t    process.nextTick(function() {\n\t      state.pendingcb--;\n\t      cb(er);\n\t    });\n\t  else {\n\t    state.pendingcb--;\n\t    cb(er);\n\t  }\n\t\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er)\n\t    onwriteError(stream, state, sync, er, cb);\n\t  else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(stream, state);\n\t\n\t    if (!finished &&\n\t        !state.corked &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      process.nextTick(function() {\n\t        afterWrite(stream, state, finished, cb);\n\t      });\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished)\n\t    onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t\n\t  if (stream._writev && state.buffer.length > 1) {\n\t    // Fast case, write everything using _writev()\n\t    var cbs = [];\n\t    for (var c = 0; c < state.buffer.length; c++)\n\t      cbs.push(state.buffer[c].callback);\n\t\n\t    // count the one we are adding, as well.\n\t    // TODO(isaacs) clean this up\n\t    state.pendingcb++;\n\t    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n\t      for (var i = 0; i < cbs.length; i++) {\n\t        state.pendingcb--;\n\t        cbs[i](err);\n\t      }\n\t    });\n\t\n\t    // Clear buffer\n\t    state.buffer = [];\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    for (var c = 0; c < state.buffer.length; c++) {\n\t      var entry = state.buffer[c];\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        c++;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (c < state.buffer.length)\n\t      state.buffer = state.buffer.slice(c);\n\t    else\n\t      state.buffer.length = 0;\n\t  }\n\t\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function(chunk, encoding, cb) {\n\t  cb(new Error('not implemented'));\n\t\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (util.isFunction(chunk)) {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (!util.isNullOrUndefined(chunk))\n\t    this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished)\n\t    endWritable(this, state, cb);\n\t};\n\t\n\t\n\tfunction needFinish(stream, state) {\n\t  return (state.ending &&\n\t          state.length === 0 &&\n\t          !state.finished &&\n\t          !state.writing);\n\t}\n\t\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(stream, state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else\n\t      prefinish(stream, state);\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished)\n\t      process.nextTick(cb);\n\t    else\n\t      stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n\n/***/ 168:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(143)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(70)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(170)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 170:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;\n\t  return _vm._h('div', [_vm._h('div', {\n\t    staticClass: \"card\"\n\t  }, [_vm._t(\"content\")])])\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 174:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 187:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = module.exports;\n\tvar EventEmitter = __webpack_require__(141).EventEmitter;\n\tvar Request = __webpack_require__(423);\n\tvar url = __webpack_require__(305)\n\t\n\thttp.request = function (params, cb) {\n\t    if (typeof params === 'string') {\n\t        params = url.parse(params)\n\t    }\n\t    if (!params) params = {};\n\t    if (!params.host && !params.port) {\n\t        params.port = parseInt(window.location.port, 10);\n\t    }\n\t    if (!params.host && params.hostname) {\n\t        params.host = params.hostname;\n\t    }\n\t\n\t    if (!params.protocol) {\n\t        if (params.scheme) {\n\t            params.protocol = params.scheme + ':';\n\t        } else {\n\t            params.protocol = window.location.protocol;\n\t        }\n\t    }\n\t\n\t    if (!params.host) {\n\t        params.host = window.location.hostname || window.location.host;\n\t    }\n\t    if (/:/.test(params.host)) {\n\t        if (!params.port) {\n\t            params.port = params.host.split(':')[1];\n\t        }\n\t        params.host = params.host.split(':')[0];\n\t    }\n\t    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n\t    \n\t    var req = new Request(new xhrHttp, params);\n\t    if (cb) req.on('response', cb);\n\t    return req;\n\t};\n\t\n\thttp.get = function (params, cb) {\n\t    params.method = 'GET';\n\t    var req = http.request(params, cb);\n\t    req.end();\n\t    return req;\n\t};\n\t\n\thttp.Agent = function () {};\n\thttp.Agent.defaultMaxSockets = 4;\n\t\n\tvar xhrHttp = (function () {\n\t    if (typeof window === 'undefined') {\n\t        throw new Error('no window object present');\n\t    }\n\t    else if (window.XMLHttpRequest) {\n\t        return window.XMLHttpRequest;\n\t    }\n\t    else if (window.ActiveXObject) {\n\t        var axs = [\n\t            'Msxml2.XMLHTTP.6.0',\n\t            'Msxml2.XMLHTTP.3.0',\n\t            'Microsoft.XMLHTTP'\n\t        ];\n\t        for (var i = 0; i < axs.length; i++) {\n\t            try {\n\t                var ax = new(window.ActiveXObject)(axs[i]);\n\t                return function () {\n\t                    if (ax) {\n\t                        var ax_ = ax;\n\t                        ax = null;\n\t                        return ax_;\n\t                    }\n\t                    else {\n\t                        return new(window.ActiveXObject)(axs[i]);\n\t                    }\n\t                };\n\t            }\n\t            catch (e) {}\n\t        }\n\t        throw new Error('ajax not supported in this browser')\n\t    }\n\t    else {\n\t        throw new Error('ajax not supported in this browser');\n\t    }\n\t})();\n\t\n\thttp.STATUS_CODES = {\n\t    100 : 'Continue',\n\t    101 : 'Switching Protocols',\n\t    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n\t    200 : 'OK',\n\t    201 : 'Created',\n\t    202 : 'Accepted',\n\t    203 : 'Non-Authoritative Information',\n\t    204 : 'No Content',\n\t    205 : 'Reset Content',\n\t    206 : 'Partial Content',\n\t    207 : 'Multi-Status',               // RFC 4918\n\t    300 : 'Multiple Choices',\n\t    301 : 'Moved Permanently',\n\t    302 : 'Moved Temporarily',\n\t    303 : 'See Other',\n\t    304 : 'Not Modified',\n\t    305 : 'Use Proxy',\n\t    307 : 'Temporary Redirect',\n\t    400 : 'Bad Request',\n\t    401 : 'Unauthorized',\n\t    402 : 'Payment Required',\n\t    403 : 'Forbidden',\n\t    404 : 'Not Found',\n\t    405 : 'Method Not Allowed',\n\t    406 : 'Not Acceptable',\n\t    407 : 'Proxy Authentication Required',\n\t    408 : 'Request Time-out',\n\t    409 : 'Conflict',\n\t    410 : 'Gone',\n\t    411 : 'Length Required',\n\t    412 : 'Precondition Failed',\n\t    413 : 'Request Entity Too Large',\n\t    414 : 'Request-URI Too Large',\n\t    415 : 'Unsupported Media Type',\n\t    416 : 'Requested Range Not Satisfiable',\n\t    417 : 'Expectation Failed',\n\t    418 : 'I\\'m a teapot',              // RFC 2324\n\t    422 : 'Unprocessable Entity',       // RFC 4918\n\t    423 : 'Locked',                     // RFC 4918\n\t    424 : 'Failed Dependency',          // RFC 4918\n\t    425 : 'Unordered Collection',       // RFC 4918\n\t    426 : 'Upgrade Required',           // RFC 2817\n\t    428 : 'Precondition Required',      // RFC 6585\n\t    429 : 'Too Many Requests',          // RFC 6585\n\t    431 : 'Request Header Fields Too Large',// RFC 6585\n\t    500 : 'Internal Server Error',\n\t    501 : 'Not Implemented',\n\t    502 : 'Bad Gateway',\n\t    503 : 'Service Unavailable',\n\t    504 : 'Gateway Time-out',\n\t    505 : 'HTTP Version Not Supported',\n\t    506 : 'Variant Also Negotiates',    // RFC 2295\n\t    507 : 'Insufficient Storage',       // RFC 4918\n\t    509 : 'Bandwidth Limit Exceeded',\n\t    510 : 'Not Extended',               // RFC 2774\n\t    511 : 'Network Authentication Required' // RFC 6585\n\t};\n\n/***/ },\n\n/***/ 302:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(154);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(44);\n\tutil.inherits = __webpack_require__(23);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough))\n\t    return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function(chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\n/***/ },\n\n/***/ 303:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(11);\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(18).Buffer;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\tvar EE = __webpack_require__(141).EventEmitter;\n\t\n\t/*<replacement>*/\n\tif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(30);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(44);\n\tutil.inherits = __webpack_require__(23);\n\t/*</replacement>*/\n\t\n\tvar StringDecoder;\n\t\n\t\n\t/*<replacement>*/\n\tvar debug = __webpack_require__(540);\n\tif (debug && debug.debuglog) {\n\t  debug = debug.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tfunction ReadableState(options, stream) {\n\t  var Duplex = __webpack_require__(24);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.buffer = [];\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder)\n\t      StringDecoder = __webpack_require__(304).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  var Duplex = __webpack_require__(24);\n\t\n\t  if (!(this instanceof Readable))\n\t    return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function(chunk, encoding) {\n\t  var state = this._readableState;\n\t\n\t  if (util.isString(chunk) && !state.objectMode) {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = new Buffer(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\t\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function(chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\t\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (util.isNullOrUndefined(chunk)) {\n\t    state.reading = false;\n\t    if (!state.ended)\n\t      onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', e);\n\t    } else {\n\t      if (state.decoder && !addToFront && !encoding)\n\t        chunk = state.decoder.write(chunk);\n\t\n\t      if (!addToFront)\n\t        state.reading = false;\n\t\n\t      // if we want the data now, just emit it.\n\t      if (state.flowing && state.length === 0 && !state.sync) {\n\t        stream.emit('data', chunk);\n\t        stream.read(0);\n\t      } else {\n\t        // update the buffer info.\n\t        state.length += state.objectMode ? 1 : chunk.length;\n\t        if (addToFront)\n\t          state.buffer.unshift(chunk);\n\t        else\n\t          state.buffer.push(chunk);\n\t\n\t        if (state.needReadable)\n\t          emitReadable(stream);\n\t      }\n\t\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\t\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended &&\n\t         (state.needReadable ||\n\t          state.length < state.highWaterMark ||\n\t          state.length === 0);\n\t}\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function(enc) {\n\t  if (!StringDecoder)\n\t    StringDecoder = __webpack_require__(304).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 128MB\n\tvar MAX_HWM = 0x800000;\n\tfunction roundUpToNextPowerOf2(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2\n\t    n--;\n\t    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\tfunction howMuchToRead(n, state) {\n\t  if (state.length === 0 && state.ended)\n\t    return 0;\n\t\n\t  if (state.objectMode)\n\t    return n === 0 ? 0 : 1;\n\t\n\t  if (isNaN(n) || util.isNull(n)) {\n\t    // only flow one buffer at a time\n\t    if (state.flowing && state.buffer.length)\n\t      return state.buffer[0].length;\n\t    else\n\t      return state.length;\n\t  }\n\t\n\t  if (n <= 0)\n\t    return 0;\n\t\n\t  // If we're asking for more than the target buffer level,\n\t  // then raise the water mark.  Bump up to the next highest\n\t  // power of 2, to prevent increasing it excessively in tiny\n\t  // amounts.\n\t  if (n > state.highWaterMark)\n\t    state.highWaterMark = roundUpToNextPowerOf2(n);\n\t\n\t  // don't have that much.  return null, unless we've ended.\n\t  if (n > state.length) {\n\t    if (!state.ended) {\n\t      state.needReadable = true;\n\t      return 0;\n\t    } else\n\t      return state.length;\n\t  }\n\t\n\t  return n;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function(n) {\n\t  debug('read', n);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (!util.isNumber(n) || n > 0)\n\t    state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 &&\n\t      state.needReadable &&\n\t      (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended)\n\t      endReadable(this);\n\t    else\n\t      emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0)\n\t      endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  }\n\t\n\t  if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0)\n\t      state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t  }\n\t\n\t  // If _read pushed data synchronously, then `reading` will be false,\n\t  // and we need to re-evaluate how much data we can return to the user.\n\t  if (doRead && !state.reading)\n\t    n = howMuchToRead(nOrig, state);\n\t\n\t  var ret;\n\t  if (n > 0)\n\t    ret = fromList(n, state);\n\t  else\n\t    ret = null;\n\t\n\t  if (util.isNull(ret)) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  }\n\t\n\t  state.length -= n;\n\t\n\t  // If we have nothing in the buffer, then we want to know\n\t  // as soon as we *do* get something into the buffer.\n\t  if (state.length === 0 && !state.ended)\n\t    state.needReadable = true;\n\t\n\t  // If we tried to read() past the EOF, then emit end on the next tick.\n\t  if (nOrig !== n && state.ended && state.length === 0)\n\t    endReadable(this);\n\t\n\t  if (!util.isNull(ret))\n\t    this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.decoder && !state.ended) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync)\n\t      process.nextTick(function() {\n\t        emitReadable_(stream);\n\t      });\n\t    else\n\t      emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    process.nextTick(function() {\n\t      maybeReadMore_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended &&\n\t         state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;\n\t    else\n\t      len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function(n) {\n\t  this.emit('error', new Error('not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function(dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n\t              dest !== process.stdout &&\n\t              dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted)\n\t    process.nextTick(endFn);\n\t  else\n\t    src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain &&\n\t        (!dest._writableState || dest._writableState.needDrain))\n\t      ondrain();\n\t  }\n\t\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    var ret = dest.write(chunk);\n\t    if (false === ret) {\n\t      debug('false write response, pause',\n\t            src._readableState.awaitDrain);\n\t      src._readableState.awaitDrain++;\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EE.listenerCount(dest, 'error') === 0)\n\t      dest.emit('error', er);\n\t  }\n\t  // This is a brutally ugly hack to make sure that our error handler\n\t  // is attached before any userland ones.  NEVER DO THIS.\n\t  if (!dest._events || !dest._events.error)\n\t    dest.on('error', onerror);\n\t  else if (isArray(dest._events.error))\n\t    dest._events.error.unshift(onerror);\n\t  else\n\t    dest._events.error = [onerror, dest._events.error];\n\t\n\t\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function() {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain)\n\t      state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\t\n\tReadable.prototype.unpipe = function(dest) {\n\t  var state = this._readableState;\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0)\n\t    return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes)\n\t      return this;\n\t\n\t    if (!dest)\n\t      dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest)\n\t      dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++)\n\t      dests[i].emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var i = indexOf(state.pipes, dest);\n\t  if (i === -1)\n\t    return this;\n\t\n\t  state.pipes.splice(i, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1)\n\t    state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function(ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  // If listening to data, and it has not explicitly been paused,\n\t  // then call resume to start the flow of data on the next tick.\n\t  if (ev === 'data' && false !== this._readableState.flowing) {\n\t    this.resume();\n\t  }\n\t\n\t  if (ev === 'readable' && this.readable) {\n\t    var state = this._readableState;\n\t    if (!state.readableListening) {\n\t      state.readableListening = true;\n\t      state.emittedReadable = false;\n\t      state.needReadable = true;\n\t      if (!state.reading) {\n\t        var self = this;\n\t        process.nextTick(function() {\n\t          debug('readable nexttick read 0');\n\t          self.read(0);\n\t        });\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function() {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    if (!state.reading) {\n\t      debug('resume read 0');\n\t      this.read(0);\n\t    }\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    process.nextTick(function() {\n\t      resume_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  state.resumeScheduled = false;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading)\n\t    stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function() {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  if (state.flowing) {\n\t    do {\n\t      var chunk = stream.read();\n\t    } while (null !== chunk && state.flowing);\n\t  }\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function(stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function() {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length)\n\t        self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function(chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder)\n\t      chunk = state.decoder.write(chunk);\n\t    if (!chunk || !state.objectMode && !chunk.length)\n\t      return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n\t      this[i] = function(method) { return function() {\n\t        return stream[method].apply(stream, arguments);\n\t      }}(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function(ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function(n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\tfunction fromList(n, state) {\n\t  var list = state.buffer;\n\t  var length = state.length;\n\t  var stringMode = !!state.decoder;\n\t  var objectMode = !!state.objectMode;\n\t  var ret;\n\t\n\t  // nothing in the list, definitely empty.\n\t  if (list.length === 0)\n\t    return null;\n\t\n\t  if (length === 0)\n\t    ret = null;\n\t  else if (objectMode)\n\t    ret = list.shift();\n\t  else if (!n || n >= length) {\n\t    // read it all, truncate the array.\n\t    if (stringMode)\n\t      ret = list.join('');\n\t    else\n\t      ret = Buffer.concat(list, length);\n\t    list.length = 0;\n\t  } else {\n\t    // read just some of it.\n\t    if (n < list[0].length) {\n\t      // just take a part of the first list item.\n\t      // slice is the same for buffers and strings.\n\t      var buf = list[0];\n\t      ret = buf.slice(0, n);\n\t      list[0] = buf.slice(n);\n\t    } else if (n === list[0].length) {\n\t      // first list is a perfect match\n\t      ret = list.shift();\n\t    } else {\n\t      // complex case.\n\t      // we have enough to cover it, but it spans past the first buffer.\n\t      if (stringMode)\n\t        ret = '';\n\t      else\n\t        ret = new Buffer(n);\n\t\n\t      var c = 0;\n\t      for (var i = 0, l = list.length; i < l && c < n; i++) {\n\t        var buf = list[0];\n\t        var cpy = Math.min(n - c, buf.length);\n\t\n\t        if (stringMode)\n\t          ret += buf.slice(0, cpy);\n\t        else\n\t          buf.copy(ret, c, 0, cpy);\n\t\n\t        if (cpy < buf.length)\n\t          list[0] = buf.slice(cpy);\n\t        else\n\t          list.shift();\n\t\n\t        c += cpy;\n\t      }\n\t    }\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0)\n\t    throw new Error('endReadable called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    process.nextTick(function() {\n\t      // Check that we didn't get one last unshift.\n\t      if (!state.endEmitted && state.length === 0) {\n\t        state.endEmitted = true;\n\t        stream.readable = false;\n\t        stream.emit('end');\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf (xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n\n/***/ 304:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(18).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n\n/***/ 305:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar punycode = __webpack_require__(487);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(475);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n\n/***/ 306:\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var object =  true ? exports : this; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error;\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '');\n\t    if (input.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n\n/***/ 320:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(60);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _extends2 = __webpack_require__(5);\n\t\n\tvar _extends3 = _interopRequireDefault(_extends2);\n\t\n\t__webpack_require__(422);\n\t\n\tvar _vuex = __webpack_require__(7);\n\t\n\tvar _deltaRender = __webpack_require__(8);\n\t\n\tvar _deltaRender2 = _interopRequireDefault(_deltaRender);\n\t\n\tvar _Card = __webpack_require__(168);\n\t\n\tvar _Card2 = _interopRequireDefault(_Card);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  mounted: function mounted() {\n\t    this.$nextTick(function () {\n\t      if (this.newQuestionState.choices.length === 0) {\n\t        this.setNewQuestionChoice({ index: 0 });\n\t      }\n\t      this.newQuestion.language = this.getUserLanguage;\n\t    });\n\t  },\n\t  components: {\n\t    Card: _Card2.default\n\t  },\n\t  methods: (0, _extends3.default)({\n\t    updateMcCorrectAnswer: function updateMcCorrectAnswer(correctList) {\n\t      correctList = correctList.map(function (indexString) {\n\t        var index = parseInt(indexString);\n\t        return index;\n\t      });\n\t      var choicesLength = this.newQuestionState.choices.length;\n\t      for (var i = 0; i < choicesLength; i++) {\n\t        var correct = correctList.indexOf(i) !== -1;\n\t        if (correct) {\n\t          this.setNewQuestionChoice({ index: i, correct: true });\n\t        } else {\n\t          this.setNewQuestionChoice({ index: i, correct: false });\n\t        }\n\t      }\n\t    },\n\t    newQuestionDifficultyOnChange: function newQuestionDifficultyOnChange(newDifficulty) {\n\t      this.setNewQuestionMeta({ difficulty: newDifficulty });\n\t    },\n\t    newQuestionSubjectOnChange: function newQuestionSubjectOnChange(newSubject) {\n\t      this.setNewQuestionMeta({ subject: newSubject });\n\t    },\n\t    handleDeltaChange: function handleDeltaChange(delta, source, index) {\n\t      if (source === 'question') {\n\t        this.setNewQuestionContent(delta);\n\t      } else if (source === 'choice') {\n\t        this.setNewQuestionChoice({ index: index, content: delta });\n\t      }\n\t    },\n\t\n\t    renderDelta: function renderDelta(delta) {\n\t      return (0, _deltaRender2.default)(delta);\n\t    },\n\t    readImg: function readImg(e) {\n\t      var c = this.$refs.fabricprocess;\n\t      var canvas = c.fabric || new window.fabric.Canvas(c, { width: 600, height: 300 });\n\t      if (!c.fabric) {\n\t        c.fabric = canvas;\n\t      }\n\t      var reader = new window.FileReader();\n\t      reader.onload = function (event) {\n\t        var imgObj = new window.Image();\n\t        imgObj.src = event.target.result;\n\t        imgObj.onload = function () {\n\t          canvas.forEachObject(function (o) {\n\t            o.remove();\n\t          });\n\t          var image = new window.fabric.Image(imgObj);\n\t          image.set({\n\t            angle: 0,\n\t            padding: 10,\n\t            cornersize: 10,\n\t            height: 160,\n\t            width: imgObj.width * (160 / imgObj.height)\n\t          });\n\t          canvas.centerObject(image);\n\t          canvas.add(image);\n\t          canvas.renderAll();\n\t        };\n\t      };\n\t      reader.readAsDataURL(e.target.files[0]);\n\t    },\n\t    outputImg: function outputImg() {\n\t      var c = this.$refs.fabricprocess;\n\t      var canvas = c.fabric;\n\t      this.$http.get('/api/qiniu/uptoken').then(function (response) {\n\t        this.uploadImage(canvas.getObjects()[0].toDataURL(), response.data.uptoken);\n\t      });\n\t    },\n\t    publishQuestion: function publishQuestion() {\n\t      this.publishButton.disabled = true;\n\t      if (this.checkComplete()) {\n\t        var newQuestionData = JSON.parse((0, _stringify2.default)(this.newQuestionState));\n\t\n\t        newQuestionData.content = (0, _stringify2.default)(newQuestionData.content.ops);\n\t\n\t        newQuestionData.choices = newQuestionData.choices.map(function (choice) {\n\t          var obj = {\n\t            clue: choice.clue,\n\t            content: (0, _stringify2.default)(choice.content.ops),\n\t            correct: choice.correct\n\t          };\n\t          return obj;\n\t        });\n\t\n\t        this.$http.post('/api/manage-question/questions', newQuestionData).then(function (response) {\n\t          this.$showToast('發佈成功');\n\t          this.publishButton.disabled = false;\n\t          this.resetNewQuestion();\n\t          this.editorPreview = {\n\t            image: {\n\t              label: '',\n\t              type: 'qiniu',\n\t              data: '',\n\t              show: false\n\t            }\n\t          };\n\t          this.questionInbox.questions.push(response.data);\n\t        }, function (response) {\n\t          this.$showToast('發佈失敗');\n\t          this.publishButton.disabled = false;\n\t          console.log(response);\n\t        });\n\t      } else {\n\t        this.publishButton.disabled = false;\n\t        this.$showToast('信息不完整');\n\t      }\n\t    },\n\t    checkComplete: function checkComplete() {\n\t      var content = this.newQuestionState.content;\n\t\n\t      var contentComplete = content.ops && content.ops.length > 0;\n\t\n\t\n\t      return contentComplete;\n\t    },\n\t    addTag: function addTag() {\n\t      if (this.tag.trim() !== '') {\n\t        if (this.newQuestionState.tags.indexOf(this.tag) === -1) {\n\t          var newTags = JSON.parse((0, _stringify2.default)(this.newQuestionState.tags));\n\t          newTags.push(this.tag);\n\t          this.setNewQuestionMeta({ tags: newTags });\n\t          this.tag = '';\n\t        } else {\n\t          this.tag = '';\n\t        }\n\t      }\n\t    },\n\t    removeTag: function removeTag(index) {\n\t      var newTags = JSON.parse((0, _stringify2.default)(this.newQuestionState.tags));\n\t      newTags.splice(index, 1);\n\t      this.setNewQuestionMeta({ tags: newTags });\n\t    },\n\t    getLatestQuestionsCreatedByMe: function getLatestQuestionsCreatedByMe() {\n\t      this.$http.get('/api/manage-question/mine').then(function (response) {\n\t        document.getElementById('getLatestQuestionsButton').style.display = 'none';\n\t        this.questionInbox.questions = response.data;\n\t      });\n\t    },\n\t    uploadImage: function uploadImage(imageData, token) {\n\t      imageData = imageData.split(',')[1];\n\t      var uptoken = 'UpToken ' + token;\n\t      var c = this.$refs.fabricprocess;\n\t      var canvas = c.fabric;\n\t      canvas.forEachObject(function (o) {\n\t        o.remove();\n\t      });\n\t      this.$http.post('https://upload.qiniu.com/putb64/-1', imageData, { headers: { 'Content-Type': 'application/octet-stream', 'Authorization': uptoken } }).then(function (response) {\n\t        console.log(response.data);\n\t        this.editorPreview.image.data = response.data.key;\n\t        this.editorPreview.image.show = false;\n\t        var newImage = {\n\t          type: this.editorPreview.image.type,\n\t          data: response.data.key,\n\t          label: this.editorPreview.image.label\n\t        };\n\t        var newImages = JSON.parse((0, _stringify2.default)(this.newQuestionState.images));\n\t        newImages.push(newImage);\n\t        this.setNewQuestionImages(newImages);\n\t      });\n\t    },\n\t    removeChoice: function removeChoice(index) {\n\t      var oldChoices = JSON.parse((0, _stringify2.default)(this.newQuestionState.choices));\n\t      var oldCorrectListBool = oldChoices.map(function (choices) {\n\t        if (choices) {\n\t          return choices.correct;\n\t        } else {\n\t          return false;\n\t        }\n\t      });\n\t      oldCorrectListBool.splice(index, 1);\n\t      var newCorrectList = [];\n\t      oldCorrectListBool.forEach(function (bool, index) {\n\t        if (bool) {\n\t          newCorrectList.push(index.toString());\n\t        }\n\t      });\n\t      this.removeNewQuestionChoice(index);\n\t      this.correctList = newCorrectList;\n\t    },\n\t    addChoice: function addChoice() {\n\t      var choicesLength = this.newQuestionState.choices.length;\n\t      this.setNewQuestionChoice({ index: choicesLength });\n\t    }\n\t  }, (0, _vuex.mapActions)({\n\t    setUserLanguage: 'setUserLanguage',\n\t    setNewQuestionMeta: 'setNewQuestionMeta',\n\t    setNewQuestionContent: 'setNewQuestionContent',\n\t    setNewQuestionChoice: 'setNewQuestionChoice',\n\t    removeNewQuestionChoice: 'removeNewQuestionChoice',\n\t    setNewQuestionImages: 'setNewQuestionImages',\n\t    resetNewQuestion: 'resetNewQuestion'\n\t  })),\n\t  data: function data() {\n\t    return {\n\t      correctList: [],\n\t      publishButton: {\n\t        disabled: false\n\t      },\n\t      questionInbox: {\n\t        questions: [],\n\t        show: false\n\t      },\n\t      tag: '',\n\t      newQuestion: {\n\t        type: 'mc',\n\t        subject: 'math',\n\t        tags: [],\n\t        tips: '',\n\t        difficulty: 1,\n\t        choices: ['', '', '', ''],\n\t        images: [],\n\t        answer: {\n\t          mc: 0\n\t        },\n\t        delta: ''\n\t      },\n\t      editorPreview: {\n\t        image: {\n\t          label: '',\n\t          type: 'qiniu',\n\t          data: '',\n\t          show: false\n\t        },\n\t        question: { ops: [] },\n\t        answer: {\n\t          mc: [{ ops: [] }, { ops: [] }, { ops: [] }, { ops: [] }]\n\t        }\n\t      }\n\t    };\n\t  },\n\t\n\t  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)({\n\t    subjects: 'getSubjects',\n\t    languages: 'getLanguages',\n\t    getUserLanguage: 'getUserLanguage',\n\t    newQuestionState: 'newQuestionState',\n\t    alphabet: 'getAlphabet'\n\t  })),\n\t  watch: {\n\t    correctList: function correctList(val) {\n\t      this.updateMcCorrectAnswer(val);\n\t    }\n\t  }\n\t};\n\n/***/ },\n\n/***/ 392:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".set_difficulty i[data-v-5c5621c8]{width:24px;color:#aaa;cursor:pointer}.difficulty_status[data-v-5c5621c8]{color:#ffc107!important}.body-wrapper[data-v-5c5621c8]{max-width:800px;margin:32px auto}.questions_inbox[data-v-5c5621c8]{position:fixed;right:-360px;top:55px;background:#fff;width:360px;box-shadow:0 0 12px #aaa;height:100%;transition:right .2s}.questions_inbox.show[data-v-5c5621c8]{right:0}.questions_inbox .question[data-v-5c5621c8]{padding:8px 16px;border-bottom:1px solid #eee}.choice[data-v-5c5621c8]{margin-bottom:8px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/create-question/Create-mc-question.vue\"],\"names\":[],\"mappings\":\"AACA,mCACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AACD,oCACE,uBAAyB,CAC1B,AACD,+BACE,gBAAiB,AACjB,gBAAiB,CAClB,AACD,kCACE,eAAgB,AAChB,aAAc,AACd,SAAU,AACV,gBAAiB,AACjB,YAAa,AACb,yBAA0B,AAC1B,YAAa,AACb,oBAAuB,CACxB,AACD,uCACE,OAAS,CACV,AACD,4CACE,iBAAkB,AAClB,4BAA6B,CAC9B,AACD,yBACE,iBAAkB,CACnB\",\"file\":\"Create-mc-question.vue\",\"sourcesContent\":[\"\\n.set_difficulty i[data-v-5c5621c8] {\\n  width: 24px;\\n  color: #aaa;\\n  cursor: pointer;\\n}\\n.difficulty_status[data-v-5c5621c8] {\\n  color: #FFC107 !important\\n}\\n.body-wrapper[data-v-5c5621c8] {\\n  max-width: 800px;\\n  margin:32px auto;\\n}\\n.questions_inbox[data-v-5c5621c8] {\\n  position: fixed;\\n  right: -360px;\\n  top: 55px;\\n  background: #fff;\\n  width: 360px;\\n  box-shadow: 0 0 12px #aaa;\\n  height: 100%;\\n  transition: right 0.2s;\\n}\\n.questions_inbox.show[data-v-5c5621c8] {\\n  right: 0;\\n}\\n.questions_inbox .question[data-v-5c5621c8] {\\n  padding: 8px 16px;\\n  border-bottom: 1px solid #eee\\n}\\n.choice[data-v-5c5621c8] {\\n  margin-bottom: 8px\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 409:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(392);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create-mc-question.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create-mc-question.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 422:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.7.0\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(538)\n\t    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\tfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\tfabric.fontPaths = { };\n\t\n\t/**\n\t * Cache Object for widths of chars in text rendering.\n\t */\n\tfabric.charWidthsCache = { };\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t    var eventListener = this.__eventListeners[eventName];\n\t    if (handler) {\n\t      eventListener[eventListener.indexOf(handler)] = false;\n\t    }\n\t    else {\n\t      fabric.util.array.fill(eventListener, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      for (eventName in this.__eventListeners) {\n\t        _removeEventListener.call(this, eventName);\n\t      }\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n\t    }\n\t    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n\t      return value !== false;\n\t    });\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n\t   * @see {@link http://fabricjs.com/events|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  _objects: [],\n\t\n\t  /**\n\t   * Adds objects to collection, Canvas or Group, then renders canvas\n\t   * (if `renderOnAddRemove` is not `false`).\n\t   * in case of Group no changes to bounding box are made.\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    if (this._onObjectAdded) {\n\t      for (var i = 0, length = arguments.length; i < length; i++) {\n\t        this._onObjectAdded(arguments[i]);\n\t      }\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded && this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index, somethingRemoved = false;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        somethingRemoved = true;\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects();\n\t    for (var i = 0, len = objects.length; i < len; i++) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      pow = Math.pow,\n\t      abs = Math.abs,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {*} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var v = fabric.util.rotateVector(point, radians);\n\t      return new fabric.Point(v.x, v.y).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Rotates `vector` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} vector The vector to rotate (x and y)\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {Object} The new rotated point\n\t     */\n\t    rotateVector: function(vector, radians) {\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = vector.x * cos - vector.y * sin,\n\t          ry = vector.x * sin + vector.y * cos;\n\t      return {\n\t        x: rx,\n\t        y: ry\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n\t     * @param {Array} points 4 points array\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    makeBoundingBoxFromPoints: function(points) {\n\t      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n\t          minX = fabric.util.array.min(xPoints),\n\t          maxX = fabric.util.array.max(xPoints),\n\t          width = Math.abs(minX - maxX),\n\t          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n\t          minY = fabric.util.array.min(yPoints),\n\t          maxY = fabric.util.array.max(yPoints),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @param {Number} fontSize\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length, i,\n\t          obj = global || fabric.window;\n\t\n\t      for (i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {*} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        if (klass.async) {\n\t          klass.fromObject(o, function (obj, error) {\n\t            if (!error) {\n\t              enlivenedObjects[index] = obj;\n\t              reviver && reviver(o, enlivenedObjects[index]);\n\t            }\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedObjects[index] = klass.fromObject(o);\n\t          reviver && reviver(o, enlivenedObjects[index]);\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @param {String} path Value to set sourcePath to\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.setSourcePath(path);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      /* eslint-disable camelcase */\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      /* eslint-enable camelcase */\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(174).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype, i, propName,\n\t          capitalizedPropName, setterName, getterName;\n\t\n\t      for (i = proto.stateProperties.length; i--; ) {\n\t\n\t        propName = proto.stateProperties[i];\n\t        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\t        setterName = 'set' + capitalizedPropName;\n\t        getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b, is2x2) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n\t        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Decomposes standard 2x2 matrix into transform componentes\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a transformMatrix\n\t     * @return {Object} Components of transform\n\t     */\n\t    qrDecompose: function(a) {\n\t      var angle = atan2(a[1], a[0]),\n\t          denom = pow(a[0], 2) + pow(a[1], 2),\n\t          scaleX = sqrt(denom),\n\t          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n\t          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n\t      return {\n\t        angle: angle  / PiBy180,\n\t        scaleX: scaleX,\n\t        scaleY: scaleY,\n\t        skewX: skewX / PiBy180,\n\t        skewY: 0,\n\t        translateX: a[4],\n\t        translateY: a[5]\n\t      };\n\t    },\n\t\n\t    customTransformMatrix: function(scaleX, scaleY, skewX) {\n\t      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n\t          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n\t      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n\t    },\n\t\n\t    resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.flipX = false;\n\t      target.flipY = false;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true, i, temp,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n\t          l = imageData.data.length;\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (i = 3; i < l; i += 4) {\n\t        temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    },\n\t\n\t    /**\n\t     * Parse preserveAspectRatio attribute from element\n\t     * @param {string} attribute to be parsed\n\t     * @return {Object} an object containing align and meetOrSlice attribute\n\t     */\n\t    parsePreserveAspectRatioAttribute: function(attribute) {\n\t      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n\t          aspectRatioAttrs = attribute.split(' '), align;\n\t\n\t      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t        meetOrSlice = aspectRatioAttrs.pop();\n\t        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t          align = meetOrSlice;\n\t          meetOrSlice = 'meet';\n\t        }\n\t        else if (aspectRatioAttrs.length) {\n\t          align = aspectRatioAttrs.pop();\n\t        }\n\t      }\n\t      //divide align in alignX and alignY\n\t      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t      return {\n\t        meetOrSlice: meetOrSlice,\n\t        alignX: alignX,\n\t        alignY: alignY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {String} [fontFamily] font family to clear\n\t     */\n\t    clearFabricFontCache: function(fontFamily) {\n\t      if (!fontFamily) {\n\t        fabric.charWidthsCache = { };\n\t      }\n\t      else if (fabric.charWidthsCache[fontFamily]) {\n\t        delete fabric.charWidthsCache[fontFamily];\n\t      }\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[], [], [], []],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound, bounds = [],\n\t        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n\t      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [],\n\t        bounds = [[], []],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {*} searchElement\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @return {*}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function fill(array, value) {\n\t    var k = array.length;\n\t    while (k--) {\n\t      array[k] = value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    fill: fill,\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  /**\n\t   * Copies all enumerable properties of one js object to another\n\t   * Does not clone or extend fabric.Object subclasses.\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t\n\t  function extend(destination, source, deep) {\n\t    // JScript DontEnum bug is not taken care of\n\t    // the deep clone is for internal use, is not meant to avoid\n\t    // javascript traps or cloning html element or self referenced objects.\n\t    if (deep) {\n\t      if (!fabric.isLikelyNode && source instanceof Element) {\n\t        // avoid cloning deep images, canvases,\n\t        destination = source;\n\t      }\n\t      else if (source instanceof Array) {\n\t        destination = [];\n\t        for (var i = 0, len = source.length; i < len; i++) {\n\t          destination[i] = extend({ }, source[i], deep);\n\t        }\n\t      }\n\t      else if (source && typeof source === 'object') {\n\t        for (var property in source) {\n\t          if (source.hasOwnProperty(property)) {\n\t            destination[property] = extend({ }, source[property], deep);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        // this sounds odd for an extend but is ok for recursive use\n\t        destination = source;\n\t      }\n\t    }\n\t    else {\n\t      for (var property in source) {\n\t        destination[property] = source[property];\n\t      }\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object, deep) {\n\t    return extend({ }, object, deep);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t})();\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var fn = this.constructor.superclass.prototype[methodName];\n\t    return (arguments.length > 1)\n\t      ? fn.apply(this, slice.call(arguments, 1))\n\t      : fn.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      element.addEventListener(eventName, handler, false);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      element.removeEventListener(eventName, handler, false);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t        return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t      },\n\t\n\t      pointerY = function(event) {\n\t        return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t      };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    // While loop checks (and then sets element to) .parentNode OR .host\n\t    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n\t    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n\t    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\t    while (element && (element.parentNode || element.host)) {\n\t\n\t      // Set element to element parent, or 'host' in case of ShadowDOM\n\t      element = element.parentNode || element.host;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {String} [options.parameters] parameters to append to url in GET or in body\n\t   * @param {String} [options.body] body to send with POST or PUT request\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body = options.body || options.parameters;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {*} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {*} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* eslint-disable */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* eslint-enable */\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || function() { },\n\t          abort = options.abort || function() { return false; },\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start);\n\t        if (abort()) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        onChange(easing(currentTime, startValue, byValue, duration));\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      //handle the 0/0 case:\n\t      if (c === 0 && a === 0) {\n\t        s = p / (2 * Math.PI) * Math.asin(1);\n\t      }\n\t      else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2 / 2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5 / 2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      capitalize = fabric.util.string.capitalize,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      if (value === 'none') {\n\t        value = null;\n\t      }\n\t      else {\n\t        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t          return parseFloat(n);\n\t        });\n\t      }\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n\t        continue;\n\t      }\n\t\n\t      if (typeof attributes[attr] === 'undefined') {\n\t        if (!fabric.Object.prototype[attr]) {\n\t          continue;\n\t        }\n\t        attributes[attr] = fabric.Object.prototype[attr];\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _getMultipleNodes(doc, nodeNames) {\n\t    var nodeName, nodeArray = [], nodeList;\n\t    for (var i = 0; i < nodeNames.length; i++) {\n\t      nodeName = nodeNames[i];\n\t      nodeList = doc.getElementsByTagName(nodeName);\n\t      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n\t    }\n\t    return nodeArray;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var angle = args[0],\n\t          x = (args.length === 3) ? args[1] : 0,\n\t          y = (args.length === 3) ? args[2] : 0;\n\t\n\t      matrix[0] = Math.cos(angle);\n\t      matrix[1] = Math.sin(angle);\n\t      matrix[2] = -Math.sin(angle);\n\t      matrix[3] = Math.cos(angle);\n\t      matrix[4] = x - (matrix[0] * x + matrix[2] * y);\n\t      matrix[5] = y - (matrix[1] * x + matrix[3] * y);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewXMatrix(matrix, args) {\n\t      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function skewYMatrix(matrix, args) {\n\t      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              // match !== '' && match != null\n\t              return (!!match);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewXMatrix(matrix, args);\n\t            break;\n\t          case 'skewY':\n\t            skewYMatrix(matrix, args);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = normalizeAttr(pair[0].trim().toLowerCase());\n\t      value = normalizeValue(attr, pair[1].trim());\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = normalizeAttr(prop.toLowerCase());\n\t      value = normalizeValue(attr, style[prop]);\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (id === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\t\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        // el2.firstChild != null\n\t        while (el2.firstChild) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        x = element.getAttribute('x') || 0,\n\t        y = element.getAttribute('y') || 0,\n\t        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { }, translateMatrix = '';\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]);\n\t    minY = -parseFloat(viewBoxAttr[2]);\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\t    if (preserveAspectRatio.alignX !== 'none') {\n\t      //translate all container for the effect of Mid, Min, Max\n\t      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t    }\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (x || y) {\n\t      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n\t    }\n\t\n\t    matrix = translateMatrix + ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.nodeName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      // element.firstChild != null\n\t      while (element.firstChild) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished;\n\t   * It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   */\n\t  fabric.parseSVGDocument = (function() {\n\t\n\t    function hasAncestorWithNodeName(element, nodeName) {\n\t      while (element && (element = element.parentNode)) {\n\t        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n\t          && !element.getAttribute('instantiated_by_use')) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    return function(doc, callback, reviver) {\n\t      if (!doc) {\n\t        return;\n\t      }\n\t\n\t      parseUseDirectives(doc);\n\t\n\t      var startTime = new Date(),\n\t          svgUid =  fabric.Object.__uid++,\n\t          options = applyViewboxTransform(doc),\n\t          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t\n\t      options.svgUid = svgUid;\n\t\n\t      if (descendants.length === 0 && fabric.isLikelyNode) {\n\t        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t        // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t        var arr = [];\n\t        for (var i = 0, len = descendants.length; i < len; i++) {\n\t          arr[i] = descendants[i];\n\t        }\n\t        descendants = arr;\n\t      }\n\t\n\t      var elements = descendants.filter(function(el) {\n\t        applyViewboxTransform(el);\n\t        return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n\t              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t      });\n\t\n\t      if (!elements || (elements && !elements.length)) {\n\t        callback && callback([], {});\n\t        return;\n\t      }\n\t\n\t      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t      // Precedence of rules:   style > class > attribute\n\t      fabric.parseElements(elements, function(instances) {\n\t        fabric.documentParsingTime = new Date() - startTime;\n\t        if (callback) {\n\t          callback(instances, options);\n\t        }\n\t      }, clone(options), reviver);\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n\t   * @namespace\n\t   */\n\t  var svgCache = {\n\t\n\t    /**\n\t     * @param {String} name\n\t     * @param {Function} callback\n\t     */\n\t    has: function (name, callback) {\n\t      callback(false);\n\t    },\n\t\n\t    get: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    set: function () {\n\t      /* NOOP */\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _enlivenCachedObject(cachedObject) {\n\t\n\t    var objects = cachedObject.objects,\n\t        options = cachedObject.options;\n\t\n\t    objects = objects.map(function (o) {\n\t      return fabric[capitalize(o.type)].fromObject(o);\n\t    });\n\t\n\t    return ({ objects: objects, options: options });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _createSVGPattern(markup, canvas, property) {\n\t    if (canvas[property] && canvas[property].toSVG) {\n\t      markup.push(\n\t        '\\t<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n\t          'width=\"', canvas[property].source.width,\n\t          '\" height=\"', canvas[property].source.height,\n\t          '\" patternUnits=\"userSpaceOnUse\">\\n',\n\t        '\\t\\t<image x=\"0\" y=\"0\" ',\n\t        'width=\"', canvas[property].source.width,\n\t        '\" height=\"', canvas[property].source.height,\n\t        '\" xlink:href=\"', canvas[property].source.src,\n\t        '\"></image>\\n\\t</pattern>\\n'\n\t      );\n\t    }\n\t  }\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var tagArray = [\n\t            'linearGradient',\n\t            'radialGradient',\n\t            'svg:linearGradient',\n\t            'svg:radialGradient'],\n\t          elList = _getMultipleNodes(doc, tagArray),\n\t          el, j = 0, id, xlink,\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      j = elList.length;\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) {\n\t          attr = normalizeAttr(attr);\n\t          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\t\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t      if (ownAttributes.font) {\n\t        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n\t      }\n\t      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i += 2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        // IE9 doesn't support textContent, but provides text instead.\n\t        var styleContents = styles[i].textContent || styles[i].text;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t              ruleObj = { }, declaration = match[2].trim(),\n\t              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = normalizeAttr(pair[0]),\n\t                value = normalizeValue(property, pair[1], pair[0]);\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            if (allRules[_rule]) {\n\t              fabric.util.object.extend(allRules[_rule], ruleObj);\n\t            }\n\t            else {\n\t              allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t            }\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n\t     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      svgCache.has(url, function (hasUrl) {\n\t        if (hasUrl) {\n\t          svgCache.get(url, function (value) {\n\t            var enlivedRecord = _enlivenCachedObject(value);\n\t            callback(enlivedRecord.objects, enlivedRecord.options);\n\t          });\n\t        }\n\t        else {\n\t          new fabric.util.request(url, {\n\t            method: 'get',\n\t            onComplete: onComplete\n\t          });\n\t        }\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          callback && callback(null);\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n\t          svgCache.set(url, {\n\t            objects: fabric.util.array.invoke(results, 'toObject'),\n\t            options: options\n\t          });\n\t          callback && callback(results, options);\n\t        }, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n\t        callback(results, options);\n\t      }, reviver);\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces,\n\t     * font URLs for font faces must be collected by developers\n\t     * and are not extracted from the DOM by fabricjs\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function(objects) {\n\t      var markup = '', fontList = { }, obj, fontFamily,\n\t          style, row, rowIndex, _char, charIndex,\n\t          fontPaths = fabric.fontPaths;\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        obj = objects[i];\n\t        fontFamily = obj.fontFamily;\n\t        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n\t          continue;\n\t        }\n\t        fontList[fontFamily] = true;\n\t        if (!obj.styles) {\n\t          continue;\n\t        }\n\t        style = obj.styles;\n\t        for (rowIndex in style) {\n\t          row = style[rowIndex];\n\t          for (charIndex in row) {\n\t            _char = row[charIndex];\n\t            fontFamily = _char.fontFamily;\n\t            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n\t              fontList[fontFamily] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var j in fontList) {\n\t        markup += [\n\t          '\\t\\t@font-face {\\n',\n\t          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n\t          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n\t          '\\t\\t}\\n'\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          '\\t<style type=\"text/css\">',\n\t          '<![CDATA[\\n',\n\t          markup,\n\t          ']]>',\n\t          '</style>\\n'\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function(canvas) {\n\t      var markup = [];\n\t\n\t      _createSVGPattern(markup, canvas, 'backgroundColor');\n\t      _createSVGPattern(markup, canvas, 'overlayColor');\n\t\n\t      return markup.join('');\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_obj, i) {\n\t      setTimeout(function() {\n\t        _obj.createObject(_obj.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      // eslint-disable-next-line no-eq-null, eqeqeq\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    type: 'point',\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * TODO: rename in scalarMultiply in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * TODO: rename in scalarMultiplyEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * TODO: rename in scalarDivide in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * TODO: rename in scalarDivideEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      if (typeof t === 'undefined') {\n\t        t = 0.5;\n\t      }\n\t      t = Math.max(Math.min(1, t), 0);\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return this.lerp(that);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x of this point\n\t     * @param {Number} x\n\t     * @chainable\n\t     */\n\t    setX: function (x) {\n\t      this.x = x;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets y of this point\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setY: function (y) {\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     * @chainable\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    },\n\t\n\t    /**\n\t     * return a cloned instance of the point\n\t     * @return {fabric.Point}\n\t     */\n\t    clone: function () {\n\t      return new Point(this.x, this.y);\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    constructor: Intersection,\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * TODO: rename in intersectSegmentSegment\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * TODO: rename in intersectSegmentPolygon\n\t   * fix detection of coincident\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length,\n\t        b1, b2, inter;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      b1 = points[i];\n\t      b2 = points[(i + 1) % length];\n\t      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {fabric.Point} r1\n\t   * @param {fabric.Point} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        source = [255, 255, 255, 0];\n\t      }\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromHex(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (!source) {\n\t        //if color is not recognize let's make black as canvas does\n\t        source = [0, 0, 0, 1];\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255; g /= 255; b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    grey:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1 / 6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1 / 2) {\n\t      return q;\n\t    }\n\t    if (t < 2 / 3) {\n\t      return p + (q - p) * (2 / 3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1 / 3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1 / 3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3 || value.length === 4),\n\t          isRGBa = (value.length === 8 || value.length === 4),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n\t          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset') || 0,\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStop) {\n\t      for (var position in colorStop) {\n\t        var color = new fabric.Color(colorStop[position]);\n\t        this.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @return {Object}\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY,\n\t        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = fabric.util.object.clone(this.coords),\n\t          markup, commonAttributes;\n\t\n\t      // colorStops must be sorted ascending\n\t      this.colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          '<linearGradient ',\n\t          commonAttributes,\n\t          ' x1=\"', coords.x1,\n\t          '\" y1=\"', coords.y1,\n\t          '\" x2=\"', coords.x2,\n\t          '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        markup = [\n\t          '<radialGradient ',\n\t          commonAttributes,\n\t          ' cx=\"', coords.x2,\n\t          '\" cy=\"', coords.y2,\n\t          '\" r=\"', coords.r2,\n\t          '\" fx=\"', coords.x1,\n\t          '\" fy=\"', coords.y1,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t\n\t      for (var i = 0; i < this.colorStops.length; i++) {\n\t        markup.push(\n\t          '<stop ',\n\t            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n\t            '\" style=\"stop-color:', this.colorStops[i].color,\n\t            (this.colorStops[i].opacity !== null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} object\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(parseFloat(offset), color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type,\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords, ellipseMatrix;\n\t\n\t      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n\t        type = 'linear';\n\t      }\n\t      else {\n\t        type = 'radial';\n\t      }\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      if (options[prop] === 'Infinity') {\n\t        options[prop] = 1;\n\t      }\n\t      else if (options[prop] === '-Infinity') {\n\t        options[prop] = 0;\n\t      }\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry / object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t/**\n\t * Pattern class\n\t * @class fabric.Pattern\n\t * @see {@link http://fabricjs.com/patterns|Pattern demo}\n\t * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n\t * @see {@link fabric.Pattern#initialize} for constructor definition\n\t */\n\tfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t  /**\n\t   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t   * @type String\n\t   * @default\n\t   */\n\t  repeat: 'repeat',\n\t\n\t  /**\n\t   * Pattern horizontal offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetX: 0,\n\t\n\t  /**\n\t   * Pattern vertical offset from object's left/top corner\n\t   * @type Number\n\t   * @default\n\t   */\n\t  offsetY: 0,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Pattern} thisArg\n\t   */\n\t  initialize: function(options) {\n\t    options || (options = { });\n\t\n\t    this.id = fabric.Object.__uid++;\n\t\n\t    if (options.source) {\n\t      if (typeof options.source === 'string') {\n\t        // function string\n\t        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t          this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        }\n\t        else {\n\t          // img src string\n\t          var _this = this;\n\t          this.source = fabric.util.createImage();\n\t          fabric.util.loadImage(options.source, function(img) {\n\t            _this.source = img;\n\t          });\n\t        }\n\t      }\n\t      else {\n\t        // img element\n\t        this.source = options.source;\n\t      }\n\t    }\n\t    if (options.repeat) {\n\t      this.repeat = options.repeat;\n\t    }\n\t    if (options.offsetX) {\n\t      this.offsetX = options.offsetX;\n\t    }\n\t    if (options.offsetY) {\n\t      this.offsetY = options.offsetY;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of a pattern\n\t   * @return {Object} Object representation of a pattern instance\n\t   */\n\t  toObject: function() {\n\t\n\t    var source;\n\t\n\t    // callback\n\t    if (typeof this.source === 'function') {\n\t      source = String(this.source);\n\t    }\n\t    // <img> element\n\t    else if (typeof this.source.src === 'string') {\n\t      source = this.source.src;\n\t    }\n\t    // <canvas> element\n\t    else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t      source = this.source.toDataURL();\n\t    }\n\t\n\t    return {\n\t      source: source,\n\t      repeat: this.repeat,\n\t      offsetX: this.offsetX,\n\t      offsetY: this.offsetY\n\t    };\n\t  },\n\t\n\t  /* _TO_SVG_START_ */\n\t  /**\n\t   * Returns SVG representation of a pattern\n\t   * @param {fabric.Object} object\n\t   * @return {String} SVG representation of a pattern\n\t   */\n\t  toSVG: function(object) {\n\t    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t        patternWidth = patternSource.width / object.getWidth(),\n\t        patternHeight = patternSource.height / object.getHeight(),\n\t        patternOffsetX = this.offsetX / object.getWidth(),\n\t        patternOffsetY = this.offsetY / object.getHeight(),\n\t        patternImgSrc = '';\n\t    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t      patternHeight = 1;\n\t    }\n\t    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t      patternWidth = 1;\n\t    }\n\t    if (patternSource.src) {\n\t      patternImgSrc = patternSource.src;\n\t    }\n\t    else if (patternSource.toDataURL) {\n\t      patternImgSrc = patternSource.toDataURL();\n\t    }\n\t\n\t    return '<pattern id=\"SVGID_' + this.id +\n\t                  '\" x=\"' + patternOffsetX +\n\t                  '\" y=\"' + patternOffsetY +\n\t                  '\" width=\"' + patternWidth +\n\t                  '\" height=\"' + patternHeight + '\">\\n' +\n\t             '<image x=\"0\" y=\"0\"' +\n\t                    ' width=\"' + patternSource.width +\n\t                    '\" height=\"' + patternSource.height +\n\t                    '\" xlink:href=\"' + patternImgSrc +\n\t             '\"></image>\\n' +\n\t           '</pattern>\\n';\n\t  },\n\t  /* _TO_SVG_END_ */\n\t\n\t  /**\n\t   * Returns an instance of CanvasPattern\n\t   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t   * @return {CanvasPattern}\n\t   */\n\t  toLive: function(ctx) {\n\t    var source = typeof this.source === 'function'\n\t      ? this.source()\n\t      : this.source;\n\t\n\t    // if the image failed to load, return, and allow rest to continue loading\n\t    if (!source) {\n\t      return '';\n\t    }\n\t\n\t    // if an image\n\t    if (typeof source.src !== 'undefined') {\n\t      if (!source.complete) {\n\t        return '';\n\t      }\n\t      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t        return '';\n\t      }\n\t    }\n\t    return ctx.createPattern(source, this.repeat);\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          offset = fabric.util.rotateVector(\n\t            { x: this.offsetX, y: this.offsetY },\n\t            fabric.util.degreesToRadians(-object.angle)),\n\t          BLUR_BOX = 20;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t      }\n\t      if (object.flipX) {\n\t        offset.x *= -1;\n\t      }\n\t      if (object.flipY) {\n\t        offset.y *= -1;\n\t      }\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n\t          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY,\n\t          affectStroke: this.affectStroke\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t\n\t      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n\t        if (this[prop] !== proto[prop]) {\n\t          obj[prop] = this[prop];\n\t        }\n\t      }, this);\n\t\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  // eslint-disable-next-line max-len\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t      toFixed = fabric.util.toFixed,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: false,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: [1, 0, 0, 1, 0, 0],\n\t\n\t    /**\n\t     * if set to false background image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    backgroundVpt: true,\n\t\n\t    /**\n\t     * if set to false overlya image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    overlayVpt: true,\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n\t      this._objects = [];\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, cb);\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, cb);\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, cb);\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, cb);\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isRetinaScaling: function() {\n\t      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} retinaScaling if applied, otherwise 1;\n\t     */\n\t    getRetinaScaling: function() {\n\t      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (!this._isRetinaScaling()) {\n\t        return;\n\t      }\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n\t        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n\t      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          img && (this[property] = new fabric.Image(img, options));\n\t          callback && callback(img);\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback(image);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      if (color && color.source) {\n\t        var _this = this;\n\t        fabric.util.loadImage(color.source, function(img) {\n\t          _this[property] = new fabric.Pattern({\n\t            source: img,\n\t            repeat: color.repeat,\n\t            offsetX: color.offsetX,\n\t            offsetY: color.offsetY\n\t          });\n\t          callback && callback();\n\t        });\n\t      }\n\t      else {\n\t        this[property] = color;\n\t        callback && callback();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function(canvasEl) {\n\t      var element = fabric.util.createCanvasElement(canvasEl)\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t      this._initRetinaScaling();\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return this.viewportTransform[0];\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this._activeGroup, object;\n\t      this.viewportTransform = vpt;\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        object = this._objects[i];\n\t        object.group || object.setCoords();\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords();\n\t      }\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point, vpt = this.viewportTransform.slice(0);\n\t      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n\t      vpt[0] = value;\n\t      vpt[3] = value;\n\t      var after = fabric.util.transformPoint(point, vpt);\n\t      vpt[4] += before.x - after.x;\n\t      vpt[5] += before.y - after.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      var vpt = this.viewportTransform.slice(0);\n\t      vpt[4] = -point.x;\n\t      vpt[5] = -point.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t      delete obj.canvas;\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      this.backgroundImage = null;\n\t      this.overlayImage = null;\n\t      this.backgroundColor = '';\n\t      this.overlayColor = ''\n\t      if (this._hasITextHandlers) {\n\t        this.off('selection:cleared', this._canvasITextSelectionClearedHanlder);\n\t        this.off('object:selected', this._canvasITextSelectionClearedHanlder);\n\t        this.off('mouse:up', this._mouseUpITextHandler);\n\t        this._iTextInstances = null;\n\t        this._hasITextHandlers = false;\n\t      }\n\t      this.clearContext(this.contextContainer);\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders both the canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._objects);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders background, objects, overlay and controls.\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {Array} objects to render\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderCanvas: function(ctx, objects) {\n\t      this.clearContext(ctx);\n\t      this.fire('before:render');\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, ctx);\n\t      }\n\t      this._renderBackground(ctx);\n\t\n\t      ctx.save();\n\t      //apply viewport transform once for all rendering process\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      this._renderObjects(ctx, objects);\n\t      ctx.restore();\n\t      if (!this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      if (this.clipTo) {\n\t        ctx.restore();\n\t      }\n\t      this._renderOverlay(ctx);\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      this.fire('after:render');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} objects to render\n\t     */\n\t    _renderObjects: function(ctx, objects) {\n\t      for (var i = 0, length = objects.length; i < length; ++i) {\n\t        objects[i] && objects[i].render(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {string} property 'background' or 'overlay'\n\t     */\n\t    _renderBackgroundOrOverlay: function(ctx, property) {\n\t      var object = this[property + 'Color'];\n\t      if (object) {\n\t        ctx.fillStyle = object.toLive\n\t          ? object.toLive(ctx)\n\t          : object;\n\t\n\t        ctx.fillRect(\n\t          object.offsetX || 0,\n\t          object.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      object = this[property + 'Image'];\n\t      if (object) {\n\t        if (this[property + 'Vpt']) {\n\t          ctx.save();\n\t          ctx.transform.apply(ctx, this.viewportTransform);\n\t        }\n\t        object.render(ctx);\n\t        this[property + 'Vpt'] && ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'background');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'overlay');\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(center.left, center.top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the viewport\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObject: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, vpCenter);\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectH: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object Vertically in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectV: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n\t    },\n\t\n\t    /**\n\t     * Calculate the point in canvas that correspond to the center of actual viewport.\n\t     * @return {fabric.Point} vpCenter, viewport center\n\t     * @chainable\n\t     */\n\t    getVpCenter: function() {\n\t      var center = this.getCenter(),\n\t          iVpt = fabric.util.invertTransform(this.viewportTransform);\n\t      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().filter(function(object) {\n\t        return !object.excludeFromExport;\n\t      }).map(function(instance) {\n\t        return this._toObject(instance, methodName, propertiesToInclude);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      var object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n\t      var data = {\n\t        background: (this.backgroundColor && this.backgroundColor.toObject)\n\t          ? this.backgroundColor.toObject(propertiesToInclude)\n\t          : this.backgroundColor\n\t      };\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject(propertiesToInclude)\n\t          : this.overlayColor;\n\t      }\n\t      if (this.backgroundImage) {\n\t        data.backgroundImage = this._toObject(this.backgroundImage, methodName, propertiesToInclude);\n\t      }\n\t      if (this.overlayImage) {\n\t        data.overlayImage = this._toObject(this.overlayImage, methodName, propertiesToInclude);\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {String} [options.width] desired width of svg with or without units\n\t     * @param {String} [options.height] desired height of svg with or without units\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (options.suppressPreamble) {\n\t        return;\n\t      }\n\t      markup.push(\n\t        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n\t          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width = options.width || this.width,\n\t          height = options.height || this.height,\n\t          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t      if (options.viewBox) {\n\t        viewBox = 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" ';\n\t      }\n\t      else {\n\t        if (this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          viewBox = 'viewBox=\"' +\n\t                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          (this.backgroundColor && !this.backgroundColor.toLive\n\t            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n\t            : null),\n\t          viewBox,\n\t          'xml:space=\"preserve\">\\n',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n\t        '<defs>',\n\t          fabric.createSVGFontFacesMarkup(this.getObjects()),\n\t          fabric.createSVGRefElementsMarkup(this),\n\t        '</defs>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      var instance;\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        instance = objects[i];\n\t        if (instance.excludeFromExport) {\n\t          continue;\n\t        }\n\t        this._setSVGObject(markup, instance, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * push single object svg representation in the markup\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      markup.push(instance.toSVG(reviver));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property, reviver) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG(reviver));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      if (this[property] && this[property].source) {\n\t        markup.push(\n\t          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n\t            'width=\"',\n\t              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n\t                ? this[property].source.height\n\t                : this.height),\n\t            '\" fill=\"url(#' + property + 'Pattern)\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t      else if (this[property] && property === 'overlayColor') {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.unshift(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.unshift(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.push(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.push(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== 0) {\n\t            newIdx = idx - 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== 0) {\n\t          // if object is not on the bottom of stack\n\t          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== this._objects.length - 1) {\n\t            newIdx = idx + 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== this._objects.length - 1) {\n\t          // if object is not on top of stack (last item in an array)\n\t          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color: 'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow: null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap: 'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin: 'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray: null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur;\n\t    ctx.shadowOffsetX = this.shadow.offsetX;\n\t    ctx.shadowOffsetY = this.shadow.offsetY;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        p1.x -= 0.5;\n\t        p2.x += 0.5;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (var i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [],\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y);\n\t\n\t      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n\t      for (var i = 1, len = points.length; i < len; i++) {\n\t        var midPoint = p1.midPointFrom(p2);\n\t        // p1 is our bezier control point\n\t        // midpoint is our endpoint\n\t        // start point is p(i-1) value.\n\t        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        p1 = new fabric.Point(points[i].x, points[i].y);\n\t        if ((i + 1) < points.length) {\n\t          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n\t        }\n\t      }\n\t      path.push('L ', p1.x, ' ', p1.y, ' ');\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t        fill: null,\n\t        stroke: this.color,\n\t        strokeWidth: this.width,\n\t        strokeLineCap: this.strokeLineCap,\n\t        strokeLineJoin: this.strokeLineJoin,\n\t        strokeDashArray: this.strokeDashArray,\n\t        originX: 'center',\n\t        originY: 'center'\n\t      });\n\t\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData),\n\t        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\t\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction(),\n\t      offsetX: -topLeft.x,\n\t      offsetY: -topLeft.y\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:added\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * Indicates which key enable unproportional scaling\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    uniScaleKey:           'shiftKey',\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates which key enable centered Transfrom\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    centeredKey:           'altKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternate action on corner\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    altActionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Indicates which key enable multiple click selection\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternative selection\n\t     * in case of target overlapping with active object\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.5\n\t     * @type null|String\n\t     * @default\n\t     */\n\t    altSelectionKey:           null,\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected.\n\t     * When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * Indicates the angle that an object will lock to while rotating.\n\t     * @type Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapAngle: 0,\n\t\n\t    /**\n\t     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n\t     * When `null`, the snapThreshold will default to the snapAngle.\n\t     * @type null|Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapThreshold: null,\n\t\n\t    /**\n\t     * Indicates if the right click on canvas can output the context menu or not\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    stopContextMenu: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire right click events\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    fireRightClick: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Divides objects in two groups, one to render immediately\n\t     * and one to render as activeGroup.\n\t     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n\t     */\n\t    _chooseObjectsToRender: function() {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          object, objsToRender = [], activeGroupObjects = [];\n\t\n\t      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n\t        for (var i = 0, length = this._objects.length; i < length; i++) {\n\t          object = this._objects[i];\n\t          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n\t            objsToRender.push(object);\n\t          }\n\t          else {\n\t            activeGroupObjects.push(object);\n\t          }\n\t        }\n\t        if (activeGroup) {\n\t          activeGroup._set('_objects', activeGroupObjects);\n\t          objsToRender.push(activeGroup);\n\t        }\n\t        activeObject && objsToRender.push(activeObject);\n\t      }\n\t      else {\n\t        objsToRender = this._objects;\n\t      }\n\t      return objsToRender;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n\t        this.clearContext(this.contextTop);\n\t        this.contextTopDirty = false;\n\t      }\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection(ctx);\n\t      }\n\t\n\t      this.fire('after:render');\n\t      this.contextTopDirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     */\n\t    _resetCurrentTransform: function() {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        skewX: t.original.skewX,\n\t        skewY: t.original.skewY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @param {Object} [point] x,y object of point coordinates we want to check.\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target, point) {\n\t      var ignoreZoom = true,\n\t          pointer = point || this.getPointer(e, ignoreZoom),\n\t          xy;\n\t\n\t      if (target.group && target.group === this.getActiveGroup()) {\n\t        xy = this._normalizePointer(target.group, pointer);\n\t      }\n\t      else {\n\t        xy = { x: pointer.x, y: pointer.y };\n\t      }\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var m = object.calcTransformMatrix(),\n\t          invertedM = fabric.util.invertTransform(m),\n\t          vptPointer = this.restorePointerVpt(pointer);\n\t      return fabric.util.transformPoint(vptPointer, invertedM);\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners,\n\t          ctx = this.contextCache,\n\t          originalColor = target.selectionBackgroundColor;\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t      target.selectionBackgroundColor = '';\n\t\n\t      ctx.save();\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      target.render(ctx);\n\t      ctx.restore();\n\t\n\t      target.active && target._renderControls(ctx);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t      target.selectionBackgroundColor = originalColor;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        ctx, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(ctx);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e[this.selectionKey])\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !t.altKey : t.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner, e) {\n\t      if (!corner) {\n\t        return 'drag';\n\t      }\n\t\n\t      switch (corner) {\n\t        case 'mtr':\n\t          return 'rotate';\n\t        case 'ml':\n\t        case 'mr':\n\t          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\t        case 'mt':\n\t        case 'mb':\n\t          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\t        default:\n\t          return 'scale';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner, e),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        corner: corner,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        lastX: pointer.x,\n\t        lastY: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1,\n\t        shiftKey: e.shiftKey,\n\t        altKey: e[this.centeredKey]\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform();\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the translation occurred\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var transform = this._currentTransform,\n\t          target = transform.target,\n\t          newLeft = x - transform.offsetX,\n\t          newTop = y - transform.offsetY,\n\t          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n\t          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\t\n\t      moveX && target.set('left', newLeft);\n\t      moveY && target.set('top', newTop);\n\t      return moveX || moveY;\n\t    },\n\t\n\t    /**\n\t     * Check if we are increasing a positive skew or lower it,\n\t     * checking mouse direction and pressed corner.\n\t     * @private\n\t     */\n\t    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n\t      var property = 'originX', origins = { 0: 'center' },\n\t          skew = t.target.skewX, originA = 'left', originB = 'right',\n\t          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n\t          flipSign = 1;\n\t\n\t      mouseMove = mouseMove > 0 ? 1 : -1;\n\t      if (by === 'y') {\n\t        skew = t.target.skewY;\n\t        originA = 'top';\n\t        originB = 'bottom';\n\t        property = 'originY';\n\t      }\n\t      origins[-1] = originA;\n\t      origins[1] = originB;\n\t\n\t      t.target.flipX && (flipSign *= -1);\n\t      t.target.flipY && (flipSign *= -1);\n\t\n\t      if (skew === 0) {\n\t        t.skewSign = -corner * mouseMove * flipSign;\n\t        t[property] = origins[-mouseMove];\n\t      }\n\t      else {\n\t        skew = skew > 0 ? 1 : -1;\n\t        t.skewSign = skew;\n\t        t[property] = origins[skew * corner * flipSign];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Skew object by mouse events\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y'\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _skewObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target, skewed = false,\n\t          lockSkewingX = target.get('lockSkewingX'),\n\t          lockSkewingY = target.get('lockSkewingY');\n\t\n\t      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var center = target.getCenterPoint(),\n\t          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n\t          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n\t          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\t\n\t      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\t      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n\t      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n\t      // Actually skew the object\n\t      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n\t      t.lastX = x;\n\t      t.lastY = y;\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Set object skew\n\t     * @private\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _setObjectSkew: function(localMouse, transform, by, _dim) {\n\t      var target = transform.target, newValue, skewed = false,\n\t          skewSign = transform.skewSign, newDim, dimNoSkew,\n\t          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\t\n\t      if (by === 'x') {\n\t        otherBy = 'y';\n\t        _otherBy = 'Y';\n\t        _by = 'X';\n\t        skewX = 0;\n\t        skewY = target.skewY;\n\t      }\n\t      else {\n\t        otherBy = 'x';\n\t        _otherBy = 'X';\n\t        _by = 'Y';\n\t        skewX = target.skewX;\n\t        skewY = 0;\n\t      }\n\t\n\t      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n\t      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\t      if (newDimMouse <= 2) {\n\t        newValue = 0;\n\t      }\n\t      else {\n\t        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n\t                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n\t        newValue = fabric.util.radiansToDegrees(newValue);\n\t      }\n\t      skewed = target['skew' + _by] !== newValue;\n\t      target.set('skew' + _by, newValue);\n\t      if (target['skew' + _otherBy] !== 0) {\n\t        newDim = target._getTransformedDimensions();\n\t        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n\t        target.set('scale' + _otherBy, newValue);\n\t      }\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n\t          dim = target._getTransformedDimensions(), scaled = false;\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n\t          changeX, changeY, scaleX, scaleY;\n\t\n\t      scaleX = localMouse.x * target.scaleX / _dim.x;\n\t      scaleY = localMouse.y * target.scaleY / _dim.y;\n\t      changeX = target.scaleX !== scaleX;\n\t      changeY = target.scaleY !== scaleY;\n\t\n\t      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      transform.newScaleX = scaleX;\n\t      transform.newScaleY = scaleY;\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n\t                     _dim.x * transform.original.scaleX / target.scaleX,\n\t          scaled;\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n\t      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n\t      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > target.padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += target.padding;\n\t        }\n\t        else {\n\t          localMouse.x -= target.padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > target.padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += target.padding;\n\t        }\n\t        else {\n\t          localMouse.y -= target.padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the rotation occurred\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return false;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n\t          hasRoated = true;\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t\n\t      angle %= 360\n\t\n\t      if (t.target.snapAngle > 0) {\n\t        var snapAngle  = t.target.snapAngle,\n\t            snapThreshold  = t.target.snapThreshold || snapAngle,\n\t            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n\t            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\t\n\t        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n\t          angle = leftAngleLocked;\n\t        }\n\t        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n\t          angle = rightAngleLocked;\n\t        }\n\t\n\t        if (t.target.angle === angle) {\n\t          hasRoated = false\n\t        }\n\t      }\n\t\n\t      t.target.angle = angle;\n\t      return hasRoated;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @param {fabric.Object} target to reset transform\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n\t     */\n\t    _drawSelection: function (ctx) {\n\t      var groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      if (this.selectionColor) {\n\t        ctx.fillStyle = this.selectionColor;\n\t\n\t        ctx.fillRect(\n\t          groupSelector.ex - ((left > 0) ? 0 : -left),\n\t          groupSelector.ey - ((top > 0) ? 0 : -top),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t\n\t      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n\t        return;\n\t      }\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      var ignoreZoom = true,\n\t          pointer = this.getPointer(e, ignoreZoom),\n\t          activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          activeTarget;\n\t\n\t      // first check current group (if one exists)\n\t      // active group does not check sub targets like normal groups.\n\t      // if active group just exits.\n\t      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n\t        this._fireOverOutEvents(activeGroup, e);\n\t        return activeGroup;\n\t      }\n\t      // if we hit the corner of an activeObject, let's return that.\n\t      if (activeObject && activeObject._findTargetCorner(pointer)) {\n\t        this._fireOverOutEvents(activeObject, e);\n\t        return activeObject;\n\t      }\n\t      if (activeObject && this._checkTarget(pointer, activeObject)) {\n\t        if (!this.preserveObjectStacking) {\n\t          this._fireOverOutEvents(activeObject, e);\n\t          return activeObject;\n\t        }\n\t        else {\n\t          activeTarget = activeObject;\n\t        }\n\t      }\n\t\n\t      this.targets = [];\n\t\n\t      var target = this._searchPossibleTargets(this._objects, pointer);\n\t      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n\t        target = activeTarget;\n\t      }\n\t      this._fireOverOutEvents(target, e);\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      if (target) {\n\t        if (this._hoveredTarget !== target) {\n\t          if (this._hoveredTarget) {\n\t            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t            this._hoveredTarget.fire('mouseout');\n\t          }\n\t          this.fire('mouse:over', { target: target, e: e });\n\t          target.fire('mouseover');\n\t          this._hoveredTarget = target;\n\t        }\n\t      }\n\t      else if (this._hoveredTarget) {\n\t        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t        this._hoveredTarget.fire('mouseout');\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(pointer, obj) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(null, obj, pointer)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(objects, pointer) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target, i = objects.length, normalizedPointer, subTarget;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if (this._checkTarget(pointer, objects[i])) {\n\t          target = objects[i];\n\t          if (target.type === 'group' && target.subTargetCheck) {\n\t            normalizedPointer = this._normalizePointer(target, pointer);\n\t            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n\t            subTarget && this.targets.push(subTarget);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates without the effect of the viewport\n\t     * @param {Object} pointer with \"x\" and \"y\" number values\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    restorePointerVpt: function(pointer) {\n\t      return fabric.util.transformPoint(\n\t        pointer,\n\t        fabric.util.invertTransform(this.viewportTransform)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * @param {Event} e\n\t     * @param {Boolean} ignoreZoom\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = this.restorePointerVpt(pointer);\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      this.upperCanvasEl = this._createCanvasElement();\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      this._setActiveObject(object);\n\t      this.renderAll();\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { target: obj });\n\t        obj.fire('deselected');\n\t      }\n\t      this.callSuper('_onObjectRemoved', obj);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object and fire events\n\t     * @param {event} e\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      var activeObject = this._activeObject;\n\t      this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t      this._discardActiveObject();\n\t      this.fire('selection:cleared', { e: e });\n\t      activeObject && activeObject.fire('deselected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a specified one\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @param {Event} e Event object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group and fire events\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      var g = this.getActiveGroup();\n\t      this.fire('before:selection:cleared', { e: e, target: g });\n\t      this._discardActiveGroup();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length,\n\t          obj;\n\t      for ( ; i < len; i++) {\n\t        obj = allObjects[i];\n\t        obj && obj.set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t      if (activeObject || activeGroup) {\n\t        this.fire('before:selection:cleared', { target: activeObject || activeGroup, e: e });\n\t      }\n\t      this.deactivateAll();\n\t      if (activeObject || activeGroup) {\n\t        this.fire('selection:cleared', { e: e, target: activeObject });\n\t        activeObject && activeObject.fire('deselected');\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.callSuper('dispose');\n\t      var wrapper = this.wrapperEl;\n\t      this.removeListeners();\n\t      wrapper.removeChild(this.upperCanvasEl);\n\t      wrapper.removeChild(this.lowerCanvasEl);\n\t      delete this.upperCanvasEl;\n\t      if (wrapper.parentNode) {\n\t        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n\t      }\n\t      delete this.wrapperEl;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this.discardActiveGroup();\n\t      this.discardActiveObject();\n\t      this.clearContext(this.contextTop);\n\t      return this.callSuper('clear');\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup) {\n\t        activeGroup._renderControls(ctx);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {};\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      var originalProperties;\n\t      //If the object is in a selection group, simulate what would happen to that\n\t      //object when the group is deselected\n\t      originalProperties = this._realizeGroupTransformOnObject(instance);\n\t      this.callSuper('_setSVGObject', markup, instance, reviver);\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t    },\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @ignore\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t        mt: 0, // n\n\t        tr: 1, // ne\n\t        mr: 2, // e\n\t        br: 3, // se\n\t        mb: 4, // s\n\t        bl: 5, // sw\n\t        ml: 6, // w\n\t        tl: 7 // nw\n\t      },\n\t      addListener = fabric.util.addListener,\n\t      removeListener = fabric.util.removeListener;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t      this._onMouseOut = this._onMouseOut.bind(this);\n\t      this._onMouseEnter = this._onMouseEnter.bind(this);\n\t      this._onContextMenu = this._onContextMenu.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on wheel event\n\t     */\n\t    _onMouseWheel: function(e) {\n\t      this.__onMouseWheel(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseOut: function(e) {\n\t      var target = this._hoveredTarget;\n\t      this.fire('mouse:out', { target: target, e: e });\n\t      this._hoveredTarget = null;\n\t      target && target.fire('mouseout', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseenter\n\t     */\n\t    _onMouseEnter: function(e) {\n\t      if (!this.findTarget(e)) {\n\t        this.fire('mouse:over', { target: null, e: e });\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onContextMenu: function (e) {\n\t      if (this.stopContextMenu) {\n\t        e.stopPropagation()\n\t        e.preventDefault();\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp);\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t      var target, searchTarget = true, transform = this._currentTransform,\n\t          groupSelector = this._groupSelector,\n\t          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      if (transform) {\n\t        this._finalizeCurrentTransform();\n\t        searchTarget = !transform.actionPerformed;\n\t      }\n\t\n\t      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      if (target || !isClick) {\n\t        this._maybeGroupObjects(e);\n\t      }\n\t      else {\n\t        // those are done by default on mouse up\n\t        // by _maybeGroupObjects, we are skipping it in case of no target find\n\t        this._groupSelector = null;\n\t        this._currentTransform = null;\n\t      }\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t\n\t      this._handleCursorAndEvent(e, target, 'up');\n\t      target && (target.__corner = 0);\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * set cursor for mouse up and handle mouseUp event\n\t     * @param {Event} e event from mouse\n\t     * @param {fabric.Object} target receiving event\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     */\n\t    _handleCursorAndEvent: function(e, target, eventType) {\n\t      this._setCursorFromEvent(e, target);\n\t      this._handleEvent(e, eventType, target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Handle event firing for target and subtargets\n\t     * @param {Event} e event from mouse\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     * @param {fabric.Object} targetObj receiving event\n\t     */\n\t    _handleEvent: function(e, eventType, targetObj) {\n\t      var target = typeof targetObj === undefined ? this.findTarget(e) : targetObj,\n\t          targets = this.targets || [],\n\t          options = { e: e, target: target, subTargets: targets };\n\t\n\t      this.fire('mouse:' + eventType, options);\n\t      target && target.fire('mouse' + eventType, options);\n\t      for (var i = 0; i < targets.length; i++) {\n\t        targets[i].fire('mouse' + eventType, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _finalizeCurrentTransform: function() {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t      this._restoreOriginXY(target);\n\t\n\t      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n\t        this.fire('object:modified', { target: target });\n\t        target.fire('modified');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var pointer = this.getPointer(e);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this._handleEvent(e, 'down');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var pointer = this.getPointer(e);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this._handleEvent(e, 'move');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this._handleEvent(e, 'up');\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clic ked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      var target = this.findTarget(e),\n\t          pointer = this.getPointer(e, true);\n\t\n\t      // if right click just fire events\n\t      var isRightClick  = 'which' in e ? e.which === 3 : e.button === 2;\n\t      if (isRightClick) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'down', target ? target : null);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this._clearSelection(e, target, pointer);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (target) {\n\t        if (target.selectable && (target.__corner || !shouldGroup)) {\n\t          this._beforeTransform(e, target);\n\t          this._setupCurrentTransform(e, target);\n\t        }\n\t\n\t        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n\t          this.deactivateAll();\n\t          target.selectable && this.setActiveObject(target, e);\n\t        }\n\t      }\n\t      this._handleEvent(e, 'down', target ? target : null);\n\t      // we must renderAll so that we update the visuals\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearSelection: function(e, target, pointer) {\n\t      this.deactivateAllWithDispatch(e);\n\t\n\t      if (target && target.selectable) {\n\t        this.setActiveObject(target, e);\n\t      }\n\t      else if (this.selection) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t        target = this.findTarget(e);\n\t        this._setCursorFromEvent(e, target);\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t      this._handleEvent(e, 'move', target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Method that defines actions when an Event Mouse Wheel\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseWheel: function(e) {\n\t      this.fire('mouse:wheel', {\n\t        e: e\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false;\n\t      transform.target.isMoving = true;\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      transform.actionPerformed && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action,\n\t          actionPerformed = false;\n\t\n\t      if (action === 'rotate') {\n\t        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'skewX') {\n\t        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n\t      }\n\t      else if (action === 'skewY') {\n\t        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n\t      }\n\t      else {\n\t        actionPerformed = this._translateObject(x, y);\n\t        if (actionPerformed) {\n\t          this._fire('moving', target, e);\n\t          this.setCursor(target.moveCursor || this.moveCursor);\n\t        }\n\t      }\n\t      transform.actionPerformed = actionPerformed;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform();\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {Object} transform current tranform\n\t     * @param {Number} x mouse position x from origin\n\t     * @param {Number} y mouse poistion y from origin\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        return this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform();\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        return this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t\n\t      var hoverCursor = target.hoverCursor || this.hoverCursor;\n\t      if (!target.selectable) {\n\t        //let's skip _findTargetCorner if object is not selectable\n\t        this.setCursor(hoverCursor);\n\t      }\n\t      else {\n\t        var activeGroup = this.getActiveGroup(),\n\t            // only show proper corner when group selection is not active\n\t            corner = target._findTargetCorner\n\t                      && (!activeGroup || !activeGroup.contains(target))\n\t                      && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t        if (!corner) {\n\t          this.setCursor(hoverCursor);\n\t        }\n\t        else {\n\t          this._setCornerCursor(corner, target, e);\n\t        }\n\t      }\n\t      //actually unclear why it should return something\n\t      //is never evaluated\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target, e) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target, e) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n\t        //if we are holding shift and we are on a mx corner...\n\t        n += 2;\n\t      }\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e[this.selectionKey] && target && target.selectable &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (target === activeGroup) {\n\t        // if it's a group, find target again, using activeGroup objects\n\t        target = this.findTarget(e, true);\n\t        // if even object is not found, bail out\n\t        if (!target) {\n\t          return;\n\t        }\n\t      }\n\t      if (activeGroup) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0));\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [this._activeObject, target]\n\t            : [target, this._activeObject];\n\t      this._activeObject.isEditing && this._activeObject.exitEditing();\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\t\n\t  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'jpeg',\n\t     *   quality: 0.8\n\t     * });\n\t     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   left: 100,\n\t     *   top: 100,\n\t     *   width: 200,\n\t     *   height: 200\n\t     * });\n\t     * @example <caption>Generate double scaled png dataURL</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   multiplier: 2\n\t     * });\n\t     */\n\t    toDataURL: function (options) {\n\t      options || (options = { });\n\t\n\t      var format = options.format || 'png',\n\t          quality = options.quality || 1,\n\t          multiplier = options.multiplier || 1,\n\t          cropping = {\n\t            left: options.left || 0,\n\t            top: options.top || 0,\n\t            width: options.width || 0,\n\t            height: options.height || 0,\n\t          };\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t      var origWidth = this.getWidth(),\n\t          origHeight = this.getHeight(),\n\t          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n\t          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n\t          zoom = this.getZoom(),\n\t          newZoom = zoom * multiplier,\n\t          vp = this.viewportTransform,\n\t          translateX = (vp[4] - cropping.left) * multiplier,\n\t          translateY = (vp[5] - cropping.top) * multiplier,\n\t          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n\t          originalInteractive = this.interactive;\n\t\n\t      this.viewportTransform = newVp;\n\t      // setting interactive to false avoid exporting controls\n\t      this.interactive && (this.interactive = false);\n\t      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n\t        // this.setDimensions is going to renderAll also;\n\t        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n\t      }\n\t      else {\n\t        this.renderAll();\n\t      }\n\t      var data = this.__toDataURL(format, quality, cropping);\n\t      originalInteractive && (this.interactive = originalInteractive);\n\t      this.viewportTransform = vp;\n\t      //setDimensions with no option object is taking care of:\n\t      //this.width, this.height, this.renderAll()\n\t      this.setDimensions({ width: origWidth, height: origHeight });\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURL: function(format, quality) {\n\t\n\t      var canvasEl = this.contextContainer.canvas;\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (format === 'jpg') {\n\t        format = 'jpeg';\n\t      }\n\t\n\t      var data = supportQuality\n\t                ? canvasEl.toDataURL('image/' + format, quality)\n\t                : canvasEl.toDataURL('image/' + format);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t     * @deprecated since 1.0.13\n\t     * @param {String} format (png|jpeg)\n\t     * @param {Number} multiplier\n\t     * @param {Number} quality (0..1)\n\t     * @return {String}\n\t     */\n\t    toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t      return this.toDataURL({\n\t        format: format,\n\t        multiplier: multiplier,\n\t        quality: quality\n\t      });\n\t    },\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : fabric.util.object.clone(json);\n\t\n\t    this.clear();\n\t\n\t    var _this = this;\n\t    this._enlivenObjects(serialized.objects, function () {\n\t      _this._setBgOverlay(serialized, function () {\n\t        // remove parts i cannot set as options\n\t        delete serialized.objects;\n\t        delete serialized.backgroundImage;\n\t        delete serialized.overlayImage;\n\t        delete serialized.background;\n\t        delete serialized.overlay;\n\t        // this._initOptions does too many things to just\n\t        // call it. Normally loading an Object from JSON\n\t        // create the Object instance. Here the Canvas is\n\t        // already an instance and we are just loading things over it\n\t        for (var prop in serialized) {\n\t          _this[prop] = serialized[prop];\n\t        }\n\t        callback && callback();\n\t      });\n\t    }, reviver);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var _this = this,\n\t        loaded = {\n\t          backgroundColor: false,\n\t          overlayColor: false,\n\t          backgroundImage: false,\n\t          overlayImage: false\n\t        };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        _this.renderAll();\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t\n\t    cbIfLoaded();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.Image.fromObject(value, function(img) {\n\t        _this[property] = img;\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    var _this = this;\n\t\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      enlivenedObjects.forEach(function(obj, index) {\n\t        // we splice the array just in case some custom classes restored from JSON\n\t        // will add more object to canvas at canvas init.\n\t        _this.insertAt(obj, index);\n\t      });\n\t\n\t      _this.renderOnAddRemove = renderOnAddRemove;\n\t      callback && callback();\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t      objectCaching = !fabric.isLikelyNode;\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires deselected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   * @fires skewing\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   * @fires mouseover\n\t   * @fires mouseout\n\t   */\n\t  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Angle of skew on x axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewX:                    0,\n\t\n\t    /**\n\t     * Angle of skew on y axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewY:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               13,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Default cursor value used when moving this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:               null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    borderDashArray:          null,\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active and transparentCorners false)\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerStrokeColor:        null,\n\t\n\t    /**\n\t     * Specify style of control, 'rect' or 'circle'\n\t     * @since 1.6.2\n\t     * @type String\n\t     */\n\t    cornerStyle:          'rect',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's control (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    cornerDashArray:          null,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object. Only works with text objects at the moment.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * Selection Background color of an object. colored layer behind the object when it is active.\n\t     * does not mix good with globalCompositeOperation methods.\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBackgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object horizontal skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingY:             false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingFlip:          false,\n\t\n\t    /**\n\t     * When `true`, object is not exported in SVG or OBJECT/JSON\n\t     * since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    excludeFromExport:        false,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    objectCaching:            objectCaching,\n\t\n\t    /**\n\t     * When `true`, object properties are checked for cache invalidation. In some particular\n\t     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n\t     * or if your application does not allow you to modify properties for groups child you want\n\t     * to disable it for groups.\n\t     * default to false\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    statefullCache:            false,\n\t\n\t    /**\n\t     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n\t     * too much and will be redrawn with correct details at the end of scaling.\n\t     * this setting is performance and application dependant.\n\t     * default to false\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    noScaleCache:              true,\n\t\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'skewX skewY'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties: (\n\t      'fill stroke strokeWidth strokeDashArray width height stroke strokeWidth strokeDashArray' +\n\t      ' strokeLineCap strokeLineJoin strokeMiterLimit fillRule backgroundColor'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t      if (this.objectCaching) {\n\t        this._createCacheCanvas();\n\t        this.setupState({ propertySet: 'cacheProperties' });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Create a the canvas used to keep the cached copy of the object\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function() {\n\t      this._cacheCanvas = fabric.document.createElement('canvas');\n\t      this._cacheContext = this._cacheCanvas.getContext('2d');\n\t      this._updateCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * Update width and height of the canvas for cache\n\t     * returns true or false if canvas needed resize.\n\t     * @private\n\t     * @return {Boolean} true if the canvas has been resized\n\t     */\n\t    _updateCacheCanvas: function() {\n\t      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n\t        var action = this.canvas._currentTransform.action;\n\t        if (action.slice(0, 5) === 'scale') {\n\t          return false;\n\t        }\n\t      }\n\t      var zoom = this.getViewportTransform()[0],\n\t          objectScale = this.getObjectScaling(),\n\t          dim = this._getNonTransformedDimensions(),\n\t          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n\t          zoomX = objectScale.scaleX * zoom * retina,\n\t          zoomY = objectScale.scaleY * zoom * retina,\n\t          width = dim.x * zoomX,\n\t          height = dim.y * zoomY;\n\t      if (width !== this.cacheWidth || height !== this.cacheHeight) {\n\t        this._cacheCanvas.width = width;\n\t        this._cacheCanvas.height = height;\n\t        this._cacheContext.translate(width / 2, height / 2);\n\t        this._cacheContext.scale(zoomX, zoomY);\n\t        this.cacheWidth = width;\n\t        this.cacheHeight = height;\n\t        this.zoomX = zoomX;\n\t        this.zoomY = zoomY;\n\t        return true\n\t      }\n\t      return false\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initGradient: function(options) {\n\t      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n\t        this.set('fill', new fabric.Gradient(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n\t        this.set('stroke', new fabric.Gradient(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initPattern: function(options) {\n\t      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n\t        this.set('fill', new fabric.Pattern(options.fill));\n\t      }\n\t      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n\t        this.set('stroke', new fabric.Pattern(options.stroke));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initClipping: function(options) {\n\t      if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t        return;\n\t      }\n\t\n\t      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t      if (typeof functionBody !== 'undefined') {\n\t        this.clipTo = new Function('ctx', functionBody);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this.set(prop, options[prop]);\n\t      }\n\t      this._initGradient(options);\n\t      this._initPattern(options);\n\t      this._initClipping(options);\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n\t      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,\n\t            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n\t            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n\t          };\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Basic getter\n\t     * @param {String} property Property name\n\t     * @return {*} value of a property\n\t     */\n\t    get: function(property) {\n\t      return this[property];\n\t    },\n\t\n\t    /**\n\t     * Return the object scale factor counting also the group scaling\n\t     * @return {Object} object with scaleX and scaleY properties\n\t     */\n\t    getObjectScaling: function() {\n\t      var scaleX = this.scaleX, scaleY = this.scaleY;\n\t      if (this.group) {\n\t        var scaling = this.group.getObjectScaling();\n\t        scaleX *= scaling.scaleX;\n\t        scaleY *= scaling.scaleY;\n\t      }\n\t      return { scaleX: scaleX, scaleY: scaleY };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObject: function(obj) {\n\t      for (var prop in obj) {\n\t        this._set(prop, obj[prop]);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    set: function(key, value) {\n\t      if (typeof key === 'object') {\n\t        this._setObject(key);\n\t      }\n\t      else {\n\t        if (typeof value === 'function' && key !== 'clipTo') {\n\t          this._set(key, value(this.get(key)));\n\t        }\n\t        else {\n\t          this._set(key, value);\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      if (this.cacheProperties.indexOf(key) > -1) {\n\t        this.dirty = true;\n\t      }\n\t\n\t      if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Toggles specified property from `true` to `false` or from `false` to `true`\n\t     * @param {String} property Property to toggle\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    toggle: function(property) {\n\t      var value = this.get(property);\n\t      if (typeof value === 'boolean') {\n\t        this.set(property, !value);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value // TODO\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if ((this.width === 0 && this.height === 0) || !this.visible) {\n\t        return;\n\t      }\n\t      ctx.save();\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      if (this.objectCaching && !this.group) {\n\t        if (this.isCacheDirty(noTransform)) {\n\t          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n\t          this.drawObject(this._cacheContext, noTransform);\n\t          this.dirty = false;\n\t        }\n\t        this.drawCacheOnCanvas(ctx);\n\t      }\n\t      else {\n\t        this.drawObject(ctx, noTransform);\n\t        if (noTransform && this.objectCaching && this.statefullCache) {\n\t          this.saveState({ propertySet: 'cacheProperties' });\n\t        }\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx, noTransform) {\n\t      this._renderBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._render(ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Paint the cached copy of the object on the target context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    drawCacheOnCanvas: function(ctx) {\n\t      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n\t      ctx.drawImage(this._cacheCanvas, -this.cacheWidth / 2, -this.cacheHeight / 2);\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n\t     * on parent canvas.\n\t     */\n\t    isCacheDirty: function(skipCanvas) {\n\t      if (!skipCanvas && this._updateCacheCanvas()) {\n\t        // in this case the context is already cleared.\n\t        return true;\n\t      }\n\t      else {\n\t        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n\t          if (!skipCanvas) {\n\t            var dim = this._getNonTransformedDimensions();\n\t            this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Draws a background for the object big as its untrasformed dimensions\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t      var dim = this._getNonTransformedDimensions();\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        -dim.x / 2,\n\t        -dim.y / 2,\n\t        dim.x,\n\t        dim.y\n\t      );\n\t      // if there is background color no other shadows\n\t      // should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Sets line dash\n\t     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n\t     * @param {Array} dashArray array representing dashes\n\t     * @param {Function} alternative function to call if browaser does not support lineDash\n\t     */\n\t    _setLineDash: function(ctx, dashArray, alternative) {\n\t      if (!dashArray) {\n\t        return;\n\t      }\n\t      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t      if (1 & dashArray.length) {\n\t        dashArray.push.apply(dashArray, dashArray);\n\t      }\n\t      if (supportsLineDash) {\n\t        ctx.setLineDash(dashArray);\n\t      }\n\t      else {\n\t        alternative && alternative(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      if (!this.active || noTransform\n\t          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n\t        return;\n\t      }\n\t\n\t      var vpt = this.getViewportTransform(),\n\t          matrix = this.calcTransformMatrix(),\n\t          options;\n\t      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n\t      options = fabric.util.qrDecompose(matrix);\n\t\n\t      ctx.save();\n\t      ctx.translate(options.translateX, options.translateY);\n\t      ctx.lineWidth = 1 * this.borderScaleFactor;\n\t      if (!this.group) {\n\t        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      }\n\t      if (this.group && this.group === this.canvas.getActiveGroup()) {\n\t        ctx.rotate(degreesToRadians(options.angle));\n\t        this.drawBordersInGroup(ctx, options);\n\t      }\n\t      else {\n\t        ctx.rotate(degreesToRadians(this.angle));\n\t        this.drawBorders(ctx);\n\t      }\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n\t          scaling = this.getObjectScaling();\n\t      if (this.canvas && this.canvas._isRetinaScaling()) {\n\t        multX *= fabric.devicePixelRatio;\n\t        multY *= fabric.devicePixelRatio;\n\t      }\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      if (this.fill.gradientTransform) {\n\t        var g = this.fill.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.fill.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.fill.offsetX || 0,\n\t          -this.height / 2 + this.fill.offsetY || 0);\n\t      }\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t\n\t      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\t      if (this.stroke.gradientTransform) {\n\t        var g = this.stroke.gradientTransform;\n\t        ctx.transform.apply(ctx, g);\n\t      }\n\t      if (this.stroke.toLive) {\n\t        ctx.translate(\n\t          -this.width / 2 + this.stroke.offsetX || 0,\n\t          -this.height / 2 + this.stroke.offsetY || 0);\n\t      }\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance, some objects are async, so using callback method will work for every object.\n\t     * Using the direct return does not work for images and groups.\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @param {Object} [options] for clone as image, passed to toDataURL\n\t     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback, options) {\n\t      var dataUrl = this.toDataURL(options);\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      options.gradientTransform && (gradient.gradientTransform = options.gradientTransform);\n\t\n\t      for (var position in options.colorStops) {\n\t        var color = new fabric.Color(options.colorStops[position]);\n\t        gradient.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas && this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterH: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas && this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterV: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas && this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenter: function () {\n\t      this.canvas && this.canvas.viewportCenterObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      this.canvas && this.canvas.remove(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX, offsetY, dim;\n\t\n\t      if (typeof fromOriginX === 'string') {\n\t        fromOriginX = originXOffset[fromOriginX];\n\t      }\n\t      else {\n\t        fromOriginX -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginX === 'string') {\n\t        toOriginX = originXOffset[toOriginX];\n\t      }\n\t      else {\n\t        toOriginX -= 0.5;\n\t      }\n\t\n\t      offsetX = toOriginX - fromOriginX;\n\t\n\t      if (typeof fromOriginY === 'string') {\n\t        fromOriginY = originYOffset[fromOriginY];\n\t      }\n\t      else {\n\t        fromOriginY -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginY === 'string') {\n\t        toOriginY = originYOffset[toOriginY];\n\t      }\n\t      else {\n\t        toOriginY -= 0.5;\n\t      }\n\t\n\t      offsetY = toOriginY - fromOriginY;\n\t\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull,\n\t          offsetFrom, offsetTo;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      if (typeof this.originX === 'string') {\n\t        offsetFrom = originXOffset[this.originX];\n\t      }\n\t      else {\n\t        offsetFrom = this.originX - 0.5;\n\t      }\n\t      if (typeof to === 'string') {\n\t        offsetTo = originXOffset[to];\n\t      }\n\t      else {\n\t        offsetTo = to - 0.5;\n\t      }\n\t      this.left += xFull * (offsetTo - offsetFrom);\n\t      this.top += yFull * (offsetTo - offsetFrom);\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function getCoords(oCoords) {\n\t    return [\n\t      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n\t      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n\t      new fabric.Point(oCoords.br.x, oCoords.br.y),\n\t      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n\t    ];\n\t  }\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Object containing coordinates of object's controls\n\t     * @type Object\n\t     * @default\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR) {\n\t      var oCoords = getCoords(this.oCoords),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            oCoords,\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other) {\n\t      var intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            getCoords(this.oCoords),\n\t            getCoords(other.oCoords)\n\t          );\n\t\n\t      return intersection.status === 'Intersection'\n\t        || other.isContainedWithinObject(this)\n\t        || this.isContainedWithinObject(other);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other) {\n\t      var points = getCoords(this.oCoords),\n\t          i = 0;\n\t      for (; i < 4; i++) {\n\t        if (!other.containsPoint(points[i])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR) {\n\t      var boundingRect = this.getBoundingRect();\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point) {\n\t      if (!this.oCoords) {\n\t        this.setCoords();\n\t      }\n\t      var lines = this._getImageLines(this.oCoords),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} oCoords Coordinates of the object being evaluated\n\t     */\n\t     // remove yi, not used but left code here just in case.\n\t    _findCrossPoints: function(point, oCoords) {\n\t      var b1, b2, a1, a2, xi, // yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in oCoords) {\n\t        iLine = oCoords[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          // yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = -(a1 - a2) / (b1 - b2);\n\t          // yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * the box is intented as aligned to axis of canvas.\n\t     * @param {Boolean} ignoreVpt bounding box will not be affected by viewportTransform\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function(ignoreVpt) {\n\t      var coords = this.calcCoords(ignoreVpt);\n\t      return fabric.util.makeBoundingBoxFromPoints([\n\t        coords.tl,\n\t        coords.tr,\n\t        coords.br,\n\t        coords.bl\n\t      ]);\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object bounding box counting transformations\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this._getTransformedDimensions().x;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object bounding box counting transformations\n\t     * to be renamed in 2.0\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this._getTransformedDimensions().y;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      return this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Calculate and returns the .coords of an object.\n\t     * @return {Object} Object with tl, tr, br, bl ....\n\t     * @chainable\n\t     */\n\t    calcCoords: function(ignoreVpt) {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = ignoreVpt ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n\t          currentWidth = dim.x, currentHeight = dim.y,\n\t          sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t          center = this.getCenterPoint(),\n\t          // offset added for rotate and scale actions\n\t          coords = ignoreVpt ? center : fabric.util.transformPoint(center, vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n\t          ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n\t          mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n\t          mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n\t          mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n\t          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      return {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t        // middle\n\t        ml: ml, mt: mt, mr: mr, mb: mb,\n\t        // rotating point\n\t        mtr: mtr\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function(ignoreZoom) {\n\t      this.oCoords = this.calcCoords(ignoreZoom);\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\n\t     * calculate rotation matrix of an object\n\t     * @return {Array} rotation matrix for the object\n\t     */\n\t    _calcRotateMatrix: function() {\n\t      if (this.angle) {\n\t        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n\t        return [cos, sin, -sin, cos, 0, 0];\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /*\n\t     * calculate trasform Matrix that represent current transformation from\n\t     * object properties.\n\t     * @return {Array} matrix Transform Matrix for the object\n\t     */\n\t    calcTransformMatrix: function() {\n\t      var center = this.getCenterPoint(),\n\t          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n\t          rotateMatrix = this._calcRotateMatrix(),\n\t          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n\t          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n\t      matrix = multiplyMatrices(matrix, translateMatrix);\n\t      matrix = multiplyMatrices(matrix, rotateMatrix);\n\t      matrix = multiplyMatrices(matrix, dimensionMatrix);\n\t      return matrix;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n\t      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n\t          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n\t          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n\t          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n\t          scaleMatrix = [scaleX, 0, 0, scaleY],\n\t          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n\t      return multiplyMatrices(m, skewMatrixY, true);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t\n\t  function getSvgColorString(prop, value) {\n\t    if (!value) {\n\t      return prop + ': none; ';\n\t    }\n\t    else if (value.toLive) {\n\t      return prop + ': url(#SVGID_' + value.id + '); ';\n\t    }\n\t    else {\n\t      var color = new fabric.Color(value),\n\t          str = prop + ': ' + color.toRgb() + '; ',\n\t          opacity = color.getAlpha();\n\t      if (opacity !== 1) {\n\t        //change the color in rgb + opacity\n\t        str += prop + '-opacity: ' + opacity.toString() + '; ';\n\t      }\n\t      return str;\n\t    }\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t    /**\n\t     * Returns styles-string for svg-export\n\t     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n\t     * @return {String}\n\t     */\n\t    getSvgStyles: function(skipShadow) {\n\t\n\t      var fillRule = this.fillRule,\n\t          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t          visibility = this.visible ? '' : ' visibility: hidden;',\n\t          filter = skipShadow ? '' : this.getSvgFilter(),\n\t          fill = getSvgColorString('fill', this.fill),\n\t          stroke = getSvgColorString('stroke', this.stroke);\n\t\n\t      return [\n\t        stroke,\n\t        'stroke-width: ', strokeWidth, '; ',\n\t        'stroke-dasharray: ', strokeDashArray, '; ',\n\t        'stroke-linecap: ', strokeLineCap, '; ',\n\t        'stroke-linejoin: ', strokeLineJoin, '; ',\n\t        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t        fill,\n\t        'fill-rule: ', fillRule, '; ',\n\t        'opacity: ', opacity, ';',\n\t        filter,\n\t        visibility\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns filter for svg shadow\n\t     * @return {String}\n\t     */\n\t    getSvgFilter: function() {\n\t      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns id attribute for svg output\n\t     * @return {String}\n\t     */\n\t    getSvgId: function() {\n\t      return this.id ? 'id=\"' + this.id + '\" ' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export\n\t     * @return {String}\n\t     */\n\t    getSvgTransform: function() {\n\t      if (this.group && this.group.type === 'path-group') {\n\t        return '';\n\t      }\n\t      var toFixed = fabric.util.toFixed,\n\t          angle = this.getAngle(),\n\t          skewX = (this.getSkewX() % 360),\n\t          skewY = (this.getSkewY() % 360),\n\t          center = this.getCenterPoint(),\n\t\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                            ' ' +\n\t                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                          ')',\n\t\n\t          anglePart = angle !== 0\n\t            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t            : '',\n\t\n\t          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n\t            ? '' :\n\t            (' scale(' +\n\t              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n\t              ' ' +\n\t              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n\t            ')'),\n\t\n\t          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\t\n\t          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\t\n\t          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t      return [\n\t        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export from the transform matrix of single elements\n\t     * @return {String}\n\t     */\n\t    getSvgTransformMatrix: function() {\n\t      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createBaseSVGMarkup: function() {\n\t      var markup = [];\n\t\n\t      if (this.fill && this.fill.toLive) {\n\t        markup.push(this.fill.toSVG(this, false));\n\t      }\n\t      if (this.stroke && this.stroke.toLive) {\n\t        markup.push(this.stroke.toSVG(this, false));\n\t      }\n\t      if (this.shadow) {\n\t        markup.push(this.shadow.toSVG(this));\n\t      }\n\t      return markup;\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var extend = fabric.util.object.extend,\n\t      originalSet = 'stateProperties';\n\t\n\t  /*\n\t    Depends on `stateProperties`\n\t  */\n\t  function saveProps(origin, destination, props) {\n\t    var tmpObj = { }, deep = true;\n\t    props.forEach(function(prop) {\n\t      tmpObj[prop] = origin[prop];\n\t    });\n\t    extend(origin[destination], tmpObj, deep);\n\t  }\n\t\n\t  function _isEqual(origValue, currentValue, firstPass) {\n\t    if (!fabric.isLikelyNode && origValue instanceof Element) {\n\t      // avoid checking deep html elements\n\t      return origValue === currentValue;\n\t    }\n\t    else if (origValue instanceof Array) {\n\t      if (origValue.length !== currentValue.length) {\n\t        return false\n\t      }\n\t      for (var i = 0, len = origValue.length; i < len; i++) {\n\t        if (origValue[i] !== currentValue[i]) {\n\t          return false;\n\t        }\n\t      }\n\t      return true\n\t    }\n\t    else if (origValue && typeof origValue === 'object') {\n\t      if (!firstPass && Object.keys(origValue).length !== Object.keys(currentValue).length) {\n\t        return false;\n\t      }\n\t      for (var key in origValue) {\n\t        if (!_isEqual(origValue[key], currentValue[key])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t    else {\n\t      return origValue === currentValue;\n\t    }\n\t  }\n\t\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Returns true if object state (one of its state properties) was changed\n\t     * @param {String} [propertySet] optional name for the set of property we want to save\n\t     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t     */\n\t    hasStateChanged: function(propertySet) {\n\t      propertySet = propertySet || originalSet;\n\t      propertySet = '_' + propertySet;\n\t      return !_isEqual(this[propertySet], this, true);\n\t    },\n\t\n\t    /**\n\t     * Saves state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    saveState: function(options) {\n\t      var propertySet = options && options.propertySet || originalSet,\n\t          destination = '_' + propertySet;\n\t      saveProps(this, destination, this[propertySet]);\n\t      if (options && options.stateProperties) {\n\t        saveProps(this, destination, options.stateProperties);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Setups state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    setupState: function(options) {\n\t      options = options || { };\n\t      var propertySet = options.propertySet || originalSet;\n\t      options.propertySet = propertySet;\n\t      this['_' + propertySet] = { };\n\t      this.saveState(options);\n\t      return this;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      /* eslint-disable camelcase */\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t      /* eslint-enable camelcase */\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t      this.__corner = 0;\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width + strokeWidth,\n\t          h = this.height + strokeWidth;\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     */\n\t    _getTransformedDimensions: function(skewX, skewY) {\n\t      if (typeof skewX === 'undefined') {\n\t        skewX = this.skewX;\n\t      }\n\t      if (typeof skewY === 'undefined') {\n\t        skewY = this.skewY;\n\t      }\n\t      var dimensions = this._getNonTransformedDimensions(),\n\t          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n\t          points = [\n\t            {\n\t              x: -dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: -dimX,\n\t              y: dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: dimY\n\t            }],\n\t          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n\t          bbox;\n\t      for (i = 0; i < points.length; i++) {\n\t        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n\t      }\n\t      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n\t      return { x: bbox.width, y: bbox.height };\n\t    },\n\t\n\t    /*\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function()  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          p = fabric.util.transformPoint(dim, vpt, true);\n\t\n\t      return p.scalarAdd(2 * this.padding);\n\t    },\n\t\n\t    /**\n\t     * Draws a colored layer behind the object, inside its selection borders.\n\t     * Requires public options: padding, selectionBackgroundColor\n\t     * this function is called when the context is transformed\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawSelectionBackground: function(ctx) {\n\t      if (!this.selectionBackgroundColor || this.group || !this.active) {\n\t        return this;\n\t      }\n\t      ctx.save();\n\t      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n\t          vpt = this.canvas.viewportTransform;\n\t      ctx.translate(center.x, center.y);\n\t      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.fillStyle = this.selectionBackgroundColor;\n\t      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = this.borderColor;\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box when it is inside a group.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @param {object} options object representing current object parameters\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBordersInGroup: function(ctx, options) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var p = this._getNonTransformedDimensions(),\n\t          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n\t          wh = fabric.util.transformPoint(p, matrix),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t      ctx.strokeStyle = this.borderColor;\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          scaleOffset = this.cornerSize,\n\t          left = -(width + scaleOffset) / 2,\n\t          top = -(height + scaleOffset) / 2,\n\t          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t      if (!this.transparentCorners) {\n\t        ctx.strokeStyle = this.cornerStrokeColor;\n\t      }\n\t      this._setLineDash(ctx, this.cornerDashArray, null);\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left,\n\t        top);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width,\n\t        top);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left,\n\t        top + height);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width,\n\t        top + height);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width / 2,\n\t          top);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width / 2,\n\t          top + height);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width,\n\t          top + height / 2);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left,\n\t          top + height / 2);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width / 2,\n\t          top - this.rotatingPointOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n\t      switch (this.cornerStyle) {\n\t        case 'circle':\n\t          ctx.beginPath();\n\t          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n\t          ctx[methodName]();\n\t          if (stroke) {\n\t            ctx.stroke();\n\t          }\n\t          break;\n\t        default:\n\t          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t          ctx[methodName + 'Rect'](left, top, size, size);\n\t          if (stroke) {\n\t            ctx.strokeRect(left, top, size, size);\n\t          }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange();\n\t      },\n\t      onComplete: function() {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete();\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint();\n\t        ctx.translate(\n\t          cp.x - this.strokeWidth / 2,\n\t          cp.y - this.strokeWidth / 2\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var dim = this.callSuper('_getNonTransformedDimensions');\n\t      if (this.strokeLineCap === 'butt') {\n\t        if (dim.x === 0) {\n\t          dim.y -= this.strokeWidth;\n\t        }\n\t        if (dim.y === 0) {\n\t          dim.x -= this.strokeWidth;\n\t        }\n\t      }\n\t      return dim;\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ', this.getSvgId(),\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object, callback) {\n\t    var points = [object.x1, object.y1, object.x2, object.y2],\n\t        line = new fabric.Line(points, object);\n\t    callback && callback(line);\n\t    return line;\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t        case nearest:\n\t          return Math.min(this.get(axis1), this.get(axis2));\n\t        case center:\n\t          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t        case farthest:\n\t          return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options && options.radius || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ', this.getSvgId(),\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object, callback) {\n\t    var circle = new fabric.Circle(object);\n\t    callback && callback(circle);\n\t    return circle;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('width', options && options.width || 100)\n\t          .set('height', options && options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ', this.getSvgId(),\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Triangle instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Triangle instance is created\n\t   * @return {Object} instance of Canvas.Triangle\n\t   */\n\t  fabric.Triangle.fromObject = function(object, callback) {\n\t    var triangle = new fabric.Triangle(object);\n\t    callback && callback(triangle);\n\t    return triangle;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('rx', options && options.rx || 0);\n\t      this.set('ry', options && options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ', this.getSvgId(),\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object, callback) {\n\t    var ellipse = new fabric.Ellipse(object);\n\t    callback && callback(ellipse);\n\t    return ellipse;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('rx', 'ry', 'x', 'y');\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Used to specify dash pattern for stroke on this object\n\t     * @type Array\n\t     */\n\t    strokeDashArray: null,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(-0.5, -0.5, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n\t          k = 1 - 0.5522847498;\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ', this.getSvgId(),\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object, callback) {\n\t    var rect = new fabric.Rect(object);\n\t    callback && callback(rect);\n\t    return rect;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      return fabric.Polygon.prototype.initialize.call(this, points, options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t      return fabric.Polygon.prototype._calcDimensions.call(this);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object, callback) {\n\t    var polyline = new fabric.Polyline(object.points, object);\n\t    callback && callback(polyline);\n\t    return polyline;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polygon} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || {};\n\t      this.points = points || [];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t      this.pathOffset = {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t      this.minX = minX || 0;\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [], addTransform,\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n\t      }\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<', this.type, ' ', this.getSvgId(),\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      if (this.stroke || this.strokeDashArray) {\n\t        ctx.closePath();\n\t        this._renderStroke(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    commonRender: function(ctx, noTransform) {\n\t      var point, len = this.points.length;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t\n\t      noTransform || ctx.translate(-this.pathOffset.x, -this.pathOffset.y);\n\t      ctx.beginPath();\n\t      ctx.moveTo(this.points[0].x, this.points[0].y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x, point.y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.points.length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object, callback) {\n\t    var polygon = new fabric.Polygon(object.points, object);\n\t    callback && callback(polygon);\n\t    return polygon;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t\n\t      if (!path) {\n\t        path = [];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t      if (this.objectCaching) {\n\t        this._createCacheCanvas();\n\t        this.setupState({ propertySet: 'cacheProperties' });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _renderPathCommands: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      this._renderPathCommands(ctx);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n\t        path: this.path.map(function(item) { return item.slice() })\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<path ', this.getSvgId(),\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [],\n\t          coords = [],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [currentPath.charAt(0)];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              x,\n\t              y\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   */\n\t  fabric.Path.fromObject = function(object, callback) {\n\t    // remove this pattern rom 2.0, accept just object.\n\t    var path;\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var pathUrl = object.path;\n\t        path = elements[0];\n\t        delete object.path;\n\t\n\t        fabric.util.object.extend(path, object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback && callback(path);\n\t      });\n\t    }\n\t    else {\n\t      path = new fabric.Path(object.path, object);\n\t      callback && callback(path);\n\t      return path;\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      invoke = fabric.util.array.invoke,\n\t      parentToObject = fabric.Object.prototype.toObject;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t      if (this.objectCaching) {\n\t        this._createCacheCanvas();\n\t        this.setupState({ propertySet: 'cacheProperties' });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [], yC = [], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      ctx.save();\n\t      ctx.translate(-this.width / 2, -this.height / 2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this.paths.length; i < len; i++) {\n\t        if (this.paths[i].isCacheDirty(true)) {\n\t          var dim = this._getNonTransformedDimensions();\n\t          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n\t          return true\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {*} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(parentToObject.call(this, ['sourcePath'].concat(propertiesToInclude)), {\n\t        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(),\n\t        'style=\"', this.getSvgStyles(), '\" ',\n\t        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t        '>\\n'\n\t      );\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push('\\t', objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = this.getObjects()[0].get('fill') || '';\n\t      if (typeof firstPathFill !== 'string') {\n\t        return false;\n\t      }\n\t      firstPathFill = firstPathFill.toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        var pathFill = path.get('fill') || '';\n\t        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    // remove this pattern from 2.0 accepts only object\n\t    if (typeof object.paths === 'string') {\n\t      fabric.loadSVGFromURL(object.paths, function (elements) {\n\t\n\t        var pathUrl = object.paths;\n\t        delete object.paths;\n\t\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n\t        delete object.paths;\n\t        callback(new fabric.PathGroup(enlivenedObjects, object));\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      invoke = fabric.util.array.invoke;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Indicates if click events should also check for subtargets\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    subTargetCheck: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      this.originalState = { };\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      var center = this.getCenterPoint();\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {fabric.Point} center, current center of group.\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, center, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          ignoreZoom = true;\n\t\n\t      object.set({\n\t        originalLeft: objectLeft,\n\t        originalTop: objectTop,\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords(ignoreZoom);\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      this.dirty = true;\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      this.dirty = true;\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      stroke:           true,\n\t      strokeWidth:      true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      this._transformDone = true;\n\t      this.callSuper('render', ctx);\n\t      this._transformDone = false;\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        if (this._objects[i].isCacheDirty(true)) {\n\t          var dim = this._getNonTransformedDimensions();\n\t          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n\t          return true\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      ctx.save();\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      var matrix = object.calcTransformMatrix(),\n\t          options = fabric.util.qrDecompose(matrix),\n\t          center = new fabric.Point(options.translateX, options.translateY);\n\t      object.scaleX = options.scaleX;\n\t      object.scaleY = options.scaleY;\n\t      object.skewX = options.skewX;\n\t      object.skewY = options.skewY;\n\t      object.angle = options.angle;\n\t      object.flipX = false;\n\t      object.flipY = false;\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this.realizeTransform(object);\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all group objects\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      var ignoreZoom = true;\n\t      this.forEachObject(function(object) {\n\t        object.setCoords(ignoreZoom);\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length,\n\t          ignoreZoom = true;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords(ignoreZoom);\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var minXY = new fabric.Point(min(aX), min(aY)),\n\t          maxXY = new fabric.Point(max(aX), max(aY)),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(), 'transform=\"',\n\t        /* avoiding styles intentionally */\n\t        this.getSvgTransform(),\n\t        this.getSvgTransformMatrix(),\n\t        '\" style=\"',\n\t        this.getSvgFilter(),\n\t        '\">\\n'\n\t      );\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push('\\t', this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {*}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      delete object.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'alignX',\n\t    'alignY',\n\t    'meetOrSlice'\n\t  );\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * Width of a stroke.\n\t     * For image quality a stroke multiple of 2 gives better results.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * minimum scale factor under which any resizeFilter is triggered to resize the image\n\t     * 0 will disable the automatic resize. 1 will trigger automatically always.\n\t     * number bigger than 1 can be used in case we want to scale with some filter above\n\t     * the natural image dimensions\n\t     * @type Number\n\t     */\n\t    minimumScaleTrigger: 0.5,\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to false for images\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    objectCaching: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @param {function} [callback] callback function to call after eventual filters applied.\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options, callback) {\n\t      options || (options = { });\n\t      this.filters = [];\n\t      this.resizeFilters = [];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options, callback);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t\n\t      var _callback, _this;\n\t\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.resizeFilters.length === 0) {\n\t        _callback = callback;\n\t      }\n\t      else {\n\t        _this = this;\n\t        _callback = function() {\n\t          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n\t        };\n\t      }\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(_callback);\n\t      }\n\t      else if (_callback) {\n\t        _callback(this);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t      var w = this.width / 2, h = this.height / 2;\n\t      ctx.beginPath();\n\t      ctx.moveTo(-w, -h);\n\t      ctx.lineTo(w, -h);\n\t      ctx.lineTo(w, h);\n\t      ctx.lineTo(-w, h);\n\t      ctx.lineTo(-w, -h);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [], resizeFilters = [],\n\t          scaleX = 1, scaleY = 1;\n\t\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          if (filterObj.type === 'Resize') {\n\t            scaleX *= filterObj.scaleX;\n\t            scaleY *= filterObj.scaleY;\n\t          }\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t\n\t      this.resizeFilters.forEach(function(filterObj) {\n\t        filterObj && resizeFilters.push(filterObj.toObject());\n\t      });\n\t      var object = extend(\n\t        this.callSuper(\n\t          'toObject',\n\t          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n\t        ), {\n\t          src: this.getSrc(),\n\t          filters: filters,\n\t          resizeFilters: resizeFilters,\n\t        });\n\t\n\t      object.width /= scaleX;\n\t      object.height /= scaleY;\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none', filtered = true;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @param {Boolean} filtered indicates if the src is needed for svg\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function(filtered) {\n\t      var element = filtered ? this._element : this._originalElement;\n\t      if (element) {\n\t        return fabric.isLikelyNode ? element._src : element.src;\n\t      }\n\t      else {\n\t        return this.src || '';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Array} filters to be applied\n\t     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n\t     * @param {Boolean} forResizing\n\t     * @return {CanvasElement} canvasEl to be drawn immediately\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var replacement = fabric.util.createImage(),\n\t          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n\t          minimumScale = this.minimumScaleTrigger / retinaScaling,\n\t          _this = this, scaleX, scaleY;\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback(this);\n\t        return imgElement;\n\t      }\n\t\n\t      var canvasEl = fabric.util.createCanvasElement();\n\t      canvasEl.width = imgElement.width;\n\t      canvasEl.height = imgElement.height;\n\t      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\t\n\t      filters.forEach(function(filter) {\n\t        if (!filter) {\n\t          return;\n\t        }\n\t        if (forResizing) {\n\t          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n\t          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n\t          if (scaleX * retinaScaling < 1) {\n\t            scaleX *= retinaScaling;\n\t          }\n\t          if (scaleY * retinaScaling < 1) {\n\t            scaleY *= retinaScaling;\n\t          }\n\t        }\n\t        else {\n\t          scaleX = filter.scaleX;\n\t          scaleY = filter.scaleY;\n\t        }\n\t        filter.applyTo(canvasEl, scaleX, scaleY);\n\t        if (!forResizing && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback(_this);\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback(_this);\n\t          replacement.onload = canvasEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._stroke(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options, callback) {\n\t      this.setElement(fabric.util.getById(element), callback, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img) {\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [];\n\t          return new fabric.Image(img, object, callback);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        preserveAR;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n\t      extend(parsedAttributes, preserveAR);\n\t    }\n\t\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = function(object) {\n\t    return new fabric.Image.filters.Brightness(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side / 2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t          output = context.createImageData(sw, sh),\n\t          dst = output.data,\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0,\n\t          r, g, b, a, dstOff,\n\t          scx, scy, srcOff, wt;\n\t\n\t      for (var y = 0; y < sh; y++) {\n\t        for (var x = 0; x < sw; x++) {\n\t          dstOff = (y * sw + x) * 4;\n\t          // calculate the weighed sum of the source image pixels that\n\t          // fall under the convolution matrix\n\t          r = 0; g = 0; b = 0; a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t              scy = y + cy - halfSide;\n\t              scx = x + cx - halfSide;\n\t\n\t              // eslint-disable-next-line max-depth\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              srcOff = (scy * sw + scx) * 4;\n\t              wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = function(object) {\n\t    return new fabric.Image.filters.Convolute(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n\t    return new fabric.Image.filters.GradientTransparency(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function() {\n\t    return new fabric.Image.filters.Grayscale();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function() {\n\t    return new fabric.Image.filters.Invert();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = canvasEl.width;\n\t      maskCanvasEl.height = canvasEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      callback && callback(new fabric.Image.filters.Mask(object));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = function(object) {\n\t    return new fabric.Image.filters.Noise(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = function(object) {\n\t    return new fabric.Image.filters.Pixelate(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 0;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n\t    return new fabric.Image.filters.RemoveWhite(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function() {\n\t    return new fabric.Image.filters.Sepia2();\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = function(object) {\n\t    return new fabric.Image.filters.Tint(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = function(object) {\n\t    return new fabric.Image.filters.Multiply(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t\n\t  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  fabric.Image.filters.Blend.fromObject = function(object) {\n\t    return new fabric.Image.filters.Blend(object);\n\t  };\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} scaleX\n\t     * @param {Number} scaleY\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t      if (scaleX === 1 && scaleY === 1) {\n\t        return;\n\t      }\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Filter sliceByTwo\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = oW, stepH = oH,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      dW = floor(dW);\n\t      dH = floor(dH);\n\t      tmpCanvas.width = max(dW, oW);\n\t      tmpCanvas.height = max(dH, oH);\n\t\n\t      if (dW > oW) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (dH > oH) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, oW, oH);\n\t      canvasEl.width = max(dW, oW);\n\t      canvasEl.height = max(dH, oH);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        oW = stepW;\n\t        oH = stepH;\n\t        if (dW * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = dW;\n\t          doneW = true;\n\t        }\n\t        if (dH * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = dH;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, oW, oH);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, dW, dH);\n\t    },\n\t\n\t    /**\n\t     * Filter lanczosResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    /**\n\t     * bilinearFiltering\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < dH; i++) {\n\t        for (j = 0; j < dW; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * oW + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    /**\n\t     * hermiteFastResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /* eslint-disable max-depth */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /* eslint-enable max-depth */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = function(object) {\n\t    return new fabric.Image.filters.Resize(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Matrix filter class\n\t   * @class fabric.Image.filters.ColorMatrix\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n\t   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n\t   * @example <caption>Kodachrome filter</caption>\n\t   * var filter = new fabric.Image.filters.ColorMatrix({\n\t   *  matrix: [\n\t       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n\t       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n\t       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n\t       0, 0, 0, 1, 0\n\t      ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'ColorMatrix',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n\t     */\n\t    initialize: function( options ) {\n\t      options || ( options = {} );\n\t      this.matrix = options.matrix || [\n\t        1, 0, 0, 0, 0,\n\t        0, 1, 0, 0, 0,\n\t        0, 0, 1, 0, 0,\n\t        0, 0, 0, 1, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function( canvasEl ) {\n\t      var context = canvasEl.getContext( '2d' ),\n\t          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n\t          data = imageData.data,\n\t          iLen = data.length,\n\t          i,\n\t          r,\n\t          g,\n\t          b,\n\t          a,\n\t          m = this.matrix;\n\t\n\t      for ( i = 0; i < iLen; i += 4 ) {\n\t        r = data[ i ];\n\t        g = data[ i + 1 ];\n\t        b = data[ i + 2 ];\n\t        a = data[ i + 3 ];\n\t\n\t        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n\t        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n\t        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n\t        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n\t      }\n\t\n\t      context.putImageData( imageData, 0, 0 );\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        type: this.type,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n\t   */\n\t  fabric.Image.filters.ColorMatrix.fromObject = function( object ) {\n\t    return new fabric.Image.filters.ColorMatrix( object );\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Contrast filter class\n\t   * @class fabric.Image.filters.Contrast\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Contrast({\n\t   *   contrast: 40\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Contrast',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Contrast.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.contrast = options.contrast || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] = contrastF * (data[i] - 128) + 128;\n\t        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n\t        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        contrast: this.contrast\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n\t   */\n\t  fabric.Image.filters.Contrast.fromObject = function(object) {\n\t    return new fabric.Image.filters.Contrast(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Saturate filter class\n\t   * @class fabric.Image.filters.Saturate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Saturate({\n\t   *   saturate: 100\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Saturate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Saturate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.saturate = options.saturate || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          max, adjust = -this.saturate * 0.01;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        max = Math.max(data[i], data[i + 1], data[i + 2]);\n\t        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n\t        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n\t        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        saturate: this.saturate\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n\t   */\n\t  fabric.Image.filters.Saturate.fromObject = function(object) {\n\t    return new fabric.Image.filters.Saturate(object);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t      MIN_TEXT_WIDTH = 2;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor',\n\t    'charSpacing'\n\t  );\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor',\n\t    'charSpacing',\n\t    'styles'\n\t  );\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: [\n\t      'fontSize',\n\t      'fontWeight',\n\t      'fontFamily',\n\t      'fontStyle',\n\t      'lineHeight',\n\t      'text',\n\t      'charSpacing',\n\t      'textAlign'\n\t    ],\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:      stateProperties,\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties:      cacheProperties,\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * additional space between characters\n\t     * expressed in thousands of em unit\n\t     * @type Number\n\t     * @default\n\t     */\n\t    charSpacing:             0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.callSuper('initialize', options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t      this.setupState({ propertySet: '_dimensionAffectingProps' });\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this._setTextStyles(ctx);\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._renderTextLinesBackground(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4), char, width;\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        var additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = chars.split('');\n\t        for (var i = 0, len = chars.length; i < len; i++) {\n\t          char = chars[i];\n\t          width = ctx.measureText(char).width + additionalSpace;\n\t          ctx[method](char, left, top);\n\t          left += width > 0 ? width : 0;\n\t        }\n\t      }\n\t      else {\n\t        ctx[method](chars, left, top);\n\t      }\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex);\n\t      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      // stretch the line\n\t      var words = line.split(/\\s+/),\n\t          charOffset = 0,\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          leftOffset = 0, word;\n\t\n\t      for (var i = 0, len = words.length; i < len; i++) {\n\t        while (line[charOffset] === ' ' && charOffset < line.length) {\n\t          charOffset++;\n\t        }\n\t        word = words[i];\n\t        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n\t        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n\t        charOffset += word.length;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} word\n\t     */\n\t    _getWidthOfWords: function (ctx, word) {\n\t      var width = ctx.measureText(word).width, charCount, additionalSpace;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = word.split('').length;\n\t        additionalSpace = charCount * this._getWidthOfCharSpacing();\n\t        width += additionalSpace;\n\t      }\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * Returns true because text has no style\n\t     */\n\t    isEmptyStyles: function() {\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     */\n\t    _renderTextCommon: function(ctx, method) {\n\t\n\t      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight,\n\t            lineWidth = this._getLineWidth(ctx, i),\n\t            leftOffset = this._getLineLeftOffset(lineWidth);\n\t        this._renderTextLine(\n\t          method,\n\t          ctx,\n\t          this._textLines[i],\n\t          left + leftOffset,\n\t          top + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      this._renderTextCommon(ctx, 'fillText');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray);\n\t      ctx.beginPath();\n\t      this._renderTextCommon(ctx, 'strokeText');\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line\n\t     */\n\t    _getHeightOfLine: function() {\n\t      return this._getHeightOfSingleLine() * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line without lineHeight\n\t     */\n\t    _getHeightOfSingleLine: function() {\n\t      return this.fontSize * this._fontSizeMult;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        if (lineWidth > 0) {\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.fillStyle = originalFill;\n\t      // if there is text background color no\n\t      // other shadows should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [];\n\t      this.__lineHeights = [];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearDimensionCache: function() {\n\t      var shouldClear = false;\n\t      if (this._forceClearCache) {\n\t        this._forceClearCache = false;\n\t        this.dirty = true;\n\t        return true;\n\t      }\n\t      shouldClear = this.hasStateChanged('_dimensionAffectingProps');\n\t      if (shouldClear) {\n\t        this.saveState({ propertySet: '_dimensionAffectingProps' });\n\t        this.dirty = true;\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n\t      }\n\t\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else {\n\t        width = this._measureLine(ctx, lineIndex);\n\t      }\n\t      this.__lineWidths[lineIndex] = width;\n\t\n\t      if (width && this.textAlign === 'justify') {\n\t        wordCount = line.split(/\\s+/);\n\t        if (wordCount.length > 1) {\n\t          this.__lineWidths[lineIndex] = -1;\n\t        }\n\t      }\n\t      return width;\n\t    },\n\t\n\t    _getWidthOfCharSpacing: function() {\n\t      if (this.charSpacing !== 0) {\n\t        return this.fontSize * this.charSpacing / 1000;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      var line = this._textLines[lineIndex],\n\t          width = ctx.measureText(line).width,\n\t          additionalSpace = 0, charCount, finalWidth;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = line.split('').length;\n\t        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n\t      }\n\t      finalWidth = width + additionalSpace;\n\t      return finalWidth > 0 ? finalWidth : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i);\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * return font declaration string for canvas context\n\t     * @returns {String} font declaration formatted for canvas context.\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t      if (this._shouldClearDimensionCache()) {\n\t        this._setTextStyles(ctx);\n\t        this._initDimensions(ctx);\n\t      }\n\t      this.callSuper('render', ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var additionalProperties = [\n\t        'text',\n\t        'fontSize',\n\t        'fontWeight',\n\t        'fontFamily',\n\t        'fontStyle',\n\t        'lineHeight',\n\t        'textDecoration',\n\t        'textAlign',\n\t        'textBackgroundColor',\n\t        'charSpacing'\n\t      ].concat(propertiesToInclude);\n\t      return this.callSuper('toObject', additionalProperties);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      if (!this.ctx) {\n\t        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      }\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      var noShadow = true, filter = this.getSvgFilter(),\n\t          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\t\n\t      markup.push(\n\t        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n\t          style, '>\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n\t            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n\t            textAndBg.textSpans.join(''),\n\t          '\\t\\t</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [],\n\t          textBgRects = [],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      if (this.textAlign === 'justify') {\n\t        // i call from here to do not intefere with IText\n\t        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n\t        return;\n\t      }\n\t      textSpans.push(\n\t        '\\t\\t\\t<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>\\n'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n\t      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this._setTextStyles(ctx);\n\t\n\t      var line = this._textLines[i],\n\t          words = line.split(/\\s+/),\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          word, attributes = this._getFillAttributes(this.fill),\n\t          len;\n\t\n\t      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\t\n\t      for (i = 0, len = words.length; i < len; i++) {\n\t        word = words[i];\n\t        textSpans.push(\n\t          '\\t\\t\\t<tspan x=\"',\n\t            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n\t            'y=\"',\n\t            toFixed(yPos, NUM_FRACTION_DIGITS),\n\t            '\" ',\n\t            // doing this on <tspan> elements since setting opacity\n\t            // on containing <text> one doesn't work in Illustrator\n\t            attributes, '>',\n\t            fabric.util.string.escapeXml(word),\n\t          '</tspan>\\n'\n\t        );\n\t        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n\t      }\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {*} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t\n\t    var textContent = '';\n\t\n\t    // The XML is not properly parsed in IE9 so a workaround to get\n\t    // textContent is through firstChild.data. Another workaround would be\n\t    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\t    if (!('textContent' in element)) {\n\t      if ('firstChild' in element && element.firstChild !== null) {\n\t        if ('data' in element.firstChild && element.firstChild.data !== null) {\n\t          textContent = element.firstChild.data;\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      textContent = element.textContent;\n\t    }\n\t\n\t    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\t\n\t    var text = new fabric.Text(textContent, options),\n\t        textHeightScaleFactor = text.getHeight() / text.height,\n\t        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n\t        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n\t        textHeight = text.getHeight() + scaledDiff,\n\t        offX = 0;\n\t    /*\n\t      Adjust positioning:\n\t        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t        top/left properties in Fabric correspond to center point of text bounding box\n\t    */\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object, callback) {\n\t    var text = new fabric.Text(object.text, clone(object));\n\t    callback && callback(text);\n\t    return text;\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __widthOfSpace: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__widthOfSpace = [];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          // eslint-disable-next-line no-unused-vars\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      this._updateAndFire('selectionStart', index);\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      this._updateAndFire('selectionEnd', index);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property 'selectionStart' or 'selectionEnd'\n\t     * @param {Number} index new position of property\n\t     */\n\t    _updateAndFire: function(property, index) {\n\t      if (this[property] !== index) {\n\t        this._fireSelectionChanged();\n\t        this[property] = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Fires the even of selection changed\n\t     * @private\n\t     */\n\t    _fireSelectionChanged: function() {\n\t      this.fire('selection:changed');\n\t      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (!ctx) {\n\t        this.clearContextTop();\n\t      }\n\t      this.callSuper('_initDimensions', ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      this.clearContextTop();\n\t      this.callSuper('render', ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n\t      // the correct position but not at every cursor animation.\n\t      this.cursorOffsetCache = { };\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Prepare and clean the contextTop\n\t     */\n\t    clearContextTop: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        var ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t        ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    _clearTextArea: function(ctx) {\n\t      // we add 4 pixel, to be sure to do not leave any pixel out\n\t      var width = this.width + 4, height = this.height + 4;\n\t      ctx.clearRect(-width / 2, -height / 2, width, height);\n\t    },\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n\t        return this.cursorOffsetCache;\n\t      }\n\t      var lineLeftOffset = 0,\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0,\n\t          boundaries;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n\t        leftOffset -= this._getWidthOfCharSpacing();\n\t      }\n\t      boundaries = {\n\t        top: topOffset,\n\t        left: leftOffset > 0 ? leftOffset : 0,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t      this.cursorOffsetCache = boundaries;\n\t      return this.cursorOffsetCache;\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          multiplier = this.scaleX * this.canvas.getZoom(),\n\t          cursorWidth = this.cursorWidth / multiplier;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset - cursorWidth / 2,\n\t        boundaries.top + boundaries.topOffset,\n\t        cursorWidth,\n\t        charHeight);\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t          if (j === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t          if (end.charIndex === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        realLineHeight = lineHeight;\n\t        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n\t          lineHeight /= this.lineHeight;\n\t        }\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth > 0 ? boxWidth : 0,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += realLineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      charOffset = charOffset || 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          prevStyle,\n\t          thisStyle,\n\t          charsToRender = '';\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i - charOffset];\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight, shouldFill, shouldStroke,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset, textDecoration, chars, additionalSpace, _charWidth;\n\t\n\t      if (decl) {\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t        shouldStroke = decl.stroke;\n\t        shouldFill = decl.fill;\n\t        textDecoration = decl.textDecoration;\n\t      }\n\t      else {\n\t        charHeight = this.fontSize;\n\t      }\n\t\n\t      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n\t      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\t\n\t      decl && ctx.save();\n\t\n\t      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n\t      textDecoration = textDecoration || this.textDecoration;\n\t\n\t      if (decl && decl.textBackgroundColor) {\n\t        this._removeShadow(ctx);\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = _char.split('');\n\t        charWidth = 0;\n\t        for (var j = 0, len = chars.length, char; j < len; j++) {\n\t          char = chars[j];\n\t          shouldFill && ctx.fillText(char, left + charWidth, top);\n\t          shouldStroke && ctx.strokeText(char, left + charWidth, top);\n\t          _charWidth = ctx.measureText(char).width + additionalSpace;\n\t          charWidth += _charWidth > 0 ? _charWidth : 0;\n\t        }\n\t      }\n\t      else {\n\t        shouldFill && ctx.fillText(_char, left, top);\n\t        shouldStroke && ctx.strokeText(_char, left, top);\n\t      }\n\t\n\t      if (textDecoration || textDecoration !== '') {\n\t        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n\t      }\n\t\n\t      decl && ctx.restore();\n\t      ctx.translate(charWidth, 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var decorationWeight = charHeight / 15,\n\t          positions = {\n\t            underline: top + charHeight / 10,\n\t            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n\t            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n\t          },\n\t          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\t\n\t      for (i = 0; i < decorations.length; i++) {\n\t        decoration = decorations[i];\n\t        if (textDecoration.indexOf(decoration) > -1) {\n\t          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      this.callSuper('_renderTextLinesBackground', ctx);\n\t\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset,\n\t          leftOffset = this._getLeftOffset(),\n\t          topOffset = this._getTopOffset(),\n\t          line, _char, style;\n\t      ctx.save();\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        line = this._textLines[i];\n\t\n\t        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n\t          lineTopOffset += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t\n\t        for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t          style = this._getStyleDeclaration(i, j);\n\t          if (!style || !style.textBackgroundColor) {\n\t            continue;\n\t          }\n\t          _char = line[j];\n\t\n\t          ctx.fillStyle = style.textBackgroundColor;\n\t\n\t          ctx.fillRect(\n\t            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n\t            topOffset + lineTopOffset,\n\t            this._getWidthOfChar(ctx, _char, i, j),\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} fontFamily name\n\t     * @return {Object} reference to cache\n\t     */\n\t    _getFontCache: function(fontFamily) {\n\t      if (!fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t      return fabric.charWidthsCache[fontFamily];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n\t          styleDeclaration = clone(charDecl),\n\t          width, cacheProp, charWidthsCache;\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles for this char\n\t      // global style from object is always applyed and handled by save and restore\n\t      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t\n\t      //if we want this._setShadow.call to work with styleDeclarion\n\t      //we have to add those references\n\t      if (styleDeclaration.shadow) {\n\t        styleDeclaration.scaleX = this.scaleX;\n\t        styleDeclaration.scaleY = this.scaleY;\n\t        styleDeclaration.canvas = this.canvas;\n\t        styleDeclaration.getObjectScaling = this.getObjectScaling;\n\t        this._setShadow.call(styleDeclaration, ctx);\n\t      }\n\t\n\t      if (!this.caching || !charWidthsCache[cacheProp]) {\n\t        width = ctx.measureText(_char).width;\n\t        this.caching && (charWidthsCache[cacheProp] = width);\n\t        return width;\n\t      }\n\t\n\t      return charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t      ctx.save();\n\t      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t      if (this.charSpacing !== 0) {\n\t        width += this._getWidthOfCharSpacing();\n\t      }\n\t      ctx.restore();\n\t      return width > 0 ? width : 0\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      this._isMeasuring = true;\n\t      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      if (this.charSpacing !== 0) {\n\t        width -= this._getWidthOfCharSpacing();\n\t      }\n\t      this._isMeasuring = false;\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var lineHeight, height = 0;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        lineHeight = this._getHeightOfLine(ctx, i);\n\t        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clone(this.styles, true)\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as argument\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object, callback) {\n\t    var iText = new fabric.IText(object.text, clone(object));\n\t    callback && callback(iText);\n\t    return iText;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Initializes \"selected\" event handler\n\t     */\n\t    initSelectedHandler: function() {\n\t      this.on('selected', function() {\n\t\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          _this.selected = true;\n\t        }, 100);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          if (!canvas._hasITextHandlers) {\n\t            canvas._hasITextHandlers = true;\n\t            _this._initCanvasHandlers(canvas);\n\t          }\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\t          if (canvas._iTextInstances.length === 0) {\n\t            canvas._hasITextHandlers = false;\n\t            _this._removeCanvasHandlers(canvas);\n\t          }\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * register canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function(canvas) {\n\t      canvas._canvasITextSelectionClearedHanlder = (function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(canvas);\n\t      }).bind(this);\n\t      canvas._mouseUpITextHandler = (function() {\n\t        if (canvas._iTextInstances) {\n\t          canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      }).bind(this);\n\t      canvas.on('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.on('object:selected', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * remove canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _removeCanvasHandlers: function(canvas) {\n\t      canvas.off('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.off('object:selected', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          // we do not want to animate a selection, only cursor\n\t          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      // to clear just itext area we need to transform the context\n\t      // it may not be worth it\n\t      if (shouldClear) {\n\t        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.selectionStart = 0;\n\t      this.selectionEnd = this.text.length;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function(e) {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t\n\t      this.initHiddenTextarea(e);\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t      this._textBeforeEdit = this.text;\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.initMouseMoveHandler();\n\t      this.canvas.renderAll();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      this.canvas.on('mouse:move', this.mouseMoveHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    mouseMoveHandler: function(options) {\n\t      if (!this.__isMousedown || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n\t          currentStart = this.selectionStart,\n\t          currentEnd = this.selectionEnd;\n\t      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n\t        return;\n\t      }\n\t      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n\t        this.selectionStart = this.__selectionStartOnMouseDown;\n\t        this.selectionEnd = newSelectionStart;\n\t      }\n\t      else {\n\t        this.selectionStart = newSelectionStart;\n\t        this.selectionEnd = this.__selectionStartOnMouseDown;\n\t      }\n\t      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n\t        this._fireSelectionChanged();\n\t        this._updateTextarea();\n\t        this.renderCursorOrSelection();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea || this.inCompositionMode) {\n\t        return;\n\t      }\n\t      this.cursorOffsetCache = { };\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        var style = this._calcTextareaPosition();\n\t        this.hiddenTextarea.style.left = style.left;\n\t        this.hiddenTextarea.style.top = style.top;\n\t        this.hiddenTextarea.style.fontSize = style.fontSize;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Object} style contains style for hiddenTextarea\n\t     */\n\t    _calcTextareaPosition: function() {\n\t      if (!this.canvas) {\n\t        return { x: 1, y: 1 };\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          m = this.calcTransformMatrix(),\n\t          p = {\n\t            x: boundaries.left + leftOffset,\n\t            y: boundaries.top + boundaries.topOffset + charHeight\n\t          },\n\t          upperCanvas = this.canvas.upperCanvasEl,\n\t          maxWidth = upperCanvas.width - charHeight,\n\t          maxHeight = upperCanvas.height - charHeight;\n\t\n\t      p = fabric.util.transformPoint(p, m);\n\t      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\t\n\t      if (p.x < 0) {\n\t        p.x = 0;\n\t      }\n\t      if (p.x > maxWidth) {\n\t        p.x = maxWidth;\n\t      }\n\t      if (p.y < 0) {\n\t        p.y = 0;\n\t      }\n\t      if (p.y > maxHeight) {\n\t        p.y = maxHeight;\n\t      }\n\t\n\t      // add canvas offset on document\n\t      p.x += this.canvas._offset.left;\n\t      p.y += this.canvas._offset.top;\n\t\n\t      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t      var isTextChanged = (this._textBeforeEdit !== this.text);\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t      this.hiddenTextarea = null;\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      isTextChanged && this.fire('modified');\n\t      if (this.canvas) {\n\t        this.canvas.off('mouse:move', this.mouseMoveHandler);\n\t        this.canvas.fire('text:editing:exited', { target: this });\n\t        isTextChanged && this.canvas.fire('object:modified', { target: this });\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.selectionStart = start;\n\t      this.selectionEnd = start;\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t      }\n\t      //short circuit for block paste\n\t      if (!useCopiedStyle && this.isEmptyStyles()) {\n\t        this.insertChar(_chars, false);\n\t        return;\n\t      }\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.copiedTextStyle[i];\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.selectionStart += _char.length;\n\t      this.selectionEnd = this.selectionStart;\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this._updateTextarea();\n\t      this.setCoords();\n\t      this._fireSelectionChanged();\n\t      this.fire('changed');\n\t      this.canvas && this.canvas.fire('text:changed', { target: this });\n\t      this.canvas && this.canvas.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      if (!this.styles[lineIndex + 1]) {\n\t        this.styles[lineIndex + 1] = {};\n\t      }\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        for (var index in this.styles[lineIndex]) {\n\t          if (parseInt(index, 10) >= charIndex) {\n\t            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t\n\t      this.styles[lineIndex][charIndex] =\n\t        style || clone(currentLineStyles[charIndex - 1]);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    },\n\t\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      return this._textLines[lIndex - 1];\n\t    },\n\t\n\t    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t        }\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    },\n\t\n\t    /**\n\t     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n\t     * mimic the key - mouse navigation when shift is pressed.\n\t     */\n\t    setSelectionStartEndWithShift: function(start, end, newSelection) {\n\t      if (newSelection <= start) {\n\t        if (end === start) {\n\t          this._selectionDirection = 'left';\n\t        }\n\t        else if (this._selectionDirection === 'right') {\n\t          this._selectionDirection = 'left';\n\t          this.selectionEnd = start;\n\t        }\n\t        this.selectionStart = newSelection;\n\t      }\n\t      else if (newSelection > start && newSelection < end) {\n\t        if (this._selectionDirection === 'right') {\n\t          this.selectionEnd = newSelection;\n\t        }\n\t        else {\n\t          this.selectionStart = newSelection;\n\t        }\n\t      }\n\t      else {\n\t        // newSelection is > selection start and end\n\t        if (end === start) {\n\t          this._selectionDirection = 'right';\n\t        }\n\t        else if (this._selectionDirection === 'left') {\n\t          this._selectionDirection = 'right';\n\t          this.selectionStart = end;\n\t        }\n\t        this.selectionEnd = newSelection;\n\t      }\n\t    },\n\t\n\t    setSelectionInBoundaries: function() {\n\t      var length = this.text.length;\n\t      if (this.selectionStart > length) {\n\t        this.selectionStart = length;\n\t      }\n\t      else if (this.selectionStart < 0) {\n\t        this.selectionStart = 0;\n\t      }\n\t      if (this.selectionEnd > length) {\n\t        this.selectionEnd = length;\n\t      }\n\t      else if (this.selectionEnd < 0) {\n\t        this.selectionEnd = 0;\n\t      }\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initSelectedHandler();\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t      if (!this.editable) {\n\t        return;\n\t      }\n\t      var pointer = this.canvas.getPointer(options.e);\n\t\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.abortCursorAnimation();\n\t        }\n\t        this.renderCursorOrSelection();\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (!this.editable || this._isObjectMoved(options.e)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected && !this.__corner) {\n\t        this.enterEditing(options.e);\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.initDelayedCursor(true);\n\t        }\n\t        else {\n\t          this.renderCursorOrSelection();\n\t        }\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelection = this.getSelectionStartFromPointer(e),\n\t        start = this.selectionStart, end = this.selectionEnd;\n\t    if (e.shiftKey) {\n\t      this.setSelectionStartEndWithShift(start, end, newSelection);\n\t    }\n\t    else {\n\t      this.selectionStart = newSelection;\n\t      this.selectionEnd = newSelection;\n\t    }\n\t    this._fireSelectionChanged();\n\t    this._updateTextarea();\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    var style = this._calcTextareaPosition();\n\t    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n\t                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n\t    fabric.document.body.appendChild(this.hiddenTextarea);\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapUp: {\n\t    67: 'copy',\n\t    88: 'cut'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapDown: {\n\t    65: 'selectAll'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this._keysMap) {\n\t      this[this._keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapDown[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n\t   * if a copy/cut event fired, keyup is dismissed\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyUp: function(e) {\n\t    if (!this.isEditing || this._copyDone) {\n\t      this._copyDone = false;\n\t      return;\n\t    }\n\t    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapUp[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this.inCompositionMode) {\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        offsetEnd = this.selectionEnd || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff, charsToInsert, start;\n\t    if (newTextLength > textLength) {\n\t      //we added some character\n\t      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n\t      diff = newTextLength - textLength;\n\t      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n\t    }\n\t    else {\n\t      //we selected a portion of text and then input something else.\n\t      //Internet explorer does not trigger this else\n\t      diff = newTextLength - textLength + offsetEnd - offset;\n\t      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    }\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Composition start\n\t   */\n\t  onCompositionStart: function() {\n\t    this.inCompositionMode = true;\n\t    this.prevCompositionLength = 0;\n\t    this.compositionStart = this.selectionStart;\n\t  },\n\t\n\t  /**\n\t   * Composition end\n\t   */\n\t  onCompositionEnd: function() {\n\t    this.inCompositionMode = false;\n\t  },\n\t\n\t  /**\n\t   * Composition update\n\t   */\n\t  onCompositionUpdate: function(e) {\n\t    var data = e.data;\n\t    this.selectionStart = this.compositionStart;\n\t    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n\t      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n\t    this.insertChars(data, false);\n\t    this.prevCompositionLength = data.length;\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      //do not cut-copy if no selection\n\t      return;\n\t    }\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = fabric.util.object.clone(\n\t      this.getSelectionStyles(\n\t        this.selectionStart,\n\t        this.selectionEnd\n\t      )\n\t    );\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this._copyDone = true;\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy(e);\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return (e && e.clipboardData) || fabric.window.clipboardData;\n\t  },\n\t\n\t  /**\n\t   * Finds the width in pixels before the cursor on the same line\n\t   * @private\n\t   * @param {Number} lineIndex\n\t   * @param {Number} charIndex\n\t   * @return {Number} widthBeforeCursor width before cursor\n\t   */\n\t  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n\t    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n\t        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\t\n\t    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n\t      _char = textBeforeCursor[i];\n\t      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t    return widthBeforeCursor;\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n\t        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\t\n\t    return textAfterCursor.length + indexOnOtherLine + 2;\n\t  },\n\t\n\t  /**\n\t   * private\n\t   * Helps finding if the offset should be counted from Start or End\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  _getSelectionForOffset: function(e, isRight) {\n\t    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n\t      return this.selectionEnd;\n\t    }\n\t    else {\n\t      return this.selectionStart;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      // if on first line, up cursor goes to start of line\n\t      return -selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n\t        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n\t    // return a negative offset\n\t    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * find for a given width it founds the matching character.\n\t   * @private\n\t   */\n\t  _getIndexOnLine: function(lineIndex, width) {\n\t\n\t    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        textOnLine = this._textLines[lineIndex],\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n\t        widthOfCharsOnLine = lineLeftOffset,\n\t        indexOnLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnLine > width) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - width),\n\t            offsetFromRightEdge = Math.abs(rightEdge - width);\n\t\n\t        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnLine = textOnLine.length - 1;\n\t    }\n\t\n\t    return indexOnLine;\n\t  },\n\t\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Down', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Up', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up or down, fires the events\n\t   * @param {String} direction 'Up' or 'Down'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorUpOrDown: function(direction, e) {\n\t    // getUpCursorOffset\n\t    // getDownCursorOffset\n\t    var action = 'get' + direction + 'CursorOffset',\n\t        offset = this[action](e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorWithoutShift(offset);\n\t    }\n\t    if (offset !== 0) {\n\t      this.setSelectionInBoundaries();\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithShift: function(offset) {\n\t    var newSelection = this._selectionDirection === 'left'\n\t    ? this.selectionStart + offset\n\t    : this.selectionEnd + offset;\n\t    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithoutShift: function(offset) {\n\t    if (offset < 0) {\n\t      this.selectionStart += offset;\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionEnd += offset;\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Left', e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @return {Boolean} true if a change happened\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var newValue;\n\t    if (e.altKey) {\n\t      newValue = this['findWordBoundary' + direction](this[prop]);\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      newValue = this['findLineBoundary' + direction](this[prop]);\n\t    }\n\t    else {\n\t      this[prop] += direction === 'Left' ? -1 : 1;\n\t      return true;\n\t    }\n\t    if (typeof newValue !== undefined && this[prop] !== newValue) {\n\t      this[prop] = newValue;\n\t      return true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    return this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    return this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    var change = true;\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n\t      change = this._moveLeft(e, 'selectionStart');\n\t\n\t    }\n\t    this.selectionEnd = this.selectionStart;\n\t    return change;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else if (this.selectionStart !== 0){\n\t      this._selectionDirection = 'left';\n\t      return this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Right', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right or Left, fires event\n\t   * @param {String} direction 'Left', 'Right'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorLeftOrRight: function(direction, e) {\n\t    var actionName = 'moveCursor' + direction + 'With';\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      actionName += 'Shift';\n\t    }\n\t    else {\n\t      actionName += 'outShift';\n\t    }\n\t    if (this[actionName](e)) {\n\t      this.abortCursorAnimation();\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveRight(e, 'selectionStart');\n\t    }\n\t    else if (this.selectionEnd !== this.text.length) {\n\t      this._selectionDirection = 'right';\n\t      return this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    var changed = true;\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      changed = this._moveRight(e, 'selectionStart');\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return changed;\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n'\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text',\n\t        getSvgFilter: fabric.Object.prototype.getSvgFilter\n\t      }, styleDecl));\n\t\n\t      return [\n\t        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n\t        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n\t        'style=\"', fillStyles, '\">',\n\t        fabric.util.string.escapeXml(_char),\n\t        '</tspan>\\n'\n\t      ].join('');\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {}),\n\t      clone  = fabric.util.object.clone;\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * fixed to 2 so that an empty textbox cannot go to 0\n\t     * and is still selectable without text.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 2,\n\t\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingY: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingFlip: true,\n\t\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t\n\t      this.callSuper('initialize', text, options);\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n\t      // add width to this list of props that effect line wrapping.\n\t      this._dimensionAffectingProps.push('width');\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t        this.clearContextTop();\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines();\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n' && i > 0) {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ' && i > 0) {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        if (!map) {\n\t          return returnCloneOrEmpty ? { } : null;\n\t        }\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0;\n\t      charOffset = charOffset || 0;\n\t      for (var i = 0, len = text.length; i < len; i++) {\n\t        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var lineWidth        = 0,\n\t          lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          word             = '',\n\t          offset           = 0,\n\t          infix            = ' ',\n\t          wordWidth        = 0,\n\t          infixWidth       = 0,\n\t          largestWordWidth = 0,\n\t          lineJustStarted = true,\n\t          additionalSpace = this._getWidthOfCharSpacing();\n\t\n\t      for (var i = 0; i < words.length; i++) {\n\t        word = words[i];\n\t        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\t\n\t        offset += word.length;\n\t\n\t        lineWidth += infixWidth + wordWidth - additionalSpace;\n\t\n\t        if (lineWidth >= this.width && !lineJustStarted) {\n\t          lines.push(line);\n\t          line = '';\n\t          lineWidth = wordWidth;\n\t          lineJustStarted = true;\n\t        }\n\t        else {\n\t          lineWidth += additionalSpace;\n\t        }\n\t\n\t        if (!lineJustStarted) {\n\t          line += infix;\n\t        }\n\t        line += word;\n\t\n\t        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n\t        offset++;\n\t        lineJustStarted = false;\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      i && lines.push(line);\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      var originalAlign = this.textAlign;\n\t      this.ctx.save();\n\t      this._setTextStyles(this.ctx);\n\t      this.textAlign = 'left';\n\t      var lines = this._wrapText(this.ctx, this.text);\n\t      this.textAlign = originalAlign;\n\t      this.ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n\t    }\n\t  });\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object, callback) {\n\t    var textbox = new fabric.Textbox(object.text, clone(object));\n\t    callback && callback(textbox);\n\t    return textbox;\n\t  };\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t        return true;\n\t      }\n\t    }\n\t    else {\n\t      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles),\n\t          map          = this._styleMap[lineIndex];\n\t\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(539).DOMParser,\n\t      URL = __webpack_require__(305),\n\t      HTTP = __webpack_require__(187),\n\t      HTTPS = __webpack_require__(425),\n\t\n\t      Canvas = __webpack_require__(174),\n\t      Image = __webpack_require__(174).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(537);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      // eslint-disable-next-line no-eval\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  // fabric.util.createCanvasElement = function(_, width, height) {\n\t  //   return new Canvas(width, height);\n\t  // }\n\t\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n\t        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t    options = options || { };\n\t    options.nodeCanvas = nodeCanvas;\n\t    options.nodeCacheCanvas = nodeCacheCanvas;\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n\t    fabricCanvas.Font = Canvas.Font;\n\t    return fabricCanvas;\n\t  };\n\t\n\t  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n\t  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n\t    el = el || fabric.document.createElement('canvas');\n\t    this.nodeCanvas = new Canvas(el.width, el.height);\n\t    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n\t    originaInitStatic.call(this, el, options);\n\t    this.contextContainer = this.nodeCanvas.getContext('2d');\n\t    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n\t    this.Font = Canvas.Font;\n\t  }\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n\t    if (!this._isRetinaScaling()) {\n\t      return;\n\t    }\n\t\n\t    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n\t    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n\t    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n\t  }\n\t\n\t  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n\t    origSetBackstoreDimension.call(this, prop, value);\n\t    this.nodeCanvas[prop] = value;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18).Buffer, __webpack_require__(6)))\n\n/***/ },\n\n/***/ 423:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(30);\n\tvar Response = __webpack_require__(424);\n\tvar Base64 = __webpack_require__(306);\n\tvar inherits = __webpack_require__(23);\n\t\n\tvar Request = module.exports = function (xhr, params) {\n\t    var self = this;\n\t    self.writable = true;\n\t    self.xhr = xhr;\n\t    self.body = [];\n\t    \n\t    self.uri = (params.protocol || 'http:') + '//'\n\t        + params.host\n\t        + (params.port ? ':' + params.port : '')\n\t        + (params.path || '/')\n\t    ;\n\t    \n\t    if (typeof params.withCredentials === 'undefined') {\n\t        params.withCredentials = true;\n\t    }\n\t\n\t    try { xhr.withCredentials = params.withCredentials }\n\t    catch (e) {}\n\t    \n\t    if (params.responseType) try { xhr.responseType = params.responseType }\n\t    catch (e) {}\n\t    \n\t    xhr.open(\n\t        params.method || 'GET',\n\t        self.uri,\n\t        true\n\t    );\n\t\n\t    xhr.onerror = function(event) {\n\t        self.emit('error', new Error('Network error'));\n\t    };\n\t\n\t    self._headers = {};\n\t    \n\t    if (params.headers) {\n\t        var keys = objectKeys(params.headers);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (!self.isSafeRequestHeader(key)) continue;\n\t            var value = params.headers[key];\n\t            self.setHeader(key, value);\n\t        }\n\t    }\n\t    \n\t    if (params.auth) {\n\t        //basic auth\n\t        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n\t    }\n\t\n\t    var res = new Response;\n\t    res.on('close', function () {\n\t        self.emit('close');\n\t    });\n\t    \n\t    res.on('ready', function () {\n\t        self.emit('response', res);\n\t    });\n\t\n\t    res.on('error', function (err) {\n\t        self.emit('error', err);\n\t    });\n\t    \n\t    xhr.onreadystatechange = function () {\n\t        // Fix for IE9 bug\n\t        // SCRIPT575: Could not complete the operation due to error c00c023f\n\t        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n\t        if (xhr.__aborted) return;\n\t        res.handle(xhr);\n\t    };\n\t};\n\t\n\tinherits(Request, Stream);\n\t\n\tRequest.prototype.setHeader = function (key, value) {\n\t    this._headers[key.toLowerCase()] = value\n\t};\n\t\n\tRequest.prototype.getHeader = function (key) {\n\t    return this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.removeHeader = function (key) {\n\t    delete this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.write = function (s) {\n\t    this.body.push(s);\n\t};\n\t\n\tRequest.prototype.destroy = function (s) {\n\t    this.xhr.__aborted = true;\n\t    this.xhr.abort();\n\t    this.emit('close');\n\t};\n\t\n\tRequest.prototype.end = function (s) {\n\t    if (s !== undefined) this.body.push(s);\n\t\n\t    var keys = objectKeys(this._headers);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i];\n\t        var value = this._headers[key];\n\t        if (isArray(value)) {\n\t            for (var j = 0; j < value.length; j++) {\n\t                this.xhr.setRequestHeader(key, value[j]);\n\t            }\n\t        }\n\t        else this.xhr.setRequestHeader(key, value)\n\t    }\n\t\n\t    if (this.body.length === 0) {\n\t        this.xhr.send('');\n\t    }\n\t    else if (typeof this.body[0] === 'string') {\n\t        this.xhr.send(this.body.join(''));\n\t    }\n\t    else if (isArray(this.body[0])) {\n\t        var body = [];\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body.push.apply(body, this.body[i]);\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n\t        var len = 0;\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            len += this.body[i].length;\n\t        }\n\t        var body = new(this.body[0].constructor)(len);\n\t        var k = 0;\n\t        \n\t        for (var i = 0; i < this.body.length; i++) {\n\t            var b = this.body[i];\n\t            for (var j = 0; j < b.length; j++) {\n\t                body[k++] = b[j];\n\t            }\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (isXHR2Compatible(this.body[0])) {\n\t        this.xhr.send(this.body[0]);\n\t    }\n\t    else {\n\t        var body = '';\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body += this.body[i].toString();\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t};\n\t\n\t// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\n\tRequest.unsafeHeaders = [\n\t    \"accept-charset\",\n\t    \"accept-encoding\",\n\t    \"access-control-request-headers\",\n\t    \"access-control-request-method\",\n\t    \"connection\",\n\t    \"content-length\",\n\t    \"cookie\",\n\t    \"cookie2\",\n\t    \"content-transfer-encoding\",\n\t    \"date\",\n\t    \"expect\",\n\t    \"host\",\n\t    \"keep-alive\",\n\t    \"origin\",\n\t    \"referer\",\n\t    \"te\",\n\t    \"trailer\",\n\t    \"transfer-encoding\",\n\t    \"upgrade\",\n\t    \"user-agent\",\n\t    \"via\"\n\t];\n\t\n\tRequest.prototype.isSafeRequestHeader = function (headerName) {\n\t    if (!headerName) return false;\n\t    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n\t};\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    return keys;\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\t\n\tvar indexOf = function (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t};\n\t\n\tvar isXHR2Compatible = function (obj) {\n\t    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n\t    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n\t    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n\t};\n\n\n/***/ },\n\n/***/ 424:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(30);\n\tvar util = __webpack_require__(490);\n\t\n\tvar Response = module.exports = function (res) {\n\t    this.offset = 0;\n\t    this.readable = true;\n\t};\n\t\n\tutil.inherits(Response, Stream);\n\t\n\tvar capable = {\n\t    streaming : true,\n\t    status2 : true\n\t};\n\t\n\tfunction parseHeaders (res) {\n\t    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n\t    var headers = {};\n\t    for (var i = 0; i < lines.length; i++) {\n\t        var line = lines[i];\n\t        if (line === '') continue;\n\t        \n\t        var m = line.match(/^([^:]+):\\s*(.*)/);\n\t        if (m) {\n\t            var key = m[1].toLowerCase(), value = m[2];\n\t            \n\t            if (headers[key] !== undefined) {\n\t            \n\t                if (isArray(headers[key])) {\n\t                    headers[key].push(value);\n\t                }\n\t                else {\n\t                    headers[key] = [ headers[key], value ];\n\t                }\n\t            }\n\t            else {\n\t                headers[key] = value;\n\t            }\n\t        }\n\t        else {\n\t            headers[line] = true;\n\t        }\n\t    }\n\t    return headers;\n\t}\n\t\n\tResponse.prototype.getResponse = function (xhr) {\n\t    var respType = String(xhr.responseType).toLowerCase();\n\t    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n\t    if (respType === 'arraybuffer') return xhr.response;\n\t    return xhr.responseText;\n\t}\n\t\n\tResponse.prototype.getHeader = function (key) {\n\t    return this.headers[key.toLowerCase()];\n\t};\n\t\n\tResponse.prototype.handle = function (res) {\n\t    if (res.readyState === 2 && capable.status2) {\n\t        try {\n\t            this.statusCode = res.status;\n\t            this.headers = parseHeaders(res);\n\t        }\n\t        catch (err) {\n\t            capable.status2 = false;\n\t        }\n\t        \n\t        if (capable.status2) {\n\t            this.emit('ready');\n\t        }\n\t    }\n\t    else if (capable.streaming && res.readyState === 3) {\n\t        try {\n\t            if (!this.statusCode) {\n\t                this.statusCode = res.status;\n\t                this.headers = parseHeaders(res);\n\t                this.emit('ready');\n\t            }\n\t        }\n\t        catch (err) {}\n\t        \n\t        try {\n\t            this._emitData(res);\n\t        }\n\t        catch (err) {\n\t            capable.streaming = false;\n\t        }\n\t    }\n\t    else if (res.readyState === 4) {\n\t        if (!this.statusCode) {\n\t            this.statusCode = res.status;\n\t            this.emit('ready');\n\t        }\n\t        this._emitData(res);\n\t        \n\t        if (res.error) {\n\t            this.emit('error', this.getResponse(res));\n\t        }\n\t        else this.emit('end');\n\t        \n\t        this.emit('close');\n\t    }\n\t};\n\t\n\tResponse.prototype._emitData = function (res) {\n\t    var respBody = this.getResponse(res);\n\t    if (respBody.toString().match(/ArrayBuffer/)) {\n\t        this.emit('data', new Uint8Array(respBody, this.offset));\n\t        this.offset = respBody.byteLength;\n\t        return;\n\t    }\n\t    if (respBody.length > this.offset) {\n\t        this.emit('data', respBody.slice(this.offset));\n\t        this.offset = respBody.length;\n\t    }\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\n/***/ },\n\n/***/ 425:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(187);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ },\n\n/***/ 473:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n\n/***/ 474:\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n\n/***/ 475:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(473);\n\texports.encode = exports.stringify = __webpack_require__(474);\n\n\n/***/ },\n\n/***/ 477:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(24)\n\n\n/***/ },\n\n/***/ 478:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(302)\n\n\n/***/ },\n\n/***/ 479:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(303);\n\texports.Stream = __webpack_require__(30);\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(155);\n\texports.Duplex = __webpack_require__(24);\n\texports.Transform = __webpack_require__(154);\n\texports.PassThrough = __webpack_require__(302);\n\tif (!process.browser && ({\"NODE_ENV\":\"production\"}).READABLE_STREAM === 'disable') {\n\t  module.exports = __webpack_require__(30);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n\n/***/ 480:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(154)\n\n\n/***/ },\n\n/***/ 481:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(155)\n\n\n/***/ },\n\n/***/ 487:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 488:\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 489:\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n\n/***/ 490:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = ({\"NODE_ENV\":\"production\"}).NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(489);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(488);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(6)))\n\n/***/ },\n\n/***/ 505:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* styles */\n\t__webpack_require__(409)\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(320)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(521)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t__vue_options__._scopeId = \"data-v-5c5621c8\"\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 521:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;\n\t  return _vm._h('div', {\n\t    attrs: {\n\t      \"id\": \"create-mc-question\"\n\t    }\n\t  }, [_vm._h('div', [_vm._h('mu-raised-button', {\n\t    staticClass: \"float-button\",\n\t    staticStyle: {\n\t      \"bottom\": \"80px\"\n\t    },\n\t    attrs: {\n\t      \"primary\": \"\",\n\t      \"disabled\": _vm.publishButton.disabled\n\t    },\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.questionInbox.show = true\n\t      }\n\t    }\n\t  }, [_vm._h('i', {\n\t    staticClass: \"material-icons\"\n\t  }, [\"inbox\"]), \" \" + _vm._s(_vm.questionInbox.questions.length) + \"\\n      \"]), \" \", _vm._h('mu-raised-button', {\n\t    staticClass: \"float-button\",\n\t    attrs: {\n\t      \"label\": \"發佈\",\n\t      \"primary\": \"\",\n\t      \"disabled\": _vm.publishButton.disabled\n\t    },\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.publishQuestion()\n\t      }\n\t    }\n\t  }), \" \", _vm._h('div', {\n\t    staticClass: \"body-wrapper\"\n\t  }, [_vm._h('card', [_vm._h('div', {\n\t    staticStyle: {\n\t      \"padding\": \"16px 16px 0 16px\"\n\t    },\n\t    slot: \"content\"\n\t  }, [_vm._h('div', {\n\t    staticClass: \"flex-column\"\n\t  }, [_vm._h('div', {\n\t    staticClass: \"flex-row\"\n\t  }, [_vm._h('div', {\n\t    staticClass: \"flex-column flex-50\"\n\t  }, [_vm._h('span', {\n\t    staticClass: \"field-title\"\n\t  }, [\"科目\"]), \" \", _vm._h('select', {\n\t    attrs: {\n\t      \"value\": _vm.newQuestionState.subject\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        _vm.newQuestionSubjectOnChange($event.target.value)\n\t      }\n\t    }\n\t  }, [_vm._l((_vm.subjects), function(subject) {\n\t    return _vm._h('option', {\n\t      domProps: {\n\t        \"value\": subject.id\n\t      }\n\t    }, [\"\\n                      \" + _vm._s(subject.name) + \"\\n                    \"])\n\t  })])]), \" \", _vm._h('div', {\n\t    staticClass: \"set_difficulty flex-column flex-50\"\n\t  }, [_vm._h('span', {\n\t    staticClass: \"field-title\",\n\t    staticStyle: {\n\t      \"margin-bottom\": \"4px\"\n\t    }\n\t  }, [\"難度\"]), \" \", _vm._h('span', {\n\t    staticClass: \"flex-row\"\n\t  }, [_vm._l((5), function(n) {\n\t    return _vm._h('i', {\n\t      class: {\n\t        'difficulty_status': _vm.newQuestionState.difficulty > (n - 1), 'material-icons': true\n\t      },\n\t      on: {\n\t        \"click\": function($event) {\n\t          _vm.newQuestionDifficultyOnChange(n)\n\t        }\n\t      }\n\t    }, [\"star_rate\"])\n\t  })])])]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-row\",\n\t    staticStyle: {\n\t      \"padding-top\": \"25px\"\n\t    }\n\t  }, [_vm._h('div', {\n\t    staticClass: \"flex-column flex-50\"\n\t  }, [_vm._h('div', {\n\t    staticStyle: {\n\t      \"margin-right\": \"10px\"\n\t    }\n\t  }, [_vm._h('span', {\n\t    staticClass: \"field-title\"\n\t  }, [\"標籤\"])]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-row flex-center flex-wrap\"\n\t  }, [_vm._l((_vm.newQuestionState.tags), function(tag, index) {\n\t    return _vm._h('div', {\n\t      staticClass: \"q-tag\",\n\t      on: {\n\t        \"click\": function($event) {\n\t          _vm.removeTag(index)\n\t        }\n\t      }\n\t    }, [_vm._s(tag)])\n\t  })]), \" \", _vm._h('div', {\n\t    staticStyle: {\n\t      \"position\": \"relative\",\n\t      \"top\": \"-6px\"\n\t    }\n\t  }, [_vm._h('mu-text-field', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.tag),\n\t      expression: \"tag\"\n\t    }],\n\t    staticStyle: {\n\t      \"width\": \"200px\"\n\t    },\n\t    attrs: {\n\t      \"hintText\": \"輸入標籤.回車\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.tag)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        _vm.tag = $event\n\t      }\n\t    },\n\t    nativeOn: {\n\t      \"keyup\": function($event) {\n\t        if ($event.keyCode !== 13) { return; }\n\t        _vm.addTag()\n\t      }\n\t    }\n\t  })])]), \" \"])])])]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column\",\n\t    staticStyle: {\n\t      \"margin-bottom\": \"16px\"\n\t    }\n\t  }, [_vm._h('h3', [\"編輯題目\"]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column\",\n\t    staticStyle: {\n\t      \"background\": \"#ddd\"\n\t    }\n\t  }, [_vm._h('mu-flat-button', {\n\t    attrs: {\n\t      \"primary\": \"\"\n\t    },\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.editorPreview.image.show = !_vm.editorPreview.image.show\n\t      }\n\t    }\n\t  }, [_vm._h('i', {\n\t    staticClass: \"material-icons\"\n\t  }, [\"photo\"]), \" \", _vm._h('span', [\"添加圖片\"])])]), \" \", _vm._h('div', {\n\t    directives: [{\n\t      name: \"show\",\n\t      rawName: \"v-show\",\n\t      value: (_vm.editorPreview.image.show),\n\t      expression: \"editorPreview.image.show\"\n\t    }],\n\t    staticStyle: {\n\t      \"border\": \"1px solid #3f51b5\",\n\t      \"padding\": \"16px\"\n\t    }\n\t  }, [_vm._h('form', {\n\t    on: {\n\t      \"change\": function($event) {\n\t        _vm.readImg($event)\n\t      }\n\t    }\n\t  }, [_vm._h('input', {\n\t    attrs: {\n\t      \"type\": \"file\",\n\t      \"id\": \"uploadedImg\"\n\t    }\n\t  })]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column flex-center\"\n\t  }, [_vm._h('canvas', {\n\t    ref: \"fabricprocess\",\n\t    staticStyle: {\n\t      \"border\": \"1px dashed #3f51b5\",\n\t      \"padding\": \"0\"\n\t    }\n\t  }), \" \", _vm._h('mu-text-field', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.editorPreview.image.label),\n\t      expression: \"editorPreview.image.label\"\n\t    }],\n\t    attrs: {\n\t      \"hintText\": \"圖片名字\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.editorPreview.image.label)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        _vm.editorPreview.image.label = $event\n\t      }\n\t    }\n\t  }), \" \", _vm._h('mu-flat-button', {\n\t    attrs: {\n\t      \"primary\": \"\"\n\t    },\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.outputImg()\n\t      }\n\t    }\n\t  }, [_vm._h('i', {\n\t    staticClass: \"material-icons\"\n\t  }, [\"photo\"]), \" \", _vm._h('span', [\"上傳圖片\"])])])]), \" \", (_vm.newQuestionState.images) ? _vm._h('div', {\n\t    staticStyle: {\n\t      \"text-align\": \"center\"\n\t    }\n\t  }, [_vm._l((_vm.newQuestionState.images), function(image) {\n\t    return _vm._h('div', [(image.type === 'qiniu') ? _vm._h('div', [_vm._h('img', {\n\t      attrs: {\n\t        \"src\": 'https://ofb183q1d.qnssl.com/' + image.data + '?imageMogr2/format/jpg/'\n\t      }\n\t    })]) : _vm._e()])\n\t  })]) : _vm._e()]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column\"\n\t  }, [_vm._h('card', [_vm._h('div', {\n\t    slot: \"content\"\n\t  }, [_vm._h('quill', {\n\t    attrs: {\n\t      \"toolbar\": ['italic', 'underline', {\n\t        'list': 'ordered'\n\t      }, {\n\t        'list': 'bullet'\n\t      }],\n\t      \"content\": _vm.newQuestionState.content\n\t    },\n\t    on: {\n\t      \"text-change\": function (delta) {\n\t        _vm.handleDeltaChange(delta, 'question')\n\t      }\n\t    }\n\t  })])])]), \" \", _vm._h('h3', [\"編輯答案\"]), \" \", _vm._h('p', {\n\t    staticStyle: {\n\t      \"margin\": \"0 0 8px 0\",\n\t      \"color\": \"#FF9800\"\n\t    }\n\t  }, [\"勾选正確答案\"]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column\"\n\t  }, [_vm._l((_vm.newQuestionState.choices), function(choice, index) {\n\t    return _vm._h('div', {\n\t      staticClass: \"choice\"\n\t    }, [_vm._h('div', {\n\t      staticClass: \"flex-row\"\n\t    }, [_vm._h('div', {\n\t      staticClass: \"flex-column\",\n\t      staticStyle: {\n\t        \"flex\": \"5\"\n\t      }\n\t    }, [_vm._h('mu-checkbox', {\n\t      directives: [{\n\t        name: \"model\",\n\t        rawName: \"v-model\",\n\t        value: (_vm.correctList),\n\t        expression: \"correctList\"\n\t      }],\n\t      attrs: {\n\t        \"name\": \"correctList\",\n\t        \"nativeValue\": index.toString()\n\t      },\n\t      domProps: {\n\t        \"value\": (_vm.correctList)\n\t      },\n\t      on: {\n\t        \"input\": function($event) {\n\t          _vm.correctList = $event\n\t        }\n\t      }\n\t    }), \" \", _vm._h('mu-icon-button', {\n\t      staticStyle: {\n\t        \"margin-left\": \"-12px\",\n\t        \"color\": \"#f44336\"\n\t      },\n\t      attrs: {\n\t        \"icon\": \"delete_forever\"\n\t      },\n\t      on: {\n\t        \"click\": function($event) {\n\t          _vm.removeChoice(index)\n\t        }\n\t      }\n\t    })]), \" \", _vm._h('div', {\n\t      staticStyle: {\n\t        \"flex\": \"90\"\n\t      }\n\t    }, [_vm._h('quill', {\n\t      attrs: {\n\t        \"className\": 'light-card',\n\t        \"content\": _vm.newQuestionState.choices[index].content\n\t      },\n\t      on: {\n\t        \"text-change\": function (delta) {\n\t          _vm.handleDeltaChange(delta, 'choice', index)\n\t        }\n\t      }\n\t    })])])])\n\t  }), \" \", _vm._h('mu-raised-button', {\n\t    attrs: {\n\t      \"primary\": \"\",\n\t      \"label\": \"增加選項\"\n\t    },\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.addChoice()\n\t      }\n\t    }\n\t  })])]), \" \", _vm._h('div', {\n\t    class: {\n\t      'show': _vm.questionInbox.show, 'flex-column': true, 'questions_inbox': true\n\t    }\n\t  }, [_vm._h('div', {\n\t    staticClass: \"flex-row\",\n\t    staticStyle: {\n\t      \"margin-top\": \"26px\",\n\t      \"padding-left\": \"16px\",\n\t      \"cursor\": \"pointer\",\n\t      \"padding-bottom\": \"15px\",\n\t      \"width\": \"100%\",\n\t      \"border-bottom\": \"1px solid #E0E0E0\"\n\t    }\n\t  }, [_vm._h('i', {\n\t    staticClass: \"material-icons\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.questionInbox.show = false\n\t      }\n\t    }\n\t  }, [\"close\"]), \" \", _vm._h('span', {\n\t    staticStyle: {\n\t      \"font-size\": \"20px\",\n\t      \"padding-top\": \"2px\",\n\t      \"padding-left\": \"16px\"\n\t    }\n\t  }, [\"創建題集記錄\"])]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column flex-center\",\n\t    staticStyle: {\n\t      \"margin\": \"8px 0\"\n\t    },\n\t    attrs: {\n\t      \"id\": \"getLatestQuestionsButton\"\n\t    }\n\t  }, [_vm._h('mu-raised-button', {\n\t    attrs: {\n\t      \"label\": \"獲取我最近創建的題目\",\n\t      \"primary\": \"\"\n\t    },\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.getLatestQuestionsCreatedByMe()\n\t      }\n\t    }\n\t  })]), \" \", _vm._h('div', {\n\t    staticClass: \"flex-column\",\n\t    staticStyle: {\n\t      \"overflow-y\": \"auto\",\n\t      \"margin-bottom\": \"60px\",\n\t      \"flex\": \"1\"\n\t    }\n\t  }, [_vm._l((_vm.questionInbox.questions), function(q) {\n\t    return _vm._h('div', {\n\t      key: q._id,\n\t      staticClass: \"question\"\n\t    }, [(q.content) ? _vm._h('div', [_vm._h('div', {\n\t      staticClass: \"q-context\",\n\t      domProps: {\n\t        \"innerHTML\": _vm._s(_vm.renderDelta(q.content))\n\t      }\n\t    })]) : _vm._e(), \" \", (q.context) ? _vm._h('div', [_vm._h('div', {\n\t      staticClass: \"q-context\",\n\t      domProps: {\n\t        \"innerHTML\": _vm._s(q.context)\n\t      }\n\t    })]) : _vm._e(), \" \", _vm._h('div', {\n\t      staticClass: \"flex-row\"\n\t    }, [_vm._h('span', {\n\t      staticClass: \"flex-row flex-center\",\n\t      staticStyle: {\n\t        \"color\": \"#FFC107\",\n\t        \"margin-left\": \"auto\"\n\t      }\n\t    }, [_vm._s(q.difficulty), _vm._h('i', {\n\t      staticClass: \"material-icons\",\n\t      staticStyle: {\n\t        \"font-size\": \"18px\"\n\t      }\n\t    }, [\"star\"])])])])\n\t  })])])])])\n\t},staticRenderFns: []}\n\n/***/ },\n\n/***/ 537:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 538:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 539:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n\n/***/ 540:\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 6.7f5f716cfcab1e304605.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 6\n// module chunks = 4 5 6","exports = module.exports = function (delta) {\n  console.log(delta)\n  delta = JSON.parse(delta)\n  var result = delta.map(function (op) {\n    var html = op.insert\n    if (typeof op.insert !== 'string') {\n      if (op.insert.formula) {\n        html = window.katex.renderToString(op.insert.formula)\n      } else {\n        return ''\n      }\n    }\n    if (op.attributes && op.attributes.bold) {\n      html = '<strong>' + html + '</strong>'\n    }\n\n    if (op.insert.formula) {\n      html = window.katex.renderToString(op.insert.formula)\n    }\n\n    return html\n  }).join('')\n\n  return result\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/delta-render.js","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 11\n// module chunks = 4 5 6","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 23\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_duplex.js\n// module id = 24\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-browserify/index.js\n// module id = 30\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 44\n// module chunks = 6","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".card{background:#fff;border:1px solid rgba(0,0,0,.1);box-shadow:0 1px 4px rgba(0,0,0,.05)}\", \"\", {\"version\":3,\"sources\":[\"/./src/components/reuseable/Card.vue\"],\"names\":[],\"mappings\":\"AACA,MACE,gBAAiB,AACjB,gCAAkC,AAClC,oCAAuC,CACxC\",\"file\":\"Card.vue\",\"sourcesContent\":[\"\\n.card {\\n  background: #fff;\\n  border: 1px solid rgba(0,0,0,0.1);\\n  box-shadow: 0 1px 4px rgba(0,0,0,0.05);\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/reuseable/Card.vue\n// module id = 128\n// module chunks = 4 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 141\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Card.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Card.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Card.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-7ae7a7f7!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/reuseable/Card.vue\n// module id = 143\n// module chunks = 4 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_transform.js\n// module id = 154\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_writable.js\n// module id = 155\n// module chunks = 6","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-7ae7a7f7!vue-loader/lib/selector?type=styles&index=0!./Card.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./Card.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-7ae7a7f7!vue-loader/lib/selector?type=template&index=0!./Card.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/reuseable/Card.vue\n// module id = 168\n// module chunks = 4 6","module.exports={render:function (){var _vm=this;\n  return _vm._h('div', [_vm._h('div', {\n    staticClass: \"card\"\n  }, [_vm._t(\"content\")])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-7ae7a7f7!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/reuseable/Card.vue\n// module id = 170\n// module chunks = 4 6","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/http-browserify/index.js\n// module id = 187\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_passthrough.js\n// module id = 302\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_readable.js\n// module id = 303\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/string_decoder/index.js\n// module id = 304\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/url.js\n// module id = 305\n// module chunks = 6",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/Base64/base64.js\n// module id = 306\n// module chunks = 6","<template>\n  <div id=\"create-mc-question\">\n    <div>\n      <mu-raised-button primary class=\"float-button\" style=\"bottom: 80px\" @click=\"questionInbox.show = true\" :disabled=\"publishButton.disabled\">\n        <i class=\"material-icons\">inbox</i> {{questionInbox.questions.length}}\n      </mu-raised-button>\n      <mu-raised-button label=\"發佈\" primary class=\"float-button\" @click=\"publishQuestion()\" :disabled=\"publishButton.disabled\" />\n      <div class=\"body-wrapper\">\n        <card>\n          <div slot=\"content\" style=\"padding: 16px 16px 0 16px\">\n            <div class=\"flex-column\">\n              <div class=\"flex-row\">\n                <div class=\"flex-column flex-50\">\n                  <span class=\"field-title\">科目</span>\n                  <select :value=\"newQuestionState.subject\" @input=\"newQuestionSubjectOnChange($event.target.value)\">\n                    <option v-for=\"subject in subjects\" v-bind:value=\"subject.id\">\n                      {{ subject.name }}\n                    </option>\n                  </select>\n                </div>\n                <div class=\"set_difficulty flex-column flex-50\">\n                  <span class=\"field-title\" style=\"margin-bottom:4px\">難度</span>\n                  <span class=\"flex-row\">\n                    <i v-for=\"n in 5\" @click=\"newQuestionDifficultyOnChange(n)\" :class=\"{'difficulty_status': newQuestionState.difficulty > (n - 1), 'material-icons': true}\">star_rate</i>\n                  </span>\n                </div>\n              </div>\n              <div class=\"flex-row\" style=\"padding-top: 25px;\">\n                <div class=\"flex-column flex-50\">\n                  <div style=\"margin-right: 10px;\">\n                    <span class=\"field-title\">標籤</span>\n                  </div>\n                  <div class=\"flex-row flex-center flex-wrap\">\n                    <div class=\"q-tag\" v-for=\"(tag, index) in newQuestionState.tags\" v-on:click=\"removeTag(index)\">{{tag}}</div>\n                  </div>\n                  <div style=\"position: relative;top: -6px\">\n                    <mu-text-field hintText=\"輸入標籤.回車\" @keyup.enter.native=\"addTag()\" v-model=\"tag\" style=\"width:200px\" />\n                  </div>\n                </div>\n                <!-- <div class=\"flex-column flex-50\">\n                <span class=\"field-title\">語言</span>\n                <select v-model=\"newQuestion.language\" v-on:change=\"setUserLanguage(newQuestion.language)\">\n                <option v-for=\"language in languages\" v-bind:value=\"language.id\">\n                {{ language.name }}\n              </option>\n            </select>\n          </div> -->\n        </div>\n      </div>\n    </div>\n  </card>\n  <div class=\"flex-column\" style=\"margin-bottom: 16px\">\n    <h3>編輯題目</h3>\n    <div style=\"background:#ddd\" class=\"flex-column\">\n      <mu-flat-button primary @click=\"editorPreview.image.show = !editorPreview.image.show\"><i class=\"material-icons\">photo</i>\n        <span>添加圖片</span>\n      </mu-flat-button>\n    </div>\n    <div v-show=\"editorPreview.image.show\" style=\"border: 1px solid #3f51b5;padding:16px\">\n      <form v-on:change=\"readImg($event)\">\n        <input type=\"file\" id=\"uploadedImg\"/>\n      </form>\n      <div class=\"flex-column flex-center\">\n        <canvas ref=\"fabricprocess\"  style=\"border: 1px dashed #3f51b5;padding: 0\"></canvas>\n        <mu-text-field hintText=\"圖片名字\" v-model=\"editorPreview.image.label\"></mu-text-field>\n        <mu-flat-button primary @click=\"outputImg()\"><i class=\"material-icons\">photo</i> <span>上傳圖片</span></mu-flat-button>\n      </div>\n    </div>\n    <div v-if=\"newQuestionState.images\" style=\"text-align:center\">\n      <div v-for=\"image in newQuestionState.images\">\n        <div v-if=\"image.type === 'qiniu'\">\n          <img :src=\"'https://ofb183q1d.qnssl.com/' + image.data + '?imageMogr2/format/jpg/'\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-column\">\n    <card>\n      <div slot=\"content\">\n        <quill :toolbar=\"['italic', 'underline', { 'list': 'ordered'}, { 'list': 'bullet' }]\" :content=\"newQuestionState.content\" @text-change=\"(delta)=>{handleDeltaChange(delta, 'question')}\"></quill>\n      </div>\n    </card>\n  </div>\n\n  <h3>編輯答案</h3>\n  <p style=\"margin:0 0 8px 0;color:#FF9800\">勾选正確答案</p>\n  <div class=\"flex-column\">\n    <div v-for=\"(choice, index) in newQuestionState.choices\" class=\"choice\">\n      <div class=\"flex-row\">\n        <div class=\"flex-column\" style=\"flex: 5\">\n          <mu-checkbox name=\"correctList\" :nativeValue=\"index.toString()\" v-model=\"correctList\"/>\n          <mu-icon-button icon=\"delete_forever\" style=\"margin-left: -12px;color: #f44336\" @click=\"removeChoice(index)\"/>\n        </div>\n        <div style=\"flex: 90\">\n          <quill :className=\"'light-card'\" :content=\"newQuestionState.choices[index].content\" @text-change=\"(delta)=>{handleDeltaChange(delta, 'choice', index)}\"></quill>\n        </div>\n      </div>\n    </div>\n    <mu-raised-button primary label=\"增加選項\" @click=\"addChoice()\"/>\n  </div>\n</div>\n\n<div :class=\"{'show': questionInbox.show, 'flex-column': true, 'questions_inbox': true}\">\n  <div class=\"flex-row\" style=\"margin-top: 26px;padding-left: 16px;cursor: pointer;padding-bottom: 15px;width: 100%;border-bottom: 1px solid #E0E0E0;\">\n    <i class=\"material-icons\" @click=\"questionInbox.show = false\">close</i>\n    <span style=\"font-size: 20px;padding-top: 2px;padding-left: 16px;\">創建題集記錄</span>\n  </div>\n\n  <div class=\"flex-column flex-center\" style=\"margin: 8px 0;\" id=\"getLatestQuestionsButton\">\n    <mu-raised-button label=\"獲取我最近創建的題目\" primary @click=\"getLatestQuestionsCreatedByMe()\"/>\n  </div>\n\n  <div class=\"flex-column\" style=\"overflow-y: auto;margin-bottom:60px; flex: 1\">\n    <div class=\"question\" v-for=\"q in questionInbox.questions\" v-bind:key=\"q._id\">\n      <div v-if=\"q.content\">\n        <div class=\"q-context\" v-html=\"renderDelta(q.content)\"></div>\n      </div>\n      <div v-if=\"q.context\">\n        <div class=\"q-context\" v-html=\"q.context\"></div>\n      </div>\n      <div class=\"flex-row\">\n        <span class=\"flex-row flex-center\" style=\"color:#FFC107;margin-left:auto\">{{q.difficulty}}<i class=\"material-icons\" style=\"font-size: 18px\">star</i></span>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n</div>\n</template>\n<script>\nimport 'fabric'\nimport { mapGetters, mapActions } from 'vuex'\nimport deltaRender from '../../modules/delta-render'\nimport Card from '../../components/reuseable/Card'\n\nexport default {\n  mounted: function () {\n    this.$nextTick(function () {\n      if (this.newQuestionState.choices.length === 0) {\n        this.setNewQuestionChoice({index: 0})\n      }\n      this.newQuestion.language = this.getUserLanguage\n    })\n  },\n  components: {\n    Card\n  },\n  methods: {\n    updateMcCorrectAnswer (correctList) {\n      correctList = correctList.map((indexString) => {\n        let index = parseInt(indexString)\n        return index\n      })\n      let choicesLength = this.newQuestionState.choices.length\n      for (var i = 0; i < choicesLength; i++) {\n        let correct = correctList.indexOf(i) !== -1\n        if (correct) {\n          this.setNewQuestionChoice({index: i, correct: true})\n        } else {\n          this.setNewQuestionChoice({index: i, correct: false})\n        }\n      }\n    },\n    newQuestionDifficultyOnChange (newDifficulty) {\n      this.setNewQuestionMeta({difficulty: newDifficulty})\n    },\n    newQuestionSubjectOnChange (newSubject) {\n      this.setNewQuestionMeta({subject: newSubject})\n    },\n    handleDeltaChange (delta, source, index) {\n      if (source === 'question') {\n        this.setNewQuestionContent(delta)\n      } else if (source === 'choice') {\n        this.setNewQuestionChoice({index, content: delta})\n      }\n    },\n    renderDelta: function (delta) {\n      return deltaRender(delta)\n    },\n    readImg: function (e) {\n      let c = this.$refs.fabricprocess\n      var canvas = c.fabric || new window.fabric.Canvas(c, { width: 600, height: 300 })\n      if (!c.fabric) {\n        c.fabric = canvas\n      }\n      var reader = new window.FileReader()\n      reader.onload = function (event) {\n        var imgObj = new window.Image()\n        imgObj.src = event.target.result\n        imgObj.onload = function () {\n          canvas.forEachObject(function (o) {\n            o.remove()\n          })\n          var image = new window.fabric.Image(imgObj)\n          image.set({\n            angle: 0,\n            padding: 10,\n            cornersize: 10,\n            height: 160,\n            width: imgObj.width * (160 / imgObj.height)\n          })\n          canvas.centerObject(image)\n          canvas.add(image)\n          canvas.renderAll()\n        }\n      }\n      reader.readAsDataURL(e.target.files[0])\n    },\n    outputImg: function () {\n      let c = this.$refs.fabricprocess\n      let canvas = c.fabric\n      this.$http.get('/api/qiniu/uptoken').then(function (response) {\n        this.uploadImage(canvas.getObjects()[0].toDataURL(), response.data.uptoken)\n      })\n    },\n    publishQuestion: function () {\n      this.publishButton.disabled = true\n      if (this.checkComplete()) {\n        var newQuestionData = JSON.parse(JSON.stringify(this.newQuestionState))\n\n        newQuestionData.content = JSON.stringify(newQuestionData.content.ops)\n\n        newQuestionData.choices = newQuestionData.choices.map((choice) => {\n          var obj = {\n            clue: choice.clue,\n            content: JSON.stringify(choice.content.ops),\n            correct: choice.correct\n          }\n          return obj\n        })\n\n        this.$http.post('/api/manage-question/questions', newQuestionData).then(function (response) {\n          this.$showToast('發佈成功')\n          this.publishButton.disabled = false\n          this.resetNewQuestion()\n          this.editorPreview = {\n            image: {\n              label: '',\n              type: 'qiniu',\n              data: '',\n              show: false\n            }\n          }\n          this.questionInbox.questions.push(response.data)\n        }, function (response) {\n          this.$showToast('發佈失敗')\n          this.publishButton.disabled = false\n          console.log(response)\n        })\n      } else {\n        this.publishButton.disabled = false\n        this.$showToast('信息不完整')\n      }\n    },\n    checkComplete: function () {\n      const { content } = this.newQuestionState\n      let contentComplete = (content.ops && content.ops.length > 0)\n      // let answerComplete = (choices.length === 4) && (choices[0].ops && choices[0].ops.length > 0) && (choices[1].ops && choices[1].ops.length > 0) && (choices[2].ops && choices[2].ops.length > 0) && (choices[3].ops && choices[3].ops.length > 0)\n\n      return (contentComplete)\n    },\n    addTag: function () {\n      if (this.tag.trim() !== '') {\n        if (this.newQuestionState.tags.indexOf(this.tag) === -1) {\n          var newTags = JSON.parse(JSON.stringify(this.newQuestionState.tags))\n          newTags.push(this.tag)\n          this.setNewQuestionMeta({tags: newTags})\n          this.tag = ''\n        } else {\n          this.tag = ''\n        }\n      }\n    },\n    removeTag: function (index) {\n      var newTags = JSON.parse(JSON.stringify(this.newQuestionState.tags))\n      newTags.splice(index, 1)\n      this.setNewQuestionMeta({tags: newTags})\n    },\n    getLatestQuestionsCreatedByMe: function () {\n      this.$http.get('/api/manage-question/mine').then(function (response) {\n        document.getElementById('getLatestQuestionsButton').style.display = 'none'\n        this.questionInbox.questions = response.data\n      })\n    },\n    uploadImage: function (imageData, token) {\n      imageData = imageData.split(',')[1]\n      let uptoken = 'UpToken ' + token\n      let c = this.$refs.fabricprocess\n      var canvas = c.fabric\n      canvas.forEachObject(function (o) {\n        o.remove()\n      })\n      this.$http.post('https://upload.qiniu.com/putb64/-1', imageData, {headers: {'Content-Type': 'application/octet-stream', 'Authorization': uptoken}}).then(function (response) {\n        console.log(response.data)\n        this.editorPreview.image.data = response.data.key\n        this.editorPreview.image.show = false\n        let newImage = {\n          type: this.editorPreview.image.type,\n          data: response.data.key,\n          label: this.editorPreview.image.label\n        }\n        var newImages = JSON.parse(JSON.stringify(this.newQuestionState.images))\n        newImages.push(newImage)\n        this.setNewQuestionImages(newImages)\n      })\n    },\n    removeChoice (index) {\n      let oldChoices = JSON.parse(JSON.stringify(this.newQuestionState.choices))\n      var oldCorrectListBool = oldChoices.map((choices) => {\n        if (choices) {\n          return choices.correct\n        } else {\n          return false\n        }\n      })\n      oldCorrectListBool.splice(index, 1)\n      var newCorrectList = []\n      oldCorrectListBool.forEach((bool, index) => {\n        if (bool) {\n          newCorrectList.push(index.toString())\n        }\n      })\n      this.removeNewQuestionChoice(index)\n      this.correctList = newCorrectList\n    },\n    addChoice () {\n      let choicesLength = this.newQuestionState.choices.length\n      this.setNewQuestionChoice({index: choicesLength})\n    },\n    ...mapActions({\n      setUserLanguage: 'setUserLanguage',\n      setNewQuestionMeta: 'setNewQuestionMeta',\n      setNewQuestionContent: 'setNewQuestionContent',\n      setNewQuestionChoice: 'setNewQuestionChoice',\n      removeNewQuestionChoice: 'removeNewQuestionChoice',\n      setNewQuestionImages: 'setNewQuestionImages',\n      resetNewQuestion: 'resetNewQuestion'\n    })\n  },\n  data () {\n    return {\n      correctList: [],\n      publishButton: {\n        disabled: false\n      },\n      questionInbox: {\n        questions: [],\n        show: false\n      },\n      tag: '',\n      newQuestion: {\n        type: 'mc',\n        subject: 'math',\n        tags: [],\n        tips: '',\n        difficulty: 1,\n        choices: ['', '', '', ''],\n        images: [],\n        answer: {\n          mc: 0\n        },\n        delta: ''\n      },\n      editorPreview: {\n        image: {\n          label: '',\n          type: 'qiniu',\n          data: '',\n          show: false\n        },\n        question: { ops: [] },\n        answer: {\n          mc: [ { ops: [] }, { ops: [] }, { ops: [] }, { ops: [] } ]\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      subjects: 'getSubjects',\n      languages: 'getLanguages',\n      getUserLanguage: 'getUserLanguage',\n      newQuestionState: 'newQuestionState',\n      alphabet: 'getAlphabet'\n    })\n  },\n  watch: {\n    correctList: function (val) {\n      this.updateMcCorrectAnswer(val)\n    }\n  }\n}\n</script>\n<style scoped>\n.set_difficulty i {\n  width: 24px;\n  color: #aaa;\n  cursor: pointer;\n}\n\n.difficulty_status {\n  color: #FFC107 !important\n}\n\n.body-wrapper {\n  max-width: 800px;\n  margin:32px auto;\n}\n\n.questions_inbox {\n  position: fixed;\n  right: -360px;\n  top: 55px;\n  background: #fff;\n  width: 360px;\n  box-shadow: 0 0 12px #aaa;\n  height: 100%;\n  transition: right 0.2s;\n}\n\n.questions_inbox.show {\n  right: 0;\n}\n\n.questions_inbox .question {\n  padding: 8px 16px;\n  border-bottom: 1px solid #eee\n}\n.choice {\n  margin-bottom: 8px\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Create-mc-question.vue?022201e9","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".set_difficulty i[data-v-5c5621c8]{width:24px;color:#aaa;cursor:pointer}.difficulty_status[data-v-5c5621c8]{color:#ffc107!important}.body-wrapper[data-v-5c5621c8]{max-width:800px;margin:32px auto}.questions_inbox[data-v-5c5621c8]{position:fixed;right:-360px;top:55px;background:#fff;width:360px;box-shadow:0 0 12px #aaa;height:100%;transition:right .2s}.questions_inbox.show[data-v-5c5621c8]{right:0}.questions_inbox .question[data-v-5c5621c8]{padding:8px 16px;border-bottom:1px solid #eee}.choice[data-v-5c5621c8]{margin-bottom:8px}\", \"\", {\"version\":3,\"sources\":[\"/./src/views/create-question/Create-mc-question.vue\"],\"names\":[],\"mappings\":\"AACA,mCACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AACD,oCACE,uBAAyB,CAC1B,AACD,+BACE,gBAAiB,AACjB,gBAAiB,CAClB,AACD,kCACE,eAAgB,AAChB,aAAc,AACd,SAAU,AACV,gBAAiB,AACjB,YAAa,AACb,yBAA0B,AAC1B,YAAa,AACb,oBAAuB,CACxB,AACD,uCACE,OAAS,CACV,AACD,4CACE,iBAAkB,AAClB,4BAA6B,CAC9B,AACD,yBACE,iBAAkB,CACnB\",\"file\":\"Create-mc-question.vue\",\"sourcesContent\":[\"\\n.set_difficulty i[data-v-5c5621c8] {\\n  width: 24px;\\n  color: #aaa;\\n  cursor: pointer;\\n}\\n.difficulty_status[data-v-5c5621c8] {\\n  color: #FFC107 !important\\n}\\n.body-wrapper[data-v-5c5621c8] {\\n  max-width: 800px;\\n  margin:32px auto;\\n}\\n.questions_inbox[data-v-5c5621c8] {\\n  position: fixed;\\n  right: -360px;\\n  top: 55px;\\n  background: #fff;\\n  width: 360px;\\n  box-shadow: 0 0 12px #aaa;\\n  height: 100%;\\n  transition: right 0.2s;\\n}\\n.questions_inbox.show[data-v-5c5621c8] {\\n  right: 0;\\n}\\n.questions_inbox .question[data-v-5c5621c8] {\\n  padding: 8px 16px;\\n  border-bottom: 1px solid #eee\\n}\\n.choice[data-v-5c5621c8] {\\n  margin-bottom: 8px\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/create-question/Create-mc-question.vue\n// module id = 392\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create-mc-question.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create-mc-question.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create-mc-question.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-5c5621c8&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/create-question/Create-mc-question.vue\n// module id = 409\n// module chunks = 6","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.7.0\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\"<!DOCTYPE html><html><head></head><body></body></html>\");\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        if (klass.async) {\n          klass.fromObject(o, function (obj, error) {\n            if (!error) {\n              enlivenedObjects[index] = obj;\n              reviver && reviver(o, enlivenedObjects[index]);\n            }\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedObjects[index] = klass.fromObject(o);\n          reviver && reviver(o, enlivenedObjects[index]);\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.setSourcePath(path);\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var fn = this.constructor.superclass.prototype[methodName];\n    return (arguments.length > 1)\n      ? fn.apply(this, slice.call(arguments, 1))\n      : fn.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      element.addEventListener(eventName, handler, false);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      element.removeEventListener(eventName, handler, false);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || function() { },\n          abort = options.abort || function() { return false; },\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start);\n        if (abort()) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        onChange(easing(currentTime, startValue, byValue, duration));\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      capitalize = fabric.util.string.capitalize,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var angle = args[0],\n          x = (args.length === 3) ? args[1] : 0,\n          y = (args.length === 3) ? args[2] : 0;\n\n      matrix[0] = Math.cos(angle);\n      matrix[1] = Math.sin(angle);\n      matrix[2] = -Math.sin(angle);\n      matrix[3] = Math.cos(angle);\n      matrix[4] = x - (matrix[0] * x + matrix[2] * y);\n      matrix[5] = y - (matrix[1] * x + matrix[3] * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewXMatrix(matrix, args) {\n      matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function skewYMatrix(matrix, args) {\n      matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewXMatrix(matrix, args);\n            break;\n          case 'skewY':\n            skewYMatrix(matrix, args);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = normalizeAttr(pair[0].trim().toLowerCase());\n      value = normalizeValue(attr, pair[1].trim());\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = normalizeAttr(prop.toLowerCase());\n      value = normalizeValue(attr, style[prop]);\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   */\n  fabric.parseSVGDocument = (function() {\n\n    function hasAncestorWithNodeName(element, nodeName) {\n      while (element && (element = element.parentNode)) {\n        if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n          && !element.getAttribute('instantiated_by_use')) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return function(doc, callback, reviver) {\n      if (!doc) {\n        return;\n      }\n\n      parseUseDirectives(doc);\n\n      var startTime = new Date(),\n          svgUid =  fabric.Object.__uid++,\n          options = applyViewboxTransform(doc),\n          descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\n      options.svgUid = svgUid;\n\n      if (descendants.length === 0 && fabric.isLikelyNode) {\n        // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n        // https://github.com/ajaxorg/node-o3-xml/issues/21\n        descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n        var arr = [];\n        for (var i = 0, len = descendants.length; i < len; i++) {\n          arr[i] = descendants[i];\n        }\n        descendants = arr;\n      }\n\n      var elements = descendants.filter(function(el) {\n        applyViewboxTransform(el);\n        return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n              !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n      });\n\n      if (!elements || (elements && !elements.length)) {\n        callback && callback([], {});\n        return;\n      }\n\n      fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n      fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n      // Precedence of rules:   style > class > attribute\n      fabric.parseElements(elements, function(instances) {\n        fabric.documentParsingTime = new Date() - startTime;\n        if (callback) {\n          callback(instances, options);\n        }\n      }, clone(options), reviver);\n    };\n  })();\n\n  /**\n   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)\n   * @namespace\n   */\n  var svgCache = {\n\n    /**\n     * @param {String} name\n     * @param {Function} callback\n     */\n    has: function (name, callback) {\n      callback(false);\n    },\n\n    get: function () {\n      /* NOOP */\n    },\n\n    set: function () {\n      /* NOOP */\n    }\n  };\n\n  /**\n   * @private\n   */\n  function _enlivenCachedObject(cachedObject) {\n\n    var objects = cachedObject.objects,\n        options = cachedObject.options;\n\n    objects = objects.map(function (o) {\n      return fabric[capitalize(o.type)].fromObject(o);\n    });\n\n    return ({ objects: objects, options: options });\n  }\n\n  /**\n   * @private\n   */\n  function _createSVGPattern(markup, canvas, property) {\n    if (canvas[property] && canvas[property].toSVG) {\n      markup.push(\n        '\\t<pattern x=\"0\" y=\"0\" id=\"', property, 'Pattern\" ',\n          'width=\"', canvas[property].source.width,\n          '\" height=\"', canvas[property].source.height,\n          '\" patternUnits=\"userSpaceOnUse\">\\n',\n        '\\t\\t<image x=\"0\" y=\"0\" ',\n        'width=\"', canvas[property].source.width,\n        '\" height=\"', canvas[property].source.height,\n        '\" xlink:href=\"', canvas[property].source.src,\n        '\"></image>\\n\\t</pattern>\\n'\n      );\n    }\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) {\n          attr = normalizeAttr(attr);\n          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      if (ownAttributes.font) {\n        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n      }\n      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver) {\n      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = normalizeAttr(pair[0]),\n                value = normalizeValue(property, pair[1], pair[0]);\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromURL: function(url, callback, reviver) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      svgCache.has(url, function (hasUrl) {\n        if (hasUrl) {\n          svgCache.get(url, function (value) {\n            var enlivedRecord = _enlivenCachedObject(value);\n            callback(enlivedRecord.objects, enlivedRecord.options);\n          });\n        }\n        else {\n          new fabric.util.request(url, {\n            method: 'get',\n            onComplete: onComplete\n          });\n        }\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n          svgCache.set(url, {\n            objects: fabric.util.array.invoke(results, 'toObject'),\n            options: options\n          });\n          callback && callback(results, options);\n        }, reviver);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromString: function(string, callback, reviver) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n        callback(results, options);\n      }, reviver);\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function(objects) {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths;\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @param {fabric.Canvas} canvas instance of fabric.Canvas\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function(canvas) {\n      var markup = [];\n\n      _createSVGPattern(markup, canvas, 'backgroundColor');\n      _createSVGPattern(markup, canvas, 'overlayColor');\n\n      return markup.join('');\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color represenation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color represenation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color represenation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStop) {\n      for (var position in colorStop) {\n        var color = new fabric.Color(colorStop[position]);\n        this.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @return {Object}\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = fabric.util.object.clone(this.coords),\n          markup, commonAttributes;\n\n      // colorStops must be sorted ascending\n      this.colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', coords.x2,\n          '\" cy=\"', coords.y2,\n          '\" r=\"', coords.r2,\n          '\" fx=\"', coords.x1,\n          '\" fy=\"', coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      for (var i = 0; i < this.colorStops.length; i++) {\n        markup.push(\n          '<stop ',\n            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n            '\" style=\"stop-color:', this.colorStops[i].color,\n            (this.colorStops[i].opacity !== null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(parseFloat(offset), color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n/**\n * Pattern class\n * @class fabric.Pattern\n * @see {@link http://fabricjs.com/patterns|Pattern demo}\n * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n * @see {@link fabric.Pattern#initialize} for constructor definition\n */\nfabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n  /**\n   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n   * @type String\n   * @default\n   */\n  repeat: 'repeat',\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX: 0,\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY: 0,\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @return {fabric.Pattern} thisArg\n   */\n  initialize: function(options) {\n    options || (options = { });\n\n    this.id = fabric.Object.__uid++;\n\n    if (options.source) {\n      if (typeof options.source === 'string') {\n        // function string\n        if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n          this.source = new Function(fabric.util.getFunctionBody(options.source));\n        }\n        else {\n          // img src string\n          var _this = this;\n          this.source = fabric.util.createImage();\n          fabric.util.loadImage(options.source, function(img) {\n            _this.source = img;\n          });\n        }\n      }\n      else {\n        // img element\n        this.source = options.source;\n      }\n    }\n    if (options.repeat) {\n      this.repeat = options.repeat;\n    }\n    if (options.offsetX) {\n      this.offsetX = options.offsetX;\n    }\n    if (options.offsetY) {\n      this.offsetY = options.offsetY;\n    }\n  },\n\n  /**\n   * Returns object representation of a pattern\n   * @return {Object} Object representation of a pattern instance\n   */\n  toObject: function() {\n\n    var source;\n\n    // callback\n    if (typeof this.source === 'function') {\n      source = String(this.source);\n    }\n    // <img> element\n    else if (typeof this.source.src === 'string') {\n      source = this.source.src;\n    }\n    // <canvas> element\n    else if (typeof this.source === 'object' && this.source.toDataURL) {\n      source = this.source.toDataURL();\n    }\n\n    return {\n      source: source,\n      repeat: this.repeat,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY\n    };\n  },\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   * @param {fabric.Object} object\n   * @return {String} SVG representation of a pattern\n   */\n  toSVG: function(object) {\n    var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n        patternWidth = patternSource.width / object.getWidth(),\n        patternHeight = patternSource.height / object.getHeight(),\n        patternOffsetX = this.offsetX / object.getWidth(),\n        patternOffsetY = this.offsetY / object.getHeight(),\n        patternImgSrc = '';\n    if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n      patternHeight = 1;\n    }\n    if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n      patternWidth = 1;\n    }\n    if (patternSource.src) {\n      patternImgSrc = patternSource.src;\n    }\n    else if (patternSource.toDataURL) {\n      patternImgSrc = patternSource.toDataURL();\n    }\n\n    return '<pattern id=\"SVGID_' + this.id +\n                  '\" x=\"' + patternOffsetX +\n                  '\" y=\"' + patternOffsetY +\n                  '\" width=\"' + patternWidth +\n                  '\" height=\"' + patternHeight + '\">\\n' +\n             '<image x=\"0\" y=\"0\"' +\n                    ' width=\"' + patternSource.width +\n                    '\" height=\"' + patternSource.height +\n                    '\" xlink:href=\"' + patternImgSrc +\n             '\"></image>\\n' +\n           '</pattern>\\n';\n  },\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive: function(ctx) {\n    var source = typeof this.source === 'function'\n      ? this.source()\n      : this.source;\n\n    // if the image failed to load, return, and allow rest to continue loading\n    if (!source) {\n      return '';\n    }\n\n    // if an image\n    if (typeof source.src !== 'undefined') {\n      if (!source.complete) {\n        return '';\n      }\n      if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n        return '';\n      }\n    }\n    return ctx.createPattern(source, this.repeat);\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(/** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: [1, 0, 0, 1, 0, 0],\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      if (color && color.source) {\n        var _this = this;\n        fabric.util.loadImage(color.source, function(img) {\n          _this[property] = new fabric.Pattern({\n            source: img,\n            repeat: color.repeat,\n            offsetX: color.offsetX,\n            offsetY: color.offsetY\n          });\n          callback && callback();\n        });\n      }\n      else {\n        this[property] = color;\n        callback && callback();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl)\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords();\n      }\n      if (activeGroup) {\n        activeGroup.setCoords();\n      }\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = fabric.util.transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = ''\n      if (this._hasITextHandlers) {\n        this.off('selection:cleared', this._canvasITextSelectionClearedHanlder);\n        this.off('object:selected', this._canvasITextSelectionClearedHanlder);\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders both the canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = fabric.util.invertTransform(this.viewportTransform);\n      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = {\n        background: (this.backgroundColor && this.backgroundColor.toObject)\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor\n      };\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (this.backgroundImage) {\n        data.backgroundImage = this._toObject(this.backgroundImage, methodName, propertiesToInclude);\n      }\n      if (this.overlayImage) {\n        data.overlayImage = this._toObject(this.overlayImage, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          (this.backgroundColor && !this.backgroundColor.toLive\n            ? 'style=\"background-color: ' + this.backgroundColor + '\" '\n            : null),\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>',\n          fabric.createSVGFontFacesMarkup(this.getObjects()),\n          fabric.createSVGRefElementsMarkup(this),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      if (this[property] && this[property].source) {\n        markup.push(\n          '<rect x=\"', this[property].offsetX, '\" y=\"', this[property].offsetY, '\" ',\n            'width=\"',\n              (this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'\n                ? this[property].source.width\n                : this.width),\n            '\" height=\"',\n              (this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'\n                ? this[property].source.height\n                : this.height),\n            '\" fill=\"url(#' + property + 'Pattern)\"',\n          '></rect>\\n'\n        );\n      }\n      else if (this[property] && property === 'overlayColor') {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== 0) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== this._objects.length - 1) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur;\n    ctx.shadowOffsetX = this.shadow.offsetX;\n    ctx.shadowOffsetY = this.shadow.offsetY;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        p1.x -= 0.5;\n        p2.x += 0.5;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (var i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [],\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y);\n\n      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n      for (var i = 1, len = points.length; i < len; i++) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        p1 = new fabric.Point(points[i].x, points[i].y);\n        if ((i + 1) < points.length) {\n          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n        }\n      }\n      path.push('L ', p1.x, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n        originX: 'center',\n        originY: 'center'\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > target.padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += target.padding;\n        }\n        else {\n          localMouse.x -= target.padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > target.padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += target.padding;\n        }\n        else {\n          localMouse.y -= target.padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRoated = true;\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      angle %= 360\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n\n        if (t.target.angle === angle) {\n          hasRoated = false\n        }\n      }\n\n      t.target.angle = angle;\n      return hasRoated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && this._checkTarget(pointer, activeObject)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n        }\n      }\n\n      this.targets = [];\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      if (target) {\n        if (this._hoveredTarget !== target) {\n          if (this._hoveredTarget) {\n            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n            this._hoveredTarget.fire('mouseout');\n          }\n          this.fire('mouse:over', { target: target, e: e });\n          target.fire('mouseover');\n          this._hoveredTarget = target;\n        }\n      }\n      else if (this._hoveredTarget) {\n        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n        this._hoveredTarget.fire('mouseout');\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      this.upperCanvasEl = this._createCanvasElement();\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      this._setActiveObject(object);\n      this.renderAll();\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      this.fire('before:selection:cleared', { target: activeObject, e: e });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { e: e });\n      activeObject && activeObject.fire('deselected', { e: e });\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      this.fire('before:selection:cleared', { e: e, target: g });\n      this._discardActiveGroup();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n      if (activeObject || activeGroup) {\n        this.fire('before:selection:cleared', { target: activeObject || activeGroup, e: e });\n      }\n      this.deactivateAll();\n      if (activeObject || activeGroup) {\n        this.fire('selection:cleared', { e: e, target: activeObject });\n        activeObject && activeObject.fire('deselected');\n      }\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.callSuper('dispose');\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation()\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp);\n      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform();\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._handleCursorAndEvent(e, target, 'up');\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * set cursor for mouse up and handle mouseUp event\n     * @param {Event} e event from mouse\n     * @param {fabric.Object} target receiving event\n     * @param {String} eventType event to fire (up, down or move)\n     */\n    _handleCursorAndEvent: function(e, target, eventType) {\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, eventType, target ? target : null);\n    },\n\n    /**\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     */\n    _handleEvent: function(e, eventType, targetObj) {\n      var target = typeof targetObj === undefined ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = { e: e, target: target, subTargets: targets };\n\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _finalizeCurrentTransform: function() {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target });\n        target.fire('modified');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clic ked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e),\n          pointer = this.getPointer(e, true);\n\n      // if right click just fire events\n      var isRightClick  = 'which' in e ? e.which === 3 : e.button === 2;\n      if (isRightClick) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this._clearSelection(e, target, pointer);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n\n        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n          this.deactivateAll();\n          target.selectable && this.setActiveObject(target, e);\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     */\n    _clearSelection: function(e, target, pointer) {\n      this.deactivateAllWithDispatch(e);\n\n      if (target && target.selectable) {\n        this.setActiveObject(target, e);\n      }\n      else if (this.selection) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this.fire('mouse:wheel', {\n        e: e\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor;\n      if (!target.selectable) {\n        //let's skip _findTargetCorner if object is not selectable\n        this.setCursor(hoverCursor);\n      }\n      else {\n        var activeGroup = this.getActiveGroup(),\n            // only show proper corner when group selection is not active\n            corner = target._findTargetCorner\n                      && (!activeGroup || !activeGroup.contains(target))\n                      && target._findTargetCorner(this.getPointer(e, true));\n\n        if (!corner) {\n          this.setCursor(hoverCursor);\n        }\n        else {\n          this._setCornerCursor(corner, target, e);\n        }\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0));\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    this.clear();\n\n    var _this = this;\n    this._enlivenObjects(serialized.objects, function () {\n      _this._setBgOverlay(serialized, function () {\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        for (var prop in serialized) {\n          _this[prop] = serialized[prop];\n        }\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var _this = this,\n        loaded = {\n          backgroundColor: false,\n          overlayColor: false,\n          backgroundImage: false,\n          overlayImage: false\n        };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        _this.renderAll();\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\n    cbIfLoaded();\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.Image.fromObject(value, function(img) {\n        _this[property] = img;\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    var _this = this;\n\n    if (!objects || objects.length === 0) {\n      callback && callback();\n      return;\n    }\n\n    var renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      enlivenedObjects.forEach(function(obj, index) {\n        // we splice the array just in case some custom classes restored from JSON\n        // will add more object to canvas at canvas init.\n        _this.insertAt(obj, index);\n      });\n\n      _this.renderOnAddRemove = renderOnAddRemove;\n      callback && callback();\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   */\n  fabric.Object = fabric.util.createClass(/** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object. Only works with text objects at the moment.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    noScaleCache:              true,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height stroke strokeWidth strokeDashArray' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit fillRule backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      options = options || { };\n      if (options) {\n        this.setOptions(options);\n      }\n      if (this.objectCaching) {\n        this._createCacheCanvas();\n        this.setupState({ propertySet: 'cacheProperties' });\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var action = this.canvas._currentTransform.action;\n        if (action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var zoom = this.getViewportTransform()[0],\n          objectScale = this.getObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      if (width !== this.cacheWidth || height !== this.cacheHeight) {\n        this._cacheCanvas.width = width;\n        this._cacheCanvas.height = height;\n        this._cacheContext.translate(width / 2, height / 2);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true\n      }\n      return false\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initGradient: function(options) {\n      if (options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)) {\n        this.set('fill', new fabric.Gradient(options.fill));\n      }\n      if (options.stroke && options.stroke.colorStops && !(options.stroke instanceof fabric.Gradient)) {\n        this.set('stroke', new fabric.Gradient(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initPattern: function(options) {\n      if (options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)) {\n        this.set('fill', new fabric.Pattern(options.fill));\n      }\n      if (options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)) {\n        this.set('stroke', new fabric.Pattern(options.stroke));\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initClipping: function(options) {\n      if (!options.clipTo || typeof options.clipTo !== 'string') {\n        return;\n      }\n\n      var functionBody = fabric.util.getFunctionBody(options.clipTo);\n      if (typeof functionBody !== 'undefined') {\n        this.clipTo = new Function('ctx', functionBody);\n      }\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      for (var prop in options) {\n        this.set(prop, options[prop]);\n      }\n      this._initGradient(options);\n      this._initPattern(options);\n      this._initClipping(options);\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : this.transformMatrix,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Basic getter\n     * @param {String} property Property name\n     * @return {*} value of a property\n     */\n    get: function(property) {\n      return this[property];\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     */\n    _setObject: function(obj) {\n      for (var prop in obj) {\n        this._set(prop, obj[prop]);\n      }\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      if (typeof key === 'object') {\n        this._setObject(key);\n      }\n      else {\n        if (typeof value === 'function' && key !== 'clipTo') {\n          this._set(key, value(this.get(key)));\n        }\n        else {\n          this._set(key, value);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n\n      this[key] = value;\n\n      if (this.cacheProperties.indexOf(key) > -1) {\n        this.dirty = true;\n      }\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Toggles specified property from `true` to `false` or from `false` to `true`\n     * @param {String} property Property to toggle\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    toggle: function(property) {\n      var value = this.get(property);\n      if (typeof value === 'boolean') {\n        this.set(property, !value);\n      }\n      return this;\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value // TODO\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if ((this.width === 0 && this.height === 0) || !this.visible) {\n        return;\n      }\n      ctx.save();\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.objectCaching && !this.group) {\n        if (this.isCacheDirty(noTransform)) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext, noTransform);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this.drawObject(ctx, noTransform);\n        if (noTransform && this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx, noTransform) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._render(ctx, noTransform);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheWidth / 2, -this.cacheHeight / 2);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (!skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (!skipCanvas) {\n            var dim = this._getNonTransformedDimensions();\n            this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      if (!this.active || noTransform\n          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      if (this.fill.gradientTransform) {\n        var g = this.fill.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.fill.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.fill.offsetX || 0,\n          -this.height / 2 + this.fill.offsetY || 0);\n      }\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      if (this.stroke.gradientTransform) {\n        var g = this.stroke.gradientTransform;\n        ctx.transform.apply(ctx, g);\n      }\n      if (this.stroke.toLive) {\n        ctx.translate(\n          -this.width / 2 + this.stroke.offsetX || 0,\n          -this.height / 2 + this.stroke.offsetY || 0);\n      }\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 0;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      options.gradientTransform && (gradient.gradientTransform = options.gradientTransform);\n\n      for (var position in options.colorStops) {\n        var color = new fabric.Color(options.colorStops[position]);\n        gradient.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      this.canvas && this.canvas.remove(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, fabric.util.degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(oCoords) {\n    return [\n      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n      new fabric.Point(oCoords.br.x, oCoords.br.y),\n      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Object containing coordinates of object's controls\n     * @type Object\n     * @default\n     */\n    oCoords: null,\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR) {\n      var oCoords = getCoords(this.oCoords),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            oCoords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            getCoords(this.oCoords),\n            getCoords(other.oCoords)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this)\n        || this.isContainedWithinObject(other);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other) {\n      var points = getCoords(this.oCoords),\n          i = 0;\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i])) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR) {\n      var boundingRect = this.getBoundingRect();\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var lines = this._getImageLines(this.oCoords),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} oCoords Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, oCoords) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in oCoords) {\n        iLine = oCoords[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} ignoreVpt bounding box will not be affected by viewportTransform\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(ignoreVpt) {\n      var coords = this.calcCoords(ignoreVpt);\n      return fabric.util.makeBoundingBoxFromPoints([\n        coords.tl,\n        coords.tr,\n        coords.br,\n        coords.bl\n      ]);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(ignoreVpt) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = ignoreVpt ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = ignoreVpt ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY),\n          ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n          mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n          mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n          mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n          mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      return {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n        // middle\n        ml: ml, mt: mt, mr: mr, mb: mb,\n        // rotating point\n        mtr: mtr\n      };\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n\n      return this;\n    },\n\n    /*\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /*\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function() {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix = this._calcRotateMatrix(),\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n      matrix = multiplyMatrices(matrix, translateMatrix);\n      matrix = multiplyMatrices(matrix, rotateMatrix);\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY],\n          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n      return multiplyMatrices(m, skewMatrixY, true);\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (!fabric.isLikelyNode && origValue instanceof Element) {\n      // avoid checking deep html elements\n      return origValue === currentValue;\n    }\n    else if (origValue instanceof Array) {\n      if (origValue.length !== currentValue.length) {\n        return false\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (origValue[i] !== currentValue[i]) {\n          return false;\n        }\n      }\n      return true\n    }\n    else if (origValue && typeof origValue === 'object') {\n      if (!firstPass && Object.keys(origValue).length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var key in origValue) {\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return origValue === currentValue;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      propertySet = '_' + propertySet;\n      return !_isEqual(this[propertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * @private\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange();\n      },\n      onComplete: function() {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete();\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint();\n        ctx.translate(\n          cp.x - this.strokeWidth / 2,\n          cp.y - this.strokeWidth / 2\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (dim.x === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (dim.y === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    var points = [object.x1, object.y1, object.x2, object.y2],\n        line = new fabric.Line(points, object);\n    callback && callback(line);\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    var circle = new fabric.Circle(object);\n    callback && callback(circle);\n    return circle;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n          .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Returns fabric.Triangle instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Triangle instance is created\n   * @return {Object} instance of Canvas.Triangle\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    var triangle = new fabric.Triangle(object);\n    callback && callback(triangle);\n    return triangle;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    var ellipse = new fabric.Ellipse(object);\n    callback && callback(ellipse);\n    return ellipse;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry', 'x', 'y');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Used to specify dash pattern for stroke on this object\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    var rect = new fabric.Rect(object);\n    callback && callback(rect);\n    return rect;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      return fabric.Polygon.prototype.initialize.call(this, points, options);\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n      return fabric.Polygon.prototype._calcDimensions.call(this);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    var polyline = new fabric.Polyline(object.points, object);\n    callback && callback(polyline);\n    return polyline;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Object\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Polygon} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], addTransform,\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n      }\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      if (this.stroke || this.strokeDashArray) {\n        ctx.closePath();\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      noTransform || ctx.translate(-this.pathOffset.x, -this.pathOffset.y);\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x, this.points[0].y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x, point.y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.points.length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    var polygon = new fabric.Polygon(object.points, object);\n    callback && callback(polygon);\n    return polygon;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n\n      if (options) {\n        this.setOptions(options);\n      }\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n      if (this.objectCaching) {\n        this._createCacheCanvas();\n        this.setupState({ propertySet: 'cacheProperties' });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n        path: this.path.map(function(item) { return item.slice() })\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              x,\n              y\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        fabric.util.object.extend(path, object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      path = new fabric.Path(object.path, object);\n      callback && callback(path);\n      return path;\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      invoke = fabric.util.array.invoke,\n      parentToObject = fabric.Object.prototype.toObject;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n      if (this.objectCaching) {\n        this._createCacheCanvas();\n        this.setupState({ propertySet: 'cacheProperties' });\n      }\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      ctx.save();\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].isCacheDirty(true)) {\n          var dim = this._getNonTransformedDimensions();\n          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n          return true\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(parentToObject.call(this, ['sourcePath'].concat(propertiesToInclude)), {\n        paths: invoke(this.getObjects(), 'toObject', propertiesToInclude)\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    // remove this pattern from 2.0 accepts only object\n    if (typeof object.paths === 'string') {\n      fabric.loadSVGFromURL(object.paths, function (elements) {\n\n        var pathUrl = object.paths;\n        delete object.paths;\n\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n        delete object.paths;\n        callback(new fabric.PathGroup(enlivenedObjects, object));\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      invoke = fabric.util.array.invoke;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      this.originalState = { };\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      var center = this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, center, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          ignoreZoom = true;\n\n      object.set({\n        originalLeft: objectLeft,\n        originalTop: objectTop,\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords(ignoreZoom);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: invoke(this._objects, 'toObject', propertiesToInclude)\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          var dim = this._getNonTransformedDimensions();\n          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n          return true\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.scaleX = options.scaleX;\n      object.scaleY = options.scaleY;\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.flipX = false;\n      object.flipY = false;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all group objects\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'alignX',\n    'alignY',\n    'meetOrSlice'\n  );\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n          resizeFilters: resizeFilters,\n        });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img) {\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = function(object) {\n    return new fabric.Image.filters.Brightness(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = function(object) {\n    return new fabric.Image.filters.Convolute(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = function(object) {\n    return new fabric.Image.filters.GradientTransparency(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function() {\n    return new fabric.Image.filters.Grayscale();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function() {\n    return new fabric.Image.filters.Invert();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      callback && callback(new fabric.Image.filters.Mask(object));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = function(object) {\n    return new fabric.Image.filters.Noise(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = function(object) {\n    return new fabric.Image.filters.Pixelate(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = function(object) {\n    return new fabric.Image.filters.RemoveWhite(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function() {\n    return new fabric.Image.filters.Sepia();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function() {\n    return new fabric.Image.filters.Sepia2();\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = function(object) {\n    return new fabric.Image.filters.Tint(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = function(object) {\n    return new fabric.Image.filters.Multiply(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  fabric.Image.filters.Blend.fromObject = function(object) {\n    return new fabric.Image.filters.Blend(object);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = function(object) {\n    return new fabric.Image.filters.Resize(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = function( object ) {\n    return new fabric.Image.filters.ColorMatrix( object );\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.contrast = options.contrast || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        contrast: this.contrast\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = function(object) {\n    return new fabric.Image.filters.Contrast(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturate({\n   *   saturate: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.saturate = options.saturate || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          max, adjust = -this.saturate * 0.01;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        saturate: this.saturate\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturate.fromObject = function(object) {\n    return new fabric.Image.filters.Saturate(object);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing'\n  );\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing',\n    'styles'\n  );\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties:      cacheProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this._initDimensions();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._renderTextLinesBackground(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          char = chars[i];\n          width = ctx.measureText(char).width + additionalSpace;\n          ctx[method](char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = false;\n      if (this._forceClearCache) {\n        this._forceClearCache = false;\n        this.dirty = true;\n        return true;\n      }\n      shouldClear = this.hasStateChanged('_dimensionAffectingProps');\n      if (shouldClear) {\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\n        this.dirty = true;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this._setTextStyles(ctx);\n        this._initDimensions(ctx);\n      }\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'textDecoration',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing'\n      ].concat(propertiesToInclude);\n      return this.callSuper('toObject', additionalProperties);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    var text = new fabric.Text(object.text, clone(object));\n    callback && callback(text);\n    return text;\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (!ctx) {\n        this.clearContextTop();\n      }\n      this.callSuper('_initDimensions', ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      this.clearContextTop();\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n                    : boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, char; j < len; j++) {\n          char = chars[j];\n          shouldFill && ctx.fillText(char, left + charWidth, top);\n          shouldStroke && ctx.strokeText(char, left + charWidth, top);\n          _charWidth = ctx.measureText(char).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          line, _char, style;\n      ctx.save();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j);\n          if (!style || !style.textBackgroundColor) {\n            continue;\n          }\n          _char = line[j];\n\n          ctx.fillStyle = style.textBackgroundColor;\n\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n            topOffset + lineTopOffset,\n            this._getWidthOfChar(ctx, _char, i, j),\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles, true)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    var iText = new fabric.IText(object.text, clone(object));\n    callback && callback(iText);\n    return iText;\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    /**\n     * Initializes \"selected\" event handler\n     */\n    initSelectedHandler: function() {\n      this.on('selected', function() {\n\n        var _this = this;\n        setTimeout(function() {\n          _this.selected = true;\n        }, 100);\n      });\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._canvasITextSelectionClearedHanlder = (function() {\n        fabric.IText.prototype.exitEditingOnOthers(canvas);\n      }).bind(this);\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n      canvas.on('object:selected', canvas._canvasITextSelectionClearedHanlder);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n      canvas.off('object:selected', canvas._canvasITextSelectionClearedHanlder);\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.renderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n                    : boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n      this.hiddenTextarea = null;\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.copiedTextStyle[i];\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.canvas && this.canvas.fire('text:changed', { target: this });\n      this.canvas && this.canvas.renderAll();\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      if (!this.styles[lineIndex + 1]) {\n        this.styles[lineIndex + 1] = {};\n      }\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        for (var index in this.styles[lineIndex]) {\n          if (parseInt(index, 10) >= charIndex) {\n            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this.styles[lineIndex][charIndex] =\n        style || clone(currentLineStyles[charIndex - 1]);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initSelectedHandler();\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    this._fireSelectionChanged();\n    this._updateTextarea();\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this._keysMap) {\n      this[this._keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = fabric.util.object.clone(\n      this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd\n      )\n    );\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone  = fabric.util.object.clone;\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.push('width');\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n        this.clearContextTop();\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines();\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function() {\n      var originalAlign = this.textAlign;\n      this.ctx.save();\n      this._setTextStyles(this.ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(this.ctx, this.text);\n      this.textAlign = originalAlign;\n      this.ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    var textbox = new fabric.Textbox(object.text, clone(object));\n    callback && callback(textbox);\n    return textbox;\n  };\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles),\n          map          = this._styleMap[lineIndex];\n\n      // adjust line index\n      lineIndex = map.line;\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  }\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fabric/dist/fabric.js\n// module id = 422\n// module chunks = 6","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/http-browserify/lib/request.js\n// module id = 423\n// module chunks = 6","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/http-browserify/lib/response.js\n// module id = 424\n// module chunks = 6","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/https-browserify/index.js\n// module id = 425\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/decode.js\n// module id = 473\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/encode.js\n// module id = 474\n// module chunks = 6","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring/index.js\n// module id = 475\n// module chunks = 6","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/duplex.js\n// module id = 477\n// module chunks = 6","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/passthrough.js\n// module id = 478\n// module chunks = 6","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/readable.js\n// module id = 479\n// module chunks = 6","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/transform.js\n// module id = 480\n// module chunks = 6","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/writable.js\n// module id = 481\n// module chunks = 6","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/~/punycode/punycode.js\n// module id = 487\n// module chunks = 6","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 488\n// module chunks = 6","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 489\n// module chunks = 6","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 490\n// module chunks = 6","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* styles */\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!vue-loader/lib/style-rewriter?id=data-v-5c5621c8&scoped=true!vue-loader/lib/selector?type=styles&index=0!./Create-mc-question.vue\")\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./Create-mc-question.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-5c5621c8!vue-loader/lib/selector?type=template&index=0!./Create-mc-question.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n__vue_options__._scopeId = \"data-v-5c5621c8\"\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/create-question/Create-mc-question.vue\n// module id = 505\n// module chunks = 6","module.exports={render:function (){var _vm=this;\n  return _vm._h('div', {\n    attrs: {\n      \"id\": \"create-mc-question\"\n    }\n  }, [_vm._h('div', [_vm._h('mu-raised-button', {\n    staticClass: \"float-button\",\n    staticStyle: {\n      \"bottom\": \"80px\"\n    },\n    attrs: {\n      \"primary\": \"\",\n      \"disabled\": _vm.publishButton.disabled\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.questionInbox.show = true\n      }\n    }\n  }, [_vm._h('i', {\n    staticClass: \"material-icons\"\n  }, [\"inbox\"]), \" \" + _vm._s(_vm.questionInbox.questions.length) + \"\\n      \"]), \" \", _vm._h('mu-raised-button', {\n    staticClass: \"float-button\",\n    attrs: {\n      \"label\": \"發佈\",\n      \"primary\": \"\",\n      \"disabled\": _vm.publishButton.disabled\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.publishQuestion()\n      }\n    }\n  }), \" \", _vm._h('div', {\n    staticClass: \"body-wrapper\"\n  }, [_vm._h('card', [_vm._h('div', {\n    staticStyle: {\n      \"padding\": \"16px 16px 0 16px\"\n    },\n    slot: \"content\"\n  }, [_vm._h('div', {\n    staticClass: \"flex-column\"\n  }, [_vm._h('div', {\n    staticClass: \"flex-row\"\n  }, [_vm._h('div', {\n    staticClass: \"flex-column flex-50\"\n  }, [_vm._h('span', {\n    staticClass: \"field-title\"\n  }, [\"科目\"]), \" \", _vm._h('select', {\n    attrs: {\n      \"value\": _vm.newQuestionState.subject\n    },\n    on: {\n      \"input\": function($event) {\n        _vm.newQuestionSubjectOnChange($event.target.value)\n      }\n    }\n  }, [_vm._l((_vm.subjects), function(subject) {\n    return _vm._h('option', {\n      domProps: {\n        \"value\": subject.id\n      }\n    }, [\"\\n                      \" + _vm._s(subject.name) + \"\\n                    \"])\n  })])]), \" \", _vm._h('div', {\n    staticClass: \"set_difficulty flex-column flex-50\"\n  }, [_vm._h('span', {\n    staticClass: \"field-title\",\n    staticStyle: {\n      \"margin-bottom\": \"4px\"\n    }\n  }, [\"難度\"]), \" \", _vm._h('span', {\n    staticClass: \"flex-row\"\n  }, [_vm._l((5), function(n) {\n    return _vm._h('i', {\n      class: {\n        'difficulty_status': _vm.newQuestionState.difficulty > (n - 1), 'material-icons': true\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.newQuestionDifficultyOnChange(n)\n        }\n      }\n    }, [\"star_rate\"])\n  })])])]), \" \", _vm._h('div', {\n    staticClass: \"flex-row\",\n    staticStyle: {\n      \"padding-top\": \"25px\"\n    }\n  }, [_vm._h('div', {\n    staticClass: \"flex-column flex-50\"\n  }, [_vm._h('div', {\n    staticStyle: {\n      \"margin-right\": \"10px\"\n    }\n  }, [_vm._h('span', {\n    staticClass: \"field-title\"\n  }, [\"標籤\"])]), \" \", _vm._h('div', {\n    staticClass: \"flex-row flex-center flex-wrap\"\n  }, [_vm._l((_vm.newQuestionState.tags), function(tag, index) {\n    return _vm._h('div', {\n      staticClass: \"q-tag\",\n      on: {\n        \"click\": function($event) {\n          _vm.removeTag(index)\n        }\n      }\n    }, [_vm._s(tag)])\n  })]), \" \", _vm._h('div', {\n    staticStyle: {\n      \"position\": \"relative\",\n      \"top\": \"-6px\"\n    }\n  }, [_vm._h('mu-text-field', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.tag),\n      expression: \"tag\"\n    }],\n    staticStyle: {\n      \"width\": \"200px\"\n    },\n    attrs: {\n      \"hintText\": \"輸入標籤.回車\"\n    },\n    domProps: {\n      \"value\": (_vm.tag)\n    },\n    on: {\n      \"input\": function($event) {\n        _vm.tag = $event\n      }\n    },\n    nativeOn: {\n      \"keyup\": function($event) {\n        if ($event.keyCode !== 13) { return; }\n        _vm.addTag()\n      }\n    }\n  })])]), \" \"])])])]), \" \", _vm._h('div', {\n    staticClass: \"flex-column\",\n    staticStyle: {\n      \"margin-bottom\": \"16px\"\n    }\n  }, [_vm._h('h3', [\"編輯題目\"]), \" \", _vm._h('div', {\n    staticClass: \"flex-column\",\n    staticStyle: {\n      \"background\": \"#ddd\"\n    }\n  }, [_vm._h('mu-flat-button', {\n    attrs: {\n      \"primary\": \"\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.editorPreview.image.show = !_vm.editorPreview.image.show\n      }\n    }\n  }, [_vm._h('i', {\n    staticClass: \"material-icons\"\n  }, [\"photo\"]), \" \", _vm._h('span', [\"添加圖片\"])])]), \" \", _vm._h('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.editorPreview.image.show),\n      expression: \"editorPreview.image.show\"\n    }],\n    staticStyle: {\n      \"border\": \"1px solid #3f51b5\",\n      \"padding\": \"16px\"\n    }\n  }, [_vm._h('form', {\n    on: {\n      \"change\": function($event) {\n        _vm.readImg($event)\n      }\n    }\n  }, [_vm._h('input', {\n    attrs: {\n      \"type\": \"file\",\n      \"id\": \"uploadedImg\"\n    }\n  })]), \" \", _vm._h('div', {\n    staticClass: \"flex-column flex-center\"\n  }, [_vm._h('canvas', {\n    ref: \"fabricprocess\",\n    staticStyle: {\n      \"border\": \"1px dashed #3f51b5\",\n      \"padding\": \"0\"\n    }\n  }), \" \", _vm._h('mu-text-field', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.editorPreview.image.label),\n      expression: \"editorPreview.image.label\"\n    }],\n    attrs: {\n      \"hintText\": \"圖片名字\"\n    },\n    domProps: {\n      \"value\": (_vm.editorPreview.image.label)\n    },\n    on: {\n      \"input\": function($event) {\n        _vm.editorPreview.image.label = $event\n      }\n    }\n  }), \" \", _vm._h('mu-flat-button', {\n    attrs: {\n      \"primary\": \"\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.outputImg()\n      }\n    }\n  }, [_vm._h('i', {\n    staticClass: \"material-icons\"\n  }, [\"photo\"]), \" \", _vm._h('span', [\"上傳圖片\"])])])]), \" \", (_vm.newQuestionState.images) ? _vm._h('div', {\n    staticStyle: {\n      \"text-align\": \"center\"\n    }\n  }, [_vm._l((_vm.newQuestionState.images), function(image) {\n    return _vm._h('div', [(image.type === 'qiniu') ? _vm._h('div', [_vm._h('img', {\n      attrs: {\n        \"src\": 'https://ofb183q1d.qnssl.com/' + image.data + '?imageMogr2/format/jpg/'\n      }\n    })]) : _vm._e()])\n  })]) : _vm._e()]), \" \", _vm._h('div', {\n    staticClass: \"flex-column\"\n  }, [_vm._h('card', [_vm._h('div', {\n    slot: \"content\"\n  }, [_vm._h('quill', {\n    attrs: {\n      \"toolbar\": ['italic', 'underline', {\n        'list': 'ordered'\n      }, {\n        'list': 'bullet'\n      }],\n      \"content\": _vm.newQuestionState.content\n    },\n    on: {\n      \"text-change\": function (delta) {\n        _vm.handleDeltaChange(delta, 'question')\n      }\n    }\n  })])])]), \" \", _vm._h('h3', [\"編輯答案\"]), \" \", _vm._h('p', {\n    staticStyle: {\n      \"margin\": \"0 0 8px 0\",\n      \"color\": \"#FF9800\"\n    }\n  }, [\"勾选正確答案\"]), \" \", _vm._h('div', {\n    staticClass: \"flex-column\"\n  }, [_vm._l((_vm.newQuestionState.choices), function(choice, index) {\n    return _vm._h('div', {\n      staticClass: \"choice\"\n    }, [_vm._h('div', {\n      staticClass: \"flex-row\"\n    }, [_vm._h('div', {\n      staticClass: \"flex-column\",\n      staticStyle: {\n        \"flex\": \"5\"\n      }\n    }, [_vm._h('mu-checkbox', {\n      directives: [{\n        name: \"model\",\n        rawName: \"v-model\",\n        value: (_vm.correctList),\n        expression: \"correctList\"\n      }],\n      attrs: {\n        \"name\": \"correctList\",\n        \"nativeValue\": index.toString()\n      },\n      domProps: {\n        \"value\": (_vm.correctList)\n      },\n      on: {\n        \"input\": function($event) {\n          _vm.correctList = $event\n        }\n      }\n    }), \" \", _vm._h('mu-icon-button', {\n      staticStyle: {\n        \"margin-left\": \"-12px\",\n        \"color\": \"#f44336\"\n      },\n      attrs: {\n        \"icon\": \"delete_forever\"\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.removeChoice(index)\n        }\n      }\n    })]), \" \", _vm._h('div', {\n      staticStyle: {\n        \"flex\": \"90\"\n      }\n    }, [_vm._h('quill', {\n      attrs: {\n        \"className\": 'light-card',\n        \"content\": _vm.newQuestionState.choices[index].content\n      },\n      on: {\n        \"text-change\": function (delta) {\n          _vm.handleDeltaChange(delta, 'choice', index)\n        }\n      }\n    })])])])\n  }), \" \", _vm._h('mu-raised-button', {\n    attrs: {\n      \"primary\": \"\",\n      \"label\": \"增加選項\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.addChoice()\n      }\n    }\n  })])]), \" \", _vm._h('div', {\n    class: {\n      'show': _vm.questionInbox.show, 'flex-column': true, 'questions_inbox': true\n    }\n  }, [_vm._h('div', {\n    staticClass: \"flex-row\",\n    staticStyle: {\n      \"margin-top\": \"26px\",\n      \"padding-left\": \"16px\",\n      \"cursor\": \"pointer\",\n      \"padding-bottom\": \"15px\",\n      \"width\": \"100%\",\n      \"border-bottom\": \"1px solid #E0E0E0\"\n    }\n  }, [_vm._h('i', {\n    staticClass: \"material-icons\",\n    on: {\n      \"click\": function($event) {\n        _vm.questionInbox.show = false\n      }\n    }\n  }, [\"close\"]), \" \", _vm._h('span', {\n    staticStyle: {\n      \"font-size\": \"20px\",\n      \"padding-top\": \"2px\",\n      \"padding-left\": \"16px\"\n    }\n  }, [\"創建題集記錄\"])]), \" \", _vm._h('div', {\n    staticClass: \"flex-column flex-center\",\n    staticStyle: {\n      \"margin\": \"8px 0\"\n    },\n    attrs: {\n      \"id\": \"getLatestQuestionsButton\"\n    }\n  }, [_vm._h('mu-raised-button', {\n    attrs: {\n      \"label\": \"獲取我最近創建的題目\",\n      \"primary\": \"\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.getLatestQuestionsCreatedByMe()\n      }\n    }\n  })]), \" \", _vm._h('div', {\n    staticClass: \"flex-column\",\n    staticStyle: {\n      \"overflow-y\": \"auto\",\n      \"margin-bottom\": \"60px\",\n      \"flex\": \"1\"\n    }\n  }, [_vm._l((_vm.questionInbox.questions), function(q) {\n    return _vm._h('div', {\n      key: q._id,\n      staticClass: \"question\"\n    }, [(q.content) ? _vm._h('div', [_vm._h('div', {\n      staticClass: \"q-context\",\n      domProps: {\n        \"innerHTML\": _vm._s(_vm.renderDelta(q.content))\n      }\n    })]) : _vm._e(), \" \", (q.context) ? _vm._h('div', [_vm._h('div', {\n      staticClass: \"q-context\",\n      domProps: {\n        \"innerHTML\": _vm._s(q.context)\n      }\n    })]) : _vm._e(), \" \", _vm._h('div', {\n      staticClass: \"flex-row\"\n    }, [_vm._h('span', {\n      staticClass: \"flex-row flex-center\",\n      staticStyle: {\n        \"color\": \"#FFC107\",\n        \"margin-left\": \"auto\"\n      }\n    }, [_vm._s(q.difficulty), _vm._h('i', {\n      staticClass: \"material-icons\",\n      staticStyle: {\n        \"font-size\": \"18px\"\n      }\n    }, [\"star\"])])])])\n  })])])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-5c5621c8!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/create-question/Create-mc-question.vue\n// module id = 521\n// module chunks = 6"],"sourceRoot":""}